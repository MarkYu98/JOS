!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon7
ALT	kern/console.c	229;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultio.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fputest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lottery.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/singlestep.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnfaultio.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testexec.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	296;"	d	file:
CAPSLOCK	kern/console.c	231;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	17;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	399;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon9
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon9
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon9
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	228;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fputest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lottery.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/singlestep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnfaultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testexec.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	235;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DEFAULT_TICKETS	inc/env.h	33;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon3
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon3
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon3
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon3
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon3
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon1
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon1
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon1
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon1
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon1
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon1
E_IPC_NO_SENDER	inc/error.h	/^	E_IPC_NO_SENDER , 	\/\/ No Env is trying to send to this env: Lab4 challenge$/;"	e	enum:__anon1
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon1
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon1
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon1
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon1
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon1
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	8;"	d	file:
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon6
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon6
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon6
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon6
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon6
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon6
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon6
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon6
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IA32_SYSENTER_CS	inc/x86.h	17;"	d
IA32_SYSENTER_EIP	inc/x86.h	19;"	d
IA32_SYSENTER_EIP	obj/user/testfdsharing.asm	/^#define IA32_SYSENTER_EIP	374$/;"	d
IA32_SYSENTER_EIP	obj/user/testpteshare.asm	/^#define IA32_SYSENTER_EIP	374$/;"	d
IA32_SYSENTER_EIP	obj/user/testshell.asm	/^#define IA32_SYSENTER_EIP	374$/;"	d
IA32_SYSENTER_ESP	inc/x86.h	18;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	39;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=5$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	330;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	225;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon5
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	232;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	133;"	d
O_CREAT	inc/lib.h	135;"	d
O_EXCL	inc/lib.h	137;"	d
O_MKDIR	inc/lib.h	138;"	d
O_RDONLY	inc/lib.h	130;"	d
O_RDWR	inc/lib.h	132;"	d
O_TRUNC	inc/lib.h	136;"	d
O_WRONLY	inc/lib.h	131;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 24 20:44:37 EDT 2018$/;"	m
PADDR	kern/pmap.h	27;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PS_enabled	kern/pmap.c	/^bool PS_enabled;$/;"	v
PS_enabled	obj/kern/kernel.asm	/^	PS_enabled = !!(edx & (1 << 3));$/;"	d
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	84;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	233;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEED	kern/sched.c	7;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	227;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	194;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon5
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon5
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon5
SYS_env_load_elf	inc/syscall.h	/^	SYS_env_load_elf,$/;"	e	enum:__anon5
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon5
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon5
SYS_env_set_tickets	inc/syscall.h	/^	SYS_env_set_tickets,$/;"	e	enum:__anon5
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon5
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon5
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon5
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon5
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon5
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon5
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon5
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon5
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon5
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
SegmentInfo	inc/syscall.h	/^struct SegmentInfo {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP2USTACK	lib/exec.c	4;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	24;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	329;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	193;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/fputest.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/lottery.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/fputest.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/lottery.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultio.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/fputest.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/lottery.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/singlestep.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnfaultio.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testexec.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr	obj/fs/fs.asm	/^	addr = (void *) ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/user/sh.asm	/^again:$/;"	l
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fputest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fputest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lottery.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lottery.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/singlestep.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/singlestep.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testexec.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testexec.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/fputest.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/lottery.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/singlestep.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnfaultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testexec.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnfaultio.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testexec.asm	/^    argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 16;$/;"	d
base	obj/user/faultio.asm	/^			base = 8;$/;"	d
base	obj/user/faultio.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/fputest.asm	/^			base = 10;$/;"	d
base	obj/user/fputest.asm	/^			base = 16;$/;"	d
base	obj/user/fputest.asm	/^			base = 8;$/;"	d
base	obj/user/fputest.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/lottery.asm	/^			base = 10;$/;"	d
base	obj/user/lottery.asm	/^			base = 16;$/;"	d
base	obj/user/lottery.asm	/^			base = 8;$/;"	d
base	obj/user/lottery.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/singlestep.asm	/^			base = 10;$/;"	d
base	obj/user/singlestep.asm	/^			base = 16;$/;"	d
base	obj/user/singlestep.asm	/^			base = 8;$/;"	d
base	obj/user/singlestep.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 16;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 8;$/;"	d
base	obj/user/spawnfaultio.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testexec.asm	/^			base = 10;$/;"	d
base	obj/user/testexec.asm	/^			base = 16;$/;"	d
base	obj/user/testexec.asm	/^			base = 8;$/;"	d
base	obj/user/testexec.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fputest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lottery.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/singlestep.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnfaultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testexec.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
broken	obj/fs/fs.asm	/^					broken = false;$/;"	d
broken	obj/kern/kernel.asm	/^					broken = false;$/;"	d
broken	obj/user/badsegment.asm	/^					broken = false;$/;"	d
broken	obj/user/breakpoint.asm	/^					broken = false;$/;"	d
broken	obj/user/buggyhello.asm	/^					broken = false;$/;"	d
broken	obj/user/buggyhello2.asm	/^					broken = false;$/;"	d
broken	obj/user/cat.asm	/^					broken = false;$/;"	d
broken	obj/user/divzero.asm	/^					broken = false;$/;"	d
broken	obj/user/dumbfork.asm	/^					broken = false;$/;"	d
broken	obj/user/echo.asm	/^					broken = false;$/;"	d
broken	obj/user/evilhello.asm	/^					broken = false;$/;"	d
broken	obj/user/fairness.asm	/^					broken = false;$/;"	d
broken	obj/user/faultalloc.asm	/^					broken = false;$/;"	d
broken	obj/user/faultallocbad.asm	/^					broken = false;$/;"	d
broken	obj/user/faultbadhandler.asm	/^					broken = false;$/;"	d
broken	obj/user/faultdie.asm	/^					broken = false;$/;"	d
broken	obj/user/faultevilhandler.asm	/^					broken = false;$/;"	d
broken	obj/user/faultio.asm	/^					broken = false;$/;"	d
broken	obj/user/faultnostack.asm	/^					broken = false;$/;"	d
broken	obj/user/faultread.asm	/^					broken = false;$/;"	d
broken	obj/user/faultreadkernel.asm	/^					broken = false;$/;"	d
broken	obj/user/faultregs.asm	/^					broken = false;$/;"	d
broken	obj/user/faultwrite.asm	/^					broken = false;$/;"	d
broken	obj/user/faultwritekernel.asm	/^					broken = false;$/;"	d
broken	obj/user/forktree.asm	/^					broken = false;$/;"	d
broken	obj/user/fputest.asm	/^					broken = false;$/;"	d
broken	obj/user/hello.asm	/^					broken = false;$/;"	d
broken	obj/user/icode.asm	/^					broken = false;$/;"	d
broken	obj/user/idle.asm	/^					broken = false;$/;"	d
broken	obj/user/init.asm	/^					broken = false;$/;"	d
broken	obj/user/lottery.asm	/^					broken = false;$/;"	d
broken	obj/user/ls.asm	/^					broken = false;$/;"	d
broken	obj/user/lsfd.asm	/^					broken = false;$/;"	d
broken	obj/user/num.asm	/^					broken = false;$/;"	d
broken	obj/user/pingpong.asm	/^					broken = false;$/;"	d
broken	obj/user/pingpongs.asm	/^					broken = false;$/;"	d
broken	obj/user/primes.asm	/^					broken = false;$/;"	d
broken	obj/user/primespipe.asm	/^					broken = false;$/;"	d
broken	obj/user/sendpage.asm	/^					broken = false;$/;"	d
broken	obj/user/sh.asm	/^					broken = false;$/;"	d
broken	obj/user/singlestep.asm	/^					broken = false;$/;"	d
broken	obj/user/softint.asm	/^					broken = false;$/;"	d
broken	obj/user/spawnfaultio.asm	/^					broken = false;$/;"	d
broken	obj/user/spawnhello.asm	/^					broken = false;$/;"	d
broken	obj/user/spin.asm	/^					broken = false;$/;"	d
broken	obj/user/stresssched.asm	/^					broken = false;$/;"	d
broken	obj/user/testbss.asm	/^					broken = false;$/;"	d
broken	obj/user/testexec.asm	/^					broken = false;$/;"	d
broken	obj/user/testfdsharing.asm	/^					broken = false;$/;"	d
broken	obj/user/testfile.asm	/^					broken = false;$/;"	d
broken	obj/user/testkbd.asm	/^					broken = false;$/;"	d
broken	obj/user/testpipe.asm	/^					broken = false;$/;"	d
broken	obj/user/testpiperace.asm	/^					broken = false;$/;"	d
broken	obj/user/testpiperace2.asm	/^					broken = false;$/;"	d
broken	obj/user/testpteshare.asm	/^					broken = false;$/;"	d
broken	obj/user/testshell.asm	/^					broken = false;$/;"	d
broken	obj/user/yield.asm	/^					broken = false;$/;"	d
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon8	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultio.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fputest.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lottery.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/singlestep.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnfaultio.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testexec.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fputest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lottery.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/singlestep.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnfaultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testexec.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cYear	obj/kern/kernel.asm	/^	cYear = 2000 + (cYear&0x0F) + 10*((cYear&0xF0)>>4);$/;"	d
cYear	obj/kern/kernel.asm	/^	cYear = inb(0x71);$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/fs/fs.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/fs/fs.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/kern/kernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/kern/kernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/badsegment.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/badsegment.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/breakpoint.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/breakpoint.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello2.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello2.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/cat.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/cat.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/divzero.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/divzero.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/dumbfork.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/dumbfork.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/echo.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/echo.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/evilhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/evilhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/fairness.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/fairness.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultalloc.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultalloc.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultallocbad.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultallocbad.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultbadhandler.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultbadhandler.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultdie.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultdie.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultevilhandler.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultevilhandler.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultio.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultio.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultio.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultnostack.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultnostack.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultread.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultread.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultreadkernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultreadkernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultregs.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultregs.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwrite.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwrite.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwritekernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwritekernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/forktree.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/forktree.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fputest.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/fputest.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/fputest.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/fputest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/hello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/hello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/icode.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/icode.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/idle.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/idle.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/init.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/init.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lottery.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/lottery.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/lottery.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/lottery.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/ls.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/ls.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/lsfd.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/lsfd.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/num.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/num.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpong.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpong.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpongs.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpongs.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/primes.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/primes.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/primespipe.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/primespipe.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/sendpage.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/sendpage.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/sh.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/sh.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/singlestep.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/singlestep.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/singlestep.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/singlestep.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/softint.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/softint.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnfaultio.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/spawnfaultio.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/spawnfaultio.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/spawnfaultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/spawnhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/spawnhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/spin.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/spin.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/stresssched.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/stresssched.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testbss.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testbss.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testexec.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testexec.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testexec.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testexec.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testfdsharing.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testfdsharing.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testfile.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testfile.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testkbd.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testkbd.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testpipe.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testpipe.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testpiperace.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testpiperace.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testpiperace2.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testpiperace2.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testpteshare.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testpteshare.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testshell.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testshell.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/yield.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/yield.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultio.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/fputest.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/lottery.asm	/^char *$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/singlestep.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnfaultio.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testexec.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnfaultio.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnfaultio.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	lib/fd.c	/^close(int fdnum)$/;"	f
close_all	lib/fd.c	/^close_all(void)$/;"	f
clr	obj/fs/fs.asm	/^						clr = ch - '0';$/;"	d
clr	obj/kern/kernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/badsegment.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/breakpoint.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/buggyhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/buggyhello2.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/cat.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/divzero.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/dumbfork.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/echo.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/evilhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/fairness.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultalloc.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultallocbad.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultbadhandler.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultdie.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultevilhandler.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultio.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultnostack.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultread.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultreadkernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultregs.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultwrite.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultwritekernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/forktree.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/fputest.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/hello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/icode.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/idle.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/init.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/lottery.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/ls.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/lsfd.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/num.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/pingpong.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/pingpongs.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/primes.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/primespipe.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/sendpage.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/sh.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/singlestep.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/softint.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/spawnfaultio.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/spawnhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/spin.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/stresssched.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testbss.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testexec.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testfdsharing.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testfile.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testkbd.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testpipe.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testpiperace.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testpiperace2.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testpteshare.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testshell.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/yield.asm	/^						clr = ch - '0';$/;"	d
clr_b	obj/fs/fs.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/kern/kernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/badsegment.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/breakpoint.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/buggyhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/buggyhello2.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/cat.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/divzero.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/dumbfork.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/echo.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/evilhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/fairness.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultalloc.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultallocbad.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultbadhandler.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultdie.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultevilhandler.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultio.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultnostack.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultread.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultreadkernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultregs.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultwrite.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultwritekernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/forktree.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/fputest.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/hello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/icode.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/idle.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/init.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/lottery.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/ls.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/lsfd.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/num.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/pingpong.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/pingpongs.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/primes.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/primespipe.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/sendpage.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/sh.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/singlestep.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/softint.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/spawnfaultio.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/spawnhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/spin.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/stresssched.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testbss.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testexec.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testfdsharing.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testfile.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testkbd.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testpipe.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testpiperace.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testpiperace2.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testpteshare.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testshell.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/yield.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_g	obj/fs/fs.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/kern/kernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/badsegment.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/breakpoint.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/buggyhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/buggyhello2.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/cat.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/divzero.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/dumbfork.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/echo.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/evilhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/fairness.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultalloc.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultallocbad.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultbadhandler.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultdie.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultevilhandler.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultio.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultnostack.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultread.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultreadkernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultregs.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultwrite.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultwritekernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/forktree.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/fputest.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/hello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/icode.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/idle.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/init.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/lottery.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/ls.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/lsfd.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/num.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/pingpong.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/pingpongs.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/primes.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/primespipe.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/sendpage.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/sh.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/singlestep.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/softint.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/spawnfaultio.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/spawnhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/spin.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/stresssched.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testbss.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testexec.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testfdsharing.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testfile.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testkbd.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testpipe.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testpiperace.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testpiperace2.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testpteshare.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testshell.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/yield.asm	/^						clr_g = clr & 2;$/;"	d
clr_r	obj/fs/fs.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/kern/kernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/badsegment.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/breakpoint.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/buggyhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/buggyhello2.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/cat.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/divzero.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/dumbfork.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/echo.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/evilhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/fairness.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultalloc.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultallocbad.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultbadhandler.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultdie.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultevilhandler.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultio.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultnostack.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultread.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultreadkernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultregs.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultwrite.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultwritekernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/forktree.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/fputest.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/hello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/icode.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/idle.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/init.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/lottery.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/ls.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/lsfd.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/num.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/pingpong.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/pingpongs.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/primes.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/primespipe.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/sendpage.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/sh.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/singlestep.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/softint.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/spawnfaultio.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/spawnhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/spin.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/stresssched.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testbss.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testexec.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testfdsharing.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testfile.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testkbd.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testpipe.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testpiperace.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testpiperace2.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testpteshare.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testshell.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/yield.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fputest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lottery.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/singlestep.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnfaultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testexec.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon8	file:
cons_bgclr	kern/console.c	/^int cons_bgclr = 0;$/;"	v
cons_bgclr	lib/printf.c	/^int cons_bgclr = 0;$/;"	v
cons_bgclr	obj/fs/fs.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/fs/fs.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/kern/kernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/kern/kernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/badsegment.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/badsegment.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/breakpoint.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/breakpoint.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/buggyhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/buggyhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/buggyhello2.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/buggyhello2.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/cat.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/cat.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/divzero.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/divzero.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/dumbfork.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/dumbfork.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/echo.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/echo.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/evilhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/evilhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/fairness.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/fairness.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultalloc.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultalloc.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultallocbad.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultallocbad.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultbadhandler.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultbadhandler.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultdie.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultdie.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultevilhandler.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultevilhandler.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultio.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultio.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultnostack.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultnostack.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultread.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultread.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultreadkernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultreadkernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultregs.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultregs.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultwrite.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultwrite.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultwritekernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultwritekernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/forktree.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/forktree.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/fputest.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/fputest.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/hello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/hello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/icode.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/icode.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/idle.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/idle.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/init.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/init.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/lottery.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/lottery.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/ls.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/ls.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/lsfd.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/lsfd.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/num.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/num.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/pingpong.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/pingpong.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/pingpongs.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/pingpongs.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/primes.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/primes.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/primespipe.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/primespipe.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/sendpage.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/sendpage.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/sh.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/sh.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/singlestep.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/singlestep.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/softint.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/softint.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/spawnfaultio.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/spawnfaultio.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/spawnhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/spawnhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/spin.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/spin.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/stresssched.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/stresssched.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testbss.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testbss.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testexec.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testexec.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testfdsharing.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testfdsharing.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testfile.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testfile.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testkbd.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testkbd.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testpipe.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testpipe.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testpiperace.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testpiperace.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testpiperace2.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testpiperace2.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testpteshare.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testpteshare.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testshell.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testshell.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/yield.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/yield.asm	/^						cons_bgclr = 0;$/;"	d
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
cons_textclr	kern/console.c	/^int cons_textclr = 0x0700;$/;"	v
cons_textclr	lib/printf.c	/^int cons_textclr = 0x0700;$/;"	v
cons_textclr	obj/fs/fs.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/fs/fs.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/fs/fs.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/cat.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/cat.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/cat.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/divzero.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/divzero.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/divzero.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/echo.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/echo.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/echo.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/fairness.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/fairness.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/fairness.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultio.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultio.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultio.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultread.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultread.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultread.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/forktree.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/forktree.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/forktree.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/fputest.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/fputest.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/fputest.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/hello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/hello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/hello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/icode.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/icode.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/icode.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/idle.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/idle.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/idle.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/init.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/init.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/init.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/lottery.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/lottery.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/lottery.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/ls.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/ls.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/ls.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/lsfd.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/lsfd.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/lsfd.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/num.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/num.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/num.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/primes.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/primes.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/primes.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/primespipe.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/primespipe.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/primespipe.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/sh.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/sh.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/sh.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/softint.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/softint.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/softint.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/spawnfaultio.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/spawnfaultio.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/spawnfaultio.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/spawnhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/spawnhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/spawnhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/spin.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/spin.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/spin.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testbss.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testbss.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testbss.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testexec.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testexec.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testexec.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testfdsharing.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testfdsharing.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testfdsharing.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testfile.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testfile.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testfile.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testkbd.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testkbd.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testkbd.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testpipe.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testpipe.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testpipe.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testpiperace.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testpiperace.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testpiperace.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testpiperace2.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testpiperace2.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testpiperace2.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testpteshare.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testpteshare.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testpteshare.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testshell.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testshell.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testshell.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/yield.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/yield.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/yield.asm	/^			cons_textclr = num;$/;"	d
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fputest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lottery.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/singlestep.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnfaultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testexec.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr4	obj/kern/kernel.asm	/^		cr4 = rcr4();$/;"	d
cr4	obj/kern/kernel.asm	/^	cr4 = rcr4();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
cur_env_id	obj/kern/kernel.asm	/^		cur_env_id = ENVX(curenv->env_id);$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
curva	obj/kern/kernel.asm	/^		curva = ROUNDDOWN(curva, PGSIZE);$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultio.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/fputest.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/lottery.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/singlestep.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnfaultio.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testexec.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon10
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultio.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/fputest.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/lottery.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/singlestep.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnfaultio.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testexec.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
detect_PS_support	kern/pmap.c	/^detect_PS_support()$/;"	f	file:
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fputest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fputest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fputest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lottery.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lottery.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lottery.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testexec.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testexec.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testexec.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fputest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lottery.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/singlestep.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnfaultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testexec.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dstva	inc/syscall.h	/^    void *srcva, *dstva;$/;"	m	struct:SegmentInfo
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebp	obj/kern/kernel.asm	/^        ebp = (unsigned int*)(*ebp);$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnfaultio.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testexec.asm	/^    elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
enable_PS_percpu	kern/pmap.c	/^void enable_PS_percpu()$/;"	f
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_sending	inc/env.h	/^	bool env_ipc_sending;		\/\/ Env is blocked sending, for non-loop ipc_send challenge$/;"	m	struct:Env
env_ipc_va	inc/env.h	/^	void *env_ipc_va;			\/\/ VA of sended page or at which to map received page$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value to send or received$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env or next in sender_list$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_tickets	inc/env.h	/^	int env_tickets;$/;"	m	struct:Env
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultio.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/fputest.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/lottery.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/singlestep.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnfaultio.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testexec.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultio.asm	/^				err = -err;$/;"	d
err	obj/user/faultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultio.asm	/^    err:$/;"	l
err	obj/user/faultio.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/fputest.asm	/^				err = -err;$/;"	d
err	obj/user/fputest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fputest.asm	/^    err:$/;"	l
err	obj/user/fputest.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/lottery.asm	/^				err = -err;$/;"	d
err	obj/user/lottery.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lottery.asm	/^    err:$/;"	l
err	obj/user/lottery.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/singlestep.asm	/^				err = -err;$/;"	d
err	obj/user/singlestep.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/singlestep.asm	/^    err:$/;"	l
err	obj/user/singlestep.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnfaultio.asm	/^				err = -err;$/;"	d
err	obj/user/spawnfaultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnfaultio.asm	/^    err:$/;"	l
err	obj/user/spawnfaultio.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testexec.asm	/^				err = -err;$/;"	d
err	obj/user/testexec.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testexec.asm	/^    err:$/;"	l
err	obj/user/testexec.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultio.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/fputest.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/lottery.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/singlestep.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnfaultio.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testexec.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultio.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/fputest.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/lottery.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/singlestep.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnfaultio.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testexec.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultio.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/fputest.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/lottery.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/singlestep.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnfaultio.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testexec.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnfaultio.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testexec.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exec	lib/exec.c	/^exec(const char *prog, const char **argv)$/;"	f
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 12 f0       	mov    $0xf0121000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 5c 00 00 00       	call   f010009a <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d 80 8e 22 f0 00 	cmpl   $0x0,0xf0228e80$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	75 3a                	jne    f010008b <_panic+0x4b>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	89 35 80 8e 22 f0    	mov    %esi,0xf0228e80$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	fa                   	cli    $/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	fc                   	cld    $/;"	l
f0100059	obj/kern/kernel.asm	/^f0100059:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	e8 49 66 00 00       	call   f01066aa <cpunum>$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	50                   	push   %eax$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	68 40 6d 10 f0       	push   $0xf0106d40$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	e8 e9 3e 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	53                   	push   %ebx$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	56                   	push   %esi$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	e8 b9 3e 00 00       	call   f0103f35 <vcprintf>$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	c7 04 24 4b 83 10 f0 	movl   $0xf010834b,(%esp)$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	e8 d3 3e 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	6a 00                	push   $0x0$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	e8 17 10 00 00       	call   f01010ac <monitor>$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	eb f1                	jmp    f010008b <_panic+0x4b>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a <i386_init>:$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	55                   	push   %ebp$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	89 e5                	mov    %esp,%ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	53                   	push   %ebx$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 98 05 00 00       	call   f010063e <cons_init>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	68 ac 6d 10 f0       	push   $0xf0106dac$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	e8 a3 3e 00 00       	call   f0103f5b <cprintf>$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	e8 9e 1a 00 00       	call   f0101b5b <mem_init>$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	e8 e8 36 00 00       	call   f01037aa <env_init>$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	e8 b8 3f 00 00       	call   f010407f <trap_init>$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	e8 d4 62 00 00       	call   f01063a0 <mp_init>$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 f4 65 00 00       	call   f01066c5 <lapic_init>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 ac 3d 00 00       	call   f0103e82 <pic_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	e8 f6 47 00 00       	call   f01048d1 <lottery_sched_init>$/;"	l
f01000db	obj/kern/kernel.asm	/^f01000db:	c7 04 24 60 34 12 f0 	movl   $0xf0123460,(%esp)$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	e8 31 68 00 00       	call   f0106918 <spin_lock>$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	83 3d 8c 8e 22 f0 07 	cmpl   $0x7,0xf0228e8c$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	77 16                	ja     f0100109 <i386_init+0x6f>$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	68 00 70 00 00       	push   $0x7000$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	6a 56                	push   $0x56$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	68 c7 6d 10 f0       	push   $0xf0106dc7$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	e8 37 ff ff ff       	call   f0100040 <_panic>$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	b8 06 63 10 f0       	mov    $0xf0106306,%eax$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	2d 8c 62 10 f0       	sub    $0xf010628c,%eax$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	50                   	push   %eax$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	68 8c 62 10 f0       	push   $0xf010628c$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	e8 b1 5f 00 00       	call   f01060d7 <memmove>$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	bb 20 90 22 f0       	mov    $0xf0229020,%ebx$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	eb 4d                	jmp    f010017d <i386_init+0xe3>$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	e8 75 65 00 00       	call   f01066aa <cpunum>$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	05 20 90 22 f0       	add    $0xf0229020,%eax$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	74 39                	je     f010017a <i386_init+0xe0>$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	89 d8                	mov    %ebx,%eax$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	2d 20 90 22 f0       	sub    $0xf0229020,%eax$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	05 00 20 23 f0       	add    $0xf0232000,%eax$/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	a3 84 8e 22 f0       	mov    %eax,0xf0228e84$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	50                   	push   %eax$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	e8 a4 66 00 00       	call   f0106813 <lapic_startap>$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	75 f8                	jne    f0100172 <i386_init+0xd8>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	6b 05 c4 93 22 f0 74 	imul   $0x74,0xf02293c4,%eax$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	05 20 90 22 f0       	add    $0xf0229020,%eax$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	39 c3                	cmp    %eax,%ebx$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	72 a3                	jb     f0100130 <i386_init+0x96>$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	6a 01                	push   $0x1$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	68 08 42 1e f0       	push   $0xf01e4208$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	e8 f8 37 00 00       	call   f0103994 <env_create>$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	6a 00                	push   $0x0$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	68 f4 f2 1d f0       	push   $0xf01df2f4$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	e8 e9 37 00 00       	call   f0103994 <env_create>$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	e8 32 04 00 00       	call   f01005e2 <kbd_intr>$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	e8 09 48 00 00       	call   f01049be <sched_yield>$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5 <mp_main>:$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	55                   	push   %ebp$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	e8 44 14 00 00       	call   f0101604 <enable_PS_percpu>$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	77 12                	ja     f01001de <mp_main+0x29>$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	50                   	push   %eax$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	6a 6f                	push   $0x6f$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	68 c7 6d 10 f0       	push   $0xf0106dc7$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	e8 62 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	e8 bf 64 00 00       	call   f01066aa <cpunum>$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	50                   	push   %eax$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	68 d3 6d 10 f0       	push   $0xf0106dd3$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	e8 62 3d 00 00       	call   f0103f5b <cprintf>$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	e8 c7 64 00 00       	call   f01066c5 <lapic_init>$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	e8 77 35 00 00       	call   f010377a <env_init_percpu>$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	e8 67 3d 00 00       	call   f0103f6f <trap_init_percpu>$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	e8 9d 64 00 00       	call   f01066aa <cpunum>$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	81 c2 20 90 22 f0    	add    $0xf0229020,%edx$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	c7 04 24 60 34 12 f0 	movl   $0xf0123460,(%esp)$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	e8 ed 66 00 00       	call   f0106918 <spin_lock>$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	e8 8e 47 00 00       	call   f01049be <sched_yield>$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230 <_warn>:$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	55                   	push   %ebp$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	89 e5                	mov    %esp,%ebp$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	53                   	push   %ebx$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	68 e9 6d 10 f0       	push   $0xf0106de9$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	e8 11 3d 00 00       	call   f0103f5b <cprintf>$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010024d	obj/kern/kernel.asm	/^f010024d:	53                   	push   %ebx$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	e8 df 3c 00 00       	call   f0103f35 <vcprintf>$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	c7 04 24 4b 83 10 f0 	movl   $0xf010834b,(%esp)$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	e8 f9 3c 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100268	obj/kern/kernel.asm	/^f0100268:	c9                   	leave  $/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	c3                   	ret    $/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a <serial_proc_data>:$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	55                   	push   %ebp$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	89 e5                	mov    %esp,%ebp$/;"	l
f010026d	obj/kern/kernel.asm	/^f010026d:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	ec                   	in     (%dx),%al$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	a8 01                	test   $0x1,%al$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	74 0b                	je     f0100282 <serial_proc_data+0x18>$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010027c	obj/kern/kernel.asm	/^f010027c:	ec                   	in     (%dx),%al$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	eb 05                	jmp    f0100287 <serial_proc_data+0x1d>$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	5d                   	pop    %ebp$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	c3                   	ret    $/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289 <cons_intr>:$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	55                   	push   %ebp$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	89 e5                	mov    %esp,%ebp$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	53                   	push   %ebx$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	89 c3                	mov    %eax,%ebx$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	eb 2b                	jmp    f01002bf <cons_intr+0x36>$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	85 c0                	test   %eax,%eax$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	74 27                	je     f01002bf <cons_intr+0x36>$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	8b 0d 24 82 22 f0    	mov    0xf0228224,%ecx$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	89 15 24 82 22 f0    	mov    %edx,0xf0228224$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	88 81 20 80 22 f0    	mov    %al,-0xfdd7fe0(%ecx)$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	75 0a                	jne    f01002bf <cons_intr+0x36>$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	c7 05 24 82 22 f0 00 	movl   $0x0,0xf0228224$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	00 00 00 $/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	ff d3                	call   *%ebx$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	75 ce                	jne    f0100294 <cons_intr+0xb>$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	83 c4 04             	add    $0x4,%esp$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	5b                   	pop    %ebx$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	5d                   	pop    %ebp$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	c3                   	ret    $/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc <kbd_proc_data>:$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	ec                   	in     (%dx),%al$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	a8 01                	test   $0x1,%al$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	0f 84 f8 00 00 00    	je     f01003d2 <kbd_proc_data+0x106>$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	a8 20                	test   $0x20,%al$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	0f 85 f6 00 00 00    	jne    f01003d8 <kbd_proc_data+0x10c>$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	ec                   	in     (%dx),%al$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	89 c2                	mov    %eax,%edx$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	3c e0                	cmp    $0xe0,%al$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	75 0d                	jne    f01002fb <kbd_proc_data+0x2f>$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	83 0d 04 80 22 f0 40 	orl    $0x40,0xf0228004$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	c3                   	ret    $/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	55                   	push   %ebp$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	53                   	push   %ebx$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	84 c0                	test   %al,%al$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	79 36                	jns    f010033c <kbd_proc_data+0x70>$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	8b 0d 04 80 22 f0    	mov    0xf0228004,%ecx$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	89 cb                	mov    %ecx,%ebx$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	83 e3 40             	and    $0x40,%ebx$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	85 db                	test   %ebx,%ebx$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	0f b6 82 60 6f 10 f0 	movzbl -0xfef90a0(%edx),%eax$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	f7 d0                	not    %eax$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	21 c8                	and    %ecx,%eax$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	a3 04 80 22 f0       	mov    %eax,0xf0228004$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	e9 a4 00 00 00       	jmp    f01003e0 <kbd_proc_data+0x114>$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	8b 0d 04 80 22 f0    	mov    0xf0228004,%ecx$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	74 0e                	je     f0100355 <kbd_proc_data+0x89>$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	89 c2                	mov    %eax,%edx$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	89 0d 04 80 22 f0    	mov    %ecx,0xf0228004$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	0f b6 82 60 6f 10 f0 	movzbl -0xfef90a0(%edx),%eax$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	0b 05 04 80 22 f0    	or     0xf0228004,%eax$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	0f b6 8a 60 6e 10 f0 	movzbl -0xfef91a0(%edx),%ecx$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	31 c8                	xor    %ecx,%eax$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	a3 04 80 22 f0       	mov    %eax,0xf0228004$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	89 c1                	mov    %eax,%ecx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	8b 0c 8d 40 6e 10 f0 	mov    -0xfef91c0(,%ecx,4),%ecx$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	a8 08                	test   $0x8,%al$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	74 1b                	je     f01003a5 <kbd_proc_data+0xd9>$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	89 da                	mov    %ebx,%edx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	77 05                	ja     f0100399 <kbd_proc_data+0xcd>$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	eb 0c                	jmp    f01003a5 <kbd_proc_data+0xd9>$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	83 ea 41             	sub    $0x41,%edx$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	f7 d0                	not    %eax$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	a8 06                	test   $0x6,%al$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	75 33                	jne    f01003de <kbd_proc_data+0x112>$/;"	l
f01003ab	obj/kern/kernel.asm	/^f01003ab:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	75 2b                	jne    f01003de <kbd_proc_data+0x112>$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	68 03 6e 10 f0       	push   $0xf0106e03$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	e8 9b 3b 00 00       	call   f0103f5b <cprintf>$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	ee                   	out    %al,(%dx)$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	89 d8                	mov    %ebx,%eax$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	eb 0e                	jmp    f01003e0 <kbd_proc_data+0x114>$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	c3                   	ret    $/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	c3                   	ret    $/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	89 d8                	mov    %ebx,%eax$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	c9                   	leave  $/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	c3                   	ret    $/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5 <cons_putc>:$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	55                   	push   %ebp$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	57                   	push   %edi$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	56                   	push   %esi$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	53                   	push   %ebx$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	89 c6                	mov    %eax,%esi$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	eb 09                	jmp    f010040a <cons_putc+0x25>$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	89 ca                	mov    %ecx,%edx$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	ec                   	in     (%dx),%al$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	ec                   	in     (%dx),%al$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	ec                   	in     (%dx),%al$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	ec                   	in     (%dx),%al$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	89 fa                	mov    %edi,%edx$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	ec                   	in     (%dx),%al$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	a8 20                	test   $0x20,%al$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	75 08                	jne    f0100419 <cons_putc+0x34>$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	7e e8                	jle    f0100401 <cons_putc+0x1c>$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	89 f0                	mov    %esi,%eax$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	ee                   	out    %al,(%dx)$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	eb 09                	jmp    f010043b <cons_putc+0x56>$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	89 ca                	mov    %ecx,%edx$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	ec                   	in     (%dx),%al$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	ec                   	in     (%dx),%al$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	ec                   	in     (%dx),%al$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	ec                   	in     (%dx),%al$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	89 fa                	mov    %edi,%edx$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	ec                   	in     (%dx),%al$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	7f 04                	jg     f010044a <cons_putc+0x65>$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	84 c0                	test   %al,%al$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	79 e8                	jns    f0100432 <cons_putc+0x4d>$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	89 f0                	mov    %esi,%eax$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	ee                   	out    %al,(%dx)$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	ee                   	out    %al,(%dx)$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	ee                   	out    %al,(%dx)$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	a1 00 33 12 f0       	mov    0xf0123300,%eax$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	0b 05 00 80 22 f0    	or     0xf0228000,%eax$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	09 f0                	or     %esi,%eax$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	89 c1                	mov    %eax,%ecx$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	74 76                	je     f01004f0 <cons_putc+0x10b>$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	7f 0a                	jg     f0100489 <cons_putc+0xa4>$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	74 14                	je     f0100498 <cons_putc+0xb3>$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	e9 9b 00 00 00       	jmp    f0100524 <cons_putc+0x13f>$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	74 3c                	je     f01004ca <cons_putc+0xe5>$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	74 3f                	je     f01004d2 <cons_putc+0xed>$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	e9 8c 00 00 00       	jmp    f0100524 <cons_putc+0x13f>$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	0f b7 05 28 82 22 f0 	movzwl 0xf0228228,%eax$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	66 85 c0             	test   %ax,%ax$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	0f 84 e8 00 00 00    	je     f0100590 <cons_putc+0x1ab>$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	66 a3 28 82 22 f0    	mov    %ax,0xf0228228$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	89 ce                	mov    %ecx,%esi$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	66 81 e6 00 ff       	and    $0xff00,%si$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	83 ce 20             	or     $0x20,%esi$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	8b 15 2c 82 22 f0    	mov    0xf022822c,%edx$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	eb 78                	jmp    f0100542 <cons_putc+0x15d>$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	66 83 05 28 82 22 f0 	addw   $0x50,0xf0228228$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	50 $/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	0f b7 05 28 82 22 f0 	movzwl 0xf0228228,%eax$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	66 a3 28 82 22 f0    	mov    %ax,0xf0228228$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	eb 52                	jmp    f0100542 <cons_putc+0x15d>$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	e8 eb fe ff ff       	call   f01003e5 <cons_putc>$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	e8 e1 fe ff ff       	call   f01003e5 <cons_putc>$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	e8 d7 fe ff ff       	call   f01003e5 <cons_putc>$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	e8 cd fe ff ff       	call   f01003e5 <cons_putc>$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	e8 c3 fe ff ff       	call   f01003e5 <cons_putc>$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	eb 1e                	jmp    f0100542 <cons_putc+0x15d>$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	0f b7 05 28 82 22 f0 	movzwl 0xf0228228,%eax$/;"	l
f010052b	obj/kern/kernel.asm	/^f010052b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	66 89 15 28 82 22 f0 	mov    %dx,0xf0228228$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	8b 15 2c 82 22 f0    	mov    0xf022822c,%edx$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	66 89 0c 42          	mov    %cx,(%edx,%eax,2)$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	66 81 3d 28 82 22 f0 	cmpw   $0x7cf,0xf0228228$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	cf 07 $/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	76 43                	jbe    f0100590 <cons_putc+0x1ab>$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	a1 2c 82 22 f0       	mov    0xf022822c,%eax$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	68 00 0f 00 00       	push   $0xf00$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	52                   	push   %edx$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	50                   	push   %eax$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	e8 70 5b 00 00       	call   f01060d7 <memmove>$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	8b 15 2c 82 22 f0    	mov    0xf022822c,%edx$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	83 c4 10             	add    $0x10,%esp$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	39 d0                	cmp    %edx,%eax$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	75 f4                	jne    f010057c <cons_putc+0x197>$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	66 83 2d 28 82 22 f0 	subw   $0x50,0xf0228228$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	50 $/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	8b 0d 30 82 22 f0    	mov    0xf0228230,%ecx$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	89 ca                	mov    %ecx,%edx$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	ee                   	out    %al,(%dx)$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	0f b7 1d 28 82 22 f0 	movzwl 0xf0228228,%ebx$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	89 d8                	mov    %ebx,%eax$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	89 f2                	mov    %esi,%edx$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	ee                   	out    %al,(%dx)$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	89 ca                	mov    %ecx,%edx$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	ee                   	out    %al,(%dx)$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	89 d8                	mov    %ebx,%eax$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	89 f2                	mov    %esi,%edx$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	ee                   	out    %al,(%dx)$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	5b                   	pop    %ebx$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	5e                   	pop    %esi$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	5f                   	pop    %edi$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	5d                   	pop    %ebp$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	c3                   	ret    $/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6 <serial_intr>:$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	80 3d 34 82 22 f0 00 	cmpb   $0x0,0xf0228234$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	74 11                	je     f01005e0 <serial_intr+0x1a>$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	55                   	push   %ebp$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	89 e5                	mov    %esp,%ebp$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	b8 6a 02 10 f0       	mov    $0xf010026a,%eax$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	e8 aa fc ff ff       	call   f0100289 <cons_intr>$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	c9                   	leave  $/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	f3 c3                	repz ret $/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2 <kbd_intr>:$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	55                   	push   %ebp$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	b8 cc 02 10 f0       	mov    $0xf01002cc,%eax$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	e8 97 fc ff ff       	call   f0100289 <cons_intr>$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	c9                   	leave  $/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	c3                   	ret    $/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4 <cons_getc>:$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	55                   	push   %ebp$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	e8 c7 ff ff ff       	call   f01005c6 <serial_intr>$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	e8 de ff ff ff       	call   f01005e2 <kbd_intr>$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	a1 20 82 22 f0       	mov    0xf0228220,%eax$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	3b 05 24 82 22 f0    	cmp    0xf0228224,%eax$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	74 26                	je     f0100637 <cons_getc+0x43>$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	89 15 20 82 22 f0    	mov    %edx,0xf0228220$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	0f b6 88 20 80 22 f0 	movzbl -0xfdd7fe0(%eax),%ecx$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	89 c8                	mov    %ecx,%eax$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	75 11                	jne    f010063c <cons_getc+0x48>$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	c7 05 20 82 22 f0 00 	movl   $0x0,0xf0228220$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	00 00 00 $/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	eb 05                	jmp    f010063c <cons_getc+0x48>$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	c9                   	leave  $/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	c3                   	ret    $/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e <cons_init>:$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	55                   	push   %ebp$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	57                   	push   %edi$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	56                   	push   %esi$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	53                   	push   %ebx$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	5a a5 $/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	74 11                	je     f0100675 <cons_init+0x37>$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	c7 05 30 82 22 f0 b4 	movl   $0x3b4,0xf0228230$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	03 00 00 $/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	eb 16                	jmp    f010068b <cons_init+0x4d>$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	c7 05 30 82 22 f0 d4 	movl   $0x3d4,0xf0228230$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	03 00 00 $/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	8b 3d 30 82 22 f0    	mov    0xf0228230,%edi$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	89 fa                	mov    %edi,%edx$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	ee                   	out    %al,(%dx)$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	89 da                	mov    %ebx,%edx$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	ec                   	in     (%dx),%al$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	89 fa                	mov    %edi,%edx$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	ee                   	out    %al,(%dx)$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	89 da                	mov    %ebx,%edx$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	ec                   	in     (%dx),%al$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	89 35 2c 82 22 f0    	mov    %esi,0xf022822c$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	09 c8                	or     %ecx,%eax$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	66 a3 28 82 22 f0    	mov    %ax,0xf0228228$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	e8 1c ff ff ff       	call   f01005e2 <kbd_intr>$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	50                   	push   %eax$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	e8 2f 37 00 00       	call   f0103e0a <irq_setmask_8259A>$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	89 f2                	mov    %esi,%edx$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	ee                   	out    %al,(%dx)$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	ee                   	out    %al,(%dx)$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	89 da                	mov    %ebx,%edx$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	ee                   	out    %al,(%dx)$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	ee                   	out    %al,(%dx)$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	ee                   	out    %al,(%dx)$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	ee                   	out    %al,(%dx)$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	ee                   	out    %al,(%dx)$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	ec                   	in     (%dx),%al$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	89 c1                	mov    %eax,%ecx$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	3c ff                	cmp    $0xff,%al$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	0f 95 05 34 82 22 f0 	setne  0xf0228234$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	89 f2                	mov    %esi,%edx$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	ec                   	in     (%dx),%al$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	89 da                	mov    %ebx,%edx$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	ec                   	in     (%dx),%al$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	74 21                	je     f010076c <cons_init+0x12e>$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	50                   	push   %eax$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	e8 aa 36 00 00       	call   f0103e0a <irq_setmask_8259A>$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	80 3d 34 82 22 f0 00 	cmpb   $0x0,0xf0228234$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	75 10                	jne    f010077c <cons_init+0x13e>$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	68 0f 6e 10 f0       	push   $0xf0106e0f$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	e8 e2 37 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	83 c4 10             	add    $0x10,%esp$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	5b                   	pop    %ebx$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	5e                   	pop    %esi$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	5f                   	pop    %edi$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	5d                   	pop    %ebp$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	c3                   	ret    $/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784 <cputchar>:$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	55                   	push   %ebp$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	89 e5                	mov    %esp,%ebp$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	e8 53 fc ff ff       	call   f01003e5 <cons_putc>$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	c9                   	leave  $/;"	l
f0100793	obj/kern/kernel.asm	/^f0100793:	c3                   	ret    $/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794 <getchar>:$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	55                   	push   %ebp$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	89 e5                	mov    %esp,%ebp$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	e8 55 fe ff ff       	call   f01005f4 <cons_getc>$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	85 c0                	test   %eax,%eax$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	74 f7                	je     f010079a <getchar+0x6>$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	c9                   	leave  $/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	c3                   	ret    $/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5 <iscons>:$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	55                   	push   %ebp$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	89 e5                	mov    %esp,%ebp$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	5d                   	pop    %ebp$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	c3                   	ret    $/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af <mon_help>:$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	55                   	push   %ebp$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	56                   	push   %esi$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	53                   	push   %ebx$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	bb 64 76 10 f0       	mov    $0xf0107664,%ebx$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	be d0 76 10 f0       	mov    $0xf01076d0,%esi$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	ff 33                	pushl  (%ebx)$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	ff 73 fc             	pushl  -0x4(%ebx)$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	68 60 70 10 f0       	push   $0xf0107060$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	e8 8b 37 00 00       	call   f0103f5b <cprintf>$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	39 f3                	cmp    %esi,%ebx$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	75 e4                	jne    f01007be <mon_help+0xf>$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	5b                   	pop    %ebx$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	5e                   	pop    %esi$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	5d                   	pop    %ebp$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	c3                   	ret    $/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6 <mon_kerninfo>:$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	55                   	push   %ebp$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	68 69 70 10 f0       	push   $0xf0107069$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	e8 65 37 00 00       	call   f0103f5b <cprintf>$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	68 64 72 10 f0       	push   $0xf0107264$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	e8 53 37 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	68 8c 72 10 f0       	push   $0xf010728c$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	e8 3c 37 00 00       	call   f0103f5b <cprintf>$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	68 31 6d 10 00       	push   $0x106d31$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	68 31 6d 10 f0       	push   $0xf0106d31$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	68 b0 72 10 f0       	push   $0xf01072b0$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	e8 25 37 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	68 00 80 22 00       	push   $0x228000$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	68 00 80 22 f0       	push   $0xf0228000$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	68 d4 72 10 f0       	push   $0xf01072d4$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	e8 0e 37 00 00       	call   f0103f5b <cprintf>$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	68 08 a0 26 00       	push   $0x26a008$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	68 08 a0 26 f0       	push   $0xf026a008$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	68 f8 72 10 f0       	push   $0xf01072f8$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	e8 f7 36 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	b8 07 a4 26 f0       	mov    $0xf026a407,%eax$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	85 c0                	test   %eax,%eax$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	50                   	push   %eax$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	68 1c 73 10 f0       	push   $0xf010731c$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	e8 cc 36 00 00       	call   f0103f5b <cprintf>$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	c9                   	leave  $/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	c3                   	ret    $/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896 <mon_showtime>:$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	55                   	push   %ebp$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	89 e5                	mov    %esp,%ebp$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	57                   	push   %edi$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	56                   	push   %esi$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	53                   	push   %ebx$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	ee                   	out    %al,(%dx)$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	b9 71 00 00 00       	mov    $0x71,%ecx$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	89 ca                	mov    %ecx,%edx$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	ec                   	in     (%dx),%al$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	89 c7                	mov    %eax,%edi$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	ee                   	out    %al,(%dx)$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	89 ca                	mov    %ecx,%edx$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	ec                   	in     (%dx),%al$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	89 c6                	mov    %eax,%esi$/;"	l
f01008c4	obj/kern/kernel.asm	/^f01008c4:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	ee                   	out    %al,(%dx)$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	89 ca                	mov    %ecx,%edx$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	ec                   	in     (%dx),%al$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	b8 07 00 00 00       	mov    $0x7,%eax$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	ee                   	out    %al,(%dx)$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	89 ca                	mov    %ecx,%edx$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	ec                   	in     (%dx),%al$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	88 45 e6             	mov    %al,-0x1a(%ebp)$/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	ee                   	out    %al,(%dx)$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	89 ca                	mov    %ecx,%edx$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	ec                   	in     (%dx),%al$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	89 c3                	mov    %eax,%ebx$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	b8 09 00 00 00       	mov    $0x9,%eax$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	ee                   	out    %al,(%dx)$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	89 ca                	mov    %ecx,%edx$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	ec                   	in     (%dx),%al$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	89 fa                	mov    %edi,%edx$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	81 e2 f0 00 00 00    	and    $0xf0,%edx$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	c1 ea 04             	shr    $0x4,%edx$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	8d 14 92             	lea    (%edx,%edx,4),%edx$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	83 e7 0f             	and    $0xf,%edi$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	8d 14 57             	lea    (%edi,%edx,2),%edx$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	52                   	push   %edx$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	89 f2                	mov    %esi,%edx$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	81 e2 f0 00 00 00    	and    $0xf0,%edx$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	c1 ea 04             	shr    $0x4,%edx$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	8d 14 92             	lea    (%edx,%edx,4),%edx$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	83 e6 0f             	and    $0xf,%esi$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	8d 14 56             	lea    (%esi,%edx,2),%edx$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	52                   	push   %edx$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	0f b6 7d e7          	movzbl -0x19(%ebp),%edi$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	89 fa                	mov    %edi,%edx$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	81 e2 f0 00 00 00    	and    $0xf0,%edx$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	c1 ea 04             	shr    $0x4,%edx$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	8d 0c 92             	lea    (%edx,%edx,4),%ecx$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	89 fa                	mov    %edi,%edx$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	83 e2 0f             	and    $0xf,%edx$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	8d 14 4a             	lea    (%edx,%ecx,2),%edx$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	52                   	push   %edx$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	0f b6 75 e6          	movzbl -0x1a(%ebp),%esi$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	89 f2                	mov    %esi,%edx$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	81 e2 f0 00 00 00    	and    $0xf0,%edx$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	c1 ea 04             	shr    $0x4,%edx$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	8d 0c 92             	lea    (%edx,%edx,4),%ecx$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	89 f2                	mov    %esi,%edx$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	83 e2 0f             	and    $0xf,%edx$/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960:	8d 14 4a             	lea    (%edx,%ecx,2),%edx$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	52                   	push   %edx$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	89 da                	mov    %ebx,%edx$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	81 e2 f0 00 00 00    	and    $0xf0,%edx$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	c1 ea 04             	shr    $0x4,%edx$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	8d 14 92             	lea    (%edx,%edx,4),%edx$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	83 e3 0f             	and    $0xf,%ebx$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	8d 14 53             	lea    (%ebx,%edx,2),%edx$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	52                   	push   %edx$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	89 c2                	mov    %eax,%edx$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	81 e2 f0 00 00 00    	and    $0xf0,%edx$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	c1 ea 04             	shr    $0x4,%edx$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	8d 14 92             	lea    (%edx,%edx,4),%edx$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	83 e0 0f             	and    $0xf,%eax$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	8d 84 50 d0 07 00 00 	lea    0x7d0(%eax,%edx,2),%eax$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	50                   	push   %eax$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	68 48 73 10 f0       	push   $0xf0107348$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	e8 bf 35 00 00       	call   f0103f5b <cprintf>$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	5b                   	pop    %ebx$/;"	l
f01009a5	obj/kern/kernel.asm	/^f01009a5:	5e                   	pop    %esi$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	5f                   	pop    %edi$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	5d                   	pop    %ebp$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	c3                   	ret    $/;"	l
f01009a9	obj/kern/kernel.asm	/^f01009a9 <mon_backtrace>:$/;"	l
f01009a9	obj/kern/kernel.asm	/^f01009a9:	55                   	push   %ebp$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	57                   	push   %edi$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	56                   	push   %esi$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	53                   	push   %ebx$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	83 ec 48             	sub    $0x48,%esp$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	89 ee                	mov    %ebp,%esi$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	68 82 70 10 f0       	push   $0xf0107082$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	e8 9d 35 00 00       	call   f0103f5b <cprintf>$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	eb 78                	jmp    f0100a3b <mon_backtrace+0x92>$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	89 c7                	mov    %eax,%edi$/;"	l
f01009c8	obj/kern/kernel.asm	/^f01009c8:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	8d 55 d0             	lea    -0x30(%ebp),%edx$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	52                   	push   %edx$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	50                   	push   %eax$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	e8 43 4b 00 00       	call   f010551b <debuginfo_eip>$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	57                   	push   %edi$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	56                   	push   %esi$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	68 94 70 10 f0       	push   $0xf0107094$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	e8 74 35 00 00       	call   f0103f5b <cprintf>$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	ff 33                	pushl  (%ebx)$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	68 ab 70 10 f0       	push   $0xf01070ab$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	e8 5c 35 00 00       	call   f0103f5b <cprintf>$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	75 e7                	jne    f01009f0 <mon_backtrace+0x47>$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	68 4b 83 10 f0       	push   $0xf010834b$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	e8 45 35 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	50                   	push   %eax$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	68 b1 70 10 f0       	push   $0xf01070b1$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	e8 25 35 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	8b 36                	mov    (%esi),%esi$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	85 f6                	test   %esi,%esi$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	75 84                	jne    f01009c3 <mon_backtrace+0x1a>$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	5b                   	pop    %ebx$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	5e                   	pop    %esi$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	5f                   	pop    %edi$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	5d                   	pop    %ebp$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	c3                   	ret    $/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c <mon_showmappings>:$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	55                   	push   %ebp$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	57                   	push   %edi$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	56                   	push   %esi$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	53                   	push   %ebx$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	74 26                	je     f0100a81 <mon_showmappings+0x35>$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	68 c2 70 10 f0       	push   $0xf01070c2$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	e8 f3 34 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	c7 04 24 80 73 10 f0 	movl   $0xf0107380,(%esp)$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	e8 e7 34 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	e9 8a 01 00 00       	jmp    f0100c0b <mon_showmappings+0x1bf>$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	6a 00                	push   $0x0$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	6a 00                	push   $0x0$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	e8 1b 57 00 00       	call   f01061ae <strtol>$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	6a 00                	push   $0x0$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	6a 00                	push   $0x0$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	e8 07 57 00 00       	call   f01061ae <strtol>$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	89 c7                	mov    %eax,%edi$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	6a 00                	push   $0x0$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	53                   	push   %ebx$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	e8 10 0d 00 00       	call   f01017ca <pgdir_walk>$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	85 c0                	test   %eax,%eax$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	75 08                	jne    f0100ac9 <mon_showmappings+0x7d>$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	eb 1a                	jmp    f0100ae3 <mon_showmappings+0x97>$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	8b 00                	mov    (%eax),%eax$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	89 da                	mov    %ebx,%edx$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	81 e2 00 00 c0 ff    	and    $0xffc00000,%edx$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	85 c0                	test   %eax,%eax$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	0f 45 da             	cmovne %edx,%ebx$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	68 a8 73 10 f0       	push   $0xf01073a8$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	e8 6b 34 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	e9 f1 00 00 00       	jmp    f0100be9 <mon_showmappings+0x19d>$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	6a 00                	push   $0x0$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	53                   	push   %ebx$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	e8 c1 0c 00 00       	call   f01017ca <pgdir_walk>$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	89 c6                	mov    %eax,%esi$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	53                   	push   %ebx$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	68 de 70 10 f0       	push   $0xf01070de$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	e8 42 34 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	85 f6                	test   %esi,%esi$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	74 06                	je     f0100b26 <mon_showmappings+0xda>$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	8b 06                	mov    (%esi),%eax$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	a8 01                	test   $0x1,%al$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	75 29                	jne    f0100b4f <mon_showmappings+0x103>$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	68 e6 70 10 f0       	push   $0xf01070e6$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	e8 28 34 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	8d 83 00 00 40 00    	lea    0x400000(%ebx),%eax$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	0f 83 b4 00 00 00    	jae    f0100bf8 <mon_showmappings+0x1ac>$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	e9 9a 00 00 00       	jmp    f0100be9 <mon_showmappings+0x19d>$/;"	l
f0100b4f	obj/kern/kernel.asm	/^f0100b4f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	50                   	push   %eax$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	68 de 70 10 f0       	push   $0xf01070de$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	e8 f9 33 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	8b 06                	mov    (%esi),%eax$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	89 c2                	mov    %eax,%edx$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	83 e2 06             	and    $0x6,%edx$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0100b6f	obj/kern/kernel.asm	/^f0100b6f:	b9 2d 00 00 00       	mov    $0x2d,%ecx$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	89 c2                	mov    %eax,%edx$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	19 d2                	sbb    %edx,%edx$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	19 c0                	sbb    %eax,%eax$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	51                   	push   %ecx$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	52                   	push   %edx$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	50                   	push   %eax$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	68 f5 70 10 f0       	push   $0xf01070f5$/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	e8 b4 33 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	f6 06 80             	testb  $0x80,(%esi)$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	74 1e                	je     f0100bcd <mon_showmappings+0x181>$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	68 fe 70 10 f0       	push   $0xf01070fe$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	e8 9f 33 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	8d 83 00 00 40 00    	lea    0x400000(%ebx),%eax$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	73 36                	jae    f0100bff <mon_showmappings+0x1b3>$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	89 c3                	mov    %eax,%ebx$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	eb 1c                	jmp    f0100be9 <mon_showmappings+0x19d>$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	68 05 71 10 f0       	push   $0xf0107105$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	e8 81 33 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	73 1f                	jae    f0100c06 <mon_showmappings+0x1ba>$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	89 c3                	mov    %eax,%ebx$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	0f 86 07 ff ff ff    	jbe    f0100af8 <mon_showmappings+0xac>$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	eb 13                	jmp    f0100c0b <mon_showmappings+0x1bf>$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	eb 0c                	jmp    f0100c0b <mon_showmappings+0x1bf>$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	eb 05                	jmp    f0100c0b <mon_showmappings+0x1bf>$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	5b                   	pop    %ebx$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	5e                   	pop    %esi$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	5f                   	pop    %edi$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	5d                   	pop    %ebp$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	c3                   	ret    $/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13 <mon_chperm>:$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	55                   	push   %ebp$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	57                   	push   %edi$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	56                   	push   %esi$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	53                   	push   %ebx$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	74 26                	je     f0100c48 <mon_chperm+0x35>$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	68 c2 70 10 f0       	push   $0xf01070c2$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	e8 2c 33 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	c7 04 24 d4 73 10 f0 	movl   $0xf01073d4,(%esp)$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	e8 20 33 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	e9 40 02 00 00       	jmp    f0100e88 <mon_chperm+0x275>$/;"	l
f0100c48	obj/kern/kernel.asm	/^f0100c48:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100c4e	obj/kern/kernel.asm	/^f0100c4e:	80 38 2d             	cmpb   $0x2d,(%eax)$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	75 0e                	jne    f0100c61 <mon_chperm+0x4e>$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	0f b6 58 01          	movzbl 0x1(%eax),%ebx$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	80 fb 70             	cmp    $0x70,%bl$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	74 2c                	je     f0100c88 <mon_chperm+0x75>$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	80 fb 76             	cmp    $0x76,%bl$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	74 27                	je     f0100c88 <mon_chperm+0x75>$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	50                   	push   %eax$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	68 0c 71 10 f0       	push   $0xf010710c$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	e8 ec 32 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	c7 04 24 d4 73 10 f0 	movl   $0xf01073d4,(%esp)$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	e8 e0 32 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	e9 00 02 00 00       	jmp    f0100e88 <mon_chperm+0x275>$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	0f b6 78 02          	movzbl 0x2(%eax),%edi$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	6a 00                	push   $0x0$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	6a 00                	push   $0x0$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	e8 10 55 00 00       	call   f01061ae <strtol>$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	89 c2                	mov    %eax,%edx$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	89 f9                	mov    %edi,%ecx$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	80 f9 70             	cmp    $0x70,%cl$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	89 c6                	mov    %eax,%esi$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	80 fb 70             	cmp    $0x70,%bl$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	75 25                	jne    f0100cdd <mon_chperm+0xca>$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	89 f2                	mov    %esi,%edx$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	3b 15 8c 8e 22 f0    	cmp    0xf0228e8c,%edx$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	72 12                	jb     f0100cd7 <mon_chperm+0xc4>$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	56                   	push   %esi$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	6a 5a                	push   $0x5a$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	e8 69 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	8d b6 00 00 00 f0    	lea    -0x10000000(%esi),%esi$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	6a 00                	push   $0x0$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	56                   	push   %esi$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	e8 dc 0a 00 00       	call   f01017ca <pgdir_walk>$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	89 c7                	mov    %eax,%edi$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	8b 18                	mov    (%eax),%ebx$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	f6 c3 01             	test   $0x1,%bl$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	75 1a                	jne    f0100d14 <mon_chperm+0x101>$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	68 0c 74 10 f0       	push   $0xf010740c$/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02:	e8 54 32 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	e9 74 01 00 00       	jmp    f0100e88 <mon_chperm+0x275>$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	89 da                	mov    %ebx,%edx$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	81 e2 80 00 00 00    	and    $0x80,%edx$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	89 f0                	mov    %esi,%eax$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	85 d2                	test   %edx,%edx$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	0f 45 f0             	cmovne %eax,%esi$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	80 f9 07             	cmp    $0x7,%cl$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	77 36                	ja     f0100d6f <mon_chperm+0x15c>$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	6a 00                	push   $0x0$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	6a 00                	push   $0x0$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	52                   	push   %edx$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	e8 68 54 00 00       	call   f01061ae <strtol>$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	89 da                	mov    %ebx,%edx$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	83 e2 f8             	and    $0xfffffff8,%edx$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	09 d0                	or     %edx,%eax$/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	a8 01                	test   $0x1,%al$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	74 04                	je     f0100d58 <mon_chperm+0x145>$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	89 07                	mov    %eax,(%edi)$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	eb 65                	jmp    f0100dbd <mon_chperm+0x1aa>$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	83 c8 01             	or     $0x1,%eax$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	89 07                	mov    %eax,(%edi)$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	68 40 74 10 f0       	push   $0xf0107440$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	e8 f1 31 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	eb 4e                	jmp    f0100dbd <mon_chperm+0x1aa>$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	3c 55                	cmp    $0x55,%al$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	75 09                	jne    f0100d7c <mon_chperm+0x169>$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	89 d8                	mov    %ebx,%eax$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	83 c8 04             	or     $0x4,%eax$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	89 07                	mov    %eax,(%edi)$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	eb 0b                	jmp    f0100d87 <mon_chperm+0x174>$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	75 07                	jne    f0100d87 <mon_chperm+0x174>$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	89 d8                	mov    %ebx,%eax$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	83 e0 fb             	and    $0xfffffffb,%eax$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	89 07                	mov    %eax,(%edi)$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	0f b6 40 01          	movzbl 0x1(%eax),%eax$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	3c 57                	cmp    $0x57,%al$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	75 05                	jne    f0100d9a <mon_chperm+0x187>$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	83 0f 02             	orl    $0x2,(%edi)$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	eb 07                	jmp    f0100da1 <mon_chperm+0x18e>$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	75 03                	jne    f0100da1 <mon_chperm+0x18e>$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	83 27 fd             	andl   $0xfffffffd,(%edi)$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	80 78 02 2d          	cmpb   $0x2d,0x2(%eax)$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	75 10                	jne    f0100dbd <mon_chperm+0x1aa>$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	68 40 74 10 f0       	push   $0xf0107440$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	e8 a1 31 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	56                   	push   %esi$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	68 31 71 10 f0       	push   $0xf0107131$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	e8 90 31 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	8b 07                	mov    (%edi),%eax$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	50                   	push   %eax$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	68 42 71 10 f0       	push   $0xf0107142$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	e8 7b 31 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	c7 04 24 64 74 10 f0 	movl   $0xf0107464,(%esp)$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	e8 6f 31 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	89 d8                	mov    %ebx,%eax$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	83 e0 06             	and    $0x6,%eax$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100df4	obj/kern/kernel.asm	/^f0100df4:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	b9 57 00 00 00       	mov    $0x57,%ecx$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	0f 45 c8             	cmovne %eax,%ecx$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	89 d8                	mov    %ebx,%eax$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	83 e0 04             	and    $0x4,%eax$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	19 d2                	sbb    %edx,%edx$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	83 e3 02             	and    $0x2,%ebx$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	19 c0                	sbb    %eax,%eax$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	51                   	push   %ecx$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	52                   	push   %edx$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	50                   	push   %eax$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	68 53 71 10 f0       	push   $0xf0107153$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	e8 2c 31 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	c7 04 24 88 74 10 f0 	movl   $0xf0107488,(%esp)$/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	e8 20 31 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	8b 07                	mov    (%edi),%eax$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	89 c2                	mov    %eax,%edx$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	83 e2 06             	and    $0x6,%edx$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	b9 2d 00 00 00       	mov    $0x2d,%ecx$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	89 c2                	mov    %eax,%edx$/;"	l
f0100e57	obj/kern/kernel.asm	/^f0100e57:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	19 d2                	sbb    %edx,%edx$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	19 c0                	sbb    %eax,%eax$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	51                   	push   %ecx$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	52                   	push   %edx$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	50                   	push   %eax$/;"	l
f0100e76	obj/kern/kernel.asm	/^f0100e76:	68 53 71 10 f0       	push   $0xf0107153$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	e8 db 30 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	5b                   	pop    %ebx$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	5e                   	pop    %esi$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	5f                   	pop    %edi$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	5d                   	pop    %ebp$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	c3                   	ret    $/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90 <mon_continue>:$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	55                   	push   %ebp$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	85 c0                	test   %eax,%eax$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	74 1d                	je     f0100eba <mon_continue+0x2a>$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	81 60 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%eax)$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	e8 01 58 00 00       	call   f01066aa <cpunum>$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100eaf	obj/kern/kernel.asm	/^f0100eaf:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	e8 4d 2e 00 00       	call   f0103d07 <env_run>$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	68 5d 71 10 f0       	push   $0xf010715d$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	e8 94 30 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	c9                   	leave  $/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	c3                   	ret    $/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece <mon_step>:$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	55                   	push   %ebp$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	85 c0                	test   %eax,%eax$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	74 1d                	je     f0100ef8 <mon_step+0x2a>$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	81 48 38 00 01 00 00 	orl    $0x100,0x38(%eax)$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	e8 c3 57 00 00       	call   f01066aa <cpunum>$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	e8 0f 2e 00 00       	call   f0103d07 <env_run>$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	68 5d 71 10 f0       	push   $0xf010715d$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	e8 56 30 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	c9                   	leave  $/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	c3                   	ret    $/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c <mon_dumpmem>:$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	55                   	push   %ebp$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	57                   	push   %edi$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	56                   	push   %esi$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	53                   	push   %ebx$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	74 26                	je     f0100f44 <mon_dumpmem+0x38>$/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	68 c2 70 10 f0       	push   $0xf01070c2$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	e8 30 30 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	c7 04 24 a8 74 10 f0 	movl   $0xf01074a8,(%esp)$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	e8 24 30 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	e9 60 01 00 00       	jmp    f01010a4 <mon_dumpmem+0x198>$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	80 38 2d             	cmpb   $0x2d,(%eax)$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	75 0e                	jne    f0100f5a <mon_dumpmem+0x4e>$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	0f b6 50 01          	movzbl 0x1(%eax),%edx$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	80 fa 70             	cmp    $0x70,%dl$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	74 2c                	je     f0100f81 <mon_dumpmem+0x75>$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	80 fa 76             	cmp    $0x76,%dl$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	74 27                	je     f0100f81 <mon_dumpmem+0x75>$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	50                   	push   %eax$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	68 0c 71 10 f0       	push   $0xf010710c$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	e8 f3 2f 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	c7 04 24 a8 74 10 f0 	movl   $0xf01074a8,(%esp)$/;"	l
f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	e8 e7 2f 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	e9 23 01 00 00       	jmp    f01010a4 <mon_dumpmem+0x198>$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	6a 00                	push   $0x0$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	6a 00                	push   $0x0$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f0100f8b	obj/kern/kernel.asm	/^f0100f8b:	e8 1e 52 00 00       	call   f01061ae <strtol>$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	89 c3                	mov    %eax,%ebx$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	6a 00                	push   $0x0$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	6a 00                	push   $0x0$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	ff 77 0c             	pushl  0xc(%edi)$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	e8 0d 52 00 00       	call   f01061ae <strtol>$/;"	l
f0100fa1	obj/kern/kernel.asm	/^f0100fa1:	89 c6                	mov    %eax,%esi$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	80 78 01 70          	cmpb   $0x70,0x1(%eax)$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	0f 85 93 00 00 00    	jne    f0101046 <mon_dumpmem+0x13a>$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	74 73                	je     f010102b <mon_dumpmem+0x11f>$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	53                   	push   %ebx$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	68 7a 71 10 f0       	push   $0xf010717a$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	e8 95 2f 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	eb 60                	jmp    f010102b <mon_dumpmem+0x11f>$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	75 11                	jne    f0100fe1 <mon_dumpmem+0xd5>$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	53                   	push   %ebx$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	68 79 71 10 f0       	push   $0xf0107179$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	e8 7d 2f 00 00       	call   f0103f5b <cprintf>$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	89 da                	mov    %ebx,%edx$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	89 d8                	mov    %ebx,%eax$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	89 c1                	mov    %eax,%ecx$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	3b 0d 8c 8e 22 f0    	cmp    0xf0228e8c,%ecx$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	72 12                	jb     f010100f <mon_dumpmem+0x103>$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	50                   	push   %eax$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	6a 5a                	push   $0x5a$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f010100a	obj/kern/kernel.asm	/^f010100a:	e8 31 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	0f b6 84 02 00 00 00 	movzbl -0x10000000(%edx,%eax,1),%eax$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	f0 $/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	50                   	push   %eax$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	68 83 71 10 f0       	push   $0xf0107183$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	e8 36 2f 00 00       	call   f0103f5b <cprintf>$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	83 c4 10             	add    $0x10,%esp$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	39 f3                	cmp    %esi,%ebx$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	72 9c                	jb     f0100fcb <mon_dumpmem+0xbf>$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	68 4b 83 10 f0       	push   $0xf010834b$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	e8 1f 2f 00 00       	call   f0103f5b <cprintf>$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	eb 5e                	jmp    f01010a4 <mon_dumpmem+0x198>$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	74 40                	je     f010108b <mon_dumpmem+0x17f>$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	53                   	push   %ebx$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	68 7a 71 10 f0       	push   $0xf010717a$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	e8 02 2f 00 00       	call   f0103f5b <cprintf>$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	83 c4 10             	add    $0x10,%esp$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	eb 2d                	jmp    f010108b <mon_dumpmem+0x17f>$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	75 11                	jne    f0101074 <mon_dumpmem+0x168>$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	53                   	push   %ebx$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	68 79 71 10 f0       	push   $0xf0107179$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	e8 ea 2e 00 00       	call   f0103f5b <cprintf>$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	50                   	push   %eax$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	68 83 71 10 f0       	push   $0xf0107183$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	e8 d6 2e 00 00       	call   f0103f5b <cprintf>$/;"	l
f0101085	obj/kern/kernel.asm	/^f0101085:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	39 f3                	cmp    %esi,%ebx$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	72 cf                	jb     f010105e <mon_dumpmem+0x152>$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	68 4b 83 10 f0       	push   $0xf010834b$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	e8 bf 2e 00 00       	call   f0103f5b <cprintf>$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010109f	obj/kern/kernel.asm	/^f010109f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	5b                   	pop    %ebx$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	5e                   	pop    %esi$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	5f                   	pop    %edi$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	5d                   	pop    %ebp$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	c3                   	ret    $/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac <monitor>:$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	55                   	push   %ebp$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	57                   	push   %edi$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	56                   	push   %esi$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	53                   	push   %ebx$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	83 ec 58             	sub    $0x58,%esp$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	68 d4 74 10 f0       	push   $0xf01074d4$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	e8 9c 2e 00 00       	call   f0103f5b <cprintf>$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	c7 04 24 f8 74 10 f0 	movl   $0xf01074f8,(%esp)$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	e8 90 2e 00 00       	call   f0103f5b <cprintf>$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	74 0e                	je     f01010e2 <monitor+0x36>$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	e8 f8 30 00 00       	call   f01041d7 <print_trapframe>$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	68 89 71 10 f0       	push   $0xf0107189$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	e8 2c 4d 00 00       	call   f0105e1b <readline>$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	89 c3                	mov    %eax,%ebx$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	85 c0                	test   %eax,%eax$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	74 ea                	je     f01010e2 <monitor+0x36>$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	eb 0a                	jmp    f0101110 <monitor+0x64>$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	89 f7                	mov    %esi,%edi$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	89 fe                	mov    %edi,%esi$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	84 c0                	test   %al,%al$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	74 63                	je     f010117a <monitor+0xce>$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	0f be c0             	movsbl %al,%eax$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	50                   	push   %eax$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	68 8d 71 10 f0       	push   $0xf010718d$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	e8 25 4f 00 00       	call   f010604d <strchr>$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	83 c4 10             	add    $0x10,%esp$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	85 c0                	test   %eax,%eax$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	75 d7                	jne    f0101106 <monitor+0x5a>$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	74 46                	je     f010117a <monitor+0xce>$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	75 14                	jne    f010114d <monitor+0xa1>$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	6a 10                	push   $0x10$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	68 92 71 10 f0       	push   $0xf0107192$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	e8 13 2e 00 00       	call   f0103f5b <cprintf>$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	83 c4 10             	add    $0x10,%esp$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	eb 95                	jmp    f01010e2 <monitor+0x36>$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	eb 03                	jmp    f0101159 <monitor+0xad>$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	84 c0                	test   %al,%al$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	74 ae                	je     f010110e <monitor+0x62>$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101163	obj/kern/kernel.asm	/^f0101163:	0f be c0             	movsbl %al,%eax$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	50                   	push   %eax$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	68 8d 71 10 f0       	push   $0xf010718d$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	e8 dc 4e 00 00       	call   f010604d <strchr>$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	85 c0                	test   %eax,%eax$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	74 de                	je     f0101156 <monitor+0xaa>$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	eb 94                	jmp    f010110e <monitor+0x62>$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0101181	obj/kern/kernel.asm	/^f0101181:	00 $/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	85 f6                	test   %esi,%esi$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	0f 84 58 ff ff ff    	je     f01010e2 <monitor+0x36>$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	ff 34 85 60 76 10 f0 	pushl  -0xfef89a0(,%eax,4)$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	e8 4b 4e 00 00       	call   f0105fef <strcmp>$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	85 c0                	test   %eax,%eax$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	75 21                	jne    f01011cc <monitor+0x120>$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	52                   	push   %edx$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	56                   	push   %esi$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	ff 14 85 68 76 10 f0 	call   *-0xfef8998(,%eax,4)$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	85 c0                	test   %eax,%eax$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	78 25                	js     f01011ec <monitor+0x140>$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	e9 16 ff ff ff       	jmp    f01010e2 <monitor+0x36>$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	75 bb                	jne    f010118f <monitor+0xe3>$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	68 af 71 10 f0       	push   $0xf01071af$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	e8 77 2d 00 00       	call   f0103f5b <cprintf>$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	e9 f6 fe ff ff       	jmp    f01010e2 <monitor+0x36>$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	5b                   	pop    %ebx$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	5e                   	pop    %esi$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	5f                   	pop    %edi$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	5d                   	pop    %ebp$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	c3                   	ret    $/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4 <boot_alloc>:$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	55                   	push   %ebp$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	89 c2                	mov    %eax,%edx$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	83 3d 38 82 22 f0 00 	cmpl   $0x0,0xf0228238$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	75 0f                	jne    f0101211 <boot_alloc+0x1d>$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	b8 07 b0 26 f0       	mov    $0xf026b007,%eax$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	a3 38 82 22 f0       	mov    %eax,0xf0228238$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	a1 38 82 22 f0       	mov    0xf0228238,%eax$/;"	l
f0101216	obj/kern/kernel.asm	/^f0101216:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	01 c2                	add    %eax,%edx$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	89 15 38 82 22 f0    	mov    %edx,0xf0228238$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	5d                   	pop    %ebp$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	c3                   	ret    $/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c <nvram_read>:$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	55                   	push   %ebp$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	89 e5                	mov    %esp,%ebp$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	56                   	push   %esi$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	53                   	push   %ebx$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	89 c3                	mov    %eax,%ebx$/;"	l
f0101233	obj/kern/kernel.asm	/^f0101233:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	50                   	push   %eax$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	e8 a0 2b 00 00       	call   f0103ddc <mc146818_read>$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	89 c6                	mov    %eax,%esi$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	e8 93 2b 00 00       	call   f0103ddc <mc146818_read>$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	09 f0                	or     %esi,%eax$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	5b                   	pop    %ebx$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	5e                   	pop    %esi$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	5d                   	pop    %ebp$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	c3                   	ret    $/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255 <page2kva>:$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	89 c2                	mov    %eax,%edx$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	39 15 8c 8e 22 f0    	cmp    %edx,0xf0228e8c$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	77 18                	ja     f0101286 <page2kva+0x31>$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	55                   	push   %ebp$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	50                   	push   %eax$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	6a 5a                	push   $0x5a$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	e8 ba ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	c3                   	ret    $/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c <check_va2pa>:$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	89 d1                	mov    %edx,%ecx$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	a8 01                	test   $0x1,%al$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	74 64                	je     f01012fc <check_va2pa+0x70>$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	a8 80                	test   $0x80,%al$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	74 0e                	je     f01012aa <check_va2pa+0x1e>$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	81 e2 00 f0 3f 00    	and    $0x3ff000,%edx$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	09 d0                	or     %edx,%eax$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	c3                   	ret    $/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	89 c1                	mov    %eax,%ecx$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	3b 0d 8c 8e 22 f0    	cmp    0xf0228e8c,%ecx$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	72 1b                	jb     f01012d7 <check_va2pa+0x4b>$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	55                   	push   %ebp$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	50                   	push   %eax$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	68 b9 03 00 00       	push   $0x3b9$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	e8 69 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	89 c2                	mov    %eax,%edx$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	83 e2 01             	and    $0x1,%edx$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	85 d2                	test   %edx,%edx$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	c3                   	ret    $/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	c3                   	ret    $/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302 <check_page_free_list>:$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	55                   	push   %ebp$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	89 e5                	mov    %esp,%ebp$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	57                   	push   %edi$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	56                   	push   %esi$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	53                   	push   %ebx$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	84 c0                	test   %al,%al$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	0f 85 a0 02 00 00    	jne    f01015b3 <check_page_free_list+0x2b1>$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	e9 ad 02 00 00       	jmp    f01015c5 <check_page_free_list+0x2c3>$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	68 cc 76 10 f0       	push   $0xf01076cc$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	68 e8 02 00 00       	push   $0x2e8$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	e8 11 ed ff ff       	call   f0100040 <_panic>$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	89 c2                	mov    %eax,%edx$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	2b 15 94 8e 22 f0    	sub    0xf0228e94,%edx$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	0f 95 c2             	setne  %dl$/;"	l
f010134c	obj/kern/kernel.asm	/^f010134c:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	89 01                	mov    %eax,(%ecx)$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	8b 00                	mov    (%eax),%eax$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	85 c0                	test   %eax,%eax$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	75 dc                	jne    f010133b <check_page_free_list+0x39>$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	89 10                	mov    %edx,(%eax)$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	a3 40 82 22 f0       	mov    %eax,0xf0228240$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	8b 1d 40 82 22 f0    	mov    0xf0228240,%ebx$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	eb 53                	jmp    f01013d8 <check_page_free_list+0xd6>$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	89 d8                	mov    %ebx,%eax$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	89 c2                	mov    %eax,%edx$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	39 f2                	cmp    %esi,%edx$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	73 3a                	jae    f01013d6 <check_page_free_list+0xd4>$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	89 c2                	mov    %eax,%edx$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	3b 15 8c 8e 22 f0    	cmp    0xf0228e8c,%edx$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	72 12                	jb     f01013bb <check_page_free_list+0xb9>$/;"	l
f01013a9	obj/kern/kernel.asm	/^f01013a9:	50                   	push   %eax$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	6a 5a                	push   $0x5a$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	e8 85 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	68 80 00 00 00       	push   $0x80$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	68 97 00 00 00       	push   $0x97$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	50                   	push   %eax$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	e8 b7 4c 00 00       	call   f010608a <memset>$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	85 db                	test   %ebx,%ebx$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	75 a9                	jne    f0101385 <check_page_free_list+0x83>$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	e8 0e fe ff ff       	call   f01011f4 <boot_alloc>$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	8b 15 40 82 22 f0    	mov    0xf0228240,%edx$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	8b 0d 94 8e 22 f0    	mov    0xf0228e94,%ecx$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	a1 8c 8e 22 f0       	mov    0xf0228e8c,%eax$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	e9 52 01 00 00       	jmp    f0101562 <check_page_free_list+0x260>$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	39 ca                	cmp    %ecx,%edx$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	73 19                	jae    f010142d <check_page_free_list+0x12b>$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	68 85 80 10 f0       	push   $0xf0108085$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	68 02 03 00 00       	push   $0x302$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	e8 13 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	72 19                	jb     f010144b <check_page_free_list+0x149>$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	68 a6 80 10 f0       	push   $0xf01080a6$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	68 03 03 00 00       	push   $0x303$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	e8 f5 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	89 d0                	mov    %edx,%eax$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	a8 07                	test   $0x7,%al$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	74 19                	je     f010146d <check_page_free_list+0x16b>$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	68 f0 76 10 f0       	push   $0xf01076f0$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	68 04 03 00 00       	push   $0x304$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	e8 d3 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	85 c0                	test   %eax,%eax$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	75 19                	jne    f0101490 <check_page_free_list+0x18e>$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	68 ba 80 10 f0       	push   $0xf01080ba$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	68 07 03 00 00       	push   $0x307$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	e8 b0 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	75 19                	jne    f01014b0 <check_page_free_list+0x1ae>$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	68 cb 80 10 f0       	push   $0xf01080cb$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	68 08 03 00 00       	push   $0x308$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	e8 90 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	75 19                	jne    f01014d0 <check_page_free_list+0x1ce>$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	68 24 77 10 f0       	push   $0xf0107724$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	68 09 03 00 00       	push   $0x309$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	e8 70 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	75 19                	jne    f01014f0 <check_page_free_list+0x1ee>$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	68 e4 80 10 f0       	push   $0xf01080e4$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	68 0a 03 00 00       	push   $0x30a$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	e8 50 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	0f 86 f1 00 00 00    	jbe    f01015ec <check_page_free_list+0x2ea>$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	89 c7                	mov    %eax,%edi$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	77 12                	ja     f0101517 <check_page_free_list+0x215>$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	50                   	push   %eax$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	6a 5a                	push   $0x5a$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	e8 29 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	0f 86 b6 00 00 00    	jbe    f01015dc <check_page_free_list+0x2da>$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	68 48 77 10 f0       	push   $0xf0107748$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	68 0b 03 00 00       	push   $0x30b$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	e8 01 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	68 fe 80 10 f0       	push   $0xf01080fe$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	68 0d 03 00 00       	push   $0x30d$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	e8 e8 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	83 c6 01             	add    $0x1,%esi$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	eb 03                	jmp    f0101560 <check_page_free_list+0x25e>$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	8b 12                	mov    (%edx),%edx$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	85 d2                	test   %edx,%edx$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	0f 85 a6 fe ff ff    	jne    f0101410 <check_page_free_list+0x10e>$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	85 f6                	test   %esi,%esi$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	7f 19                	jg     f0101587 <check_page_free_list+0x285>$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	68 1b 81 10 f0       	push   $0xf010811b$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	68 15 03 00 00       	push   $0x315$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	e8 b9 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	85 db                	test   %ebx,%ebx$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	7f 19                	jg     f01015a4 <check_page_free_list+0x2a2>$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	68 2d 81 10 f0       	push   $0xf010812d$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	68 16 03 00 00       	push   $0x316$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	e8 9c ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	68 90 77 10 f0       	push   $0xf0107790$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	e8 aa 29 00 00       	call   f0103f5b <cprintf>$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	eb 49                	jmp    f01015fc <check_page_free_list+0x2fa>$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	a1 40 82 22 f0       	mov    0xf0228240,%eax$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	85 c0                	test   %eax,%eax$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	0f 85 6f fd ff ff    	jne    f010132f <check_page_free_list+0x2d>$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	e9 53 fd ff ff       	jmp    f0101318 <check_page_free_list+0x16>$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	83 3d 40 82 22 f0 00 	cmpl   $0x0,0xf0228240$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	0f 84 46 fd ff ff    	je     f0101318 <check_page_free_list+0x16>$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	e9 a1 fd ff ff       	jmp    f010137d <check_page_free_list+0x7b>$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	0f 85 76 ff ff ff    	jne    f010155d <check_page_free_list+0x25b>$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	e9 53 ff ff ff       	jmp    f010153f <check_page_free_list+0x23d>$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	0f 85 61 ff ff ff    	jne    f0101558 <check_page_free_list+0x256>$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	e9 43 ff ff ff       	jmp    f010153f <check_page_free_list+0x23d>$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	5b                   	pop    %ebx$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	5e                   	pop    %esi$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	5f                   	pop    %edi$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	5d                   	pop    %ebp$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	c3                   	ret    $/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604 <enable_PS_percpu>:$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	55                   	push   %ebp$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	89 e5                	mov    %esp,%ebp$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	80 3d 88 8e 22 f0 00 	cmpb   $0x0,0xf0228e88$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	74 0f                	je     f010161f <enable_PS_percpu+0x1b>$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	83 c8 10             	or     $0x10,%eax$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	0f 20 d8             	mov    %cr3,%eax$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	5d                   	pop    %ebp$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	c3                   	ret    $/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621 <page_init>:$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	55                   	push   %ebp$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	89 e5                	mov    %esp,%ebp$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	57                   	push   %edi$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	56                   	push   %esi$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	53                   	push   %ebx$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	e8 c0 fb ff ff       	call   f01011f4 <boot_alloc>$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	77 15                	ja     f0101650 <page_init+0x2f>$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	50                   	push   %eax$/;"	l
f010163c	obj/kern/kernel.asm	/^f010163c:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	68 64 01 00 00       	push   $0x164$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	e8 f0 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	c7 05 40 82 22 f0 00 	movl   $0x0,0xf0228240$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	00 00 00 $/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	8b 3d 44 82 22 f0    	mov    0xf0228244,%edi$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	eb 47                	jmp    f01016bf <page_init+0x9e>$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	8d 1c d5 00 00 00 00 	lea    0x0(,%edx,8),%ebx$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	03 0d 94 8e 22 f0    	add    0xf0228e94,%ecx$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	85 d2                	test   %edx,%edx$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	74 25                	je     f01016b6 <page_init+0x95>$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	74 04                	je     f010169a <page_init+0x79>$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	39 fa                	cmp    %edi,%edx$/;"	l
f0101698	obj/kern/kernel.asm	/^f0101698:	72 0c                	jb     f01016a6 <page_init+0x85>$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	81 fa ff 00 00 00    	cmp    $0xff,%edx$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	76 14                	jbe    f01016b6 <page_init+0x95>$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	39 c2                	cmp    %eax,%edx$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	72 10                	jb     f01016b6 <page_init+0x95>$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	89 31                	mov    %esi,(%ecx)$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	89 de                	mov    %ebx,%esi$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	03 35 94 8e 22 f0    	add    0xf0228e94,%esi$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	c6 45 e7 01          	movb   $0x1,-0x19(%ebp)$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	eb 06                	jmp    f01016bc <page_init+0x9b>$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	83 c2 01             	add    $0x1,%edx$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	3b 15 8c 8e 22 f0    	cmp    0xf0228e8c,%edx$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	72 b1                	jb     f0101678 <page_init+0x57>$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	74 06                	je     f01016d3 <page_init+0xb2>$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	89 35 40 82 22 f0    	mov    %esi,0xf0228240$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	5b                   	pop    %ebx$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	5e                   	pop    %esi$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	5f                   	pop    %edi$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	5d                   	pop    %ebp$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	c3                   	ret    $/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db <page_alloc>:$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	55                   	push   %ebp$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	53                   	push   %ebx$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	8b 1d 40 82 22 f0    	mov    0xf0228240,%ebx$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	85 db                	test   %ebx,%ebx$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	74 58                	je     f0101744 <page_alloc+0x69>$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	8b 03                	mov    (%ebx),%eax$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	a3 40 82 22 f0       	mov    %eax,0xf0228240$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	74 45                	je     f0101744 <page_alloc+0x69>$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	89 d8                	mov    %ebx,%eax$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	89 c2                	mov    %eax,%edx$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	3b 15 8c 8e 22 f0    	cmp    0xf0228e8c,%edx$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	72 12                	jb     f010172c <page_alloc+0x51>$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	50                   	push   %eax$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	6a 5a                	push   $0x5a$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	e8 14 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	6a 00                	push   $0x0$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	50                   	push   %eax$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	e8 49 49 00 00       	call   f010608a <memset>$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	89 d8                	mov    %ebx,%eax$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	c9                   	leave  $/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	c3                   	ret    $/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b <page_free>:$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	55                   	push   %ebp$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	89 e5                	mov    %esp,%ebp$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	74 1a                	je     f0101775 <page_free+0x2a>$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	e8 f5 fa ff ff       	call   f0101255 <page2kva>$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	50                   	push   %eax$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	68 b4 77 10 f0       	push   $0xf01077b4$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	68 9a 01 00 00       	push   $0x19a$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	e8 cb e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	74 1a                	je     f0101794 <page_free+0x49>$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	e8 d6 fa ff ff       	call   f0101255 <page2kva>$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	50                   	push   %eax$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	68 e8 77 10 f0       	push   $0xf01077e8$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	68 9d 01 00 00       	push   $0x19d$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	e8 ac e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	8b 15 40 82 22 f0    	mov    0xf0228240,%edx$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	89 10                	mov    %edx,(%eax)$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	a3 40 82 22 f0       	mov    %eax,0xf0228240$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	c9                   	leave  $/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	c3                   	ret    $/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3 <page_decref>:$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	55                   	push   %ebp$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	89 e5                	mov    %esp,%ebp$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	66 85 c0             	test   %ax,%ax$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	75 0c                	jne    f01017c8 <page_decref+0x25>$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	52                   	push   %edx$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	e8 86 ff ff ff       	call   f010174b <page_free>$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	c9                   	leave  $/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	c3                   	ret    $/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca <pgdir_walk>:$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	55                   	push   %ebp$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	56                   	push   %esi$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	53                   	push   %ebx$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	89 f3                	mov    %esi,%ebx$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	8b 03                	mov    (%ebx),%eax$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	a8 01                	test   $0x1,%al$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	74 41                	je     f0101824 <pgdir_walk+0x5a>$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	a8 80                	test   $0x80,%al$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	0f 85 b4 00 00 00    	jne    f010189f <pgdir_walk+0xd5>$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	89 c2                	mov    %eax,%edx$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	39 15 8c 8e 22 f0    	cmp    %edx,0xf0228e8c$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	77 15                	ja     f0101812 <pgdir_walk+0x48>$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	50                   	push   %eax$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	68 cb 01 00 00       	push   $0x1cb$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	e8 2e e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	8d 9c 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%ebx$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	eb 7b                	jmp    f010189f <pgdir_walk+0xd5>$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	74 69                	je     f0101893 <pgdir_walk+0xc9>$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	6a 01                	push   $0x1$/;"	l
f010182f	obj/kern/kernel.asm	/^f010182f:	e8 a7 fe ff ff       	call   f01016db <page_alloc>$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	85 c0                	test   %eax,%eax$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	74 5f                	je     f010189a <pgdir_walk+0xd0>$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	89 c2                	mov    %eax,%edx$/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	2b 15 94 8e 22 f0    	sub    0xf0228e94,%edx$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	89 c2                	mov    %eax,%edx$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	3b 15 8c 8e 22 f0    	cmp    0xf0228e8c,%edx$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	72 15                	jb     f0101881 <pgdir_walk+0xb7>$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	50                   	push   %eax$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	68 d6 01 00 00       	push   $0x1d6$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	e8 bf e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	8d 9c 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%ebx$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	eb 0c                	jmp    f010189f <pgdir_walk+0xd5>$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	eb 05                	jmp    f010189f <pgdir_walk+0xd5>$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	89 d8                	mov    %ebx,%eax$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	5b                   	pop    %ebx$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	5e                   	pop    %esi$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	5d                   	pop    %ebp$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	c3                   	ret    $/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8 <boot_map_region>:$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	55                   	push   %ebp$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	57                   	push   %edi$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	56                   	push   %esi$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	53                   	push   %ebx$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	89 cf                	mov    %ecx,%edi$/;"	l
f01018b6	obj/kern/kernel.asm	/^f01018b6:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	80 3d 88 8e 22 f0 00 	cmpb   $0x0,0xf0228e88$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	0f 84 ad 00 00 00    	je     f0101973 <boot_map_region+0xcb>$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	89 d0                	mov    %edx,%eax$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	31 c8                	xor    %ecx,%eax$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	a9 ff ff 3f 00       	test   $0x3fffff,%eax$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	74 29                	je     f01018fa <boot_map_region+0x52>$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	e9 9d 00 00 00       	jmp    f0101973 <boot_map_region+0xcb>$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	6a 01                	push   $0x1$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	53                   	push   %ebx$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	e8 e6 fe ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	89 30                	mov    %esi,(%eax)$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	eb 10                	jmp    f010190a <boot_map_region+0x62>$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	89 d3                	mov    %edx,%ebx$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	29 d1                	sub    %edx,%ecx$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f010190d	obj/kern/kernel.asm	/^f010190d:	89 c8                	mov    %ecx,%eax$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	8d 34 0b             	lea    (%ebx,%ecx,1),%esi$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	85 ff                	test   %edi,%edi$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	0f 84 97 00 00 00    	je     f01019b1 <boot_map_region+0x109>$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	f7 c3 ff ff 3f 00    	test   $0x3fffff,%ebx$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	75 b4                	jne    f01018d6 <boot_map_region+0x2e>$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	89 fa                	mov    %edi,%edx$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	01 da                	add    %ebx,%edx$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	80 c9 81             	or     $0x81,%cl$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	89 c6                	mov    %eax,%esi$/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	eb 11                	jmp    f0101959 <boot_map_region+0xb1>$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	89 d9                	mov    %ebx,%ecx$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	0b 45 e0             	or     -0x20(%ebp),%eax$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	89 04 8f             	mov    %eax,(%edi,%ecx,4)$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	81 c3 00 00 40 00    	add    $0x400000,%ebx$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	39 d3                	cmp    %edx,%ebx$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	75 e8                	jne    f0101948 <boot_map_region+0xa0>$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	29 c7                	sub    %eax,%edi$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	01 f1                	add    %esi,%ecx$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	89 d3                	mov    %edx,%ebx$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	29 d1                	sub    %edx,%ecx$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	eb 22                	jmp    f01019a7 <boot_map_region+0xff>$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	6a 01                	push   $0x1$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	53                   	push   %ebx$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	e8 37 fe ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	89 30                	mov    %esi,(%eax)$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	8d 34 18             	lea    (%eax,%ebx,1),%esi$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	85 ff                	test   %edi,%edi$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	75 d4                	jne    f0101985 <boot_map_region+0xdd>$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01019b4	obj/kern/kernel.asm	/^f01019b4:	5b                   	pop    %ebx$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	5e                   	pop    %esi$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	5f                   	pop    %edi$/;"	l
f01019b7	obj/kern/kernel.asm	/^f01019b7:	5d                   	pop    %ebp$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	c3                   	ret    $/;"	l
f01019b9	obj/kern/kernel.asm	/^f01019b9 <page_lookup>:$/;"	l
f01019b9	obj/kern/kernel.asm	/^f01019b9:	55                   	push   %ebp$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	53                   	push   %ebx$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	6a 00                	push   $0x0$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	e8 fa fd ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	85 c0                	test   %eax,%eax$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	74 37                	je     f0101a0e <page_lookup+0x55>$/;"	l
f01019d7	obj/kern/kernel.asm	/^f01019d7:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	74 39                	je     f0101a15 <page_lookup+0x5c>$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	85 db                	test   %ebx,%ebx$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	74 02                	je     f01019e2 <page_lookup+0x29>$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	89 03                	mov    %eax,(%ebx)$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	8b 00                	mov    (%eax),%eax$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	3b 05 8c 8e 22 f0    	cmp    0xf0228e8c,%eax$/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	72 14                	jb     f0101a03 <page_lookup+0x4a>$/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01019f2	obj/kern/kernel.asm	/^f01019f2:	68 1c 78 10 f0       	push   $0xf010781c$/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7:	6a 53                	push   $0x53$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	e8 3d e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a03	obj/kern/kernel.asm	/^f0101a03:	8b 15 94 8e 22 f0    	mov    0xf0228e94,%edx$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	eb 0c                	jmp    f0101a1a <page_lookup+0x61>$/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	eb 05                	jmp    f0101a1a <page_lookup+0x61>$/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a1a	obj/kern/kernel.asm	/^f0101a1a:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	c9                   	leave  $/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	c3                   	ret    $/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f <tlb_invalidate>:$/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f:	55                   	push   %ebp$/;"	l
f0101a20	obj/kern/kernel.asm	/^f0101a20:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a22	obj/kern/kernel.asm	/^f0101a22:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	e8 80 4c 00 00       	call   f01066aa <cpunum>$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	83 b8 28 90 22 f0 00 	cmpl   $0x0,-0xfdd6fd8(%eax)$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	74 16                	je     f0101a4c <tlb_invalidate+0x2d>$/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	e8 6f 4c 00 00       	call   f01066aa <cpunum>$/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	75 06                	jne    f0101a52 <tlb_invalidate+0x33>$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	0f 01 38             	invlpg (%eax)$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	c9                   	leave  $/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	c3                   	ret    $/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54 <page_remove>:$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	55                   	push   %ebp$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	56                   	push   %esi$/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	53                   	push   %ebx$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	50                   	push   %eax$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	56                   	push   %esi$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	53                   	push   %ebx$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	e8 4c ff ff ff       	call   f01019b9 <page_lookup>$/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a70	obj/kern/kernel.asm	/^f0101a70:	85 c0                	test   %eax,%eax$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	74 1f                	je     f0101a93 <page_remove+0x3f>$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	50                   	push   %eax$/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	e8 26 fd ff ff       	call   f01017a3 <page_decref>$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	56                   	push   %esi$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	53                   	push   %ebx$/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	e8 8f ff ff ff       	call   f0101a1f <tlb_invalidate>$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	5b                   	pop    %ebx$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	5e                   	pop    %esi$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	5d                   	pop    %ebp$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	c3                   	ret    $/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a <page_insert>:$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	55                   	push   %ebp$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	57                   	push   %edi$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	56                   	push   %esi$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	53                   	push   %ebx$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	6a 01                	push   $0x1$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	57                   	push   %edi$/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	e8 16 fd ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	85 c0                	test   %eax,%eax$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	74 33                	je     f0101aee <page_insert+0x54>$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	89 c6                	mov    %eax,%esi$/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	57                   	push   %edi$/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	e8 86 ff ff ff       	call   f0101a54 <page_remove>$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	2b 1d 94 8e 22 f0    	sub    0xf0228e94,%ebx$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	09 c3                	or     %eax,%ebx$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101aec	obj/kern/kernel.asm	/^f0101aec:	eb 05                	jmp    f0101af3 <page_insert+0x59>$/;"	l
f0101aee	obj/kern/kernel.asm	/^f0101aee:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	5b                   	pop    %ebx$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	5e                   	pop    %esi$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	5f                   	pop    %edi$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	5d                   	pop    %ebp$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	c3                   	ret    $/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb <mmio_map_region>:$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	55                   	push   %ebp$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	89 e5                	mov    %esp,%ebp$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	56                   	push   %esi$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	53                   	push   %ebx$/;"	l
f0101b00	obj/kern/kernel.asm	/^f0101b00:	8b 35 04 33 12 f0    	mov    0xf0123304,%esi$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	76 17                	jbe    f0101b36 <mmio_map_region+0x3b>$/;"	l
f0101b1f	obj/kern/kernel.asm	/^f0101b1f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	68 3c 78 10 f0       	push   $0xf010783c$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	68 91 02 00 00       	push   $0x291$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101b31	obj/kern/kernel.asm	/^f0101b31:	e8 0a e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	6a 1a                	push   $0x1a$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	89 f2                	mov    %esi,%edx$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	e8 5c fd ff ff       	call   f01018a8 <boot_map_region>$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	01 1d 04 33 12 f0    	add    %ebx,0xf0123304$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	89 f0                	mov    %esi,%eax$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	5b                   	pop    %ebx$/;"	l
f0101b58	obj/kern/kernel.asm	/^f0101b58:	5e                   	pop    %esi$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	5d                   	pop    %ebp$/;"	l
f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	c3                   	ret    $/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b <mem_init>:$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	55                   	push   %ebp$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	57                   	push   %edi$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	56                   	push   %esi$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	53                   	push   %ebx$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101b64	obj/kern/kernel.asm	/^f0101b64:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	e8 be f6 ff ff       	call   f010122c <nvram_read>$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	e8 b2 f6 ff ff       	call   f010122c <nvram_read>$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	89 c6                	mov    %eax,%esi$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	e8 a6 f6 ff ff       	call   f010122c <nvram_read>$/;"	l
f0101b86	obj/kern/kernel.asm	/^f0101b86:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	85 c0                	test   %eax,%eax$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	74 07                	je     f0101b94 <mem_init+0x39>$/;"	l
f0101b8d	obj/kern/kernel.asm	/^f0101b8d:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	eb 0b                	jmp    f0101b9f <mem_init+0x44>$/;"	l
f0101b94	obj/kern/kernel.asm	/^f0101b94:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	85 f6                	test   %esi,%esi$/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	89 c2                	mov    %eax,%edx$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	89 15 8c 8e 22 f0    	mov    %edx,0xf0228e8c$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	89 da                	mov    %ebx,%edx$/;"	l
f0101bac	obj/kern/kernel.asm	/^f0101bac:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	89 15 44 82 22 f0    	mov    %edx,0xf0228244$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	89 c2                	mov    %eax,%edx$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	29 da                	sub    %ebx,%edx$/;"	l
f0101bb9	obj/kern/kernel.asm	/^f0101bb9:	52                   	push   %edx$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	53                   	push   %ebx$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	50                   	push   %eax$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	68 60 78 10 f0       	push   $0xf0107860$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	e8 95 23 00 00       	call   f0103f5b <cprintf>$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101bcb	obj/kern/kernel.asm	/^f0101bcb:	0f a2                	cpuid  $/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	c1 ea 03             	shr    $0x3,%edx$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	83 e2 01             	and    $0x1,%edx$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	88 15 88 8e 22 f0    	mov    %dl,0xf0228e88$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	e8 26 fa ff ff       	call   f0101604 <enable_PS_percpu>$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	e8 0c f6 ff ff       	call   f01011f4 <boot_alloc>$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	a3 90 8e 22 f0       	mov    %eax,0xf0228e90$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	6a 00                	push   $0x0$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	50                   	push   %eax$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	e8 8d 44 00 00       	call   f010608a <memset>$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	77 15                	ja     f0101c21 <mem_init+0xc6>$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	50                   	push   %eax$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	68 b3 00 00 00       	push   $0xb3$/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101c1c	obj/kern/kernel.asm	/^f0101c1c:	e8 1f e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	a1 8c 8e 22 f0       	mov    0xf0228e8c,%eax$/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	e8 b7 f5 ff ff       	call   f01011f4 <boot_alloc>$/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	a3 94 8e 22 f0       	mov    %eax,0xf0228e94$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	8b 0d 8c 8e 22 f0    	mov    0xf0228e8c,%ecx$/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	52                   	push   %edx$/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	6a 00                	push   $0x0$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	50                   	push   %eax$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	e8 2f 44 00 00       	call   f010608a <memset>$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	b8 00 40 0a 00       	mov    $0xa4000,%eax$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	e8 8f f5 ff ff       	call   f01011f4 <boot_alloc>$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	a3 48 82 22 f0       	mov    %eax,0xf0228248$/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	e8 b2 f9 ff ff       	call   f0101621 <page_init>$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	e8 89 f6 ff ff       	call   f0101302 <check_page_free_list>$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	83 3d 94 8e 22 f0 00 	cmpl   $0x0,0xf0228e94$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	75 17                	jne    f0101c9c <mem_init+0x141>$/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	68 3e 81 10 f0       	push   $0xf010813e$/;"	l
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	68 29 03 00 00       	push   $0x329$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	e8 a4 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	a1 40 82 22 f0       	mov    0xf0228240,%eax$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	eb 05                	jmp    f0101cad <mem_init+0x152>$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	8b 00                	mov    (%eax),%eax$/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	85 c0                	test   %eax,%eax$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	75 f7                	jne    f0101ca8 <mem_init+0x14d>$/;"	l
f0101cb1	obj/kern/kernel.asm	/^f0101cb1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	6a 00                	push   $0x0$/;"	l
f0101cb6	obj/kern/kernel.asm	/^f0101cb6:	e8 20 fa ff ff       	call   f01016db <page_alloc>$/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	89 c7                	mov    %eax,%edi$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	85 c0                	test   %eax,%eax$/;"	l
f0101cc2	obj/kern/kernel.asm	/^f0101cc2:	75 19                	jne    f0101cdd <mem_init+0x182>$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	68 59 81 10 f0       	push   $0xf0108159$/;"	l
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	68 31 03 00 00       	push   $0x331$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	e8 63 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ce0	obj/kern/kernel.asm	/^f0101ce0:	6a 00                	push   $0x0$/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	e8 f4 f9 ff ff       	call   f01016db <page_alloc>$/;"	l
f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	89 c6                	mov    %eax,%esi$/;"	l
f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	85 c0                	test   %eax,%eax$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	75 19                	jne    f0101d09 <mem_init+0x1ae>$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	68 6f 81 10 f0       	push   $0xf010816f$/;"	l
f0101cf5	obj/kern/kernel.asm	/^f0101cf5:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101cfa	obj/kern/kernel.asm	/^f0101cfa:	68 32 03 00 00       	push   $0x332$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	e8 37 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	6a 00                	push   $0x0$/;"	l
f0101d0e	obj/kern/kernel.asm	/^f0101d0e:	e8 c8 f9 ff ff       	call   f01016db <page_alloc>$/;"	l
f0101d13	obj/kern/kernel.asm	/^f0101d13:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	85 c0                	test   %eax,%eax$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	75 19                	jne    f0101d36 <mem_init+0x1db>$/;"	l
f0101d1d	obj/kern/kernel.asm	/^f0101d1d:	68 85 81 10 f0       	push   $0xf0108185$/;"	l
f0101d22	obj/kern/kernel.asm	/^f0101d22:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	68 33 03 00 00       	push   $0x333$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	e8 0a e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	39 f7                	cmp    %esi,%edi$/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	75 19                	jne    f0101d53 <mem_init+0x1f8>$/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	68 9b 81 10 f0       	push   $0xf010819b$/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	68 36 03 00 00       	push   $0x336$/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101d4e	obj/kern/kernel.asm	/^f0101d4e:	e8 ed e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d56	obj/kern/kernel.asm	/^f0101d56:	39 c6                	cmp    %eax,%esi$/;"	l
f0101d58	obj/kern/kernel.asm	/^f0101d58:	74 04                	je     f0101d5e <mem_init+0x203>$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	39 c7                	cmp    %eax,%edi$/;"	l
f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	75 19                	jne    f0101d77 <mem_init+0x21c>$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	68 9c 78 10 f0       	push   $0xf010789c$/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	68 37 03 00 00       	push   $0x337$/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101d72	obj/kern/kernel.asm	/^f0101d72:	e8 c9 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	8b 0d 94 8e 22 f0    	mov    0xf0228e94,%ecx$/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	8b 15 8c 8e 22 f0    	mov    0xf0228e8c,%edx$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	89 f8                	mov    %edi,%eax$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	29 c8                	sub    %ecx,%eax$/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	72 19                	jb     f0101dad <mem_init+0x252>$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	68 ad 81 10 f0       	push   $0xf01081ad$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101d9e	obj/kern/kernel.asm	/^f0101d9e:	68 38 03 00 00       	push   $0x338$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	e8 93 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	89 f0                	mov    %esi,%eax$/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	29 c8                	sub    %ecx,%eax$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	39 c2                	cmp    %eax,%edx$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	77 19                	ja     f0101dd4 <mem_init+0x279>$/;"	l
f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	68 ca 81 10 f0       	push   $0xf01081ca$/;"	l
f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	68 39 03 00 00       	push   $0x339$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	e8 6c e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101dd7	obj/kern/kernel.asm	/^f0101dd7:	29 c8                	sub    %ecx,%eax$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	39 c2                	cmp    %eax,%edx$/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	77 19                	ja     f0101dfc <mem_init+0x2a1>$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	68 e7 81 10 f0       	push   $0xf01081e7$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	68 3a 03 00 00       	push   $0x33a$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	e8 44 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	a1 40 82 22 f0       	mov    0xf0228240,%eax$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	c7 05 40 82 22 f0 00 	movl   $0x0,0xf0228240$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	00 00 00 $/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	6a 00                	push   $0x0$/;"	l
f0101e13	obj/kern/kernel.asm	/^f0101e13:	e8 c3 f8 ff ff       	call   f01016db <page_alloc>$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e1b	obj/kern/kernel.asm	/^f0101e1b:	85 c0                	test   %eax,%eax$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	74 19                	je     f0101e38 <mem_init+0x2dd>$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	68 04 82 10 f0       	push   $0xf0108204$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	68 41 03 00 00       	push   $0x341$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	e8 08 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	57                   	push   %edi$/;"	l
f0101e3c	obj/kern/kernel.asm	/^f0101e3c:	e8 0a f9 ff ff       	call   f010174b <page_free>$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	e8 02 f9 ff ff       	call   f010174b <page_free>$/;"	l
f0101e49	obj/kern/kernel.asm	/^f0101e49:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	e8 f7 f8 ff ff       	call   f010174b <page_free>$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	e8 7b f8 ff ff       	call   f01016db <page_alloc>$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	89 c6                	mov    %eax,%esi$/;"	l
f0101e62	obj/kern/kernel.asm	/^f0101e62:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	85 c0                	test   %eax,%eax$/;"	l
f0101e67	obj/kern/kernel.asm	/^f0101e67:	75 19                	jne    f0101e82 <mem_init+0x327>$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	68 59 81 10 f0       	push   $0xf0108159$/;"	l
f0101e6e	obj/kern/kernel.asm	/^f0101e6e:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	68 48 03 00 00       	push   $0x348$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	e8 be e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	6a 00                	push   $0x0$/;"	l
f0101e87	obj/kern/kernel.asm	/^f0101e87:	e8 4f f8 ff ff       	call   f01016db <page_alloc>$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	89 c7                	mov    %eax,%edi$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e91	obj/kern/kernel.asm	/^f0101e91:	85 c0                	test   %eax,%eax$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	75 19                	jne    f0101eae <mem_init+0x353>$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	68 6f 81 10 f0       	push   $0xf010816f$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	68 49 03 00 00       	push   $0x349$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	e8 92 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101eae	obj/kern/kernel.asm	/^f0101eae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	6a 00                	push   $0x0$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	e8 23 f8 ff ff       	call   f01016db <page_alloc>$/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	85 c0                	test   %eax,%eax$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	75 19                	jne    f0101edb <mem_init+0x380>$/;"	l
f0101ec2	obj/kern/kernel.asm	/^f0101ec2:	68 85 81 10 f0       	push   $0xf0108185$/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101ecc	obj/kern/kernel.asm	/^f0101ecc:	68 4a 03 00 00       	push   $0x34a$/;"	l
f0101ed1	obj/kern/kernel.asm	/^f0101ed1:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	e8 65 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101edb	obj/kern/kernel.asm	/^f0101edb:	39 fe                	cmp    %edi,%esi$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	75 19                	jne    f0101ef8 <mem_init+0x39d>$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	68 9b 81 10 f0       	push   $0xf010819b$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101ee9	obj/kern/kernel.asm	/^f0101ee9:	68 4c 03 00 00       	push   $0x34c$/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	e8 48 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ef8	obj/kern/kernel.asm	/^f0101ef8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	39 c7                	cmp    %eax,%edi$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	74 04                	je     f0101f03 <mem_init+0x3a8>$/;"	l
f0101eff	obj/kern/kernel.asm	/^f0101eff:	39 c6                	cmp    %eax,%esi$/;"	l
f0101f01	obj/kern/kernel.asm	/^f0101f01:	75 19                	jne    f0101f1c <mem_init+0x3c1>$/;"	l
f0101f03	obj/kern/kernel.asm	/^f0101f03:	68 9c 78 10 f0       	push   $0xf010789c$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	68 4d 03 00 00       	push   $0x34d$/;"	l
f0101f12	obj/kern/kernel.asm	/^f0101f12:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101f17	obj/kern/kernel.asm	/^f0101f17:	e8 24 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f1c	obj/kern/kernel.asm	/^f0101f1c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	6a 00                	push   $0x0$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	e8 b5 f7 ff ff       	call   f01016db <page_alloc>$/;"	l
f0101f26	obj/kern/kernel.asm	/^f0101f26:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	85 c0                	test   %eax,%eax$/;"	l
f0101f2b	obj/kern/kernel.asm	/^f0101f2b:	74 19                	je     f0101f46 <mem_init+0x3eb>$/;"	l
f0101f2d	obj/kern/kernel.asm	/^f0101f2d:	68 04 82 10 f0       	push   $0xf0108204$/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	68 4e 03 00 00       	push   $0x34e$/;"	l
f0101f3c	obj/kern/kernel.asm	/^f0101f3c:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	e8 fa e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	89 f0                	mov    %esi,%eax$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101f51	obj/kern/kernel.asm	/^f0101f51:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	89 c2                	mov    %eax,%edx$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101f59	obj/kern/kernel.asm	/^f0101f59:	3b 15 8c 8e 22 f0    	cmp    0xf0228e8c,%edx$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	72 12                	jb     f0101f73 <mem_init+0x418>$/;"	l
f0101f61	obj/kern/kernel.asm	/^f0101f61:	50                   	push   %eax$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	6a 5a                	push   $0x5a$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	e8 cd e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	6a 01                	push   $0x1$/;"	l
f0101f7d	obj/kern/kernel.asm	/^f0101f7d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	50                   	push   %eax$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	e8 02 41 00 00       	call   f010608a <memset>$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	e8 bb f7 ff ff       	call   f010174b <page_free>$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101f97	obj/kern/kernel.asm	/^f0101f97:	e8 3f f7 ff ff       	call   f01016db <page_alloc>$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	85 c0                	test   %eax,%eax$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	75 19                	jne    f0101fbc <mem_init+0x461>$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	68 13 82 10 f0       	push   $0xf0108213$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	68 53 03 00 00       	push   $0x353$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	e8 84 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	39 c6                	cmp    %eax,%esi$/;"	l
f0101fbe	obj/kern/kernel.asm	/^f0101fbe:	74 19                	je     f0101fd9 <mem_init+0x47e>$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	68 31 82 10 f0       	push   $0xf0108231$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	68 54 03 00 00       	push   $0x354$/;"	l
f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	e8 67 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	89 f0                	mov    %esi,%eax$/;"	l
f0101fdb	obj/kern/kernel.asm	/^f0101fdb:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101fe4	obj/kern/kernel.asm	/^f0101fe4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101fe7	obj/kern/kernel.asm	/^f0101fe7:	89 c2                	mov    %eax,%edx$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	3b 15 8c 8e 22 f0    	cmp    0xf0228e8c,%edx$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	72 12                	jb     f0102006 <mem_init+0x4ab>$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	50                   	push   %eax$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	6a 5a                	push   $0x5a$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0102001	obj/kern/kernel.asm	/^f0102001:	e8 3a e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0102015	obj/kern/kernel.asm	/^f0102015:	74 19                	je     f0102030 <mem_init+0x4d5>$/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	68 41 82 10 f0       	push   $0xf0108241$/;"	l
f010201c	obj/kern/kernel.asm	/^f010201c:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102021	obj/kern/kernel.asm	/^f0102021:	68 57 03 00 00       	push   $0x357$/;"	l
f0102026	obj/kern/kernel.asm	/^f0102026:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	e8 10 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102030	obj/kern/kernel.asm	/^f0102030:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	39 d0                	cmp    %edx,%eax$/;"	l
f0102035	obj/kern/kernel.asm	/^f0102035:	75 db                	jne    f0102012 <mem_init+0x4b7>$/;"	l
f0102037	obj/kern/kernel.asm	/^f0102037:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	a3 40 82 22 f0       	mov    %eax,0xf0228240$/;"	l
f010203f	obj/kern/kernel.asm	/^f010203f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	56                   	push   %esi$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	e8 03 f7 ff ff       	call   f010174b <page_free>$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	e8 fb f6 ff ff       	call   f010174b <page_free>$/;"	l
f0102050	obj/kern/kernel.asm	/^f0102050:	83 c4 04             	add    $0x4,%esp$/;"	l
f0102053	obj/kern/kernel.asm	/^f0102053:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102056	obj/kern/kernel.asm	/^f0102056:	e8 f0 f6 ff ff       	call   f010174b <page_free>$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	a1 40 82 22 f0       	mov    0xf0228240,%eax$/;"	l
f0102060	obj/kern/kernel.asm	/^f0102060:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	eb 05                	jmp    f010206a <mem_init+0x50f>$/;"	l
f0102065	obj/kern/kernel.asm	/^f0102065:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	8b 00                	mov    (%eax),%eax$/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	85 c0                	test   %eax,%eax$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	75 f7                	jne    f0102065 <mem_init+0x50a>$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	85 db                	test   %ebx,%ebx$/;"	l
f0102070	obj/kern/kernel.asm	/^f0102070:	74 19                	je     f010208b <mem_init+0x530>$/;"	l
f0102072	obj/kern/kernel.asm	/^f0102072:	68 4b 82 10 f0       	push   $0xf010824b$/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010207c	obj/kern/kernel.asm	/^f010207c:	68 64 03 00 00       	push   $0x364$/;"	l
f0102081	obj/kern/kernel.asm	/^f0102081:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	e8 b5 df ff ff       	call   f0100040 <_panic>$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	68 bc 78 10 f0       	push   $0xf01078bc$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	e8 c3 1e 00 00       	call   f0103f5b <cprintf>$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010209f	obj/kern/kernel.asm	/^f010209f:	e8 37 f6 ff ff       	call   f01016db <page_alloc>$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01020a7	obj/kern/kernel.asm	/^f01020a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	85 c0                	test   %eax,%eax$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	75 19                	jne    f01020c7 <mem_init+0x56c>$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	68 59 81 10 f0       	push   $0xf0108159$/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	68 ce 03 00 00       	push   $0x3ce$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	e8 79 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	6a 00                	push   $0x0$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	e8 0a f6 ff ff       	call   f01016db <page_alloc>$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	89 c3                	mov    %eax,%ebx$/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	85 c0                	test   %eax,%eax$/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	75 19                	jne    f01020f3 <mem_init+0x598>$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	68 6f 81 10 f0       	push   $0xf010816f$/;"	l
f01020df	obj/kern/kernel.asm	/^f01020df:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01020e4	obj/kern/kernel.asm	/^f01020e4:	68 cf 03 00 00       	push   $0x3cf$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	e8 4d df ff ff       	call   f0100040 <_panic>$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	6a 00                	push   $0x0$/;"	l
f01020f8	obj/kern/kernel.asm	/^f01020f8:	e8 de f5 ff ff       	call   f01016db <page_alloc>$/;"	l
f01020fd	obj/kern/kernel.asm	/^f01020fd:	89 c6                	mov    %eax,%esi$/;"	l
f01020ff	obj/kern/kernel.asm	/^f01020ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	85 c0                	test   %eax,%eax$/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	75 19                	jne    f010211f <mem_init+0x5c4>$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	68 85 81 10 f0       	push   $0xf0108185$/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	68 d0 03 00 00       	push   $0x3d0$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	e8 21 df ff ff       	call   f0100040 <_panic>$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	75 19                	jne    f010213d <mem_init+0x5e2>$/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124:	68 9b 81 10 f0       	push   $0xf010819b$/;"	l
f0102129	obj/kern/kernel.asm	/^f0102129:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	68 d3 03 00 00       	push   $0x3d3$/;"	l
f0102133	obj/kern/kernel.asm	/^f0102133:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	e8 03 df ff ff       	call   f0100040 <_panic>$/;"	l
f010213d	obj/kern/kernel.asm	/^f010213d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	74 05                	je     f0102146 <mem_init+0x5eb>$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	75 19                	jne    f010215f <mem_init+0x604>$/;"	l
f0102146	obj/kern/kernel.asm	/^f0102146:	68 9c 78 10 f0       	push   $0xf010789c$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	68 d4 03 00 00       	push   $0x3d4$/;"	l
f0102155	obj/kern/kernel.asm	/^f0102155:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	e8 e1 de ff ff       	call   f0100040 <_panic>$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	a1 40 82 22 f0       	mov    0xf0228240,%eax$/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	c7 05 40 82 22 f0 00 	movl   $0x0,0xf0228240$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	00 00 00 $/;"	l
f0102171	obj/kern/kernel.asm	/^f0102171:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102174	obj/kern/kernel.asm	/^f0102174:	6a 00                	push   $0x0$/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	e8 60 f5 ff ff       	call   f01016db <page_alloc>$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	85 c0                	test   %eax,%eax$/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	74 19                	je     f010219b <mem_init+0x640>$/;"	l
f0102182	obj/kern/kernel.asm	/^f0102182:	68 04 82 10 f0       	push   $0xf0108204$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	68 db 03 00 00       	push   $0x3db$/;"	l
f0102191	obj/kern/kernel.asm	/^f0102191:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	e8 a5 de ff ff       	call   f0100040 <_panic>$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010219e	obj/kern/kernel.asm	/^f010219e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	50                   	push   %eax$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	6a 00                	push   $0x0$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	e8 0a f8 ff ff       	call   f01019b9 <page_lookup>$/;"	l
f01021af	obj/kern/kernel.asm	/^f01021af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	85 c0                	test   %eax,%eax$/;"	l
f01021b4	obj/kern/kernel.asm	/^f01021b4:	74 19                	je     f01021cf <mem_init+0x674>$/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	68 dc 78 10 f0       	push   $0xf01078dc$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01021c0	obj/kern/kernel.asm	/^f01021c0:	68 de 03 00 00       	push   $0x3de$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01021ca	obj/kern/kernel.asm	/^f01021ca:	e8 71 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	6a 02                	push   $0x2$/;"	l
f01021d1	obj/kern/kernel.asm	/^f01021d1:	6a 00                	push   $0x0$/;"	l
f01021d3	obj/kern/kernel.asm	/^f01021d3:	53                   	push   %ebx$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	e8 bb f8 ff ff       	call   f0101a9a <page_insert>$/;"	l
f01021df	obj/kern/kernel.asm	/^f01021df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	85 c0                	test   %eax,%eax$/;"	l
f01021e4	obj/kern/kernel.asm	/^f01021e4:	78 19                	js     f01021ff <mem_init+0x6a4>$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	68 14 79 10 f0       	push   $0xf0107914$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	68 e1 03 00 00       	push   $0x3e1$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	e8 41 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102202	obj/kern/kernel.asm	/^f0102202:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	e8 41 f5 ff ff       	call   f010174b <page_free>$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	6a 02                	push   $0x2$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	6a 00                	push   $0x0$/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	53                   	push   %ebx$/;"	l
f010220f	obj/kern/kernel.asm	/^f010220f:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	e8 80 f8 ff ff       	call   f0101a9a <page_insert>$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	85 c0                	test   %eax,%eax$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	74 19                	je     f010223a <mem_init+0x6df>$/;"	l
f0102221	obj/kern/kernel.asm	/^f0102221:	68 44 79 10 f0       	push   $0xf0107944$/;"	l
f0102226	obj/kern/kernel.asm	/^f0102226:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010222b	obj/kern/kernel.asm	/^f010222b:	68 e5 03 00 00       	push   $0x3e5$/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102235	obj/kern/kernel.asm	/^f0102235:	e8 06 de ff ff       	call   f0100040 <_panic>$/;"	l
f010223a	obj/kern/kernel.asm	/^f010223a:	8b 3d 90 8e 22 f0    	mov    0xf0228e90,%edi$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	a1 94 8e 22 f0       	mov    0xf0228e94,%eax$/;"	l
f0102245	obj/kern/kernel.asm	/^f0102245:	89 c1                	mov    %eax,%ecx$/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	8b 17                	mov    (%edi),%edx$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	29 c8                	sub    %ecx,%eax$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010225a	obj/kern/kernel.asm	/^f010225a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	39 c2                	cmp    %eax,%edx$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	74 19                	je     f010227a <mem_init+0x71f>$/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	68 74 79 10 f0       	push   $0xf0107974$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010226b	obj/kern/kernel.asm	/^f010226b:	68 e6 03 00 00       	push   $0x3e6$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	e8 c6 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	89 f8                	mov    %edi,%eax$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	e8 06 f0 ff ff       	call   f010128c <check_va2pa>$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	89 da                	mov    %ebx,%edx$/;"	l
f0102288	obj/kern/kernel.asm	/^f0102288:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	39 d0                	cmp    %edx,%eax$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	74 19                	je     f01022ae <mem_init+0x753>$/;"	l
f0102295	obj/kern/kernel.asm	/^f0102295:	68 9c 79 10 f0       	push   $0xf010799c$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010229f	obj/kern/kernel.asm	/^f010229f:	68 e7 03 00 00       	push   $0x3e7$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	e8 92 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	74 19                	je     f01022ce <mem_init+0x773>$/;"	l
f01022b5	obj/kern/kernel.asm	/^f01022b5:	68 56 82 10 f0       	push   $0xf0108256$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01022bf	obj/kern/kernel.asm	/^f01022bf:	68 e8 03 00 00       	push   $0x3e8$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01022c9	obj/kern/kernel.asm	/^f01022c9:	e8 72 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022ce	obj/kern/kernel.asm	/^f01022ce:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01022d1	obj/kern/kernel.asm	/^f01022d1:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f01022d6	obj/kern/kernel.asm	/^f01022d6:	74 19                	je     f01022f1 <mem_init+0x796>$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	68 67 82 10 f0       	push   $0xf0108267$/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	68 e9 03 00 00       	push   $0x3e9$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01022ec	obj/kern/kernel.asm	/^f01022ec:	e8 4f dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022f1	obj/kern/kernel.asm	/^f01022f1:	6a 02                	push   $0x2$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	68 00 10 00 00       	push   $0x1000$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	56                   	push   %esi$/;"	l
f01022f9	obj/kern/kernel.asm	/^f01022f9:	57                   	push   %edi$/;"	l
f01022fa	obj/kern/kernel.asm	/^f01022fa:	e8 9b f7 ff ff       	call   f0101a9a <page_insert>$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	85 c0                	test   %eax,%eax$/;"	l
f0102304	obj/kern/kernel.asm	/^f0102304:	74 19                	je     f010231f <mem_init+0x7c4>$/;"	l
f0102306	obj/kern/kernel.asm	/^f0102306:	68 cc 79 10 f0       	push   $0xf01079cc$/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102310	obj/kern/kernel.asm	/^f0102310:	68 ec 03 00 00       	push   $0x3ec$/;"	l
f0102315	obj/kern/kernel.asm	/^f0102315:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	e8 21 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102324	obj/kern/kernel.asm	/^f0102324:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	e8 5e ef ff ff       	call   f010128c <check_va2pa>$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	89 f2                	mov    %esi,%edx$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	2b 15 94 8e 22 f0    	sub    0xf0228e94,%edx$/;"	l
f0102336	obj/kern/kernel.asm	/^f0102336:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	39 d0                	cmp    %edx,%eax$/;"	l
f010233e	obj/kern/kernel.asm	/^f010233e:	74 19                	je     f0102359 <mem_init+0x7fe>$/;"	l
f0102340	obj/kern/kernel.asm	/^f0102340:	68 08 7a 10 f0       	push   $0xf0107a08$/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010234a	obj/kern/kernel.asm	/^f010234a:	68 ed 03 00 00       	push   $0x3ed$/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	e8 e7 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	74 19                	je     f0102379 <mem_init+0x81e>$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	68 78 82 10 f0       	push   $0xf0108278$/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010236a	obj/kern/kernel.asm	/^f010236a:	68 ee 03 00 00       	push   $0x3ee$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	e8 c7 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010237c	obj/kern/kernel.asm	/^f010237c:	6a 00                	push   $0x0$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	e8 58 f3 ff ff       	call   f01016db <page_alloc>$/;"	l
f0102383	obj/kern/kernel.asm	/^f0102383:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	85 c0                	test   %eax,%eax$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	74 19                	je     f01023a3 <mem_init+0x848>$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	68 04 82 10 f0       	push   $0xf0108204$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	68 f1 03 00 00       	push   $0x3f1$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	e8 9d dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	6a 02                	push   $0x2$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	68 00 10 00 00       	push   $0x1000$/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	56                   	push   %esi$/;"	l
f01023ab	obj/kern/kernel.asm	/^f01023ab:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	e8 e4 f6 ff ff       	call   f0101a9a <page_insert>$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	85 c0                	test   %eax,%eax$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	74 19                	je     f01023d6 <mem_init+0x87b>$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	68 cc 79 10 f0       	push   $0xf01079cc$/;"	l
f01023c2	obj/kern/kernel.asm	/^f01023c2:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	68 f4 03 00 00       	push   $0x3f4$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01023d1	obj/kern/kernel.asm	/^f01023d1:	e8 6a dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	e8 a7 ee ff ff       	call   f010128c <check_va2pa>$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	89 f2                	mov    %esi,%edx$/;"	l
f01023e7	obj/kern/kernel.asm	/^f01023e7:	2b 15 94 8e 22 f0    	sub    0xf0228e94,%edx$/;"	l
f01023ed	obj/kern/kernel.asm	/^f01023ed:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01023f0	obj/kern/kernel.asm	/^f01023f0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01023f3	obj/kern/kernel.asm	/^f01023f3:	39 d0                	cmp    %edx,%eax$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	74 19                	je     f0102410 <mem_init+0x8b5>$/;"	l
f01023f7	obj/kern/kernel.asm	/^f01023f7:	68 08 7a 10 f0       	push   $0xf0107a08$/;"	l
f01023fc	obj/kern/kernel.asm	/^f01023fc:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	68 f5 03 00 00       	push   $0x3f5$/;"	l
f0102406	obj/kern/kernel.asm	/^f0102406:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	e8 30 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	74 19                	je     f0102430 <mem_init+0x8d5>$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	68 78 82 10 f0       	push   $0xf0108278$/;"	l
f010241c	obj/kern/kernel.asm	/^f010241c:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102421	obj/kern/kernel.asm	/^f0102421:	68 f6 03 00 00       	push   $0x3f6$/;"	l
f0102426	obj/kern/kernel.asm	/^f0102426:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	e8 10 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	6a 00                	push   $0x0$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	e8 a1 f2 ff ff       	call   f01016db <page_alloc>$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010243d	obj/kern/kernel.asm	/^f010243d:	85 c0                	test   %eax,%eax$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	74 19                	je     f010245a <mem_init+0x8ff>$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	68 04 82 10 f0       	push   $0xf0108204$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	68 fa 03 00 00       	push   $0x3fa$/;"	l
f0102450	obj/kern/kernel.asm	/^f0102450:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102455	obj/kern/kernel.asm	/^f0102455:	e8 e6 db ff ff       	call   f0100040 <_panic>$/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	8b 15 90 8e 22 f0    	mov    0xf0228e90,%edx$/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	8b 02                	mov    (%edx),%eax$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	89 c1                	mov    %eax,%ecx$/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	3b 0d 8c 8e 22 f0    	cmp    0xf0228e8c,%ecx$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	72 15                	jb     f0102489 <mem_init+0x92e>$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	50                   	push   %eax$/;"	l
f0102475	obj/kern/kernel.asm	/^f0102475:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f010247a	obj/kern/kernel.asm	/^f010247a:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	e8 b7 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102489	obj/kern/kernel.asm	/^f0102489:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	6a 00                	push   $0x0$/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	68 00 10 00 00       	push   $0x1000$/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b:	52                   	push   %edx$/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	e8 29 f3 ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f01024a7	obj/kern/kernel.asm	/^f01024a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	39 d0                	cmp    %edx,%eax$/;"	l
f01024ac	obj/kern/kernel.asm	/^f01024ac:	74 19                	je     f01024c7 <mem_init+0x96c>$/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	68 38 7a 10 f0       	push   $0xf0107a38$/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	68 fe 03 00 00       	push   $0x3fe$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	e8 79 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	6a 06                	push   $0x6$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	68 00 10 00 00       	push   $0x1000$/;"	l
f01024ce	obj/kern/kernel.asm	/^f01024ce:	56                   	push   %esi$/;"	l
f01024cf	obj/kern/kernel.asm	/^f01024cf:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	e8 c0 f5 ff ff       	call   f0101a9a <page_insert>$/;"	l
f01024da	obj/kern/kernel.asm	/^f01024da:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	85 c0                	test   %eax,%eax$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	74 19                	je     f01024fa <mem_init+0x99f>$/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	68 78 7a 10 f0       	push   $0xf0107a78$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	68 01 04 00 00       	push   $0x401$/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	e8 46 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024fa	obj/kern/kernel.asm	/^f01024fa:	8b 3d 90 8e 22 f0    	mov    0xf0228e90,%edi$/;"	l
f0102500	obj/kern/kernel.asm	/^f0102500:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	89 f8                	mov    %edi,%eax$/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	e8 80 ed ff ff       	call   f010128c <check_va2pa>$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	89 f2                	mov    %esi,%edx$/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	2b 15 94 8e 22 f0    	sub    0xf0228e94,%edx$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010251a	obj/kern/kernel.asm	/^f010251a:	39 d0                	cmp    %edx,%eax$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	74 19                	je     f0102537 <mem_init+0x9dc>$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	68 08 7a 10 f0       	push   $0xf0107a08$/;"	l
f0102523	obj/kern/kernel.asm	/^f0102523:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	68 02 04 00 00       	push   $0x402$/;"	l
f010252d	obj/kern/kernel.asm	/^f010252d:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	e8 09 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	74 19                	je     f0102557 <mem_init+0x9fc>$/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	68 78 82 10 f0       	push   $0xf0108278$/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102548	obj/kern/kernel.asm	/^f0102548:	68 03 04 00 00       	push   $0x403$/;"	l
f010254d	obj/kern/kernel.asm	/^f010254d:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102552	obj/kern/kernel.asm	/^f0102552:	e8 e9 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102557	obj/kern/kernel.asm	/^f0102557:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	6a 00                	push   $0x0$/;"	l
f010255c	obj/kern/kernel.asm	/^f010255c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	57                   	push   %edi$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	e8 63 f2 ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	83 c4 10             	add    $0x10,%esp$/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	75 19                	jne    f0102588 <mem_init+0xa2d>$/;"	l
f010256f	obj/kern/kernel.asm	/^f010256f:	68 b8 7a 10 f0       	push   $0xf0107ab8$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102579	obj/kern/kernel.asm	/^f0102579:	68 04 04 00 00       	push   $0x404$/;"	l
f010257e	obj/kern/kernel.asm	/^f010257e:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	e8 b8 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f010258d	obj/kern/kernel.asm	/^f010258d:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	75 19                	jne    f01025ab <mem_init+0xa50>$/;"	l
f0102592	obj/kern/kernel.asm	/^f0102592:	68 89 82 10 f0       	push   $0xf0108289$/;"	l
f0102597	obj/kern/kernel.asm	/^f0102597:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010259c	obj/kern/kernel.asm	/^f010259c:	68 05 04 00 00       	push   $0x405$/;"	l
f01025a1	obj/kern/kernel.asm	/^f01025a1:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01025a6	obj/kern/kernel.asm	/^f01025a6:	e8 95 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025ab	obj/kern/kernel.asm	/^f01025ab:	6a 02                	push   $0x2$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	68 00 10 00 00       	push   $0x1000$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	56                   	push   %esi$/;"	l
f01025b3	obj/kern/kernel.asm	/^f01025b3:	50                   	push   %eax$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	e8 e1 f4 ff ff       	call   f0101a9a <page_insert>$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	85 c0                	test   %eax,%eax$/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	74 19                	je     f01025d9 <mem_init+0xa7e>$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	68 cc 79 10 f0       	push   $0xf01079cc$/;"	l
f01025c5	obj/kern/kernel.asm	/^f01025c5:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01025ca	obj/kern/kernel.asm	/^f01025ca:	68 08 04 00 00       	push   $0x408$/;"	l
f01025cf	obj/kern/kernel.asm	/^f01025cf:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01025d4	obj/kern/kernel.asm	/^f01025d4:	e8 67 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01025dc	obj/kern/kernel.asm	/^f01025dc:	6a 00                	push   $0x0$/;"	l
f01025de	obj/kern/kernel.asm	/^f01025de:	68 00 10 00 00       	push   $0x1000$/;"	l
f01025e3	obj/kern/kernel.asm	/^f01025e3:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	e8 dc f1 ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f01025f4	obj/kern/kernel.asm	/^f01025f4:	75 19                	jne    f010260f <mem_init+0xab4>$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	68 ec 7a 10 f0       	push   $0xf0107aec$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102600	obj/kern/kernel.asm	/^f0102600:	68 09 04 00 00       	push   $0x409$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	e8 31 da ff ff       	call   f0100040 <_panic>$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	6a 00                	push   $0x0$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	e8 a6 f1 ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	74 19                	je     f0102645 <mem_init+0xaea>$/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	68 20 7b 10 f0       	push   $0xf0107b20$/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102636	obj/kern/kernel.asm	/^f0102636:	68 0a 04 00 00       	push   $0x40a$/;"	l
f010263b	obj/kern/kernel.asm	/^f010263b:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102640	obj/kern/kernel.asm	/^f0102640:	e8 fb d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	6a 02                	push   $0x2$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	68 00 00 40 00       	push   $0x400000$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010264f	obj/kern/kernel.asm	/^f010264f:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0102655	obj/kern/kernel.asm	/^f0102655:	e8 40 f4 ff ff       	call   f0101a9a <page_insert>$/;"	l
f010265a	obj/kern/kernel.asm	/^f010265a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	85 c0                	test   %eax,%eax$/;"	l
f010265f	obj/kern/kernel.asm	/^f010265f:	78 19                	js     f010267a <mem_init+0xb1f>$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	68 58 7b 10 f0       	push   $0xf0107b58$/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	68 0d 04 00 00       	push   $0x40d$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	e8 c6 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	6a 02                	push   $0x2$/;"	l
f010267c	obj/kern/kernel.asm	/^f010267c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	53                   	push   %ebx$/;"	l
f0102682	obj/kern/kernel.asm	/^f0102682:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	e8 0d f4 ff ff       	call   f0101a9a <page_insert>$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102690	obj/kern/kernel.asm	/^f0102690:	85 c0                	test   %eax,%eax$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	74 19                	je     f01026ad <mem_init+0xb52>$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	68 90 7b 10 f0       	push   $0xf0107b90$/;"	l
f0102699	obj/kern/kernel.asm	/^f0102699:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010269e	obj/kern/kernel.asm	/^f010269e:	68 10 04 00 00       	push   $0x410$/;"	l
f01026a3	obj/kern/kernel.asm	/^f01026a3:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	e8 93 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026ad	obj/kern/kernel.asm	/^f01026ad:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	6a 00                	push   $0x0$/;"	l
f01026b2	obj/kern/kernel.asm	/^f01026b2:	68 00 10 00 00       	push   $0x1000$/;"	l
f01026b7	obj/kern/kernel.asm	/^f01026b7:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f01026bd	obj/kern/kernel.asm	/^f01026bd:	e8 08 f1 ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f01026c2	obj/kern/kernel.asm	/^f01026c2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	74 19                	je     f01026e3 <mem_init+0xb88>$/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	68 20 7b 10 f0       	push   $0xf0107b20$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	68 11 04 00 00       	push   $0x411$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	e8 5d d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026e3	obj/kern/kernel.asm	/^f01026e3:	8b 3d 90 8e 22 f0    	mov    0xf0228e90,%edi$/;"	l
f01026e9	obj/kern/kernel.asm	/^f01026e9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01026ee	obj/kern/kernel.asm	/^f01026ee:	89 f8                	mov    %edi,%eax$/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	e8 97 eb ff ff       	call   f010128c <check_va2pa>$/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	89 c1                	mov    %eax,%ecx$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01026fa	obj/kern/kernel.asm	/^f01026fa:	89 d8                	mov    %ebx,%eax$/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102708	obj/kern/kernel.asm	/^f0102708:	39 c1                	cmp    %eax,%ecx$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	74 19                	je     f0102725 <mem_init+0xbca>$/;"	l
f010270c	obj/kern/kernel.asm	/^f010270c:	68 cc 7b 10 f0       	push   $0xf0107bcc$/;"	l
f0102711	obj/kern/kernel.asm	/^f0102711:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	68 14 04 00 00       	push   $0x414$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	e8 1b d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	89 f8                	mov    %edi,%eax$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	e8 5b eb ff ff       	call   f010128c <check_va2pa>$/;"	l
f0102731	obj/kern/kernel.asm	/^f0102731:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	74 19                	je     f010274f <mem_init+0xbf4>$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	68 f8 7b 10 f0       	push   $0xf0107bf8$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	68 15 04 00 00       	push   $0x415$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	e8 f1 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010274f	obj/kern/kernel.asm	/^f010274f:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0102754	obj/kern/kernel.asm	/^f0102754:	74 19                	je     f010276f <mem_init+0xc14>$/;"	l
f0102756	obj/kern/kernel.asm	/^f0102756:	68 9f 82 10 f0       	push   $0xf010829f$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102760	obj/kern/kernel.asm	/^f0102760:	68 17 04 00 00       	push   $0x417$/;"	l
f0102765	obj/kern/kernel.asm	/^f0102765:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010276a	obj/kern/kernel.asm	/^f010276a:	e8 d1 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	74 19                	je     f010278f <mem_init+0xc34>$/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	68 b0 82 10 f0       	push   $0xf01082b0$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	68 18 04 00 00       	push   $0x418$/;"	l
f0102785	obj/kern/kernel.asm	/^f0102785:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010278a	obj/kern/kernel.asm	/^f010278a:	e8 b1 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	6a 00                	push   $0x0$/;"	l
f0102794	obj/kern/kernel.asm	/^f0102794:	e8 42 ef ff ff       	call   f01016db <page_alloc>$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	83 c4 10             	add    $0x10,%esp$/;"	l
f010279c	obj/kern/kernel.asm	/^f010279c:	85 c0                	test   %eax,%eax$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	74 04                	je     f01027a4 <mem_init+0xc49>$/;"	l
f01027a0	obj/kern/kernel.asm	/^f01027a0:	39 c6                	cmp    %eax,%esi$/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	74 19                	je     f01027bd <mem_init+0xc62>$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	68 28 7c 10 f0       	push   $0xf0107c28$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01027ae	obj/kern/kernel.asm	/^f01027ae:	68 1b 04 00 00       	push   $0x41b$/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	e8 83 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027bd	obj/kern/kernel.asm	/^f01027bd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01027c0	obj/kern/kernel.asm	/^f01027c0:	6a 00                	push   $0x0$/;"	l
f01027c2	obj/kern/kernel.asm	/^f01027c2:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f01027c8	obj/kern/kernel.asm	/^f01027c8:	e8 87 f2 ff ff       	call   f0101a54 <page_remove>$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	8b 3d 90 8e 22 f0    	mov    0xf0228e90,%edi$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	89 f8                	mov    %edi,%eax$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	e8 ad ea ff ff       	call   f010128c <check_va2pa>$/;"	l
f01027df	obj/kern/kernel.asm	/^f01027df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	74 19                	je     f0102800 <mem_init+0xca5>$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	68 4c 7c 10 f0       	push   $0xf0107c4c$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	68 1f 04 00 00       	push   $0x41f$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	e8 40 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102800	obj/kern/kernel.asm	/^f0102800:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102805	obj/kern/kernel.asm	/^f0102805:	89 f8                	mov    %edi,%eax$/;"	l
f0102807	obj/kern/kernel.asm	/^f0102807:	e8 80 ea ff ff       	call   f010128c <check_va2pa>$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	89 da                	mov    %ebx,%edx$/;"	l
f010280e	obj/kern/kernel.asm	/^f010280e:	2b 15 94 8e 22 f0    	sub    0xf0228e94,%edx$/;"	l
f0102814	obj/kern/kernel.asm	/^f0102814:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	39 d0                	cmp    %edx,%eax$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	74 19                	je     f0102837 <mem_init+0xcdc>$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	68 f8 7b 10 f0       	push   $0xf0107bf8$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	68 20 04 00 00       	push   $0x420$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	e8 09 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	74 19                	je     f0102857 <mem_init+0xcfc>$/;"	l
f010283e	obj/kern/kernel.asm	/^f010283e:	68 56 82 10 f0       	push   $0xf0108256$/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102848	obj/kern/kernel.asm	/^f0102848:	68 21 04 00 00       	push   $0x421$/;"	l
f010284d	obj/kern/kernel.asm	/^f010284d:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	e8 e9 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102857	obj/kern/kernel.asm	/^f0102857:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010285c	obj/kern/kernel.asm	/^f010285c:	74 19                	je     f0102877 <mem_init+0xd1c>$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	68 b0 82 10 f0       	push   $0xf01082b0$/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102868	obj/kern/kernel.asm	/^f0102868:	68 22 04 00 00       	push   $0x422$/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	e8 c9 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	6a 00                	push   $0x0$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	68 00 10 00 00       	push   $0x1000$/;"	l
f010287e	obj/kern/kernel.asm	/^f010287e:	53                   	push   %ebx$/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	57                   	push   %edi$/;"	l
f0102880	obj/kern/kernel.asm	/^f0102880:	e8 15 f2 ff ff       	call   f0101a9a <page_insert>$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102888	obj/kern/kernel.asm	/^f0102888:	85 c0                	test   %eax,%eax$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	74 19                	je     f01028a5 <mem_init+0xd4a>$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	68 70 7c 10 f0       	push   $0xf0107c70$/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	68 25 04 00 00       	push   $0x425$/;"	l
f010289b	obj/kern/kernel.asm	/^f010289b:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01028a0	obj/kern/kernel.asm	/^f01028a0:	e8 9b d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028a5	obj/kern/kernel.asm	/^f01028a5:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01028aa	obj/kern/kernel.asm	/^f01028aa:	75 19                	jne    f01028c5 <mem_init+0xd6a>$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	68 c1 82 10 f0       	push   $0xf01082c1$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01028b6	obj/kern/kernel.asm	/^f01028b6:	68 26 04 00 00       	push   $0x426$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	e8 7b d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028c5	obj/kern/kernel.asm	/^f01028c5:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	74 19                	je     f01028e3 <mem_init+0xd88>$/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	68 cd 82 10 f0       	push   $0xf01082cd$/;"	l
f01028cf	obj/kern/kernel.asm	/^f01028cf:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	68 27 04 00 00       	push   $0x427$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	e8 5d d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01028e6	obj/kern/kernel.asm	/^f01028e6:	68 00 10 00 00       	push   $0x1000$/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	e8 5e f1 ff ff       	call   f0101a54 <page_remove>$/;"	l
f01028f6	obj/kern/kernel.asm	/^f01028f6:	8b 3d 90 8e 22 f0    	mov    0xf0228e90,%edi$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	89 f8                	mov    %edi,%eax$/;"	l
f0102903	obj/kern/kernel.asm	/^f0102903:	e8 84 e9 ff ff       	call   f010128c <check_va2pa>$/;"	l
f0102908	obj/kern/kernel.asm	/^f0102908:	83 c4 10             	add    $0x10,%esp$/;"	l
f010290b	obj/kern/kernel.asm	/^f010290b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	74 19                	je     f0102929 <mem_init+0xdce>$/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	68 4c 7c 10 f0       	push   $0xf0107c4c$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010291a	obj/kern/kernel.asm	/^f010291a:	68 2b 04 00 00       	push   $0x42b$/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	e8 17 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102929	obj/kern/kernel.asm	/^f0102929:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	89 f8                	mov    %edi,%eax$/;"	l
f0102930	obj/kern/kernel.asm	/^f0102930:	e8 57 e9 ff ff       	call   f010128c <check_va2pa>$/;"	l
f0102935	obj/kern/kernel.asm	/^f0102935:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	74 19                	je     f0102953 <mem_init+0xdf8>$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	68 a8 7c 10 f0       	push   $0xf0107ca8$/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	68 2c 04 00 00       	push   $0x42c$/;"	l
f0102949	obj/kern/kernel.asm	/^f0102949:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	e8 ed d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102953	obj/kern/kernel.asm	/^f0102953:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102958	obj/kern/kernel.asm	/^f0102958:	74 19                	je     f0102973 <mem_init+0xe18>$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	68 e2 82 10 f0       	push   $0xf01082e2$/;"	l
f010295f	obj/kern/kernel.asm	/^f010295f:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	68 2d 04 00 00       	push   $0x42d$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010296e	obj/kern/kernel.asm	/^f010296e:	e8 cd d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102973	obj/kern/kernel.asm	/^f0102973:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	74 19                	je     f0102993 <mem_init+0xe38>$/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	68 b0 82 10 f0       	push   $0xf01082b0$/;"	l
f010297f	obj/kern/kernel.asm	/^f010297f:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102984	obj/kern/kernel.asm	/^f0102984:	68 2e 04 00 00       	push   $0x42e$/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010298e	obj/kern/kernel.asm	/^f010298e:	e8 ad d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102996	obj/kern/kernel.asm	/^f0102996:	6a 00                	push   $0x0$/;"	l
f0102998	obj/kern/kernel.asm	/^f0102998:	e8 3e ed ff ff       	call   f01016db <page_alloc>$/;"	l
f010299d	obj/kern/kernel.asm	/^f010299d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01029a0	obj/kern/kernel.asm	/^f01029a0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	75 04                	jne    f01029a8 <mem_init+0xe4d>$/;"	l
f01029a4	obj/kern/kernel.asm	/^f01029a4:	85 c0                	test   %eax,%eax$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	75 19                	jne    f01029c1 <mem_init+0xe66>$/;"	l
f01029a8	obj/kern/kernel.asm	/^f01029a8:	68 d0 7c 10 f0       	push   $0xf0107cd0$/;"	l
f01029ad	obj/kern/kernel.asm	/^f01029ad:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01029b2	obj/kern/kernel.asm	/^f01029b2:	68 31 04 00 00       	push   $0x431$/;"	l
f01029b7	obj/kern/kernel.asm	/^f01029b7:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01029bc	obj/kern/kernel.asm	/^f01029bc:	e8 7f d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01029c4	obj/kern/kernel.asm	/^f01029c4:	6a 00                	push   $0x0$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	e8 10 ed ff ff       	call   f01016db <page_alloc>$/;"	l
f01029cb	obj/kern/kernel.asm	/^f01029cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	85 c0                	test   %eax,%eax$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	74 19                	je     f01029eb <mem_init+0xe90>$/;"	l
f01029d2	obj/kern/kernel.asm	/^f01029d2:	68 04 82 10 f0       	push   $0xf0108204$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	68 34 04 00 00       	push   $0x434$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01029e6	obj/kern/kernel.asm	/^f01029e6:	e8 55 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029eb	obj/kern/kernel.asm	/^f01029eb:	8b 0d 90 8e 22 f0    	mov    0xf0228e90,%ecx$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	8b 11                	mov    (%ecx),%edx$/;"	l
f01029f3	obj/kern/kernel.asm	/^f01029f3:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01029fc	obj/kern/kernel.asm	/^f01029fc:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	39 c2                	cmp    %eax,%edx$/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	74 19                	je     f0102a25 <mem_init+0xeca>$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	68 74 79 10 f0       	push   $0xf0107974$/;"	l
f0102a11	obj/kern/kernel.asm	/^f0102a11:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102a16	obj/kern/kernel.asm	/^f0102a16:	68 37 04 00 00       	push   $0x437$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	e8 1b d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102a2e	obj/kern/kernel.asm	/^f0102a2e:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	74 19                	je     f0102a4e <mem_init+0xef3>$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	68 67 82 10 f0       	push   $0xf0108267$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	68 39 04 00 00       	push   $0x439$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	e8 f2 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102a51	obj/kern/kernel.asm	/^f0102a51:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	50                   	push   %eax$/;"	l
f0102a5b	obj/kern/kernel.asm	/^f0102a5b:	e8 eb ec ff ff       	call   f010174b <page_free>$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	6a 01                	push   $0x1$/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	68 00 10 40 00       	push   $0x401000$/;"	l
f0102a6a	obj/kern/kernel.asm	/^f0102a6a:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	e8 55 ed ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	89 c7                	mov    %eax,%edi$/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102a8a	obj/kern/kernel.asm	/^f0102a8a:	8b 0d 8c 8e 22 f0    	mov    0xf0228e8c,%ecx$/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	89 c2                	mov    %eax,%edx$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	39 ca                	cmp    %ecx,%edx$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	72 15                	jb     f0102ab1 <mem_init+0xf56>$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	50                   	push   %eax$/;"	l
f0102a9d	obj/kern/kernel.asm	/^f0102a9d:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	68 40 04 00 00       	push   $0x440$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	e8 8f d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ab1	obj/kern/kernel.asm	/^f0102ab1:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	39 c7                	cmp    %eax,%edi$/;"	l
f0102ab8	obj/kern/kernel.asm	/^f0102ab8:	74 19                	je     f0102ad3 <mem_init+0xf78>$/;"	l
f0102aba	obj/kern/kernel.asm	/^f0102aba:	68 f3 82 10 f0       	push   $0xf01082f3$/;"	l
f0102abf	obj/kern/kernel.asm	/^f0102abf:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	68 41 04 00 00       	push   $0x441$/;"	l
f0102ac9	obj/kern/kernel.asm	/^f0102ac9:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	e8 6d d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ad3	obj/kern/kernel.asm	/^f0102ad3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102aef	obj/kern/kernel.asm	/^f0102aef:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102af2	obj/kern/kernel.asm	/^f0102af2:	89 c2                	mov    %eax,%edx$/;"	l
f0102af4	obj/kern/kernel.asm	/^f0102af4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	77 12                	ja     f0102b0d <mem_init+0xfb2>$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	50                   	push   %eax$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	6a 5a                	push   $0x5a$/;"	l
f0102b03	obj/kern/kernel.asm	/^f0102b03:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	e8 33 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b0d	obj/kern/kernel.asm	/^f0102b0d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	68 ff 00 00 00       	push   $0xff$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102b1f	obj/kern/kernel.asm	/^f0102b1f:	50                   	push   %eax$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	e8 65 35 00 00       	call   f010608a <memset>$/;"	l
f0102b25	obj/kern/kernel.asm	/^f0102b25:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	e8 1b ec ff ff       	call   f010174b <page_free>$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102b33	obj/kern/kernel.asm	/^f0102b33:	6a 01                	push   $0x1$/;"	l
f0102b35	obj/kern/kernel.asm	/^f0102b35:	6a 00                	push   $0x0$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0102b3d	obj/kern/kernel.asm	/^f0102b3d:	e8 88 ec ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0102b42	obj/kern/kernel.asm	/^f0102b42:	89 fa                	mov    %edi,%edx$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	2b 15 94 8e 22 f0    	sub    0xf0228e94,%edx$/;"	l
f0102b4a	obj/kern/kernel.asm	/^f0102b4a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	89 d0                	mov    %edx,%eax$/;"	l
f0102b52	obj/kern/kernel.asm	/^f0102b52:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	3b 05 8c 8e 22 f0    	cmp    0xf0228e8c,%eax$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	72 12                	jb     f0102b72 <mem_init+0x1017>$/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	52                   	push   %edx$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	6a 5a                	push   $0x5a$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0102b6d	obj/kern/kernel.asm	/^f0102b6d:	e8 ce d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102b78	obj/kern/kernel.asm	/^f0102b78:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102b81	obj/kern/kernel.asm	/^f0102b81:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102b84	obj/kern/kernel.asm	/^f0102b84:	74 19                	je     f0102b9f <mem_init+0x1044>$/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	68 0b 83 10 f0       	push   $0xf010830b$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102b90	obj/kern/kernel.asm	/^f0102b90:	68 4b 04 00 00       	push   $0x44b$/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102b9a	obj/kern/kernel.asm	/^f0102b9a:	e8 a1 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b9f	obj/kern/kernel.asm	/^f0102b9f:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	39 d0                	cmp    %edx,%eax$/;"	l
f0102ba4	obj/kern/kernel.asm	/^f0102ba4:	75 db                	jne    f0102b81 <mem_init+0x1026>$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	89 0d 40 82 22 f0    	mov    %ecx,0xf0228240$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102bc6	obj/kern/kernel.asm	/^f0102bc6:	50                   	push   %eax$/;"	l
f0102bc7	obj/kern/kernel.asm	/^f0102bc7:	e8 7f eb ff ff       	call   f010174b <page_free>$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	e8 77 eb ff ff       	call   f010174b <page_free>$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	e8 6f eb ff ff       	call   f010174b <page_free>$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	68 01 10 00 00       	push   $0x1001$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	6a 00                	push   $0x0$/;"	l
f0102be6	obj/kern/kernel.asm	/^f0102be6:	e8 10 ef ff ff       	call   f0101afb <mmio_map_region>$/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	89 c3                	mov    %eax,%ebx$/;"	l
f0102bed	obj/kern/kernel.asm	/^f0102bed:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102bf0	obj/kern/kernel.asm	/^f0102bf0:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	6a 00                	push   $0x0$/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	e8 ff ee ff ff       	call   f0101afb <mmio_map_region>$/;"	l
f0102bfc	obj/kern/kernel.asm	/^f0102bfc:	89 c6                	mov    %eax,%esi$/;"	l
f0102bfe	obj/kern/kernel.asm	/^f0102bfe:	8d 83 00 20 00 00    	lea    0x2000(%ebx),%eax$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	76 07                	jbe    f0102c16 <mem_init+0x10bb>$/;"	l
f0102c0f	obj/kern/kernel.asm	/^f0102c0f:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102c14	obj/kern/kernel.asm	/^f0102c14:	76 19                	jbe    f0102c2f <mem_init+0x10d4>$/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	68 f4 7c 10 f0       	push   $0xf0107cf4$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20:	68 5b 04 00 00       	push   $0x45b$/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	e8 11 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c2f	obj/kern/kernel.asm	/^f0102c2f:	8d 96 00 20 00 00    	lea    0x2000(%esi),%edx$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	77 08                	ja     f0102c45 <mem_init+0x10ea>$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	77 19                	ja     f0102c5e <mem_init+0x1103>$/;"	l
f0102c45	obj/kern/kernel.asm	/^f0102c45:	68 1c 7d 10 f0       	push   $0xf0107d1c$/;"	l
f0102c4a	obj/kern/kernel.asm	/^f0102c4a:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	68 5c 04 00 00       	push   $0x45c$/;"	l
f0102c54	obj/kern/kernel.asm	/^f0102c54:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102c59	obj/kern/kernel.asm	/^f0102c59:	e8 e2 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c5e	obj/kern/kernel.asm	/^f0102c5e:	89 da                	mov    %ebx,%edx$/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	09 f2                	or     %esi,%edx$/;"	l
f0102c62	obj/kern/kernel.asm	/^f0102c62:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102c68	obj/kern/kernel.asm	/^f0102c68:	74 19                	je     f0102c83 <mem_init+0x1128>$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	68 44 7d 10 f0       	push   $0xf0107d44$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	68 5e 04 00 00       	push   $0x45e$/;"	l
f0102c79	obj/kern/kernel.asm	/^f0102c79:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102c7e	obj/kern/kernel.asm	/^f0102c7e:	e8 bd d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c83	obj/kern/kernel.asm	/^f0102c83:	39 c6                	cmp    %eax,%esi$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	73 19                	jae    f0102ca0 <mem_init+0x1145>$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	68 22 83 10 f0       	push   $0xf0108322$/;"	l
f0102c8c	obj/kern/kernel.asm	/^f0102c8c:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	68 60 04 00 00       	push   $0x460$/;"	l
f0102c96	obj/kern/kernel.asm	/^f0102c96:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102c9b	obj/kern/kernel.asm	/^f0102c9b:	e8 a0 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	8b 3d 90 8e 22 f0    	mov    0xf0228e90,%edi$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	89 da                	mov    %ebx,%edx$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	89 f8                	mov    %edi,%eax$/;"	l
f0102caa	obj/kern/kernel.asm	/^f0102caa:	e8 dd e5 ff ff       	call   f010128c <check_va2pa>$/;"	l
f0102caf	obj/kern/kernel.asm	/^f0102caf:	85 c0                	test   %eax,%eax$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	74 19                	je     f0102ccc <mem_init+0x1171>$/;"	l
f0102cb3	obj/kern/kernel.asm	/^f0102cb3:	68 6c 7d 10 f0       	push   $0xf0107d6c$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	68 62 04 00 00       	push   $0x462$/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	e8 74 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ccc	obj/kern/kernel.asm	/^f0102ccc:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102cd2	obj/kern/kernel.asm	/^f0102cd2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	89 c2                	mov    %eax,%edx$/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	89 f8                	mov    %edi,%eax$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	e8 ae e5 ff ff       	call   f010128c <check_va2pa>$/;"	l
f0102cde	obj/kern/kernel.asm	/^f0102cde:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	74 19                	je     f0102cfe <mem_init+0x11a3>$/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	68 90 7d 10 f0       	push   $0xf0107d90$/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	68 63 04 00 00       	push   $0x463$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	e8 42 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cfe	obj/kern/kernel.asm	/^f0102cfe:	89 f2                	mov    %esi,%edx$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	89 f8                	mov    %edi,%eax$/;"	l
f0102d02	obj/kern/kernel.asm	/^f0102d02:	e8 85 e5 ff ff       	call   f010128c <check_va2pa>$/;"	l
f0102d07	obj/kern/kernel.asm	/^f0102d07:	85 c0                	test   %eax,%eax$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	74 19                	je     f0102d24 <mem_init+0x11c9>$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	68 c0 7d 10 f0       	push   $0xf0107dc0$/;"	l
f0102d10	obj/kern/kernel.asm	/^f0102d10:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102d15	obj/kern/kernel.asm	/^f0102d15:	68 64 04 00 00       	push   $0x464$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	e8 1c d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	89 f8                	mov    %edi,%eax$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	e8 5b e5 ff ff       	call   f010128c <check_va2pa>$/;"	l
f0102d31	obj/kern/kernel.asm	/^f0102d31:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	74 19                	je     f0102d4f <mem_init+0x11f4>$/;"	l
f0102d36	obj/kern/kernel.asm	/^f0102d36:	68 e4 7d 10 f0       	push   $0xf0107de4$/;"	l
f0102d3b	obj/kern/kernel.asm	/^f0102d3b:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	68 65 04 00 00       	push   $0x465$/;"	l
f0102d45	obj/kern/kernel.asm	/^f0102d45:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	e8 f1 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d52	obj/kern/kernel.asm	/^f0102d52:	6a 00                	push   $0x0$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	53                   	push   %ebx$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	57                   	push   %edi$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	e8 6f ea ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102d61	obj/kern/kernel.asm	/^f0102d61:	75 19                	jne    f0102d7c <mem_init+0x1221>$/;"	l
f0102d63	obj/kern/kernel.asm	/^f0102d63:	68 10 7e 10 f0       	push   $0xf0107e10$/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	68 67 04 00 00       	push   $0x467$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102d77	obj/kern/kernel.asm	/^f0102d77:	e8 c4 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d7c	obj/kern/kernel.asm	/^f0102d7c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	6a 00                	push   $0x0$/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	53                   	push   %ebx$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	e8 3d ea ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	8b 00                	mov    (%eax),%eax$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d92	obj/kern/kernel.asm	/^f0102d92:	83 e0 04             	and    $0x4,%eax$/;"	l
f0102d95	obj/kern/kernel.asm	/^f0102d95:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	74 19                	je     f0102db3 <mem_init+0x1258>$/;"	l
f0102d9a	obj/kern/kernel.asm	/^f0102d9a:	68 54 7e 10 f0       	push   $0xf0107e54$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	68 68 04 00 00       	push   $0x468$/;"	l
f0102da9	obj/kern/kernel.asm	/^f0102da9:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102dae	obj/kern/kernel.asm	/^f0102dae:	e8 8d d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102db3	obj/kern/kernel.asm	/^f0102db3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	6a 00                	push   $0x0$/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	53                   	push   %ebx$/;"	l
f0102db9	obj/kern/kernel.asm	/^f0102db9:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	e8 06 ea ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	6a 00                	push   $0x0$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0102dd8	obj/kern/kernel.asm	/^f0102dd8:	e8 ed e9 ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	6a 00                	push   $0x0$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	56                   	push   %esi$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	e8 d6 e9 ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	c7 04 24 34 83 10 f0 	movl   $0xf0108334,(%esp)$/;"	l
f0102e01	obj/kern/kernel.asm	/^f0102e01:	e8 55 11 00 00       	call   f0103f5b <cprintf>$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	a1 94 8e 22 f0       	mov    0xf0228e94,%eax$/;"	l
f0102e0b	obj/kern/kernel.asm	/^f0102e0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e0e	obj/kern/kernel.asm	/^f0102e0e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	77 15                	ja     f0102e2a <mem_init+0x12cf>$/;"	l
f0102e15	obj/kern/kernel.asm	/^f0102e15:	50                   	push   %eax$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	68 dd 00 00 00       	push   $0xdd$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102e25	obj/kern/kernel.asm	/^f0102e25:	e8 16 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	8b 15 8c 8e 22 f0    	mov    0xf0228e8c,%edx$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102e3d	obj/kern/kernel.asm	/^f0102e3d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102e40	obj/kern/kernel.asm	/^f0102e40:	6a 05                	push   $0x5$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	50                   	push   %eax$/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102e4d	obj/kern/kernel.asm	/^f0102e4d:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	e8 51 ea ff ff       	call   f01018a8 <boot_map_region>$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	a1 48 82 22 f0       	mov    0xf0228248,%eax$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	77 15                	ja     f0102e7b <mem_init+0x1320>$/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	50                   	push   %eax$/;"	l
f0102e67	obj/kern/kernel.asm	/^f0102e67:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	68 e8 00 00 00       	push   $0xe8$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	e8 c5 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	6a 05                	push   $0x5$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102e85	obj/kern/kernel.asm	/^f0102e85:	50                   	push   %eax$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	b9 00 40 0a 00       	mov    $0xa4000,%ecx$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102e90	obj/kern/kernel.asm	/^f0102e90:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0102e95	obj/kern/kernel.asm	/^f0102e95:	e8 0e ea ff ff       	call   f01018a8 <boot_map_region>$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	b8 00 90 11 f0       	mov    $0xf0119000,%eax$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	77 15                	ja     f0102ebe <mem_init+0x1363>$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	50                   	push   %eax$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf:	68 f6 00 00 00       	push   $0xf6$/;"	l
f0102eb4	obj/kern/kernel.asm	/^f0102eb4:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	e8 82 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ebe	obj/kern/kernel.asm	/^f0102ebe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	6a 03                	push   $0x3$/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	68 00 90 11 00       	push   $0x119000$/;"	l
f0102ec8	obj/kern/kernel.asm	/^f0102ec8:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102ecd	obj/kern/kernel.asm	/^f0102ecd:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	e8 cc e9 ff ff       	call   f01018a8 <boot_map_region>$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102edf	obj/kern/kernel.asm	/^f0102edf:	6a 03                	push   $0x3$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	6a 00                	push   $0x0$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102ee8	obj/kern/kernel.asm	/^f0102ee8:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102eed	obj/kern/kernel.asm	/^f0102eed:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	e8 b1 e9 ff ff       	call   f01018a8 <boot_map_region>$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	c7 45 c4 00 a0 22 f0 	movl   $0xf022a000,-0x3c(%ebp)$/;"	l
f0102efe	obj/kern/kernel.asm	/^f0102efe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	bb 00 a0 22 f0       	mov    $0xf022a000,%ebx$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102f0b	obj/kern/kernel.asm	/^f0102f0b:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	77 15                	ja     f0102f28 <mem_init+0x13cd>$/;"	l
f0102f13	obj/kern/kernel.asm	/^f0102f13:	53                   	push   %ebx$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0102f19	obj/kern/kernel.asm	/^f0102f19:	68 39 01 00 00       	push   $0x139$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	e8 18 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f28	obj/kern/kernel.asm	/^f0102f28:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	6a 03                	push   $0x3$/;"	l
f0102f2d	obj/kern/kernel.asm	/^f0102f2d:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102f33	obj/kern/kernel.asm	/^f0102f33:	50                   	push   %eax$/;"	l
f0102f34	obj/kern/kernel.asm	/^f0102f34:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	89 f2                	mov    %esi,%edx$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0102f40	obj/kern/kernel.asm	/^f0102f40:	e8 63 e9 ff ff       	call   f01018a8 <boot_map_region>$/;"	l
f0102f45	obj/kern/kernel.asm	/^f0102f45:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	b8 00 a0 26 f0       	mov    $0xf026a000,%eax$/;"	l
f0102f59	obj/kern/kernel.asm	/^f0102f59:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	75 ae                	jne    f0102f0b <mem_init+0x13b0>$/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	8b 3d 90 8e 22 f0    	mov    0xf0228e90,%edi$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	a1 8c 8e 22 f0       	mov    0xf0228e8c,%eax$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	8b 35 94 8e 22 f0    	mov    0xf0228e94,%esi$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0102f83	obj/kern/kernel.asm	/^f0102f83:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	eb 55                	jmp    f0102fdf <mem_init+0x1484>$/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102f90	obj/kern/kernel.asm	/^f0102f90:	89 f8                	mov    %edi,%eax$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	e8 f5 e2 ff ff       	call   f010128c <check_va2pa>$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f0102f9e	obj/kern/kernel.asm	/^f0102f9e:	77 15                	ja     f0102fb5 <mem_init+0x145a>$/;"	l
f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	56                   	push   %esi$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	68 7c 03 00 00       	push   $0x37c$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	e8 8b d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f0102fbc	obj/kern/kernel.asm	/^f0102fbc:	39 c2                	cmp    %eax,%edx$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	74 19                	je     f0102fd9 <mem_init+0x147e>$/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	68 88 7e 10 f0       	push   $0xf0107e88$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0102fca	obj/kern/kernel.asm	/^f0102fca:	68 7c 03 00 00       	push   $0x37c$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0102fd4	obj/kern/kernel.asm	/^f0102fd4:	e8 67 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	77 a6                	ja     f0102f8a <mem_init+0x142f>$/;"	l
f0102fe4	obj/kern/kernel.asm	/^f0102fe4:	8b 35 48 82 22 f0    	mov    0xf0228248,%esi$/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	89 da                	mov    %ebx,%edx$/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4:	89 f8                	mov    %edi,%eax$/;"	l
f0102ff6	obj/kern/kernel.asm	/^f0102ff6:	e8 91 e2 ff ff       	call   f010128c <check_va2pa>$/;"	l
f0102ffb	obj/kern/kernel.asm	/^f0102ffb:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	77 15                	ja     f0103019 <mem_init+0x14be>$/;"	l
f0103004	obj/kern/kernel.asm	/^f0103004:	56                   	push   %esi$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	68 81 03 00 00       	push   $0x381$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	e8 27 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f0103020	obj/kern/kernel.asm	/^f0103020:	39 d0                	cmp    %edx,%eax$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	74 19                	je     f010303d <mem_init+0x14e2>$/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	68 bc 7e 10 f0       	push   $0xf0107ebc$/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	68 81 03 00 00       	push   $0x381$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	e8 03 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f010303d	obj/kern/kernel.asm	/^f010303d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	81 fb 00 40 ca ee    	cmp    $0xeeca4000,%ebx$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	75 a7                	jne    f0102ff2 <mem_init+0x1497>$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f010304e	obj/kern/kernel.asm	/^f010304e:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0103051	obj/kern/kernel.asm	/^f0103051:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	eb 30                	jmp    f0103088 <mem_init+0x152d>$/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	89 f8                	mov    %edi,%eax$/;"	l
f0103060	obj/kern/kernel.asm	/^f0103060:	e8 27 e2 ff ff       	call   f010128c <check_va2pa>$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	74 19                	je     f0103082 <mem_init+0x1527>$/;"	l
f0103069	obj/kern/kernel.asm	/^f0103069:	68 f0 7e 10 f0       	push   $0xf0107ef0$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	68 85 03 00 00       	push   $0x385$/;"	l
f0103078	obj/kern/kernel.asm	/^f0103078:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	e8 be cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103082	obj/kern/kernel.asm	/^f0103082:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	39 f3                	cmp    %esi,%ebx$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	72 cc                	jb     f0103058 <mem_init+0x14fd>$/;"	l
f010308c	obj/kern/kernel.asm	/^f010308c:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0103094	obj/kern/kernel.asm	/^f0103094:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f01030a3	obj/kern/kernel.asm	/^f01030a3:	89 c3                	mov    %eax,%ebx$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01030b0	obj/kern/kernel.asm	/^f01030b0:	89 da                	mov    %ebx,%edx$/;"	l
f01030b2	obj/kern/kernel.asm	/^f01030b2:	89 f8                	mov    %edi,%eax$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	e8 d3 e1 ff ff       	call   f010128c <check_va2pa>$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	77 15                	ja     f01030d6 <mem_init+0x157b>$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	56                   	push   %esi$/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	68 8d 03 00 00       	push   $0x38d$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	e8 6a cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	8d 94 0b 00 a0 22 f0 	lea    -0xfdd6000(%ebx,%ecx,1),%edx$/;"	l
f01030e0	obj/kern/kernel.asm	/^f01030e0:	39 d0                	cmp    %edx,%eax$/;"	l
f01030e2	obj/kern/kernel.asm	/^f01030e2:	74 19                	je     f01030fd <mem_init+0x15a2>$/;"	l
f01030e4	obj/kern/kernel.asm	/^f01030e4:	68 18 7f 10 f0       	push   $0xf0107f18$/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	68 8d 03 00 00       	push   $0x38d$/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	e8 43 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103103	obj/kern/kernel.asm	/^f0103103:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0103106	obj/kern/kernel.asm	/^f0103106:	75 a8                	jne    f01030b0 <mem_init+0x1555>$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0103114	obj/kern/kernel.asm	/^f0103114:	89 c6                	mov    %eax,%esi$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	89 da                	mov    %ebx,%edx$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	89 f8                	mov    %edi,%eax$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	e8 6d e1 ff ff       	call   f010128c <check_va2pa>$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	74 19                	je     f010313d <mem_init+0x15e2>$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	68 60 7f 10 f0       	push   $0xf0107f60$/;"	l
f0103129	obj/kern/kernel.asm	/^f0103129:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010312e	obj/kern/kernel.asm	/^f010312e:	68 8f 03 00 00       	push   $0x38f$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0103138	obj/kern/kernel.asm	/^f0103138:	e8 03 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010313d	obj/kern/kernel.asm	/^f010313d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103143	obj/kern/kernel.asm	/^f0103143:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	75 cf                	jne    f0103116 <mem_init+0x15bb>$/;"	l
f0103147	obj/kern/kernel.asm	/^f0103147:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010314a	obj/kern/kernel.asm	/^f010314a:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	b8 00 a0 26 f0       	mov    $0xf026a000,%eax$/;"	l
f0103163	obj/kern/kernel.asm	/^f0103163:	39 f0                	cmp    %esi,%eax$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	0f 85 2c ff ff ff    	jne    f0103097 <mem_init+0x153c>$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	eb 2a                	jmp    f010319c <mem_init+0x1641>$/;"	l
f0103172	obj/kern/kernel.asm	/^f0103172:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0103178	obj/kern/kernel.asm	/^f0103178:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f010317b	obj/kern/kernel.asm	/^f010317b:	77 1f                	ja     f010319c <mem_init+0x1641>$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	75 7e                	jne    f0103201 <mem_init+0x16a6>$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	68 4d 83 10 f0       	push   $0xf010834d$/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010318d	obj/kern/kernel.asm	/^f010318d:	68 9a 03 00 00       	push   $0x39a$/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	e8 a4 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	76 3f                	jbe    f01031e2 <mem_init+0x1687>$/;"	l
f01031a3	obj/kern/kernel.asm	/^f01031a3:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	75 19                	jne    f01031c4 <mem_init+0x1669>$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	68 4d 83 10 f0       	push   $0xf010834d$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	68 9e 03 00 00       	push   $0x39e$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01031bf	obj/kern/kernel.asm	/^f01031bf:	e8 7c ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01031c7	obj/kern/kernel.asm	/^f01031c7:	75 38                	jne    f0103201 <mem_init+0x16a6>$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	68 5e 83 10 f0       	push   $0xf010835e$/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	68 9f 03 00 00       	push   $0x39f$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd:	e8 5e ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	74 19                	je     f0103201 <mem_init+0x16a6>$/;"	l
f01031e8	obj/kern/kernel.asm	/^f01031e8:	68 6f 83 10 f0       	push   $0xf010836f$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	68 a1 03 00 00       	push   $0x3a1$/;"	l
f01031f7	obj/kern/kernel.asm	/^f01031f7:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	e8 3f ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103204	obj/kern/kernel.asm	/^f0103204:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	0f 86 63 ff ff ff    	jbe    f0103172 <mem_init+0x1617>$/;"	l
f010320f	obj/kern/kernel.asm	/^f010320f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	68 84 7f 10 f0       	push   $0xf0107f84$/;"	l
f0103217	obj/kern/kernel.asm	/^f0103217:	e8 3f 0d 00 00       	call   f0103f5b <cprintf>$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	77 15                	ja     f0103240 <mem_init+0x16e5>$/;"	l
f010322b	obj/kern/kernel.asm	/^f010322b:	50                   	push   %eax$/;"	l
f010322c	obj/kern/kernel.asm	/^f010322c:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	68 11 01 00 00       	push   $0x111$/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	e8 00 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103240	obj/kern/kernel.asm	/^f0103240:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103248	obj/kern/kernel.asm	/^f0103248:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	e8 b0 e0 ff ff       	call   f0101302 <check_page_free_list>$/;"	l
f0103252	obj/kern/kernel.asm	/^f0103252:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010325d	obj/kern/kernel.asm	/^f010325d:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103263	obj/kern/kernel.asm	/^f0103263:	6a 00                	push   $0x0$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	e8 71 e4 ff ff       	call   f01016db <page_alloc>$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	89 c3                	mov    %eax,%ebx$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	85 c0                	test   %eax,%eax$/;"	l
f0103271	obj/kern/kernel.asm	/^f0103271:	75 19                	jne    f010328c <mem_init+0x1731>$/;"	l
f0103273	obj/kern/kernel.asm	/^f0103273:	68 59 81 10 f0       	push   $0xf0108159$/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010327d	obj/kern/kernel.asm	/^f010327d:	68 7d 04 00 00       	push   $0x47d$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	e8 b4 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	6a 00                	push   $0x0$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	e8 45 e4 ff ff       	call   f01016db <page_alloc>$/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	89 c7                	mov    %eax,%edi$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	83 c4 10             	add    $0x10,%esp$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	85 c0                	test   %eax,%eax$/;"	l
f010329d	obj/kern/kernel.asm	/^f010329d:	75 19                	jne    f01032b8 <mem_init+0x175d>$/;"	l
f010329f	obj/kern/kernel.asm	/^f010329f:	68 6f 81 10 f0       	push   $0xf010816f$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	68 7e 04 00 00       	push   $0x47e$/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	e8 88 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032b8	obj/kern/kernel.asm	/^f01032b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	6a 00                	push   $0x0$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	e8 19 e4 ff ff       	call   f01016db <page_alloc>$/;"	l
f01032c2	obj/kern/kernel.asm	/^f01032c2:	89 c6                	mov    %eax,%esi$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	85 c0                	test   %eax,%eax$/;"	l
f01032c9	obj/kern/kernel.asm	/^f01032c9:	75 19                	jne    f01032e4 <mem_init+0x1789>$/;"	l
f01032cb	obj/kern/kernel.asm	/^f01032cb:	68 85 81 10 f0       	push   $0xf0108185$/;"	l
f01032d0	obj/kern/kernel.asm	/^f01032d0:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01032d5	obj/kern/kernel.asm	/^f01032d5:	68 7f 04 00 00       	push   $0x47f$/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01032df	obj/kern/kernel.asm	/^f01032df:	e8 5c cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032e4	obj/kern/kernel.asm	/^f01032e4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	53                   	push   %ebx$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	e8 5e e4 ff ff       	call   f010174b <page_free>$/;"	l
f01032ed	obj/kern/kernel.asm	/^f01032ed:	89 f8                	mov    %edi,%eax$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f01032f5	obj/kern/kernel.asm	/^f01032f5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01032f8	obj/kern/kernel.asm	/^f01032f8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	89 c2                	mov    %eax,%edx$/;"	l
f01032fd	obj/kern/kernel.asm	/^f01032fd:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103303	obj/kern/kernel.asm	/^f0103303:	3b 15 8c 8e 22 f0    	cmp    0xf0228e8c,%edx$/;"	l
f0103309	obj/kern/kernel.asm	/^f0103309:	72 12                	jb     f010331d <mem_init+0x17c2>$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	50                   	push   %eax$/;"	l
f010330c	obj/kern/kernel.asm	/^f010330c:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	6a 5a                	push   $0x5a$/;"	l
f0103313	obj/kern/kernel.asm	/^f0103313:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	e8 23 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103320	obj/kern/kernel.asm	/^f0103320:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103325	obj/kern/kernel.asm	/^f0103325:	6a 01                	push   $0x1$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	50                   	push   %eax$/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	e8 58 2d 00 00       	call   f010608a <memset>$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	89 f0                	mov    %esi,%eax$/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f010333a	obj/kern/kernel.asm	/^f010333a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010333d	obj/kern/kernel.asm	/^f010333d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	89 c2                	mov    %eax,%edx$/;"	l
f0103342	obj/kern/kernel.asm	/^f0103342:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	3b 15 8c 8e 22 f0    	cmp    0xf0228e8c,%edx$/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	72 12                	jb     f0103362 <mem_init+0x1807>$/;"	l
f0103350	obj/kern/kernel.asm	/^f0103350:	50                   	push   %eax$/;"	l
f0103351	obj/kern/kernel.asm	/^f0103351:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	6a 5a                	push   $0x5a$/;"	l
f0103358	obj/kern/kernel.asm	/^f0103358:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	e8 de cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103365	obj/kern/kernel.asm	/^f0103365:	68 00 10 00 00       	push   $0x1000$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	6a 02                	push   $0x2$/;"	l
f010336c	obj/kern/kernel.asm	/^f010336c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	50                   	push   %eax$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	e8 13 2d 00 00       	call   f010608a <memset>$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	6a 02                	push   $0x2$/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	68 00 10 00 00       	push   $0x1000$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	57                   	push   %edi$/;"	l
f010337f	obj/kern/kernel.asm	/^f010337f:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	e8 10 e7 ff ff       	call   f0101a9a <page_insert>$/;"	l
f010338a	obj/kern/kernel.asm	/^f010338a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	74 19                	je     f01033ad <mem_init+0x1852>$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	68 56 82 10 f0       	push   $0xf0108256$/;"	l
f0103399	obj/kern/kernel.asm	/^f0103399:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	68 84 04 00 00       	push   $0x484$/;"	l
f01033a3	obj/kern/kernel.asm	/^f01033a3:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01033a8	obj/kern/kernel.asm	/^f01033a8:	e8 93 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	01 01 01 $/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	74 19                	je     f01033d2 <mem_init+0x1877>$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	68 a4 7f 10 f0       	push   $0xf0107fa4$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01033c3	obj/kern/kernel.asm	/^f01033c3:	68 85 04 00 00       	push   $0x485$/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	e8 6e cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	6a 02                	push   $0x2$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	68 00 10 00 00       	push   $0x1000$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	56                   	push   %esi$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f01033e0	obj/kern/kernel.asm	/^f01033e0:	e8 b5 e6 ff ff       	call   f0101a9a <page_insert>$/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033e8	obj/kern/kernel.asm	/^f01033e8:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	02 02 02 $/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	74 19                	je     f010340d <mem_init+0x18b2>$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	68 c8 7f 10 f0       	push   $0xf0107fc8$/;"	l
f01033f9	obj/kern/kernel.asm	/^f01033f9:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	68 87 04 00 00       	push   $0x487$/;"	l
f0103403	obj/kern/kernel.asm	/^f0103403:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	e8 33 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	74 19                	je     f010342d <mem_init+0x18d2>$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	68 78 82 10 f0       	push   $0xf0108278$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	68 88 04 00 00       	push   $0x488$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	e8 13 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	74 19                	je     f010344d <mem_init+0x18f2>$/;"	l
f0103434	obj/kern/kernel.asm	/^f0103434:	68 e2 82 10 f0       	push   $0xf01082e2$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010343e	obj/kern/kernel.asm	/^f010343e:	68 89 04 00 00       	push   $0x489$/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	e8 f3 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103454	obj/kern/kernel.asm	/^f0103454:	03 03 03 $/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	89 f0                	mov    %esi,%eax$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	89 c2                	mov    %eax,%edx$/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	3b 15 8c 8e 22 f0    	cmp    0xf0228e8c,%edx$/;"	l
f0103470	obj/kern/kernel.asm	/^f0103470:	72 12                	jb     f0103484 <mem_init+0x1929>$/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	50                   	push   %eax$/;"	l
f0103473	obj/kern/kernel.asm	/^f0103473:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	6a 5a                	push   $0x5a$/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f010347f	obj/kern/kernel.asm	/^f010347f:	e8 bc cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f010348b	obj/kern/kernel.asm	/^f010348b:	03 03 03 $/;"	l
f010348e	obj/kern/kernel.asm	/^f010348e:	74 19                	je     f01034a9 <mem_init+0x194e>$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	68 ec 7f 10 f0       	push   $0xf0107fec$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	68 8b 04 00 00       	push   $0x48b$/;"	l
f010349f	obj/kern/kernel.asm	/^f010349f:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01034a4	obj/kern/kernel.asm	/^f01034a4:	e8 97 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	68 00 10 00 00       	push   $0x1000$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	ff 35 90 8e 22 f0    	pushl  0xf0228e90$/;"	l
f01034b7	obj/kern/kernel.asm	/^f01034b7:	e8 98 e5 ff ff       	call   f0101a54 <page_remove>$/;"	l
f01034bc	obj/kern/kernel.asm	/^f01034bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	74 19                	je     f01034df <mem_init+0x1984>$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	68 b0 82 10 f0       	push   $0xf01082b0$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	68 8d 04 00 00       	push   $0x48d$/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	e8 61 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034df	obj/kern/kernel.asm	/^f01034df:	8b 0d 90 8e 22 f0    	mov    0xf0228e90,%ecx$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	8b 11                	mov    (%ecx),%edx$/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	89 d8                	mov    %ebx,%eax$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	2b 05 94 8e 22 f0    	sub    0xf0228e94,%eax$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	39 c2                	cmp    %eax,%edx$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	74 19                	je     f0103518 <mem_init+0x19bd>$/;"	l
f01034ff	obj/kern/kernel.asm	/^f01034ff:	68 74 79 10 f0       	push   $0xf0107974$/;"	l
f0103504	obj/kern/kernel.asm	/^f0103504:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	68 90 04 00 00       	push   $0x490$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	e8 28 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103518	obj/kern/kernel.asm	/^f0103518:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f010351e	obj/kern/kernel.asm	/^f010351e:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	74 19                	je     f010353e <mem_init+0x19e3>$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	68 67 82 10 f0       	push   $0xf0108267$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	68 92 04 00 00       	push   $0x492$/;"	l
f0103534	obj/kern/kernel.asm	/^f0103534:	68 79 80 10 f0       	push   $0xf0108079$/;"	l
f0103539	obj/kern/kernel.asm	/^f0103539:	e8 02 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547:	53                   	push   %ebx$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	e8 fe e1 ff ff       	call   f010174b <page_free>$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	c7 04 24 18 80 10 f0 	movl   $0xf0108018,(%esp)$/;"	l
f0103554	obj/kern/kernel.asm	/^f0103554:	e8 02 0a 00 00       	call   f0103f5b <cprintf>$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	83 c4 10             	add    $0x10,%esp$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	5b                   	pop    %ebx$/;"	l
f0103560	obj/kern/kernel.asm	/^f0103560:	5e                   	pop    %esi$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	5f                   	pop    %edi$/;"	l
f0103562	obj/kern/kernel.asm	/^f0103562:	5d                   	pop    %ebp$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	c3                   	ret    $/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564 <user_mem_check>:$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	55                   	push   %ebp$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	89 e5                	mov    %esp,%ebp$/;"	l
f0103567	obj/kern/kernel.asm	/^f0103567:	57                   	push   %edi$/;"	l
f0103568	obj/kern/kernel.asm	/^f0103568:	56                   	push   %esi$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	53                   	push   %ebx$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010357f	obj/kern/kernel.asm	/^f010357f:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	76 6b                	jbe    f01035fa <user_mem_check+0x96>$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	89 1d 3c 82 22 f0    	mov    %ebx,0xf022823c$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	eb 68                	jmp    f0103604 <user_mem_check+0xa0>$/;"	l
f010359c	obj/kern/kernel.asm	/^f010359c:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f01035a2	obj/kern/kernel.asm	/^f01035a2:	76 1c                	jbe    f01035c0 <user_mem_check+0x5c>$/;"	l
f01035a4	obj/kern/kernel.asm	/^f01035a4:	81 7d 0c 00 00 80 ef 	cmpl   $0xef800000,0xc(%ebp)$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	b8 00 00 80 ef       	mov    $0xef800000,%eax$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	0f 43 45 0c          	cmovae 0xc(%ebp),%eax$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	a3 3c 82 22 f0       	mov    %eax,0xf022823c$/;"	l
f01035b9	obj/kern/kernel.asm	/^f01035b9:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	eb 44                	jmp    f0103604 <user_mem_check+0xa0>$/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	6a 00                	push   $0x0$/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	53                   	push   %ebx$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	e8 fc e1 ff ff       	call   f01017ca <pgdir_walk>$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	85 c0                	test   %eax,%eax$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	74 0c                	je     f01035e1 <user_mem_check+0x7d>$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	8b 00                	mov    (%eax),%eax$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	a8 01                	test   $0x1,%al$/;"	l
f01035d9	obj/kern/kernel.asm	/^f01035d9:	74 06                	je     f01035e1 <user_mem_check+0x7d>$/;"	l
f01035db	obj/kern/kernel.asm	/^f01035db:	21 f0                	and    %esi,%eax$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	39 c6                	cmp    %eax,%esi$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	74 0d                	je     f01035ee <user_mem_check+0x8a>$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	89 1d 3c 82 22 f0    	mov    %ebx,0xf022823c$/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	eb 16                	jmp    f0103604 <user_mem_check+0xa0>$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	72 9d                	jb     f010359c <user_mem_check+0x38>$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	5b                   	pop    %ebx$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	5e                   	pop    %esi$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	5f                   	pop    %edi$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	5d                   	pop    %ebp$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	c3                   	ret    $/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c <user_mem_assert>:$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	55                   	push   %ebp$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	89 e5                	mov    %esp,%ebp$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	53                   	push   %ebx$/;"	l
f0103610	obj/kern/kernel.asm	/^f0103610:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103613	obj/kern/kernel.asm	/^f0103613:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	83 c8 04             	or     $0x4,%eax$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	50                   	push   %eax$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	53                   	push   %ebx$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	e8 3b ff ff ff       	call   f0103564 <user_mem_check>$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	83 c4 10             	add    $0x10,%esp$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	85 c0                	test   %eax,%eax$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	79 21                	jns    f0103651 <user_mem_assert+0x45>$/;"	l
f0103630	obj/kern/kernel.asm	/^f0103630:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	ff 35 3c 82 22 f0    	pushl  0xf022823c$/;"	l
f0103639	obj/kern/kernel.asm	/^f0103639:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	68 44 80 10 f0       	push   $0xf0108044$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	e8 15 09 00 00       	call   f0103f5b <cprintf>$/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	e8 0b 06 00 00       	call   f0103c59 <env_destroy>$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	c9                   	leave  $/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	c3                   	ret    $/;"	l
f0103656	obj/kern/kernel.asm	/^f0103656 <region_alloc>:$/;"	l
f0103656	obj/kern/kernel.asm	/^f0103656:	55                   	push   %ebp$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	89 e5                	mov    %esp,%ebp$/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659:	57                   	push   %edi$/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a:	56                   	push   %esi$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	53                   	push   %ebx$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	89 c7                	mov    %eax,%edi$/;"	l
f0103661	obj/kern/kernel.asm	/^f0103661:	89 d3                	mov    %edx,%ebx$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0103670	obj/kern/kernel.asm	/^f0103670:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	eb 56                	jmp    f01036ce <region_alloc+0x78>$/;"	l
f0103678	obj/kern/kernel.asm	/^f0103678:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	6a 00                	push   $0x0$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	e8 59 e0 ff ff       	call   f01016db <page_alloc>$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	85 c0                	test   %eax,%eax$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	75 17                	jne    f01036a0 <region_alloc+0x4a>$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	68 7d 83 10 f0       	push   $0xf010837d$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	68 35 01 00 00       	push   $0x135$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	e8 a0 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	6a 06                	push   $0x6$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	53                   	push   %ebx$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	50                   	push   %eax$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	e8 ee e3 ff ff       	call   f0101a9a <page_insert>$/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	85 c0                	test   %eax,%eax$/;"	l
f01036b1	obj/kern/kernel.asm	/^f01036b1:	74 15                	je     f01036c8 <region_alloc+0x72>$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	50                   	push   %eax$/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	68 a4 83 10 f0       	push   $0xf01083a4$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	68 38 01 00 00       	push   $0x138$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	e8 78 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036c8	obj/kern/kernel.asm	/^f01036c8:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	39 f3                	cmp    %esi,%ebx$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	75 a6                	jne    f0103678 <region_alloc+0x22>$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01036d5	obj/kern/kernel.asm	/^f01036d5:	5b                   	pop    %ebx$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	5e                   	pop    %esi$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	5f                   	pop    %edi$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	5d                   	pop    %ebp$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	c3                   	ret    $/;"	l
f01036da	obj/kern/kernel.asm	/^f01036da <envid2env>:$/;"	l
f01036da	obj/kern/kernel.asm	/^f01036da:	55                   	push   %ebp$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	89 e5                	mov    %esp,%ebp$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	56                   	push   %esi$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	53                   	push   %ebx$/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	85 c0                	test   %eax,%eax$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	75 1a                	jne    f0103703 <envid2env+0x29>$/;"	l
f01036e9	obj/kern/kernel.asm	/^f01036e9:	e8 bc 2f 00 00       	call   f01066aa <cpunum>$/;"	l
f01036ee	obj/kern/kernel.asm	/^f01036ee:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	89 01                	mov    %eax,(%ecx)$/;"	l
f01036fc	obj/kern/kernel.asm	/^f01036fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	eb 73                	jmp    f0103776 <envid2env+0x9c>$/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	89 c3                	mov    %eax,%ebx$/;"	l
f0103705	obj/kern/kernel.asm	/^f0103705:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	69 db 90 02 00 00    	imul   $0x290,%ebx,%ebx$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	03 1d 48 82 22 f0    	add    0xf0228248,%ebx$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f010371b	obj/kern/kernel.asm	/^f010371b:	74 05                	je     f0103722 <envid2env+0x48>$/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	3b 43 48             	cmp    0x48(%ebx),%eax$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	74 10                	je     f0103732 <envid2env+0x58>$/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103725	obj/kern/kernel.asm	/^f0103725:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	eb 44                	jmp    f0103776 <envid2env+0x9c>$/;"	l
f0103732	obj/kern/kernel.asm	/^f0103732:	84 d2                	test   %dl,%dl$/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	74 36                	je     f010376c <envid2env+0x92>$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	e8 6f 2f 00 00       	call   f01066aa <cpunum>$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	3b 98 28 90 22 f0    	cmp    -0xfdd6fd8(%eax),%ebx$/;"	l
f0103744	obj/kern/kernel.asm	/^f0103744:	74 26                	je     f010376c <envid2env+0x92>$/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	e8 5c 2f 00 00       	call   f01066aa <cpunum>$/;"	l
f010374e	obj/kern/kernel.asm	/^f010374e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	74 10                	je     f010376c <envid2env+0x92>$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	eb 0a                	jmp    f0103776 <envid2env+0x9c>$/;"	l
f010376c	obj/kern/kernel.asm	/^f010376c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010376f	obj/kern/kernel.asm	/^f010376f:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	5b                   	pop    %ebx$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	5e                   	pop    %esi$/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	5d                   	pop    %ebp$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	c3                   	ret    $/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a <env_init_percpu>:$/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a:	55                   	push   %ebp$/;"	l
f010377b	obj/kern/kernel.asm	/^f010377b:	89 e5                	mov    %esp,%ebp$/;"	l
f010377d	obj/kern/kernel.asm	/^f010377d:	b8 20 33 12 f0       	mov    $0xf0123320,%eax$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103785	obj/kern/kernel.asm	/^f0103785:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	8e e8                	mov    %eax,%gs$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	8e e0                	mov    %eax,%fs$/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0103793	obj/kern/kernel.asm	/^f0103793:	8e c0                	mov    %eax,%es$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	8e d8                	mov    %eax,%ds$/;"	l
f0103797	obj/kern/kernel.asm	/^f0103797:	8e d0                	mov    %eax,%ss$/;"	l
f0103799	obj/kern/kernel.asm	/^f0103799:	ea a0 37 10 f0 08 00 	ljmp   $0x8,$0xf01037a0$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	0f 00 d0             	lldt   %ax$/;"	l
f01037a8	obj/kern/kernel.asm	/^f01037a8:	5d                   	pop    %ebp$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	c3                   	ret    $/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa <env_init>:$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	55                   	push   %ebp$/;"	l
f01037ab	obj/kern/kernel.asm	/^f01037ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01037ad	obj/kern/kernel.asm	/^f01037ad:	56                   	push   %esi$/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	53                   	push   %ebx$/;"	l
f01037af	obj/kern/kernel.asm	/^f01037af:	8b 35 48 82 22 f0    	mov    0xf0228248,%esi$/;"	l
f01037b5	obj/kern/kernel.asm	/^f01037b5:	8b 15 4c 82 22 f0    	mov    0xf022824c,%edx$/;"	l
f01037bb	obj/kern/kernel.asm	/^f01037bb:	8d 86 70 3d 0a 00    	lea    0xa3d70(%esi),%eax$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	8d 9e 70 fd ff ff    	lea    -0x290(%esi),%ebx$/;"	l
f01037c7	obj/kern/kernel.asm	/^f01037c7:	89 c1                	mov    %eax,%ecx$/;"	l
f01037c9	obj/kern/kernel.asm	/^f01037c9:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f01037cc	obj/kern/kernel.asm	/^f01037cc:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%eax)$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%eax)$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	c7 40 60 00 00 00 00 	movl   $0x0,0x60(%eax)$/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	2d 90 02 00 00       	sub    $0x290,%eax$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	89 ca                	mov    %ecx,%edx$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	39 d8                	cmp    %ebx,%eax$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	75 cd                	jne    f01037c7 <env_init+0x1d>$/;"	l
f01037fa	obj/kern/kernel.asm	/^f01037fa:	89 35 4c 82 22 f0    	mov    %esi,0xf022824c$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	e8 75 ff ff ff       	call   f010377a <env_init_percpu>$/;"	l
f0103805	obj/kern/kernel.asm	/^f0103805:	5b                   	pop    %ebx$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	5e                   	pop    %esi$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	5d                   	pop    %ebp$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	c3                   	ret    $/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809 <env_alloc>:$/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	55                   	push   %ebp$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	89 e5                	mov    %esp,%ebp$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	53                   	push   %ebx$/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	8b 1d 4c 82 22 f0    	mov    0xf022824c,%ebx$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	85 db                	test   %ebx,%ebx$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	0f 84 65 01 00 00    	je     f0103983 <env_alloc+0x17a>$/;"	l
f010381e	obj/kern/kernel.asm	/^f010381e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	6a 01                	push   $0x1$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	e8 b3 de ff ff       	call   f01016db <page_alloc>$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	83 c4 10             	add    $0x10,%esp$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	85 c0                	test   %eax,%eax$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	0f 84 57 01 00 00    	je     f010398a <env_alloc+0x181>$/;"	l
f0103833	obj/kern/kernel.asm	/^f0103833:	89 c2                	mov    %eax,%edx$/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	2b 15 94 8e 22 f0    	sub    0xf0228e94,%edx$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	89 d1                	mov    %edx,%ecx$/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	3b 0d 8c 8e 22 f0    	cmp    0xf0228e8c,%ecx$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	72 12                	jb     f0103860 <env_alloc+0x57>$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	52                   	push   %edx$/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	6a 5a                	push   $0x5a$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f010385b	obj/kern/kernel.asm	/^f010385b:	e8 e0 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f010386e	obj/kern/kernel.asm	/^f010386e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103871	obj/kern/kernel.asm	/^f0103871:	68 14 01 00 00       	push   $0x114$/;"	l
f0103876	obj/kern/kernel.asm	/^f0103876:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f010387b	obj/kern/kernel.asm	/^f010387b:	05 ec 0e 00 00       	add    $0xeec,%eax$/;"	l
f0103880	obj/kern/kernel.asm	/^f0103880:	50                   	push   %eax$/;"	l
f0103881	obj/kern/kernel.asm	/^f0103881:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	05 ec 0e 00 00       	add    $0xeec,%eax$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	50                   	push   %eax$/;"	l
f010388a	obj/kern/kernel.asm	/^f010388a:	e8 b0 28 00 00       	call   f010613f <memcpy>$/;"	l
f010388f	obj/kern/kernel.asm	/^f010388f:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103892	obj/kern/kernel.asm	/^f0103892:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	77 15                	ja     f01038b1 <env_alloc+0xa8>$/;"	l
f010389c	obj/kern/kernel.asm	/^f010389c:	50                   	push   %eax$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	68 ca 00 00 00       	push   $0xca$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	e8 8f c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038b1	obj/kern/kernel.asm	/^f01038b1:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	83 ca 05             	or     $0x5,%edx$/;"	l
f01038ba	obj/kern/kernel.asm	/^f01038ba:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01038cd	obj/kern/kernel.asm	/^f01038cd:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f01038d5	obj/kern/kernel.asm	/^f01038d5:	89 da                	mov    %ebx,%edx$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	2b 15 48 82 22 f0    	sub    0xf0228248,%edx$/;"	l
f01038dd	obj/kern/kernel.asm	/^f01038dd:	c1 fa 04             	sar    $0x4,%edx$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	69 d2 19 9c 8f c1    	imul   $0xc18f9c19,%edx,%edx$/;"	l
f01038e6	obj/kern/kernel.asm	/^f01038e6:	09 d0                	or     %edx,%eax$/;"	l
f01038e8	obj/kern/kernel.asm	/^f01038e8:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f01038eb	obj/kern/kernel.asm	/^f01038eb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f01038ff	obj/kern/kernel.asm	/^f01038ff:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	6a 44                	push   $0x44$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	6a 00                	push   $0x0$/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	53                   	push   %ebx$/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e:	e8 77 27 00 00       	call   f010608a <memset>$/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	c7 43 3c fc df bf ee 	movl   $0xeebfdffc,0x3c(%ebx)$/;"	l
f010392c	obj/kern/kernel.asm	/^f010392c:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103932	obj/kern/kernel.asm	/^f0103932:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	c6 83 70 02 00 00 00 	movb   $0x0,0x270(%ebx)$/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	c6 83 71 02 00 00 00 	movb   $0x0,0x271(%ebx)$/;"	l
f010394e	obj/kern/kernel.asm	/^f010394e:	c7 83 88 02 00 00 00 	movl   $0x0,0x288(%ebx)$/;"	l
f0103955	obj/kern/kernel.asm	/^f0103955:	00 00 00 $/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	c7 83 84 02 00 00 00 	movl   $0x0,0x284(%ebx)$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	00 00 00 $/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	c7 83 8c 02 00 00 05 	movl   $0x5,0x28c(%ebx)$/;"	l
f0103969	obj/kern/kernel.asm	/^f0103969:	00 00 00 $/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	a3 4c 82 22 f0       	mov    %eax,0xf022824c$/;"	l
f0103974	obj/kern/kernel.asm	/^f0103974:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103977	obj/kern/kernel.asm	/^f0103977:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103979	obj/kern/kernel.asm	/^f0103979:	83 c4 10             	add    $0x10,%esp$/;"	l
f010397c	obj/kern/kernel.asm	/^f010397c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103981	obj/kern/kernel.asm	/^f0103981:	eb 0c                	jmp    f010398f <env_alloc+0x186>$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	eb 05                	jmp    f010398f <env_alloc+0x186>$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010398f	obj/kern/kernel.asm	/^f010398f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	c9                   	leave  $/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	c3                   	ret    $/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994 <env_create>:$/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994:	55                   	push   %ebp$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	89 e5                	mov    %esp,%ebp$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	57                   	push   %edi$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	56                   	push   %esi$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	53                   	push   %ebx$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	83 ec 34             	sub    $0x34,%esp$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	6a 00                	push   $0x0$/;"	l
f01039a2	obj/kern/kernel.asm	/^f01039a2:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	50                   	push   %eax$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	e8 5e fe ff ff       	call   f0103809 <env_alloc>$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01039b1	obj/kern/kernel.asm	/^f01039b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f01039ba	obj/kern/kernel.asm	/^f01039ba:	74 15                	je     f01039d1 <env_create+0x3d>$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	57                   	push   %edi$/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	68 c4 83 10 f0       	push   $0xf01083c4$/;"	l
f01039c2	obj/kern/kernel.asm	/^f01039c2:	68 75 01 00 00       	push   $0x175$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	e8 6f c6 ff ff       	call   f0100040 <_panic>$/;"	l
f01039d1	obj/kern/kernel.asm	/^f01039d1:	89 fb                	mov    %edi,%ebx$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f01039da	obj/kern/kernel.asm	/^f01039da:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	01 de                	add    %ebx,%esi$/;"	l
f01039df	obj/kern/kernel.asm	/^f01039df:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	77 15                	ja     f0103a01 <env_create+0x6d>$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	50                   	push   %eax$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	68 7a 01 00 00       	push   $0x17a$/;"	l
f01039f7	obj/kern/kernel.asm	/^f01039f7:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f01039fc	obj/kern/kernel.asm	/^f01039fc:	e8 3f c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	eb 44                	jmp    f0103a4f <env_create+0xbb>$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	75 3c                	jne    f0103a4c <env_create+0xb8>$/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103a13	obj/kern/kernel.asm	/^f0103a13:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103a16	obj/kern/kernel.asm	/^f0103a16:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	e8 38 fc ff ff       	call   f0103656 <region_alloc>$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	89 f8                	mov    %edi,%eax$/;"	l
f0103a26	obj/kern/kernel.asm	/^f0103a26:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103a29	obj/kern/kernel.asm	/^f0103a29:	50                   	push   %eax$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	e8 0d 27 00 00       	call   f010613f <memcpy>$/;"	l
f0103a32	obj/kern/kernel.asm	/^f0103a32:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	29 c2                	sub    %eax,%edx$/;"	l
f0103a3d	obj/kern/kernel.asm	/^f0103a3d:	52                   	push   %edx$/;"	l
f0103a3e	obj/kern/kernel.asm	/^f0103a3e:	6a 00                	push   $0x0$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0103a43	obj/kern/kernel.asm	/^f0103a43:	50                   	push   %eax$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	e8 41 26 00 00       	call   f010608a <memset>$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103a4f	obj/kern/kernel.asm	/^f0103a4f:	39 de                	cmp    %ebx,%esi$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	77 b8                	ja     f0103a0b <env_create+0x77>$/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0103a58	obj/kern/kernel.asm	/^f0103a58:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a5d	obj/kern/kernel.asm	/^f0103a5d:	77 15                	ja     f0103a74 <env_create+0xe0>$/;"	l
f0103a5f	obj/kern/kernel.asm	/^f0103a5f:	50                   	push   %eax$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	68 83 01 00 00       	push   $0x183$/;"	l
f0103a6a	obj/kern/kernel.asm	/^f0103a6a:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	e8 cc c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a79	obj/kern/kernel.asm	/^f0103a79:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103a82	obj/kern/kernel.asm	/^f0103a82:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103a8a	obj/kern/kernel.asm	/^f0103a8a:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	89 f8                	mov    %edi,%eax$/;"	l
f0103a91	obj/kern/kernel.asm	/^f0103a91:	e8 c0 fb ff ff       	call   f0103656 <region_alloc>$/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103a99	obj/kern/kernel.asm	/^f0103a99:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103a9c	obj/kern/kernel.asm	/^f0103a9c:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	75 07                	jne    f0103aab <env_create+0x117>$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae:	5b                   	pop    %ebx$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	5e                   	pop    %esi$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	5f                   	pop    %edi$/;"	l
f0103ab1	obj/kern/kernel.asm	/^f0103ab1:	5d                   	pop    %ebp$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	c3                   	ret    $/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3 <env_free>:$/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3:	55                   	push   %ebp$/;"	l
f0103ab4	obj/kern/kernel.asm	/^f0103ab4:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ab6	obj/kern/kernel.asm	/^f0103ab6:	57                   	push   %edi$/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	56                   	push   %esi$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	53                   	push   %ebx$/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103abc	obj/kern/kernel.asm	/^f0103abc:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103abf	obj/kern/kernel.asm	/^f0103abf:	e8 e6 2b 00 00       	call   f01066aa <cpunum>$/;"	l
f0103ac4	obj/kern/kernel.asm	/^f0103ac4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	39 b8 28 90 22 f0    	cmp    %edi,-0xfdd6fd8(%eax)$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	75 30                	jne    f0103b06 <env_free+0x53>$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0103adb	obj/kern/kernel.asm	/^f0103adb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	77 15                	ja     f0103af7 <env_free+0x44>$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	50                   	push   %eax$/;"	l
f0103ae3	obj/kern/kernel.asm	/^f0103ae3:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	68 b1 01 00 00       	push   $0x1b1$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	e8 49 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103b06	obj/kern/kernel.asm	/^f0103b06:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	89 d0                	mov    %edx,%eax$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103b0e	obj/kern/kernel.asm	/^f0103b0e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	0f 84 a8 00 00 00    	je     f0103bcb <env_free+0x118>$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	89 f0                	mov    %esi,%eax$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	39 05 8c 8e 22 f0    	cmp    %eax,0xf0228e8c$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	77 15                	ja     f0103b4e <env_free+0x9b>$/;"	l
f0103b39	obj/kern/kernel.asm	/^f0103b39:	56                   	push   %esi$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	68 c0 01 00 00       	push   $0x1c0$/;"	l
f0103b44	obj/kern/kernel.asm	/^f0103b44:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f0103b49	obj/kern/kernel.asm	/^f0103b49:	e8 f2 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103b54	obj/kern/kernel.asm	/^f0103b54:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	01 $/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	74 17                	je     f0103b7d <env_free+0xca>$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	89 d8                	mov    %ebx,%eax$/;"	l
f0103b6b	obj/kern/kernel.asm	/^f0103b6b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	50                   	push   %eax$/;"	l
f0103b72	obj/kern/kernel.asm	/^f0103b72:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	e8 da de ff ff       	call   f0101a54 <page_remove>$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103b86	obj/kern/kernel.asm	/^f0103b86:	75 d4                	jne    f0103b5c <env_free+0xa9>$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103b8b	obj/kern/kernel.asm	/^f0103b8b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103b98	obj/kern/kernel.asm	/^f0103b98:	3b 05 8c 8e 22 f0    	cmp    0xf0228e8c,%eax$/;"	l
f0103b9e	obj/kern/kernel.asm	/^f0103b9e:	72 14                	jb     f0103bb4 <env_free+0x101>$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	68 1c 78 10 f0       	push   $0xf010781c$/;"	l
f0103ba8	obj/kern/kernel.asm	/^f0103ba8:	6a 53                	push   $0x53$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	e8 8c c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	a1 94 8e 22 f0       	mov    0xf0228e94,%eax$/;"	l
f0103bbc	obj/kern/kernel.asm	/^f0103bbc:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	50                   	push   %eax$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	e8 db db ff ff       	call   f01017a3 <page_decref>$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103bcf	obj/kern/kernel.asm	/^f0103bcf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103bd2	obj/kern/kernel.asm	/^f0103bd2:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	0f 85 29 ff ff ff    	jne    f0103b06 <env_free+0x53>$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	77 15                	ja     f0103bfc <env_free+0x149>$/;"	l
f0103be7	obj/kern/kernel.asm	/^f0103be7:	50                   	push   %eax$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	68 ce 01 00 00       	push   $0x1ce$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f0103bf7	obj/kern/kernel.asm	/^f0103bf7:	e8 44 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103c0b	obj/kern/kernel.asm	/^f0103c0b:	3b 05 8c 8e 22 f0    	cmp    0xf0228e8c,%eax$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	72 14                	jb     f0103c27 <env_free+0x174>$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	68 1c 78 10 f0       	push   $0xf010781c$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	6a 53                	push   $0x53$/;"	l
f0103c1d	obj/kern/kernel.asm	/^f0103c1d:	68 23 71 10 f0       	push   $0xf0107123$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	e8 19 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	8b 15 94 8e 22 f0    	mov    0xf0228e94,%edx$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103c33	obj/kern/kernel.asm	/^f0103c33:	50                   	push   %eax$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	e8 6a db ff ff       	call   f01017a3 <page_decref>$/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103c40	obj/kern/kernel.asm	/^f0103c40:	a1 4c 82 22 f0       	mov    0xf022824c,%eax$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103c48	obj/kern/kernel.asm	/^f0103c48:	89 3d 4c 82 22 f0    	mov    %edi,0xf022824c$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	5b                   	pop    %ebx$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	5e                   	pop    %esi$/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56:	5f                   	pop    %edi$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	5d                   	pop    %ebp$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	c3                   	ret    $/;"	l
f0103c59	obj/kern/kernel.asm	/^f0103c59 <env_destroy>:$/;"	l
f0103c59	obj/kern/kernel.asm	/^f0103c59:	55                   	push   %ebp$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c5c	obj/kern/kernel.asm	/^f0103c5c:	53                   	push   %ebx$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	75 19                	jne    f0103c82 <env_destroy+0x29>$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	e8 3c 2a 00 00       	call   f01066aa <cpunum>$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c71	obj/kern/kernel.asm	/^f0103c71:	3b 98 28 90 22 f0    	cmp    -0xfdd6fd8(%eax),%ebx$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	74 09                	je     f0103c82 <env_destroy+0x29>$/;"	l
f0103c79	obj/kern/kernel.asm	/^f0103c79:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103c80	obj/kern/kernel.asm	/^f0103c80:	eb 33                	jmp    f0103cb5 <env_destroy+0x5c>$/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103c85	obj/kern/kernel.asm	/^f0103c85:	53                   	push   %ebx$/;"	l
f0103c86	obj/kern/kernel.asm	/^f0103c86:	e8 28 fe ff ff       	call   f0103ab3 <env_free>$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	e8 1a 2a 00 00       	call   f01066aa <cpunum>$/;"	l
f0103c90	obj/kern/kernel.asm	/^f0103c90:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c93	obj/kern/kernel.asm	/^f0103c93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	3b 98 28 90 22 f0    	cmp    -0xfdd6fd8(%eax),%ebx$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	75 17                	jne    f0103cb5 <env_destroy+0x5c>$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	e8 07 2a 00 00       	call   f01066aa <cpunum>$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ca6	obj/kern/kernel.asm	/^f0103ca6:	c7 80 28 90 22 f0 00 	movl   $0x0,-0xfdd6fd8(%eax)$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	00 00 00 $/;"	l
f0103cb0	obj/kern/kernel.asm	/^f0103cb0:	e8 09 0d 00 00       	call   f01049be <sched_yield>$/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103cb8	obj/kern/kernel.asm	/^f0103cb8:	c9                   	leave  $/;"	l
f0103cb9	obj/kern/kernel.asm	/^f0103cb9:	c3                   	ret    $/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba <env_pop_tf>:$/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba:	55                   	push   %ebp$/;"	l
f0103cbb	obj/kern/kernel.asm	/^f0103cbb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	53                   	push   %ebx$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	e8 e4 29 00 00       	call   f01066aa <cpunum>$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	8b 98 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%ebx$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	e8 d6 29 00 00       	call   f01066aa <cpunum>$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103cda	obj/kern/kernel.asm	/^f0103cda:	68 60 34 12 f0       	push   $0xf0123460$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	e8 d1 2c 00 00       	call   f01069b5 <spin_unlock>$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	f3 90                	pause  $/;"	l
f0103ce6	obj/kern/kernel.asm	/^f0103ce6:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103ce9	obj/kern/kernel.asm	/^f0103ce9:	61                   	popa   $/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	07                   	pop    %es$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	1f                   	pop    %ds$/;"	l
f0103cec	obj/kern/kernel.asm	/^f0103cec:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	cf                   	iret   $/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	68 b5 83 10 f0       	push   $0xf01083b5$/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8:	68 06 02 00 00       	push   $0x206$/;"	l
f0103cfd	obj/kern/kernel.asm	/^f0103cfd:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	e8 39 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07 <env_run>:$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	55                   	push   %ebp$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	e8 98 29 00 00       	call   f01066aa <cpunum>$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d15	obj/kern/kernel.asm	/^f0103d15:	83 b8 28 90 22 f0 00 	cmpl   $0x0,-0xfdd6fd8(%eax)$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	74 29                	je     f0103d47 <env_run+0x40>$/;"	l
f0103d1e	obj/kern/kernel.asm	/^f0103d1e:	e8 87 29 00 00       	call   f01066aa <cpunum>$/;"	l
f0103d23	obj/kern/kernel.asm	/^f0103d23:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d26	obj/kern/kernel.asm	/^f0103d26:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103d30	obj/kern/kernel.asm	/^f0103d30:	75 15                	jne    f0103d47 <env_run+0x40>$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	e8 73 29 00 00       	call   f01066aa <cpunum>$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103d47	obj/kern/kernel.asm	/^f0103d47:	e8 5e 29 00 00       	call   f01066aa <cpunum>$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103d52	obj/kern/kernel.asm	/^f0103d52:	89 90 28 90 22 f0    	mov    %edx,-0xfdd6fd8(%eax)$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	e8 4d 29 00 00       	call   f01066aa <cpunum>$/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103d6d	obj/kern/kernel.asm	/^f0103d6d:	e8 38 29 00 00       	call   f01066aa <cpunum>$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d75	obj/kern/kernel.asm	/^f0103d75:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103d7f	obj/kern/kernel.asm	/^f0103d7f:	e8 26 29 00 00       	call   f01066aa <cpunum>$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	77 15                	ja     f0103dac <env_run+0xa5>$/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	50                   	push   %eax$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	68 29 02 00 00       	push   $0x229$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	68 99 83 10 f0       	push   $0xf0108399$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	e8 94 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103db1	obj/kern/kernel.asm	/^f0103db1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	e8 f1 28 00 00       	call   f01066aa <cpunum>$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0103dc2	obj/kern/kernel.asm	/^f0103dc2:	0f ae 48 70          	fxrstor 0x70(%eax)$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	e8 df 28 00 00       	call   f01066aa <cpunum>$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f0103dd7	obj/kern/kernel.asm	/^f0103dd7:	e8 de fe ff ff       	call   f0103cba <env_pop_tf>$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc <mc146818_read>:$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	55                   	push   %ebp$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ddf	obj/kern/kernel.asm	/^f0103ddf:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103de7	obj/kern/kernel.asm	/^f0103de7:	ee                   	out    %al,(%dx)$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103ded	obj/kern/kernel.asm	/^f0103ded:	ec                   	in     (%dx),%al$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	5d                   	pop    %ebp$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	c3                   	ret    $/;"	l
f0103df3	obj/kern/kernel.asm	/^f0103df3 <mc146818_write>:$/;"	l
f0103df3	obj/kern/kernel.asm	/^f0103df3:	55                   	push   %ebp$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	89 e5                	mov    %esp,%ebp$/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103dfb	obj/kern/kernel.asm	/^f0103dfb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103dfe	obj/kern/kernel.asm	/^f0103dfe:	ee                   	out    %al,(%dx)$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103e07	obj/kern/kernel.asm	/^f0103e07:	ee                   	out    %al,(%dx)$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	5d                   	pop    %ebp$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	c3                   	ret    $/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a <irq_setmask_8259A>:$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	55                   	push   %ebp$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	56                   	push   %esi$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	53                   	push   %ebx$/;"	l
f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103e12	obj/kern/kernel.asm	/^f0103e12:	66 a3 a8 33 12 f0    	mov    %ax,0xf01233a8$/;"	l
f0103e18	obj/kern/kernel.asm	/^f0103e18:	80 3d 50 82 22 f0 00 	cmpb   $0x0,0xf0228250$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	74 5a                	je     f0103e7b <irq_setmask_8259A+0x71>$/;"	l
f0103e21	obj/kern/kernel.asm	/^f0103e21:	89 c6                	mov    %eax,%esi$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	ee                   	out    %al,(%dx)$/;"	l
f0103e29	obj/kern/kernel.asm	/^f0103e29:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	ee                   	out    %al,(%dx)$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36:	68 e8 83 10 f0       	push   $0xf01083e8$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	e8 1b 01 00 00       	call   f0103f5b <cprintf>$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e43	obj/kern/kernel.asm	/^f0103e43:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	f7 d6                	not    %esi$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	73 11                	jae    f0103e63 <irq_setmask_8259A+0x59>$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	53                   	push   %ebx$/;"	l
f0103e56	obj/kern/kernel.asm	/^f0103e56:	68 93 88 10 f0       	push   $0xf0108893$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	e8 fb 00 00 00       	call   f0103f5b <cprintf>$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	75 e2                	jne    f0103e4d <irq_setmask_8259A+0x43>$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	68 4b 83 10 f0       	push   $0xf010834b$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	e8 e3 00 00 00       	call   f0103f5b <cprintf>$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	5b                   	pop    %ebx$/;"	l
f0103e7f	obj/kern/kernel.asm	/^f0103e7f:	5e                   	pop    %esi$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	5d                   	pop    %ebp$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	c3                   	ret    $/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82 <pic_init>:$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	c6 05 50 82 22 f0 01 	movb   $0x1,0xf0228250$/;"	l
f0103e89	obj/kern/kernel.asm	/^f0103e89:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	ee                   	out    %al,(%dx)$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	ee                   	out    %al,(%dx)$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	ee                   	out    %al,(%dx)$/;"	l
f0103ea5	obj/kern/kernel.asm	/^f0103ea5:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	ee                   	out    %al,(%dx)$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	ee                   	out    %al,(%dx)$/;"	l
f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	ee                   	out    %al,(%dx)$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103ec6	obj/kern/kernel.asm	/^f0103ec6:	ee                   	out    %al,(%dx)$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	ee                   	out    %al,(%dx)$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103ed7	obj/kern/kernel.asm	/^f0103ed7:	ee                   	out    %al,(%dx)$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	ee                   	out    %al,(%dx)$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	ee                   	out    %al,(%dx)$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	ee                   	out    %al,(%dx)$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	ee                   	out    %al,(%dx)$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	ee                   	out    %al,(%dx)$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	74 13                	je     f0103f20 <pic_init+0x9e>$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	55                   	push   %ebp$/;"	l
f0103f0e	obj/kern/kernel.asm	/^f0103f0e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103f13	obj/kern/kernel.asm	/^f0103f13:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103f16	obj/kern/kernel.asm	/^f0103f16:	50                   	push   %eax$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	e8 ee fe ff ff       	call   f0103e0a <irq_setmask_8259A>$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f1f	obj/kern/kernel.asm	/^f0103f1f:	c9                   	leave  $/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	f3 c3                	repz ret $/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22 <putch>:$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	55                   	push   %ebp$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103f2b	obj/kern/kernel.asm	/^f0103f2b:	e8 54 c8 ff ff       	call   f0100784 <cputchar>$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	c9                   	leave  $/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	c3                   	ret    $/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35 <vcprintf>:$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	55                   	push   %ebp$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103f42	obj/kern/kernel.asm	/^f0103f42:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	50                   	push   %eax$/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	68 22 3f 10 f0       	push   $0xf0103f22$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	e8 bf 19 00 00       	call   f0105915 <vprintfmt>$/;"	l
f0103f56	obj/kern/kernel.asm	/^f0103f56:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103f59	obj/kern/kernel.asm	/^f0103f59:	c9                   	leave  $/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	c3                   	ret    $/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b <cprintf>:$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	55                   	push   %ebp$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	50                   	push   %eax$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	e8 c8 ff ff ff       	call   f0103f35 <vcprintf>$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	c9                   	leave  $/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	c3                   	ret    $/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f <trap_init_percpu>:$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	55                   	push   %ebp$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f72	obj/kern/kernel.asm	/^f0103f72:	57                   	push   %edi$/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	56                   	push   %esi$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	53                   	push   %ebx$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	e8 2d 27 00 00       	call   f01066aa <cpunum>$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	bf 00 00 00 f0       	mov    $0xf0000000,%edi$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	29 c7                	sub    %eax,%edi$/;"	l
f0103f87	obj/kern/kernel.asm	/^f0103f87:	e8 1e 27 00 00       	call   f01066aa <cpunum>$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	89 b8 30 90 22 f0    	mov    %edi,-0xfdd6fd0(%eax)$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	e8 10 27 00 00       	call   f01066aa <cpunum>$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	66 c7 80 34 90 22 f0 	movw   $0x10,-0xfdd6fcc(%eax)$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	10 00 $/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	e8 ff 26 00 00       	call   f01066aa <cpunum>$/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103fae	obj/kern/kernel.asm	/^f0103fae:	66 c7 80 92 90 22 f0 	movw   $0x68,-0xfdd6f6e(%eax)$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	68 00 $/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	e8 ee 26 00 00       	call   f01066aa <cpunum>$/;"	l
f0103fbc	obj/kern/kernel.asm	/^f0103fbc:	8d 58 05             	lea    0x5(%eax),%ebx$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	e8 e6 26 00 00       	call   f01066aa <cpunum>$/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	89 c6                	mov    %eax,%esi$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	e8 df 26 00 00       	call   f01066aa <cpunum>$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	e8 d7 26 00 00       	call   f01066aa <cpunum>$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	66 c7 04 dd 40 33 12 	movw   $0x67,-0xfedccc0(,%ebx,8)$/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	f0 67 00 $/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	6b f6 74             	imul   $0x74,%esi,%esi$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	81 c6 2c 90 22 f0    	add    $0xf022902c,%esi$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	66 89 34 dd 42 33 12 	mov    %si,-0xfedccbe(,%ebx,8)$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	f0 $/;"	l
f0103fee	obj/kern/kernel.asm	/^f0103fee:	6b 55 e4 74          	imul   $0x74,-0x1c(%ebp),%edx$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	81 c2 2c 90 22 f0    	add    $0xf022902c,%edx$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	88 14 dd 44 33 12 f0 	mov    %dl,-0xfedccbc(,%ebx,8)$/;"	l
f0104002	obj/kern/kernel.asm	/^f0104002:	c6 04 dd 45 33 12 f0 	movb   $0x99,-0xfedccbb(,%ebx,8)$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	99 $/;"	l
f010400a	obj/kern/kernel.asm	/^f010400a:	c6 04 dd 46 33 12 f0 	movb   $0x40,-0xfedccba(,%ebx,8)$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	40 $/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	05 2c 90 22 f0       	add    $0xf022902c,%eax$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	88 04 dd 47 33 12 f0 	mov    %al,-0xfedccb9(,%ebx,8)$/;"	l
f0104024	obj/kern/kernel.asm	/^f0104024:	e8 81 26 00 00       	call   f01066aa <cpunum>$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	80 24 c5 6d 33 12 f0 	andb   $0xef,-0xfedcc93(,%eax,8)$/;"	l
f0104030	obj/kern/kernel.asm	/^f0104030:	ef $/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	e8 74 26 00 00       	call   f01066aa <cpunum>$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	8d 04 c5 28 00 00 00 	lea    0x28(,%eax,8),%eax$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	0f 00 d8             	ltr    %ax$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	b8 ac 33 12 f0       	mov    $0xf01233ac,%eax$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	0f 01 18             	lidtl  (%eax)$/;"	l
f0104048	obj/kern/kernel.asm	/^f0104048:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	0f 30                	wrmsr  $/;"	l
f0104059	obj/kern/kernel.asm	/^f0104059:	b9 75 01 00 00       	mov    $0x175,%ecx$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	89 f8                	mov    %edi,%eax$/;"	l
f0104060	obj/kern/kernel.asm	/^f0104060:	0f 30                	wrmsr  $/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	b8 84 48 10 f0       	mov    $0xf0104884,%eax$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	b9 76 01 00 00       	mov    $0x176,%ecx$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	0f 30                	wrmsr  $/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	80 cc 02             	or     $0x2,%ah$/;"	l
f0104074	obj/kern/kernel.asm	/^f0104074:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	5b                   	pop    %ebx$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	5e                   	pop    %esi$/;"	l
f010407c	obj/kern/kernel.asm	/^f010407c:	5f                   	pop    %edi$/;"	l
f010407d	obj/kern/kernel.asm	/^f010407d:	5d                   	pop    %ebp$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	c3                   	ret    $/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f <trap_init>:$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	8b 0c 85 b2 33 12 f0 	mov    -0xfedcc4e(,%eax,4),%ecx$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	66 89 0c c5 60 82 22 	mov    %cx,-0xfdd7da0(,%eax,8)$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	f0 $/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	66 c7 04 c5 62 82 22 	movw   $0x8,-0xfdd7d9e(,%eax,8)$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	f0 08 00 $/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	c6 04 c5 64 82 22 f0 	movb   $0x0,-0xfdd7d9c(,%eax,8)$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	00 $/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01040a8	obj/kern/kernel.asm	/^f01040a8:	0f 94 c2             	sete   %dl$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	f7 da                	neg    %edx$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	83 e2 03             	and    $0x3,%edx$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	83 ca 8e             	or     $0xffffff8e,%edx$/;"	l
f01040b6	obj/kern/kernel.asm	/^f01040b6:	88 14 c5 65 82 22 f0 	mov    %dl,-0xfdd7d9b(,%eax,8)$/;"	l
f01040bd	obj/kern/kernel.asm	/^f01040bd:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	66 89 0c c5 66 82 22 	mov    %cx,-0xfdd7d9a(,%eax,8)$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	f0 $/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	83 f8 14             	cmp    $0x14,%eax$/;"	l
f01040ce	obj/kern/kernel.asm	/^f01040ce:	75 b4                	jne    f0104084 <trap_init+0x5>$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	a1 02 34 12 f0       	mov    0xf0123402,%eax$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	66 a3 e0 83 22 f0    	mov    %ax,0xf02283e0$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	66 c7 05 e2 83 22 f0 	movw   $0x8,0xf02283e2$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	08 00 $/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	c6 05 e4 83 22 f0 00 	movb   $0x0,0xf02283e4$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	c6 05 e5 83 22 f0 ee 	movb   $0xee,0xf02283e5$/;"	l
f01040f2	obj/kern/kernel.asm	/^f01040f2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	66 a3 e6 83 22 f0    	mov    %ax,0xf02283e6$/;"	l
f01040fb	obj/kern/kernel.asm	/^f01040fb:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104100	obj/kern/kernel.asm	/^f0104100:	8b 14 85 86 33 12 f0 	mov    -0xfedcc7a(,%eax,4),%edx$/;"	l
f0104107	obj/kern/kernel.asm	/^f0104107:	66 89 14 c5 60 82 22 	mov    %dx,-0xfdd7da0(,%eax,8)$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	f0 $/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	66 c7 04 c5 62 82 22 	movw   $0x8,-0xfdd7d9e(,%eax,8)$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	f0 08 00 $/;"	l
f0104119	obj/kern/kernel.asm	/^f0104119:	c6 04 c5 64 82 22 f0 	movb   $0x0,-0xfdd7d9c(,%eax,8)$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	00 $/;"	l
f0104121	obj/kern/kernel.asm	/^f0104121:	c6 04 c5 65 82 22 f0 	movb   $0x8e,-0xfdd7d9b(,%eax,8)$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	8e $/;"	l
f0104129	obj/kern/kernel.asm	/^f0104129:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	66 89 14 c5 66 82 22 	mov    %dx,-0xfdd7d9a(,%eax,8)$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	f0 $/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	75 c4                	jne    f0104100 <trap_init+0x81>$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	55                   	push   %ebp$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	89 e5                	mov    %esp,%ebp$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	e8 28 fe ff ff       	call   f0103f6f <trap_init_percpu>$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	c9                   	leave  $/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	c3                   	ret    $/;"	l
f0104149	obj/kern/kernel.asm	/^f0104149 <print_regs>:$/;"	l
f0104149	obj/kern/kernel.asm	/^f0104149:	55                   	push   %ebp$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	89 e5                	mov    %esp,%ebp$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	53                   	push   %ebx$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	ff 33                	pushl  (%ebx)$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	68 fc 83 10 f0       	push   $0xf01083fc$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	e8 fc fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	68 0b 84 10 f0       	push   $0xf010840b$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	e8 ec fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f010416f	obj/kern/kernel.asm	/^f010416f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0104175	obj/kern/kernel.asm	/^f0104175:	68 1a 84 10 f0       	push   $0xf010841a$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	e8 dc fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	68 29 84 10 f0       	push   $0xf0108429$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	e8 cc fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	68 38 84 10 f0       	push   $0xf0108438$/;"	l
f010419a	obj/kern/kernel.asm	/^f010419a:	e8 bc fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	83 c4 08             	add    $0x8,%esp$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	68 47 84 10 f0       	push   $0xf0108447$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa:	e8 ac fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f01041af	obj/kern/kernel.asm	/^f01041af:	83 c4 08             	add    $0x8,%esp$/;"	l
f01041b2	obj/kern/kernel.asm	/^f01041b2:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	68 56 84 10 f0       	push   $0xf0108456$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	e8 9c fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	83 c4 08             	add    $0x8,%esp$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f01041c5	obj/kern/kernel.asm	/^f01041c5:	68 65 84 10 f0       	push   $0xf0108465$/;"	l
f01041ca	obj/kern/kernel.asm	/^f01041ca:	e8 8c fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01041d5	obj/kern/kernel.asm	/^f01041d5:	c9                   	leave  $/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	c3                   	ret    $/;"	l
f01041d7	obj/kern/kernel.asm	/^f01041d7 <print_trapframe>:$/;"	l
f01041d7	obj/kern/kernel.asm	/^f01041d7:	55                   	push   %ebp$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01041da	obj/kern/kernel.asm	/^f01041da:	56                   	push   %esi$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	53                   	push   %ebx$/;"	l
f01041dc	obj/kern/kernel.asm	/^f01041dc:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	e8 c6 24 00 00       	call   f01066aa <cpunum>$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01041e7	obj/kern/kernel.asm	/^f01041e7:	50                   	push   %eax$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	53                   	push   %ebx$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	68 c9 84 10 f0       	push   $0xf01084c9$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	e8 68 fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6:	e8 4e ff ff ff       	call   f0104149 <print_regs>$/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	83 c4 08             	add    $0x8,%esp$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	50                   	push   %eax$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	68 e7 84 10 f0       	push   $0xf01084e7$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	e8 4e fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	50                   	push   %eax$/;"	l
f0104215	obj/kern/kernel.asm	/^f0104215:	68 fa 84 10 f0       	push   $0xf01084fa$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	e8 3c fd ff ff       	call   f0103f5b <cprintf>$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	77 09                	ja     f0104233 <print_trapframe+0x5c>$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	8b 14 85 a0 87 10 f0 	mov    -0xfef7860(,%eax,4),%edx$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	eb 1f                	jmp    f0104252 <print_trapframe+0x7b>$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	74 15                	je     f010424d <print_trapframe+0x76>$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	b9 93 84 10 f0       	mov    $0xf0108493,%ecx$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	ba 80 84 10 f0       	mov    $0xf0108480,%edx$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	eb 05                	jmp    f0104252 <print_trapframe+0x7b>$/;"	l
f010424d	obj/kern/kernel.asm	/^f010424d:	ba 74 84 10 f0       	mov    $0xf0108474,%edx$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	52                   	push   %edx$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	50                   	push   %eax$/;"	l
f0104257	obj/kern/kernel.asm	/^f0104257:	68 0d 85 10 f0       	push   $0xf010850d$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	e8 fa fc ff ff       	call   f0103f5b <cprintf>$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	3b 1d 60 8a 22 f0    	cmp    0xf0228a60,%ebx$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	75 1a                	jne    f0104286 <print_trapframe+0xaf>$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	75 14                	jne    f0104286 <print_trapframe+0xaf>$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104275	obj/kern/kernel.asm	/^f0104275:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278:	50                   	push   %eax$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	68 1f 85 10 f0       	push   $0xf010851f$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	e8 d8 fc ff ff       	call   f0103f5b <cprintf>$/;"	l
f0104283	obj/kern/kernel.asm	/^f0104283:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	68 2e 85 10 f0       	push   $0xf010852e$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	e8 c5 fc ff ff       	call   f0103f5b <cprintf>$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f010429d	obj/kern/kernel.asm	/^f010429d:	75 49                	jne    f01042e8 <print_trapframe+0x111>$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	89 c2                	mov    %eax,%edx$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	83 e2 01             	and    $0x1,%edx$/;"	l
f01042a7	obj/kern/kernel.asm	/^f01042a7:	ba ad 84 10 f0       	mov    $0xf01084ad,%edx$/;"	l
f01042ac	obj/kern/kernel.asm	/^f01042ac:	b9 a2 84 10 f0       	mov    $0xf01084a2,%ecx$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	89 c2                	mov    %eax,%edx$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	83 e2 02             	and    $0x2,%edx$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	ba bf 84 10 f0       	mov    $0xf01084bf,%edx$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	be b9 84 10 f0       	mov    $0xf01084b9,%esi$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	83 e0 04             	and    $0x4,%eax$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	be 17 86 10 f0       	mov    $0xf0108617,%esi$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	b8 c4 84 10 f0       	mov    $0xf01084c4,%eax$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	51                   	push   %ecx$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	52                   	push   %edx$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	50                   	push   %eax$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	68 3c 85 10 f0       	push   $0xf010853c$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	e8 78 fc ff ff       	call   f0103f5b <cprintf>$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	eb 10                	jmp    f01042f8 <print_trapframe+0x121>$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	68 4b 83 10 f0       	push   $0xf010834b$/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0:	e8 66 fc ff ff       	call   f0103f5b <cprintf>$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01042fb	obj/kern/kernel.asm	/^f01042fb:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	68 4b 85 10 f0       	push   $0xf010854b$/;"	l
f0104303	obj/kern/kernel.asm	/^f0104303:	e8 53 fc ff ff       	call   f0103f5b <cprintf>$/;"	l
f0104308	obj/kern/kernel.asm	/^f0104308:	83 c4 08             	add    $0x8,%esp$/;"	l
f010430b	obj/kern/kernel.asm	/^f010430b:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	50                   	push   %eax$/;"	l
f0104310	obj/kern/kernel.asm	/^f0104310:	68 5a 85 10 f0       	push   $0xf010855a$/;"	l
f0104315	obj/kern/kernel.asm	/^f0104315:	e8 41 fc ff ff       	call   f0103f5b <cprintf>$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010431d	obj/kern/kernel.asm	/^f010431d:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	68 6d 85 10 f0       	push   $0xf010856d$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	e8 31 fc ff ff       	call   f0103f5b <cprintf>$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104331	obj/kern/kernel.asm	/^f0104331:	74 25                	je     f0104358 <print_trapframe+0x181>$/;"	l
f0104333	obj/kern/kernel.asm	/^f0104333:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104336	obj/kern/kernel.asm	/^f0104336:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0104339	obj/kern/kernel.asm	/^f0104339:	68 7c 85 10 f0       	push   $0xf010857c$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	e8 18 fc ff ff       	call   f0103f5b <cprintf>$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	50                   	push   %eax$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	68 8b 85 10 f0       	push   $0xf010858b$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	e8 06 fc ff ff       	call   f0103f5b <cprintf>$/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104358	obj/kern/kernel.asm	/^f0104358:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	5b                   	pop    %ebx$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	5e                   	pop    %esi$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	5d                   	pop    %ebp$/;"	l
f010435e	obj/kern/kernel.asm	/^f010435e:	c3                   	ret    $/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f <page_fault_handler>:$/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f:	55                   	push   %ebp$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	89 e5                	mov    %esp,%ebp$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	57                   	push   %edi$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	56                   	push   %esi$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	53                   	push   %ebx$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	75 15                	jne    f0104389 <page_fault_handler+0x2a>$/;"	l
f0104374	obj/kern/kernel.asm	/^f0104374:	56                   	push   %esi$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	68 9e 85 10 f0       	push   $0xf010859e$/;"	l
f010437a	obj/kern/kernel.asm	/^f010437a:	68 55 01 00 00       	push   $0x155$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	68 bc 85 10 f0       	push   $0xf01085bc$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	e8 b7 bc ff ff       	call   f0100040 <_panic>$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	e8 1c 23 00 00       	call   f01066aa <cpunum>$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	0f 84 d5 00 00 00    	je     f0104476 <page_fault_handler+0x117>$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	e8 04 23 00 00       	call   f01066aa <cpunum>$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01043af	obj/kern/kernel.asm	/^f01043af:	81 78 3c ff ef bf ee 	cmpl   $0xeebfefff,0x3c(%eax)$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	76 35                	jbe    f01043ed <page_fault_handler+0x8e>$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	e8 ed 22 00 00       	call   f01066aa <cpunum>$/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	81 78 3c ff ff bf ee 	cmpl   $0xeebfffff,0x3c(%eax)$/;"	l
f01043cd	obj/kern/kernel.asm	/^f01043cd:	77 1e                	ja     f01043ed <page_fault_handler+0x8e>$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	e8 d6 22 00 00       	call   f01066aa <cpunum>$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	83 e8 38             	sub    $0x38,%eax$/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	89 c7                	mov    %eax,%edi$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	0f 84 8b 00 00 00    	je     f0104476 <page_fault_handler+0x117>$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	eb 1c                	jmp    f0104409 <page_fault_handler+0xaa>$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	e8 b8 22 00 00       	call   f01066aa <cpunum>$/;"	l
f01043f2	obj/kern/kernel.asm	/^f01043f2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043f5	obj/kern/kernel.asm	/^f01043f5:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01043fb	obj/kern/kernel.asm	/^f01043fb:	81 78 3c 00 e0 bf ee 	cmpl   $0xeebfe000,0x3c(%eax)$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	77 72                	ja     f0104476 <page_fault_handler+0x117>$/;"	l
f0104404	obj/kern/kernel.asm	/^f0104404:	bf cc ff bf ee       	mov    $0xeebfffcc,%edi$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	e8 9c 22 00 00       	call   f01066aa <cpunum>$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	6a 06                	push   $0x6$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	6a 34                	push   $0x34$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	57                   	push   %edi$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	e8 eb f1 ff ff       	call   f010360c <user_mem_assert>$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	89 37                	mov    %esi,(%edi)$/;"	l
f0104423	obj/kern/kernel.asm	/^f0104423:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	89 fa                	mov    %edi,%edx$/;"	l
f0104428	obj/kern/kernel.asm	/^f0104428:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f010442e	obj/kern/kernel.asm	/^f010442e:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0104433	obj/kern/kernel.asm	/^f0104433:	89 de                	mov    %ebx,%esi$/;"	l
f0104435	obj/kern/kernel.asm	/^f0104435:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f010443d	obj/kern/kernel.asm	/^f010443d:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0104443	obj/kern/kernel.asm	/^f0104443:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0104449	obj/kern/kernel.asm	/^f0104449:	89 53 3c             	mov    %edx,0x3c(%ebx)$/;"	l
f010444c	obj/kern/kernel.asm	/^f010444c:	e8 59 22 00 00       	call   f01066aa <cpunum>$/;"	l
f0104451	obj/kern/kernel.asm	/^f0104451:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f010445a	obj/kern/kernel.asm	/^f010445a:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	e8 45 22 00 00       	call   f01066aa <cpunum>$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010446b	obj/kern/kernel.asm	/^f010446b:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	e8 91 f8 ff ff       	call   f0103d07 <env_run>$/;"	l
f0104476	obj/kern/kernel.asm	/^f0104476:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	e8 2c 22 00 00       	call   f01066aa <cpunum>$/;"	l
f010447e	obj/kern/kernel.asm	/^f010447e:	57                   	push   %edi$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	56                   	push   %esi$/;"	l
f0104480	obj/kern/kernel.asm	/^f0104480:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104483	obj/kern/kernel.asm	/^f0104483:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0104489	obj/kern/kernel.asm	/^f0104489:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010448c	obj/kern/kernel.asm	/^f010448c:	68 64 87 10 f0       	push   $0xf0108764$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	e8 c5 fa ff ff       	call   f0103f5b <cprintf>$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104499	obj/kern/kernel.asm	/^f0104499:	e8 39 fd ff ff       	call   f01041d7 <print_trapframe>$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	e8 07 22 00 00       	call   f01066aa <cpunum>$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	83 c4 04             	add    $0x4,%esp$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044a9	obj/kern/kernel.asm	/^f01044a9:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	e8 a5 f7 ff ff       	call   f0103c59 <env_destroy>$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba:	5b                   	pop    %ebx$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	5e                   	pop    %esi$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	5f                   	pop    %edi$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	5d                   	pop    %ebp$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	c3                   	ret    $/;"	l
f01044bf	obj/kern/kernel.asm	/^f01044bf <trap>:$/;"	l
f01044bf	obj/kern/kernel.asm	/^f01044bf:	55                   	push   %ebp$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	57                   	push   %edi$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	56                   	push   %esi$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	fc                   	cld    $/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	83 3d 80 8e 22 f0 00 	cmpl   $0x0,0xf0228e80$/;"	l
f01044cf	obj/kern/kernel.asm	/^f01044cf:	74 01                	je     f01044d2 <trap+0x13>$/;"	l
f01044d1	obj/kern/kernel.asm	/^f01044d1:	f4                   	hlt    $/;"	l
f01044d2	obj/kern/kernel.asm	/^f01044d2:	e8 d3 21 00 00       	call   f01066aa <cpunum>$/;"	l
f01044d7	obj/kern/kernel.asm	/^f01044d7:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da:	81 c2 20 90 22 f0    	add    $0xf0229020,%edx$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	75 10                	jne    f01044fe <trap+0x3f>$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	68 60 34 12 f0       	push   $0xf0123460$/;"	l
f01044f6	obj/kern/kernel.asm	/^f01044f6:	e8 1d 24 00 00       	call   f0106918 <spin_lock>$/;"	l
f01044fb	obj/kern/kernel.asm	/^f01044fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	9c                   	pushf  $/;"	l
f01044ff	obj/kern/kernel.asm	/^f01044ff:	58                   	pop    %eax$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	74 19                	je     f010451e <trap+0x5f>$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	68 c8 85 10 f0       	push   $0xf01085c8$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010450f	obj/kern/kernel.asm	/^f010450f:	68 1c 01 00 00       	push   $0x11c$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	68 bc 85 10 f0       	push   $0xf01085bc$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	e8 22 bb ff ff       	call   f0100040 <_panic>$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	0f 85 b2 00 00 00    	jne    f01045e1 <trap+0x122>$/;"	l
f010452f	obj/kern/kernel.asm	/^f010452f:	e8 76 21 00 00       	call   f01066aa <cpunum>$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	83 b8 28 90 22 f0 00 	cmpl   $0x0,-0xfdd6fd8(%eax)$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	75 19                	jne    f0104559 <trap+0x9a>$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	68 e1 85 10 f0       	push   $0xf01085e1$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010454a	obj/kern/kernel.asm	/^f010454a:	68 23 01 00 00       	push   $0x123$/;"	l
f010454f	obj/kern/kernel.asm	/^f010454f:	68 bc 85 10 f0       	push   $0xf01085bc$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	e8 e7 ba ff ff       	call   f0100040 <_panic>$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	68 60 34 12 f0       	push   $0xf0123460$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	e8 b2 23 00 00       	call   f0106918 <spin_lock>$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	e8 3f 21 00 00       	call   f01066aa <cpunum>$/;"	l
f010456b	obj/kern/kernel.asm	/^f010456b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	0f ae 40 70          	fxsave 0x70(%eax)$/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	e8 2d 21 00 00       	call   f01066aa <cpunum>$/;"	l
f010457d	obj/kern/kernel.asm	/^f010457d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	75 2d                	jne    f01045bc <trap+0xfd>$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	e8 16 21 00 00       	call   f01066aa <cpunum>$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104597	obj/kern/kernel.asm	/^f0104597:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f01045a0	obj/kern/kernel.asm	/^f01045a0:	e8 0e f5 ff ff       	call   f0103ab3 <env_free>$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	e8 00 21 00 00       	call   f01066aa <cpunum>$/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045ad	obj/kern/kernel.asm	/^f01045ad:	c7 80 28 90 22 f0 00 	movl   $0x0,-0xfdd6fd8(%eax)$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	00 00 00 $/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	e8 02 04 00 00       	call   f01049be <sched_yield>$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	e8 e9 20 00 00       	call   f01066aa <cpunum>$/;"	l
f01045c1	obj/kern/kernel.asm	/^f01045c1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	89 c7                	mov    %eax,%edi$/;"	l
f01045d1	obj/kern/kernel.asm	/^f01045d1:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01045d3	obj/kern/kernel.asm	/^f01045d3:	e8 d2 20 00 00       	call   f01066aa <cpunum>$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045db	obj/kern/kernel.asm	/^f01045db:	8b b0 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%esi$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	89 35 60 8a 22 f0    	mov    %esi,0xf0228a60$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01045ed	obj/kern/kernel.asm	/^f01045ed:	75 11                	jne    f0104600 <trap+0x141>$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	56                   	push   %esi$/;"	l
f01045f3	obj/kern/kernel.asm	/^f01045f3:	e8 67 fd ff ff       	call   f010435f <page_fault_handler>$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045fb	obj/kern/kernel.asm	/^f01045fb:	e9 de 00 00 00       	jmp    f01046de <trap+0x21f>$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	75 11                	jne    f0104616 <trap+0x157>$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	56                   	push   %esi$/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	e8 9e ca ff ff       	call   f01010ac <monitor>$/;"	l
f010460e	obj/kern/kernel.asm	/^f010460e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104611	obj/kern/kernel.asm	/^f0104611:	e9 c8 00 00 00       	jmp    f01046de <trap+0x21f>$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	75 11                	jne    f010462c <trap+0x16d>$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010461e	obj/kern/kernel.asm	/^f010461e:	56                   	push   %esi$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	e8 88 ca ff ff       	call   f01010ac <monitor>$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	e9 b2 00 00 00       	jmp    f01046de <trap+0x21f>$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	75 24                	jne    f0104655 <trap+0x196>$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	ff 36                	pushl  (%esi)$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	e8 64 08 00 00       	call   f0104eae <syscall>$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	e9 89 00 00 00       	jmp    f01046de <trap+0x21f>$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	75 1a                	jne    f0104674 <trap+0x1b5>$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	68 e8 85 10 f0       	push   $0xf01085e8$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	e8 f4 f8 ff ff       	call   f0103f5b <cprintf>$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	e8 68 fb ff ff       	call   f01041d7 <print_trapframe>$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	eb 6a                	jmp    f01046de <trap+0x21f>$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	75 0a                	jne    f0104683 <trap+0x1c4>$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	e8 77 21 00 00       	call   f01067f5 <lapic_eoi>$/;"	l
f010467e	obj/kern/kernel.asm	/^f010467e:	e8 3b 03 00 00       	call   f01049be <sched_yield>$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	75 07                	jne    f010468f <trap+0x1d0>$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	e8 55 bf ff ff       	call   f01005e2 <kbd_intr>$/;"	l
f010468d	obj/kern/kernel.asm	/^f010468d:	eb 4f                	jmp    f01046de <trap+0x21f>$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	75 07                	jne    f010469b <trap+0x1dc>$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	e8 2d bf ff ff       	call   f01005c6 <serial_intr>$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	eb 43                	jmp    f01046de <trap+0x21f>$/;"	l
f010469b	obj/kern/kernel.asm	/^f010469b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010469e	obj/kern/kernel.asm	/^f010469e:	56                   	push   %esi$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	e8 33 fb ff ff       	call   f01041d7 <print_trapframe>$/;"	l
f01046a4	obj/kern/kernel.asm	/^f01046a4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	75 17                	jne    f01046c5 <trap+0x206>$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	68 05 86 10 f0       	push   $0xf0108605$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	68 02 01 00 00       	push   $0x102$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	68 bc 85 10 f0       	push   $0xf01085bc$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	e8 7b b9 ff ff       	call   f0100040 <_panic>$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	e8 e0 1f 00 00       	call   f01066aa <cpunum>$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01046cd	obj/kern/kernel.asm	/^f01046cd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	e8 7e f5 ff ff       	call   f0103c59 <env_destroy>$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	e8 c7 1f 00 00       	call   f01066aa <cpunum>$/;"	l
f01046e3	obj/kern/kernel.asm	/^f01046e3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	83 b8 28 90 22 f0 00 	cmpl   $0x0,-0xfdd6fd8(%eax)$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	74 2a                	je     f0104719 <trap+0x25a>$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	e8 b6 1f 00 00       	call   f01066aa <cpunum>$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01046fd	obj/kern/kernel.asm	/^f01046fd:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	75 16                	jne    f0104719 <trap+0x25a>$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	e8 a2 1f 00 00       	call   f01066aa <cpunum>$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f0104714	obj/kern/kernel.asm	/^f0104714:	e8 ee f5 ff ff       	call   f0103d07 <env_run>$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	e8 a0 02 00 00       	call   f01049be <sched_yield>$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e <divide_handler>:$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	6a 00                	push   $0x0$/;"	l
f0104720	obj/kern/kernel.asm	/^f0104720:	6a 00                	push   $0x0$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	e9 1f ed 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	90                   	nop$/;"	l
f0104728	obj/kern/kernel.asm	/^f0104728 <debug_handler>:$/;"	l
f0104728	obj/kern/kernel.asm	/^f0104728:	6a 00                	push   $0x0$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	6a 01                	push   $0x1$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	e9 15 ed 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	90                   	nop$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732 <nmi_handler>:$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	6a 00                	push   $0x0$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	6a 02                	push   $0x2$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	e9 0b ed 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	90                   	nop$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c <brkpt_handler>:$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	6a 00                	push   $0x0$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	6a 03                	push   $0x3$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	e9 01 ed 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	90                   	nop$/;"	l
f0104746	obj/kern/kernel.asm	/^f0104746 <oflow_handler>:$/;"	l
f0104746	obj/kern/kernel.asm	/^f0104746:	6a 00                	push   $0x0$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	6a 04                	push   $0x4$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	e9 f7 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	90                   	nop$/;"	l
f0104750	obj/kern/kernel.asm	/^f0104750 <bound_handler>:$/;"	l
f0104750	obj/kern/kernel.asm	/^f0104750:	6a 00                	push   $0x0$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	6a 05                	push   $0x5$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	e9 ed ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	90                   	nop$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a <illop_handler>:$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	6a 00                	push   $0x0$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	6a 06                	push   $0x6$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	e9 e3 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	90                   	nop$/;"	l
f0104764	obj/kern/kernel.asm	/^f0104764 <device_handler>:$/;"	l
f0104764	obj/kern/kernel.asm	/^f0104764:	6a 00                	push   $0x0$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	6a 07                	push   $0x7$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	e9 d9 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	90                   	nop$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e <dblflt_handler>:$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	6a 08                	push   $0x8$/;"	l
f0104770	obj/kern/kernel.asm	/^f0104770:	e9 d1 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	90                   	nop$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776 <coproc_handler>:$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	6a 00                	push   $0x0$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	6a 09                	push   $0x9$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	e9 c7 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	90                   	nop$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780 <tss_handler>:$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	6a 0a                	push   $0xa$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	e9 bf ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	90                   	nop$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788 <segnp_handler>:$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	6a 0b                	push   $0xb$/;"	l
f010478a	obj/kern/kernel.asm	/^f010478a:	e9 b7 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	90                   	nop$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790 <stack_handler>:$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790:	6a 0c                	push   $0xc$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	e9 af ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	90                   	nop$/;"	l
f0104798	obj/kern/kernel.asm	/^f0104798 <gpflt_handler>:$/;"	l
f0104798	obj/kern/kernel.asm	/^f0104798:	6a 0d                	push   $0xd$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	e9 a7 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	90                   	nop$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0 <pgflt_handler>:$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	6a 0e                	push   $0xe$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	e9 9f ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	90                   	nop$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8 <res_handler>:$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8:	6a 00                	push   $0x0$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	6a 0f                	push   $0xf$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	e9 95 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	90                   	nop$/;"	l
f01047b2	obj/kern/kernel.asm	/^f01047b2 <fperr_handler>:$/;"	l
f01047b2	obj/kern/kernel.asm	/^f01047b2:	6a 00                	push   $0x0$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	6a 10                	push   $0x10$/;"	l
f01047b6	obj/kern/kernel.asm	/^f01047b6:	e9 8b ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	90                   	nop$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc <align_handler>:$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	6a 00                	push   $0x0$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	6a 11                	push   $0x11$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	e9 81 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	90                   	nop$/;"	l
f01047c6	obj/kern/kernel.asm	/^f01047c6 <mchk_handler>:$/;"	l
f01047c6	obj/kern/kernel.asm	/^f01047c6:	6a 00                	push   $0x0$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	6a 12                	push   $0x12$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	e9 77 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	90                   	nop$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0 <simderr_handler>:$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	6a 00                	push   $0x0$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	6a 13                	push   $0x13$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	e9 6d ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	90                   	nop$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da <syscall_handler>:$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	6a 00                	push   $0x0$/;"	l
f01047dc	obj/kern/kernel.asm	/^f01047dc:	6a 30                	push   $0x30$/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	e9 63 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	90                   	nop$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4 <irq0_handler>:$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	6a 00                	push   $0x0$/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	6a 20                	push   $0x20$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	e9 59 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	90                   	nop$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee <irq1_handler>:$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	6a 00                	push   $0x0$/;"	l
f01047f0	obj/kern/kernel.asm	/^f01047f0:	6a 21                	push   $0x21$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	e9 4f ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f01047f7	obj/kern/kernel.asm	/^f01047f7:	90                   	nop$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8 <irq2_handler>:$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	6a 00                	push   $0x0$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	6a 22                	push   $0x22$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	e9 45 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	90                   	nop$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802 <irq3_handler>:$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	6a 00                	push   $0x0$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	6a 23                	push   $0x23$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	e9 3b ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	90                   	nop$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c <irq4_handler>:$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	6a 00                	push   $0x0$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	6a 24                	push   $0x24$/;"	l
f0104810	obj/kern/kernel.asm	/^f0104810:	e9 31 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	90                   	nop$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816 <irq5_handler>:$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	6a 00                	push   $0x0$/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	6a 25                	push   $0x25$/;"	l
f010481a	obj/kern/kernel.asm	/^f010481a:	e9 27 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	90                   	nop$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820 <irq6_handler>:$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	6a 00                	push   $0x0$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	6a 26                	push   $0x26$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	e9 1d ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	90                   	nop$/;"	l
f010482a	obj/kern/kernel.asm	/^f010482a <irq7_handler>:$/;"	l
f010482a	obj/kern/kernel.asm	/^f010482a:	6a 00                	push   $0x0$/;"	l
f010482c	obj/kern/kernel.asm	/^f010482c:	6a 27                	push   $0x27$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	e9 13 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	90                   	nop$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834 <irq8_handler>:$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	6a 00                	push   $0x0$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	6a 28                	push   $0x28$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	e9 09 ec 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	90                   	nop$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e <irq9_handler>:$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	6a 00                	push   $0x0$/;"	l
f0104840	obj/kern/kernel.asm	/^f0104840:	6a 29                	push   $0x29$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	e9 ff eb 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	90                   	nop$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848 <irq10_handler>:$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848:	6a 00                	push   $0x0$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	6a 2a                	push   $0x2a$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	e9 f5 eb 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	90                   	nop$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852 <irq11_handler>:$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	6a 00                	push   $0x0$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	6a 2b                	push   $0x2b$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	e9 eb eb 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	90                   	nop$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c <irq12_handler>:$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	6a 00                	push   $0x0$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	6a 2c                	push   $0x2c$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	e9 e1 eb 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	90                   	nop$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866 <irq13_handler>:$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	6a 00                	push   $0x0$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	6a 2d                	push   $0x2d$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	e9 d7 eb 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	90                   	nop$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870 <irq14_handler>:$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	6a 00                	push   $0x0$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	6a 2e                	push   $0x2e$/;"	l
f0104874	obj/kern/kernel.asm	/^f0104874:	e9 cd eb 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	90                   	nop$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a <irq15_handler>:$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	6a 00                	push   $0x0$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	6a 2f                	push   $0x2f$/;"	l
f010487e	obj/kern/kernel.asm	/^f010487e:	e9 c3 eb 01 00       	jmp    f0123446 <_alltraps>$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	90                   	nop$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884 <sysenter_handler>:$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	fa                   	cli    $/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	fc                   	cld    $/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	56                   	push   %esi$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	55                   	push   %ebp$/;"	l
f0104888	obj/kern/kernel.asm	/^f0104888:	57                   	push   %edi$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	53                   	push   %ebx$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	51                   	push   %ecx$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	52                   	push   %edx$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	50                   	push   %eax$/;"	l
f010488d	obj/kern/kernel.asm	/^f010488d:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	8e c0                	mov    %eax,%es$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	8e d8                	mov    %eax,%ds$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	68 60 34 12 f0       	push   $0xf0123460$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	e8 79 20 00 00       	call   f0106918 <spin_lock>$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	83 c4 04             	add    $0x4,%esp$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	e8 07 06 00 00       	call   f0104eae <syscall>$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	50                   	push   %eax$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	68 60 34 12 f0       	push   $0xf0123460$/;"	l
f01048ad	obj/kern/kernel.asm	/^f01048ad:	e8 03 21 00 00       	call   f01069b5 <spin_unlock>$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	58                   	pop    %eax$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	58                   	pop    %eax$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	66 bb 20 00          	mov    $0x20,%bx$/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8:	8e c3                	mov    %ebx,%es$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	8e db                	mov    %ebx,%ds$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	83 c4 14             	add    $0x14,%esp$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	59                   	pop    %ecx$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	5a                   	pop    %edx$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	fb                   	sti    $/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	0f 35                	sysexit $/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4 <srand>:$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	55                   	push   %ebp$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	a3 58 34 12 f0       	mov    %eax,0xf0123458$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	5d                   	pop    %ebp$/;"	l
f01048d0	obj/kern/kernel.asm	/^f01048d0:	c3                   	ret    $/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1 <lottery_sched_init>:$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	55                   	push   %ebp$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	c6 05 64 8a 22 f0 01 	movb   $0x1,0xf0228a64$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	c7 05 58 34 12 f0 bb 	movl   $0x6eb69abb,0xf0123458$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	9a b6 6e $/;"	l
f01048e5	obj/kern/kernel.asm	/^f01048e5:	5d                   	pop    %ebp$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	c3                   	ret    $/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7 <sched_halt>:$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	55                   	push   %ebp$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01048ea	obj/kern/kernel.asm	/^f01048ea:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	a1 48 82 22 f0       	mov    0xf0228248,%eax$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f01048f5	obj/kern/kernel.asm	/^f01048f5:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	8b 02                	mov    (%edx),%eax$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	76 13                	jbe    f0104917 <sched_halt+0x30>$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	81 c2 90 02 00 00    	add    $0x290,%edx$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f0104913	obj/kern/kernel.asm	/^f0104913:	75 e5                	jne    f01048fa <sched_halt+0x13>$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	eb 08                	jmp    f010491f <sched_halt+0x38>$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	75 1f                	jne    f010493e <sched_halt+0x57>$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	68 f0 87 10 f0       	push   $0xf01087f0$/;"	l
f0104927	obj/kern/kernel.asm	/^f0104927:	e8 2f f6 ff ff       	call   f0103f5b <cprintf>$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010492f	obj/kern/kernel.asm	/^f010492f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	6a 00                	push   $0x0$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	e8 73 c7 ff ff       	call   f01010ac <monitor>$/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	83 c4 10             	add    $0x10,%esp$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	eb f1                	jmp    f010492f <sched_halt+0x48>$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	e8 67 1d 00 00       	call   f01066aa <cpunum>$/;"	l
f0104943	obj/kern/kernel.asm	/^f0104943:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	c7 80 28 90 22 f0 00 	movl   $0x0,-0xfdd6fd8(%eax)$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	00 00 00 $/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	a1 90 8e 22 f0       	mov    0xf0228e90,%eax$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	77 12                	ja     f010496e <sched_halt+0x87>$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	50                   	push   %eax$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	68 88 6d 10 f0       	push   $0xf0106d88$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	6a 77                	push   $0x77$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	68 19 88 10 f0       	push   $0xf0108819$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	e8 d2 b6 ff ff       	call   f0100040 <_panic>$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	e8 2f 1d 00 00       	call   f01066aa <cpunum>$/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	81 c2 20 90 22 f0    	add    $0xf0229020,%edx$/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	68 60 34 12 f0       	push   $0xf0123460$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	e8 1b 20 00 00       	call   f01069b5 <spin_unlock>$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	f3 90                	pause  $/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	e8 09 1d 00 00       	call   f01066aa <cpunum>$/;"	l
f01049a1	obj/kern/kernel.asm	/^f01049a1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	8b 80 30 90 22 f0    	mov    -0xfdd6fd0(%eax),%eax$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01049af	obj/kern/kernel.asm	/^f01049af:	89 c4                	mov    %eax,%esp$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	6a 00                	push   $0x0$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	6a 00                	push   $0x0$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	fb                   	sti    $/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	f4                   	hlt    $/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	eb fd                	jmp    f01049b6 <sched_halt+0xcf>$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	c9                   	leave  $/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	c3                   	ret    $/;"	l
f01049be	obj/kern/kernel.asm	/^f01049be <sched_yield>:$/;"	l
f01049be	obj/kern/kernel.asm	/^f01049be:	55                   	push   %ebp$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	57                   	push   %edi$/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	56                   	push   %esi$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	53                   	push   %ebx$/;"	l
f01049c4	obj/kern/kernel.asm	/^f01049c4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	e8 de 1c 00 00       	call   f01066aa <cpunum>$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	83 b8 28 90 22 f0 00 	cmpl   $0x0,-0xfdd6fd8(%eax)$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	74 17                	je     f01049f4 <sched_yield+0x36>$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	e8 c8 1c 00 00       	call   f01066aa <cpunum>$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	80 3d 64 8a 22 f0 00 	cmpb   $0x0,0xf0228a64$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	0f 84 b5 00 00 00    	je     f0104ab6 <sched_yield+0xf8>$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	a1 48 82 22 f0       	mov    0xf0228248,%eax$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	83 c0 54             	add    $0x54,%eax$/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	89 c7                	mov    %eax,%edi$/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	8b 08                	mov    (%eax),%ecx$/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	74 09                	je     f0104a25 <sched_yield+0x67>$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	39 d3                	cmp    %edx,%ebx$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	75 0b                	jne    f0104a2b <sched_yield+0x6d>$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	83 f9 03             	cmp    $0x3,%ecx$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	75 06                	jne    f0104a2b <sched_yield+0x6d>$/;"	l
f0104a25	obj/kern/kernel.asm	/^f0104a25:	03 b7 38 02 00 00    	add    0x238(%edi),%esi$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	75 d8                	jne    f0104a13 <sched_yield+0x55>$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	85 f6                	test   %esi,%esi$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	75 05                	jne    f0104a44 <sched_yield+0x86>$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	e8 a3 fe ff ff       	call   f01048e7 <sched_halt>$/;"	l
f0104a44	obj/kern/kernel.asm	/^f0104a44:	69 05 58 34 12 f0 6d 	imul   $0x41c64e6d,0xf0123458,%eax$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	4e c6 41 $/;"	l
f0104a4e	obj/kern/kernel.asm	/^f0104a4e:	05 39 30 00 00       	add    $0x3039,%eax$/;"	l
f0104a53	obj/kern/kernel.asm	/^f0104a53:	a3 58 34 12 f0       	mov    %eax,0xf0123458$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	f7 f6                	div    %esi$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	a1 48 82 22 f0       	mov    0xf0228248,%eax$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104a71	obj/kern/kernel.asm	/^f0104a71:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f0104a74	obj/kern/kernel.asm	/^f0104a74:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	89 c6                	mov    %eax,%esi$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	8b 48 54             	mov    0x54(%eax),%ecx$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104a7f	obj/kern/kernel.asm	/^f0104a7f:	74 0a                	je     f0104a8b <sched_yield+0xcd>$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	39 55 e0             	cmp    %edx,-0x20(%ebp)$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	75 18                	jne    f0104a9e <sched_yield+0xe0>$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	83 f9 03             	cmp    $0x3,%ecx$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	75 13                	jne    f0104a9e <sched_yield+0xe0>$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	03 be 8c 02 00 00    	add    0x28c(%esi),%edi$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	39 fb                	cmp    %edi,%ebx$/;"	l
f0104a93	obj/kern/kernel.asm	/^f0104a93:	7f 09                	jg     f0104a9e <sched_yield+0xe0>$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	56                   	push   %esi$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	e8 69 f2 ff ff       	call   f0103d07 <env_run>$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	75 c9                	jne    f0104a77 <sched_yield+0xb9>$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	e8 31 fe ff ff       	call   f01048e7 <sched_halt>$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	8b 0d 48 82 22 f0    	mov    0xf0228248,%ecx$/;"	l
f0104abf	obj/kern/kernel.asm	/^f0104abf:	69 f2 90 02 00 00    	imul   $0x290,%edx,%esi$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	8d 04 31             	lea    (%ecx,%esi,1),%eax$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	eb 1c                	jmp    f0104ae6 <sched_yield+0x128>$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	89 c7                	mov    %eax,%edi$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	83 b8 c4 fd ff ff 02 	cmpl   $0x2,-0x23c(%eax)$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	75 09                	jne    f0104ae3 <sched_yield+0x125>$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	57                   	push   %edi$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	e8 24 f2 ff ff       	call   f0103d07 <env_run>$/;"	l
f0104ae3	obj/kern/kernel.asm	/^f0104ae3:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104ae6	obj/kern/kernel.asm	/^f0104ae6:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx$/;"	l
f0104aec	obj/kern/kernel.asm	/^f0104aec:	7e dc                	jle    f0104aca <sched_yield+0x10c>$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	89 c8                	mov    %ecx,%eax$/;"	l
f0104af0	obj/kern/kernel.asm	/^f0104af0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	eb 1c                	jmp    f0104b13 <sched_yield+0x155>$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	89 c7                	mov    %eax,%edi$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	83 b8 c4 fd ff ff 02 	cmpl   $0x2,-0x23c(%eax)$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	75 09                	jne    f0104b10 <sched_yield+0x152>$/;"	l
f0104b07	obj/kern/kernel.asm	/^f0104b07:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	57                   	push   %edi$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	e8 f7 f1 ff ff       	call   f0103d07 <env_run>$/;"	l
f0104b10	obj/kern/kernel.asm	/^f0104b10:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	39 d3                	cmp    %edx,%ebx$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	7f e0                	jg     f0104af7 <sched_yield+0x139>$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	85 db                	test   %ebx,%ebx$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	78 16                	js     f0104b31 <sched_yield+0x173>$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	8d 84 31 70 fd ff ff 	lea    -0x290(%ecx,%esi,1),%eax$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	75 09                	jne    f0104b31 <sched_yield+0x173>$/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	50                   	push   %eax$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	e8 d6 f1 ff ff       	call   f0103d07 <env_run>$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	e8 b1 fd ff ff       	call   f01048e7 <sched_halt>$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104b39	obj/kern/kernel.asm	/^f0104b39:	5b                   	pop    %ebx$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	5e                   	pop    %esi$/;"	l
f0104b3b	obj/kern/kernel.asm	/^f0104b3b:	5f                   	pop    %edi$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	5d                   	pop    %ebp$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	c3                   	ret    $/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e <sys_env_set_trapframe>:$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	55                   	push   %ebp$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b41	obj/kern/kernel.asm	/^f0104b41:	57                   	push   %edi$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	56                   	push   %esi$/;"	l
f0104b43	obj/kern/kernel.asm	/^f0104b43:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	89 d6                	mov    %edx,%esi$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	6a 01                	push   $0x1$/;"	l
f0104b4a	obj/kern/kernel.asm	/^f0104b4a:	8d 55 f4             	lea    -0xc(%ebp),%edx$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	52                   	push   %edx$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	50                   	push   %eax$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	e8 86 eb ff ff       	call   f01036da <envid2env>$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	74 3f                	je     f0104b9b <sys_env_set_trapframe+0x5d>$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	e8 49 1b 00 00       	call   f01066aa <cpunum>$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	6a 06                	push   $0x6$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	6a 44                	push   $0x44$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	56                   	push   %esi$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b69	obj/kern/kernel.asm	/^f0104b69:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	e8 98 ea ff ff       	call   f010360c <user_mem_assert>$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	8b 7d f4             	mov    -0xc(%ebp),%edi$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	66 c7 42 34 1b 00    	movw   $0x1b,0x34(%edx)$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	8b 42 38             	mov    0x38(%edx),%eax$/;"	l
f0104b8a	obj/kern/kernel.asm	/^f0104b8a:	80 e4 cf             	and    $0xcf,%ah$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	80 cc 02             	or     $0x2,%ah$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	89 42 38             	mov    %eax,0x38(%edx)$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0104b9e	obj/kern/kernel.asm	/^f0104b9e:	5e                   	pop    %esi$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	5f                   	pop    %edi$/;"	l
f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	5d                   	pop    %ebp$/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	c3                   	ret    $/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2 <sys_page_map>:$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	55                   	push   %ebp$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	57                   	push   %edi$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	56                   	push   %esi$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	53                   	push   %ebx$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	89 d3                	mov    %edx,%ebx$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	89 cf                	mov    %ecx,%edi$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	6a 01                	push   $0x1$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104bb7	obj/kern/kernel.asm	/^f0104bb7:	52                   	push   %edx$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	50                   	push   %eax$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	e8 1c eb ff ff       	call   f01036da <envid2env>$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	0f 84 be 00 00 00    	je     f0104c88 <sys_page_map+0xe6>$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	6a 01                	push   $0x1$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	50                   	push   %eax$/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	57                   	push   %edi$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	e8 01 eb ff ff       	call   f01036da <envid2env>$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	0f 84 a3 00 00 00    	je     f0104c88 <sys_page_map+0xe6>$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	77 6c                	ja     f0104c59 <sys_page_map+0xb7>$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f0104bf3	obj/kern/kernel.asm	/^f0104bf3:	75 6b                	jne    f0104c60 <sys_page_map+0xbe>$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	81 fe ff ff bf ee    	cmp    $0xeebfffff,%esi$/;"	l
f0104bfb	obj/kern/kernel.asm	/^f0104bfb:	77 6a                	ja     f0104c67 <sys_page_map+0xc5>$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	75 69                	jne    f0104c6e <sys_page_map+0xcc>$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	75 63                	jne    f0104c75 <sys_page_map+0xd3>$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	50                   	push   %eax$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	53                   	push   %ebx$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	e8 94 cd ff ff       	call   f01019b9 <page_lookup>$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	85 c0                	test   %eax,%eax$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	74 50                	je     f0104c7c <sys_page_map+0xda>$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	75 06                	jne    f0104c3a <sys_page_map+0x98>$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	f6 45 0c 02          	testb  $0x2,0xc(%ebp)$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	75 49                	jne    f0104c83 <sys_page_map+0xe1>$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	56                   	push   %esi$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	50                   	push   %eax$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	e8 50 ce ff ff       	call   f0101a9a <page_insert>$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	85 c0                	test   %eax,%eax$/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f0104c57	obj/kern/kernel.asm	/^f0104c57:	eb 2f                	jmp    f0104c88 <sys_page_map+0xe6>$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	eb 28                	jmp    f0104c88 <sys_page_map+0xe6>$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65:	eb 21                	jmp    f0104c88 <sys_page_map+0xe6>$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	eb 1a                	jmp    f0104c88 <sys_page_map+0xe6>$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c73	obj/kern/kernel.asm	/^f0104c73:	eb 13                	jmp    f0104c88 <sys_page_map+0xe6>$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	eb 0c                	jmp    f0104c88 <sys_page_map+0xe6>$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	eb 05                	jmp    f0104c88 <sys_page_map+0xe6>$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	5b                   	pop    %ebx$/;"	l
f0104c8c	obj/kern/kernel.asm	/^f0104c8c:	5e                   	pop    %esi$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	5f                   	pop    %edi$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	5d                   	pop    %ebp$/;"	l
f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	c3                   	ret    $/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90 <ipc_try_recv>:$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	55                   	push   %ebp$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c93	obj/kern/kernel.asm	/^f0104c93:	57                   	push   %edi$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	56                   	push   %esi$/;"	l
f0104c95	obj/kern/kernel.asm	/^f0104c95:	53                   	push   %ebx$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	8b b0 84 02 00 00    	mov    0x284(%eax),%esi$/;"	l
f0104c9f	obj/kern/kernel.asm	/^f0104c9f:	80 b8 70 02 00 00 00 	cmpb   $0x0,0x270(%eax)$/;"	l
f0104ca6	obj/kern/kernel.asm	/^f0104ca6:	0f 84 63 01 00 00    	je     f0104e0f <ipc_try_recv+0x17f>$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	85 f6                	test   %esi,%esi$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	0f 84 62 01 00 00    	je     f0104e16 <ipc_try_recv+0x186>$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	89 c3                	mov    %eax,%ebx$/;"	l
f0104cb6	obj/kern/kernel.asm	/^f0104cb6:	8b be 74 02 00 00    	mov    0x274(%esi),%edi$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	0f 87 f8 00 00 00    	ja     f0104dc0 <ipc_try_recv+0x130>$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	8b 80 74 02 00 00    	mov    0x274(%eax),%eax$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	0f 87 e4 00 00 00    	ja     f0104dc0 <ipc_try_recv+0x130>$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	8b 86 80 02 00 00    	mov    0x280(%esi),%eax$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104ce5	obj/kern/kernel.asm	/^f0104ce5:	8b 53 48             	mov    0x48(%ebx),%edx$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0104ceb	obj/kern/kernel.asm	/^f0104ceb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	6a 00                	push   $0x0$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	50                   	push   %eax$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	ff 76 48             	pushl  0x48(%esi)$/;"	l
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	e8 de e9 ff ff       	call   f01036da <envid2env>$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	0f 84 96 00 00 00    	je     f0104d9e <ipc_try_recv+0x10e>$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	6a 00                	push   $0x0$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	50                   	push   %eax$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	e8 c1 e9 ff ff       	call   f01036da <envid2env>$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	74 7d                	je     f0104d9e <ipc_try_recv+0x10e>$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	0f 85 f0 00 00 00    	jne    f0104e1d <ipc_try_recv+0x18d>$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	f7 45 d4 ff 0f 00 00 	testl  $0xfff,-0x2c(%ebp)$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	0f 85 ed 00 00 00    	jne    f0104e27 <ipc_try_recv+0x197>$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	0f 85 e6 00 00 00    	jne    f0104e31 <ipc_try_recv+0x1a1>$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104d51	obj/kern/kernel.asm	/^f0104d51:	50                   	push   %eax$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	57                   	push   %edi$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104d59	obj/kern/kernel.asm	/^f0104d59:	e8 5b cc ff ff       	call   f01019b9 <page_lookup>$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	85 c0                	test   %eax,%eax$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	0f 84 d2 00 00 00    	je     f0104e3b <ipc_try_recv+0x1ab>$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	75 0a                	jne    f0104d7b <ipc_try_recv+0xeb>$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	f6 45 d0 02          	testb  $0x2,-0x30(%ebp)$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	0f 85 ca 00 00 00    	jne    f0104e45 <ipc_try_recv+0x1b5>$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	50                   	push   %eax$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	e8 0d cd ff ff       	call   f0101a9a <page_insert>$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	85 c0                	test   %eax,%eax$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a:	85 c0                	test   %eax,%eax$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	79 16                	jns    f0104db4 <ipc_try_recv+0x124>$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	c6 86 71 02 00 00 00 	movb   $0x0,0x271(%esi)$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	c7 46 54 02 00 00 00 	movl   $0x2,0x54(%esi)$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104daf	obj/kern/kernel.asm	/^f0104daf:	e9 9b 00 00 00       	jmp    f0104e4f <ipc_try_recv+0x1bf>$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	8b 86 80 02 00 00    	mov    0x280(%esi),%eax$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	89 83 80 02 00 00    	mov    %eax,0x280(%ebx)$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	c6 86 71 02 00 00 00 	movb   $0x0,0x271(%esi)$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	c7 46 54 02 00 00 00 	movl   $0x2,0x54(%esi)$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	c7 46 1c 00 00 00 00 	movl   $0x0,0x1c(%esi)$/;"	l
f0104dd5	obj/kern/kernel.asm	/^f0104dd5:	c6 83 70 02 00 00 00 	movb   $0x0,0x270(%ebx)$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	8b 46 48             	mov    0x48(%esi),%eax$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	89 83 7c 02 00 00    	mov    %eax,0x27c(%ebx)$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	8b 86 78 02 00 00    	mov    0x278(%esi),%eax$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	89 83 78 02 00 00    	mov    %eax,0x278(%ebx)$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)$/;"	l
f0104dff	obj/kern/kernel.asm	/^f0104dff:	8b 46 44             	mov    0x44(%esi),%eax$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	89 83 84 02 00 00    	mov    %eax,0x284(%ebx)$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e0d	obj/kern/kernel.asm	/^f0104e0d:	eb 40                	jmp    f0104e4f <ipc_try_recv+0x1bf>$/;"	l
f0104e0f	obj/kern/kernel.asm	/^f0104e0f:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	eb 39                	jmp    f0104e4f <ipc_try_recv+0x1bf>$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax$/;"	l
f0104e1b	obj/kern/kernel.asm	/^f0104e1b:	eb 32                	jmp    f0104e4f <ipc_try_recv+0x1bf>$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	e9 77 ff ff ff       	jmp    f0104d9e <ipc_try_recv+0x10e>$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	e9 6d ff ff ff       	jmp    f0104d9e <ipc_try_recv+0x10e>$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	e9 63 ff ff ff       	jmp    f0104d9e <ipc_try_recv+0x10e>$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	e9 59 ff ff ff       	jmp    f0104d9e <ipc_try_recv+0x10e>$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	e9 4f ff ff ff       	jmp    f0104d9e <ipc_try_recv+0x10e>$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	5b                   	pop    %ebx$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	5e                   	pop    %esi$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	5f                   	pop    %edi$/;"	l
f0104e55	obj/kern/kernel.asm	/^f0104e55:	5d                   	pop    %ebp$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	c3                   	ret    $/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57 <sys_page_unmap>:$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	55                   	push   %ebp$/;"	l
f0104e58	obj/kern/kernel.asm	/^f0104e58:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	53                   	push   %ebx$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	89 d3                	mov    %edx,%ebx$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	6a 01                	push   $0x1$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	8d 55 f4             	lea    -0xc(%ebp),%edx$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	52                   	push   %edx$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	50                   	push   %eax$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	e8 6e e8 ff ff       	call   f01036da <envid2env>$/;"	l
f0104e6c	obj/kern/kernel.asm	/^f0104e6c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	74 35                	je     f0104ea9 <sys_page_unmap+0x52>$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	77 21                	ja     f0104e9d <sys_page_unmap+0x46>$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	75 20                	jne    f0104ea4 <sys_page_unmap+0x4d>$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104e87	obj/kern/kernel.asm	/^f0104e87:	53                   	push   %ebx$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	e8 c1 cb ff ff       	call   f0101a54 <page_remove>$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e9b	obj/kern/kernel.asm	/^f0104e9b:	eb 0c                	jmp    f0104ea9 <sys_page_unmap+0x52>$/;"	l
f0104e9d	obj/kern/kernel.asm	/^f0104e9d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	eb 05                	jmp    f0104ea9 <sys_page_unmap+0x52>$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	c9                   	leave  $/;"	l
f0104ead	obj/kern/kernel.asm	/^f0104ead:	c3                   	ret    $/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae <syscall>:$/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae:	55                   	push   %ebp$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	89 e5                	mov    %esp,%ebp$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	57                   	push   %edi$/;"	l
f0104eb2	obj/kern/kernel.asm	/^f0104eb2:	56                   	push   %esi$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	53                   	push   %ebx$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104eb7	obj/kern/kernel.asm	/^f0104eb7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	0f 87 4e 05 00 00    	ja     f0105411 <syscall+0x563>$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	ff 24 85 2c 88 10 f0 	jmp    *-0xfef77d4(,%eax,4)$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	e8 db 17 00 00       	call   f01066aa <cpunum>$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	6a 04                	push   $0x4$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104ed7	obj/kern/kernel.asm	/^f0104ed7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	e8 27 e7 ff ff       	call   f010360c <user_mem_assert>$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104eee	obj/kern/kernel.asm	/^f0104eee:	68 26 88 10 f0       	push   $0xf0108826$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	e8 63 f0 ff ff       	call   f0103f5b <cprintf>$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	e9 1a 05 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	e8 ec b6 ff ff       	call   f01005f4 <cons_getc>$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	e9 10 05 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	e8 98 17 00 00       	call   f01066aa <cpunum>$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0104f1b	obj/kern/kernel.asm	/^f0104f1b:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	e9 fa 04 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104f26	obj/kern/kernel.asm	/^f0104f26:	6a 01                	push   $0x1$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104f2b	obj/kern/kernel.asm	/^f0104f2b:	50                   	push   %eax$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	e8 a6 e7 ff ff       	call   f01036da <envid2env>$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	85 c0                	test   %eax,%eax$/;"	l
f0104f39	obj/kern/kernel.asm	/^f0104f39:	0f 88 de 04 00 00    	js     f010541d <syscall+0x56f>$/;"	l
f0104f3f	obj/kern/kernel.asm	/^f0104f3f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104f45	obj/kern/kernel.asm	/^f0104f45:	e8 0f ed ff ff       	call   f0103c59 <env_destroy>$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	e9 c6 04 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0104f57	obj/kern/kernel.asm	/^f0104f57:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	6a 01                	push   $0x1$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104f5f	obj/kern/kernel.asm	/^f0104f5f:	50                   	push   %eax$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	e8 72 e7 ff ff       	call   f01036da <envid2env>$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f6b	obj/kern/kernel.asm	/^f0104f6b:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	0f 84 a9 04 00 00    	je     f010541d <syscall+0x56f>$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	6a 01                	push   $0x1$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	e8 5d c7 ff ff       	call   f01016db <page_alloc>$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	89 c3                	mov    %eax,%ebx$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	85 c0                	test   %eax,%eax$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	74 4e                	je     f0104fd5 <syscall+0x127>$/;"	l
f0104f87	obj/kern/kernel.asm	/^f0104f87:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	77 4f                	ja     f0104fdf <syscall+0x131>$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	75 50                	jne    f0104fe9 <syscall+0x13b>$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104fa1	obj/kern/kernel.asm	/^f0104fa1:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	75 4d                	jne    f0104ff3 <syscall+0x145>$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104fac	obj/kern/kernel.asm	/^f0104fac:	53                   	push   %ebx$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104fb3	obj/kern/kernel.asm	/^f0104fb3:	e8 e2 ca ff ff       	call   f0101a9a <page_insert>$/;"	l
f0104fb8	obj/kern/kernel.asm	/^f0104fb8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	85 c0                	test   %eax,%eax$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	79 3e                	jns    f0104ffd <syscall+0x14f>$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	53                   	push   %ebx$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	e8 83 c7 ff ff       	call   f010174b <page_free>$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	e9 48 04 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	e9 3e 04 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0104fdf	obj/kern/kernel.asm	/^f0104fdf:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104fe4	obj/kern/kernel.asm	/^f0104fe4:	e9 34 04 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0104fe9	obj/kern/kernel.asm	/^f0104fe9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	e9 2a 04 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	e9 20 04 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0104ffd	obj/kern/kernel.asm	/^f0104ffd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	e9 16 04 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	e8 84 fb ff ff       	call   f0104ba2 <sys_page_map>$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	e9 f7 03 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	e8 26 fe ff ff       	call   f0104e57 <sys_page_unmap>$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	e9 e7 03 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0105036	obj/kern/kernel.asm	/^f0105036:	e8 6f 16 00 00       	call   f01066aa <cpunum>$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010504d	obj/kern/kernel.asm	/^f010504d:	50                   	push   %eax$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	e8 b6 e7 ff ff       	call   f0103809 <env_alloc>$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	85 c0                	test   %eax,%eax$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	0f 88 bf 03 00 00    	js     f010541d <syscall+0x56f>$/;"	l
f010505e	obj/kern/kernel.asm	/^f010505e:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	e8 3d 16 00 00       	call   f01066aa <cpunum>$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	8b b0 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%esi$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	89 df                	mov    %ebx,%edi$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	e9 8c 03 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105094	obj/kern/kernel.asm	/^f0105094:	6a 01                	push   $0x1$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105099	obj/kern/kernel.asm	/^f0105099:	50                   	push   %eax$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	e8 38 e6 ff ff       	call   f01036da <envid2env>$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	0f 84 6f 03 00 00    	je     f010541d <syscall+0x56f>$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01050b1	obj/kern/kernel.asm	/^f01050b1:	83 e8 02             	sub    $0x2,%eax$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	a9 fd ff ff ff       	test   $0xfffffffd,%eax$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	75 13                	jne    f01050ce <syscall+0x220>$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	89 48 54             	mov    %ecx,0x54(%eax)$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	e9 4f 03 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	e9 45 03 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01050db	obj/kern/kernel.asm	/^f01050db:	6a 01                	push   $0x1$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	50                   	push   %eax$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01050e4	obj/kern/kernel.asm	/^f01050e4:	e8 f1 e5 ff ff       	call   f01036da <envid2env>$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	0f 84 28 03 00 00    	je     f010541d <syscall+0x56f>$/;"	l
f01050f5	obj/kern/kernel.asm	/^f01050f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01050f8	obj/kern/kernel.asm	/^f01050f8:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	89 48 64             	mov    %ecx,0x64(%eax)$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105103	obj/kern/kernel.asm	/^f0105103:	e9 15 03 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010510b	obj/kern/kernel.asm	/^f010510b:	6a 01                	push   $0x1$/;"	l
f010510d	obj/kern/kernel.asm	/^f010510d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	50                   	push   %eax$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	e8 c1 e5 ff ff       	call   f01036da <envid2env>$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	83 c4 10             	add    $0x10,%esp$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	0f 84 f8 02 00 00    	je     f010541d <syscall+0x56f>$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	0f b6 45 10          	movzbl 0x10(%ebp),%eax$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	85 c0                	test   %eax,%eax$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	ba 05 00 00 00       	mov    $0x5,%edx$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	89 82 8c 02 00 00    	mov    %eax,0x28c(%edx)$/;"	l
f010513c	obj/kern/kernel.asm	/^f010513c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	e9 d7 02 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	e8 ed f9 ff ff       	call   f0104b3e <sys_env_set_trapframe>$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	e9 c7 02 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	e8 db f9 ff ff       	call   f0104b3e <sys_env_set_trapframe>$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	85 c0                	test   %eax,%eax$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	0f 88 b2 02 00 00    	js     f010541d <syscall+0x56f>$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e:	e8 37 15 00 00       	call   f01066aa <cpunum>$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	6a 05                	push   $0x5$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	68 00 10 00 00       	push   $0x1000$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010517d	obj/kern/kernel.asm	/^f010517d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186:	e8 81 e4 ff ff       	call   f010360c <user_mem_assert>$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	e9 87 00 00 00       	jmp    f010521a <syscall+0x36c>$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0105196	obj/kern/kernel.asm	/^f0105196:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	8b 37                	mov    (%edi),%esi$/;"	l
f010519b	obj/kern/kernel.asm	/^f010519b:	e8 0a 15 00 00       	call   f01066aa <cpunum>$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	53                   	push   %ebx$/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	56                   	push   %esi$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	e8 59 e4 ff ff       	call   f010360c <user_mem_assert>$/;"	l
f01051b3	obj/kern/kernel.asm	/^f01051b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	eb 53                	jmp    f0105210 <syscall+0x362>$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	89 da                	mov    %ebx,%edx$/;"	l
f01051bf	obj/kern/kernel.asm	/^f01051bf:	03 17                	add    (%edi),%edx$/;"	l
f01051c1	obj/kern/kernel.asm	/^f01051c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	ff 77 0c             	pushl  0xc(%edi)$/;"	l
f01051c7	obj/kern/kernel.asm	/^f01051c7:	89 d8                	mov    %ebx,%eax$/;"	l
f01051c9	obj/kern/kernel.asm	/^f01051c9:	03 47 04             	add    0x4(%edi),%eax$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	50                   	push   %eax$/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01051d2	obj/kern/kernel.asm	/^f01051d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01051d7	obj/kern/kernel.asm	/^f01051d7:	e8 c6 f9 ff ff       	call   f0104ba2 <sys_page_map>$/;"	l
f01051dc	obj/kern/kernel.asm	/^f01051dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	85 c0                	test   %eax,%eax$/;"	l
f01051e1	obj/kern/kernel.asm	/^f01051e1:	79 19                	jns    f01051fc <syscall+0x34e>$/;"	l
f01051e3	obj/kern/kernel.asm	/^f01051e3:	e8 c2 14 00 00       	call   f01066aa <cpunum>$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01051eb	obj/kern/kernel.asm	/^f01051eb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	e8 60 ea ff ff       	call   f0103c59 <env_destroy>$/;"	l
f01051f9	obj/kern/kernel.asm	/^f01051f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc:	03 37                	add    (%edi),%esi$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	89 f2                	mov    %esi,%edx$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	e8 4d fc ff ff       	call   f0104e57 <sys_page_unmap>$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	89 de                	mov    %ebx,%esi$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	3b 5f 08             	cmp    0x8(%edi),%ebx$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	72 a6                	jb     f01051bd <syscall+0x30f>$/;"	l
f0105217	obj/kern/kernel.asm	/^f0105217:	83 c7 10             	add    $0x10,%edi$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	8b 5f 08             	mov    0x8(%edi),%ebx$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	85 db                	test   %ebx,%ebx$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	0f 85 6e ff ff ff    	jne    f0105193 <syscall+0x2e5>$/;"	l
f0105225	obj/kern/kernel.asm	/^f0105225:	89 fa                	mov    %edi,%edx$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	e8 26 fc ff ff       	call   f0104e57 <sys_page_unmap>$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105236	obj/kern/kernel.asm	/^f0105236:	e9 e2 01 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	e8 7e f7 ff ff       	call   f01049be <sched_yield>$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	6a 00                	push   $0x0$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	50                   	push   %eax$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	e8 89 e4 ff ff       	call   f01036da <envid2env>$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	0f 84 c0 01 00 00    	je     f010541d <syscall+0x56f>$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	77 55                	ja     f01052bb <syscall+0x40d>$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	75 42                	jne    f01052b1 <syscall+0x403>$/;"	l
f010526f	obj/kern/kernel.asm	/^f010526f:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0105277	obj/kern/kernel.asm	/^f0105277:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	75 35                	jne    f01052b1 <syscall+0x403>$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	e8 29 14 00 00       	call   f01066aa <cpunum>$/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	52                   	push   %edx$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0105294	obj/kern/kernel.asm	/^f0105294:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	e8 1d c7 ff ff       	call   f01019b9 <page_lookup>$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	85 c0                	test   %eax,%eax$/;"	l
f01052a1	obj/kern/kernel.asm	/^f01052a1:	74 0e                	je     f01052b1 <syscall+0x403>$/;"	l
f01052a3	obj/kern/kernel.asm	/^f01052a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f01052a9	obj/kern/kernel.asm	/^f01052a9:	75 10                	jne    f01052bb <syscall+0x40d>$/;"	l
f01052ab	obj/kern/kernel.asm	/^f01052ab:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	74 0a                	je     f01052bb <syscall+0x40d>$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01052b6	obj/kern/kernel.asm	/^f01052b6:	e9 62 01 00 00       	jmp    f010541d <syscall+0x56f>$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	e8 ea 13 00 00       	call   f01066aa <cpunum>$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01052c9	obj/kern/kernel.asm	/^f01052c9:	c6 80 71 02 00 00 01 	movb   $0x1,0x271(%eax)$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	e8 d5 13 00 00       	call   f01066aa <cpunum>$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01052e5	obj/kern/kernel.asm	/^f01052e5:	e8 c0 13 00 00       	call   f01066aa <cpunum>$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	89 88 78 02 00 00    	mov    %ecx,0x278(%eax)$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	e8 a9 13 00 00       	call   f01066aa <cpunum>$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	89 88 74 02 00 00    	mov    %ecx,0x274(%eax)$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	e8 92 13 00 00       	call   f01066aa <cpunum>$/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010531b	obj/kern/kernel.asm	/^f010531b:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	89 88 80 02 00 00    	mov    %ecx,0x280(%eax)$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	e8 7b 13 00 00       	call   f01066aa <cpunum>$/;"	l
f010532f	obj/kern/kernel.asm	/^f010532f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0105338	obj/kern/kernel.asm	/^f0105338:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	83 bb 84 02 00 00 00 	cmpl   $0x0,0x284(%ebx)$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	75 1c                	jne    f0105367 <syscall+0x4b9>$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	e8 5a 13 00 00       	call   f01066aa <cpunum>$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	89 83 88 02 00 00    	mov    %eax,0x288(%ebx)$/;"	l
f010535f	obj/kern/kernel.asm	/^f010535f:	89 83 84 02 00 00    	mov    %eax,0x284(%ebx)$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	eb 2e                	jmp    f0105395 <syscall+0x4e7>$/;"	l
f0105367	obj/kern/kernel.asm	/^f0105367:	8b 9b 88 02 00 00    	mov    0x288(%ebx),%ebx$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	e8 38 13 00 00       	call   f01066aa <cpunum>$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f010537b	obj/kern/kernel.asm	/^f010537b:	89 43 44             	mov    %eax,0x44(%ebx)$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105381	obj/kern/kernel.asm	/^f0105381:	e8 24 13 00 00       	call   f01066aa <cpunum>$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	89 83 88 02 00 00    	mov    %eax,0x288(%ebx)$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	e8 f3 f8 ff ff       	call   f0104c90 <ipc_try_recv>$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	e8 1c f6 ff ff       	call   f01049be <sched_yield>$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f01053a9	obj/kern/kernel.asm	/^f01053a9:	77 09                	ja     f01053b4 <syscall+0x506>$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f01053b2	obj/kern/kernel.asm	/^f01053b2:	75 64                	jne    f0105418 <syscall+0x56a>$/;"	l
f01053b4	obj/kern/kernel.asm	/^f01053b4:	e8 f1 12 00 00       	call   f01066aa <cpunum>$/;"	l
f01053b9	obj/kern/kernel.asm	/^f01053b9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	c6 80 70 02 00 00 01 	movb   $0x1,0x270(%eax)$/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9:	e8 dc 12 00 00       	call   f01066aa <cpunum>$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01053d7	obj/kern/kernel.asm	/^f01053d7:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	89 88 74 02 00 00    	mov    %ecx,0x274(%eax)$/;"	l
f01053e0	obj/kern/kernel.asm	/^f01053e0:	e8 c5 12 00 00       	call   f01066aa <cpunum>$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053e8	obj/kern/kernel.asm	/^f01053e8:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	e8 b0 12 00 00       	call   f01066aa <cpunum>$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	8b 80 28 90 22 f0    	mov    -0xfdd6fd8(%eax),%eax$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	e8 88 f8 ff ff       	call   f0104c90 <ipc_try_recv>$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	85 c0                	test   %eax,%eax$/;"	l
f010540a	obj/kern/kernel.asm	/^f010540a:	74 11                	je     f010541d <syscall+0x56f>$/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	e8 ad f5 ff ff       	call   f01049be <sched_yield>$/;"	l
f0105411	obj/kern/kernel.asm	/^f0105411:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	eb 05                	jmp    f010541d <syscall+0x56f>$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	5b                   	pop    %ebx$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	5e                   	pop    %esi$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	5f                   	pop    %edi$/;"	l
f0105423	obj/kern/kernel.asm	/^f0105423:	5d                   	pop    %ebp$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	c3                   	ret    $/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425 <stab_binsearch>:$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	55                   	push   %ebp$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	89 e5                	mov    %esp,%ebp$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	57                   	push   %edi$/;"	l
f0105429	obj/kern/kernel.asm	/^f0105429:	56                   	push   %esi$/;"	l
f010542a	obj/kern/kernel.asm	/^f010542a:	53                   	push   %ebx$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105431	obj/kern/kernel.asm	/^f0105431:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a:	8b 1a                	mov    (%edx),%ebx$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	8b 01                	mov    (%ecx),%eax$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	eb 7f                	jmp    f01054c9 <stab_binsearch+0xa4>$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	01 d8                	add    %ebx,%eax$/;"	l
f010544f	obj/kern/kernel.asm	/^f010544f:	89 c6                	mov    %eax,%esi$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	01 c6                	add    %eax,%esi$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	d1 fe                	sar    %esi$/;"	d
f0105458	obj/kern/kernel.asm	/^f0105458:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f010545b	obj/kern/kernel.asm	/^f010545b:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	89 f0                	mov    %esi,%eax$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	eb 03                	jmp    f0105468 <stab_binsearch+0x43>$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	39 c3                	cmp    %eax,%ebx$/;"	l
f010546a	obj/kern/kernel.asm	/^f010546a:	7f 0d                	jg     f0105479 <stab_binsearch+0x54>$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105470	obj/kern/kernel.asm	/^f0105470:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105473	obj/kern/kernel.asm	/^f0105473:	39 f9                	cmp    %edi,%ecx$/;"	l
f0105475	obj/kern/kernel.asm	/^f0105475:	75 ee                	jne    f0105465 <stab_binsearch+0x40>$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	eb 05                	jmp    f010547e <stab_binsearch+0x59>$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	eb 4b                	jmp    f01054c9 <stab_binsearch+0xa4>$/;"	l
f010547e	obj/kern/kernel.asm	/^f010547e:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105488	obj/kern/kernel.asm	/^f0105488:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	76 11                	jbe    f010549e <stab_binsearch+0x79>$/;"	l
f010548d	obj/kern/kernel.asm	/^f010548d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105492	obj/kern/kernel.asm	/^f0105492:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	eb 2b                	jmp    f01054c9 <stab_binsearch+0xa4>$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	73 14                	jae    f01054b7 <stab_binsearch+0x92>$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01054a9	obj/kern/kernel.asm	/^f01054a9:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	89 06                	mov    %eax,(%esi)$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	eb 12                	jmp    f01054c9 <stab_binsearch+0xa4>$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	89 06                	mov    %eax,(%esi)$/;"	l
f01054bc	obj/kern/kernel.asm	/^f01054bc:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	89 c3                	mov    %eax,%ebx$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f01054cc	obj/kern/kernel.asm	/^f01054cc:	0f 8e 78 ff ff ff    	jle    f010544a <stab_binsearch+0x25>$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	75 0f                	jne    f01054e7 <stab_binsearch+0xc2>$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	8b 00                	mov    (%eax),%eax$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01054e3	obj/kern/kernel.asm	/^f01054e3:	89 06                	mov    %eax,(%esi)$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	eb 2c                	jmp    f0105513 <stab_binsearch+0xee>$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01054ea	obj/kern/kernel.asm	/^f01054ea:	8b 00                	mov    (%eax),%eax$/;"	l
f01054ec	obj/kern/kernel.asm	/^f01054ec:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01054ef	obj/kern/kernel.asm	/^f01054ef:	8b 0e                	mov    (%esi),%ecx$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	eb 03                	jmp    f01054ff <stab_binsearch+0xda>$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	7e 0b                	jle    f010550e <stab_binsearch+0xe9>$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a:	39 df                	cmp    %ebx,%edi$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	75 ee                	jne    f01054fc <stab_binsearch+0xd7>$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	89 06                	mov    %eax,(%esi)$/;"	l
f0105513	obj/kern/kernel.asm	/^f0105513:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	5b                   	pop    %ebx$/;"	l
f0105517	obj/kern/kernel.asm	/^f0105517:	5e                   	pop    %esi$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	5f                   	pop    %edi$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	5d                   	pop    %ebp$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	c3                   	ret    $/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b <debuginfo_eip>:$/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b:	55                   	push   %ebp$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	89 e5                	mov    %esp,%ebp$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	57                   	push   %edi$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	56                   	push   %esi$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	53                   	push   %ebx$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105524	obj/kern/kernel.asm	/^f0105524:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105527	obj/kern/kernel.asm	/^f0105527:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	c7 03 6c 88 10 f0    	movl   $0xf010886c,(%ebx)$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105537	obj/kern/kernel.asm	/^f0105537:	c7 43 08 6c 88 10 f0 	movl   $0xf010886c,0x8(%ebx)$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0105545	obj/kern/kernel.asm	/^f0105545:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	0f 87 a4 00 00 00    	ja     f01055ff <debuginfo_eip+0xe4>$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	e8 4a 11 00 00       	call   f01066aa <cpunum>$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	6a 04                	push   $0x4$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	6a 10                	push   $0x10$/;"	l
f0105564	obj/kern/kernel.asm	/^f0105564:	68 00 00 20 00       	push   $0x200000$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	e8 ed df ff ff       	call   f0103564 <user_mem_check>$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	83 c4 10             	add    $0x10,%esp$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	85 c0                	test   %eax,%eax$/;"	l
f010557c	obj/kern/kernel.asm	/^f010557c:	0f 88 39 02 00 00    	js     f01057bb <debuginfo_eip+0x2a0>$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	8b 0d 08 00 20 00    	mov    0x200008,%ecx$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	89 f9                	mov    %edi,%ecx$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	29 c1                	sub    %eax,%ecx$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	e8 fc 10 00 00       	call   f01066aa <cpunum>$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	6a 04                	push   $0x4$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	e8 a0 df ff ff       	call   f0103564 <user_mem_check>$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055c7	obj/kern/kernel.asm	/^f01055c7:	85 c0                	test   %eax,%eax$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	0f 88 f3 01 00 00    	js     f01057c2 <debuginfo_eip+0x2a7>$/;"	l
f01055cf	obj/kern/kernel.asm	/^f01055cf:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	e8 cd 10 00 00       	call   f01066aa <cpunum>$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	6a 04                	push   $0x4$/;"	l
f01055df	obj/kern/kernel.asm	/^f01055df:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	ff b0 28 90 22 f0    	pushl  -0xfdd6fd8(%eax)$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	e8 71 df ff ff       	call   f0103564 <user_mem_check>$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	85 c0                	test   %eax,%eax$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	79 1f                	jns    f0105619 <debuginfo_eip+0xfe>$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	e9 ca 01 00 00       	jmp    f01057c9 <debuginfo_eip+0x2ae>$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	c7 45 c0 17 86 11 f0 	movl   $0xf0118617,-0x40(%ebp)$/;"	l
f0105606	obj/kern/kernel.asm	/^f0105606:	c7 45 b8 45 45 11 f0 	movl   $0xf0114545,-0x48(%ebp)$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	bf 44 45 11 f0       	mov    $0xf0114544,%edi$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612:	c7 45 bc 38 8e 10 f0 	movl   $0xf0108e38,-0x44(%ebp)$/;"	l
f0105619	obj/kern/kernel.asm	/^f0105619:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f010561f	obj/kern/kernel.asm	/^f010561f:	0f 83 ab 01 00 00    	jae    f01057d0 <debuginfo_eip+0x2b5>$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	0f 85 a8 01 00 00    	jne    f01057d7 <debuginfo_eip+0x2bc>$/;"	l
f010562f	obj/kern/kernel.asm	/^f010562f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	89 fa                	mov    %edi,%edx$/;"	l
f0105638	obj/kern/kernel.asm	/^f0105638:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f010563b	obj/kern/kernel.asm	/^f010563b:	29 fa                	sub    %edi,%edx$/;"	l
f010563d	obj/kern/kernel.asm	/^f010563d:	89 d0                	mov    %edx,%eax$/;"	l
f010563f	obj/kern/kernel.asm	/^f010563f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0105642	obj/kern/kernel.asm	/^f0105642:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	56                   	push   %esi$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	6a 64                	push   $0x64$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	89 d1                	mov    %edx,%ecx$/;"	l
f0105659	obj/kern/kernel.asm	/^f0105659:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	89 f8                	mov    %edi,%eax$/;"	l
f010565e	obj/kern/kernel.asm	/^f010565e:	e8 c2 fd ff ff       	call   f0105425 <stab_binsearch>$/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	85 c0                	test   %eax,%eax$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	0f 84 6d 01 00 00    	je     f01057de <debuginfo_eip+0x2c3>$/;"	l
f0105671	obj/kern/kernel.asm	/^f0105671:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010567d	obj/kern/kernel.asm	/^f010567d:	56                   	push   %esi$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	6a 24                	push   $0x24$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	89 d1                	mov    %edx,%ecx$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	89 f8                	mov    %edi,%eax$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	e8 96 fd ff ff       	call   f0105425 <stab_binsearch>$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105695	obj/kern/kernel.asm	/^f0105695:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0105698	obj/kern/kernel.asm	/^f0105698:	83 c4 10             	add    $0x10,%esp$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	39 d0                	cmp    %edx,%eax$/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	7f 2b                	jg     f01056ca <debuginfo_eip+0x1af>$/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01056a2	obj/kern/kernel.asm	/^f01056a2:	8d 0c 97             	lea    (%edi,%edx,4),%ecx$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	8b 11                	mov    (%ecx),%edx$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	2b 7d b8             	sub    -0x48(%ebp),%edi$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	39 fa                	cmp    %edi,%edx$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	73 06                	jae    f01056b7 <debuginfo_eip+0x19c>$/;"	l
f01056b1	obj/kern/kernel.asm	/^f01056b1:	03 55 b8             	add    -0x48(%ebp),%edx$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	89 53 08             	mov    %edx,0x8(%ebx)$/;"	l
f01056b7	obj/kern/kernel.asm	/^f01056b7:	8b 51 08             	mov    0x8(%ecx),%edx$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	89 53 10             	mov    %edx,0x10(%ebx)$/;"	l
f01056bd	obj/kern/kernel.asm	/^f01056bd:	29 d6                	sub    %edx,%esi$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	eb 0f                	jmp    f01056d9 <debuginfo_eip+0x1be>$/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f01056cd	obj/kern/kernel.asm	/^f01056cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01056d0	obj/kern/kernel.asm	/^f01056d0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01056dc	obj/kern/kernel.asm	/^f01056dc:	6a 3a                	push   $0x3a$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	e8 88 09 00 00       	call   f010606e <strfind>$/;"	l
f01056e6	obj/kern/kernel.asm	/^f01056e6:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	83 c4 08             	add    $0x8,%esp$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	56                   	push   %esi$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	6a 44                	push   $0x44$/;"	l
f01056f2	obj/kern/kernel.asm	/^f01056f2:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	89 f8                	mov    %edi,%eax$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	e8 23 fd ff ff       	call   f0105425 <stab_binsearch>$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	0f b7 4a 06          	movzwl 0x6(%edx),%ecx$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	eb 0a                	jmp    f010572b <debuginfo_eip+0x210>$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105727	obj/kern/kernel.asm	/^f0105727:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	39 c7                	cmp    %eax,%edi$/;"	l
f010572d	obj/kern/kernel.asm	/^f010572d:	7e 05                	jle    f0105734 <debuginfo_eip+0x219>$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	eb 47                	jmp    f010577b <debuginfo_eip+0x260>$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f010573b	obj/kern/kernel.asm	/^f010573b:	75 0e                	jne    f010574b <debuginfo_eip+0x230>$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	74 1c                	je     f0105762 <debuginfo_eip+0x247>$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	eb 17                	jmp    f0105762 <debuginfo_eip+0x247>$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	75 d1                	jne    f0105721 <debuginfo_eip+0x206>$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	74 cb                	je     f0105721 <debuginfo_eip+0x206>$/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105759	obj/kern/kernel.asm	/^f0105759:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	74 03                	je     f0105762 <debuginfo_eip+0x247>$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	8b 75 bc             	mov    -0x44(%ebp),%esi$/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	8b 7d b8             	mov    -0x48(%ebp),%edi$/;"	l
f0105771	obj/kern/kernel.asm	/^f0105771:	29 f8                	sub    %edi,%eax$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	39 c2                	cmp    %eax,%edx$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	73 04                	jae    f010577b <debuginfo_eip+0x260>$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	01 fa                	add    %edi,%edx$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	89 13                	mov    %edx,(%ebx)$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	39 f2                	cmp    %esi,%edx$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	7d 60                	jge    f01057ea <debuginfo_eip+0x2cf>$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	83 c2 01             	add    $0x1,%edx$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	89 d0                	mov    %edx,%eax$/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	eb 04                	jmp    f01057a1 <debuginfo_eip+0x286>$/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	39 c6                	cmp    %eax,%esi$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	7e 40                	jle    f01057e5 <debuginfo_eip+0x2ca>$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01057a9	obj/kern/kernel.asm	/^f01057a9:	83 c0 01             	add    $0x1,%eax$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	83 c2 0c             	add    $0xc,%edx$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f01057b2	obj/kern/kernel.asm	/^f01057b2:	74 e9                	je     f010579d <debuginfo_eip+0x282>$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	eb 2f                	jmp    f01057ea <debuginfo_eip+0x2cf>$/;"	l
f01057bb	obj/kern/kernel.asm	/^f01057bb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	eb 28                	jmp    f01057ea <debuginfo_eip+0x2cf>$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	eb 21                	jmp    f01057ea <debuginfo_eip+0x2cf>$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	eb 1a                	jmp    f01057ea <debuginfo_eip+0x2cf>$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057d5	obj/kern/kernel.asm	/^f01057d5:	eb 13                	jmp    f01057ea <debuginfo_eip+0x2cf>$/;"	l
f01057d7	obj/kern/kernel.asm	/^f01057d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	eb 0c                	jmp    f01057ea <debuginfo_eip+0x2cf>$/;"	l
f01057de	obj/kern/kernel.asm	/^f01057de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	eb 05                	jmp    f01057ea <debuginfo_eip+0x2cf>$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	5b                   	pop    %ebx$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	5e                   	pop    %esi$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	5f                   	pop    %edi$/;"	l
f01057f0	obj/kern/kernel.asm	/^f01057f0:	5d                   	pop    %ebp$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	c3                   	ret    $/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2 <printnum>:$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	55                   	push   %ebp$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01057f5	obj/kern/kernel.asm	/^f01057f5:	57                   	push   %edi$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	56                   	push   %esi$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	53                   	push   %ebx$/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	89 c7                	mov    %eax,%edi$/;"	l
f01057fd	obj/kern/kernel.asm	/^f01057fd:	89 d6                	mov    %edx,%esi$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105808	obj/kern/kernel.asm	/^f0105808:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010580b	obj/kern/kernel.asm	/^f010580b:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105816	obj/kern/kernel.asm	/^f0105816:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	39 d3                	cmp    %edx,%ebx$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	72 05                	jb     f0105822 <printnum+0x30>$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	77 45                	ja     f0105867 <printnum+0x75>$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105825	obj/kern/kernel.asm	/^f0105825:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010582b	obj/kern/kernel.asm	/^f010582b:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	53                   	push   %ebx$/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105832	obj/kern/kernel.asm	/^f0105832:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	e8 6a 12 00 00       	call   f0106ab0 <__udivdi3>$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	83 c4 18             	add    $0x18,%esp$/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	52                   	push   %edx$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	50                   	push   %eax$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	89 f2                	mov    %esi,%edx$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	89 f8                	mov    %edi,%eax$/;"	l
f010584f	obj/kern/kernel.asm	/^f010584f:	e8 9e ff ff ff       	call   f01057f2 <printnum>$/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	eb 18                	jmp    f0105871 <printnum+0x7f>$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	56                   	push   %esi$/;"	l
f010585d	obj/kern/kernel.asm	/^f010585d:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	ff d7                	call   *%edi$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	eb 03                	jmp    f010586a <printnum+0x78>$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010586d	obj/kern/kernel.asm	/^f010586d:	85 db                	test   %ebx,%ebx$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	7f e8                	jg     f0105859 <printnum+0x67>$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	56                   	push   %esi$/;"	l
f0105875	obj/kern/kernel.asm	/^f0105875:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105881	obj/kern/kernel.asm	/^f0105881:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105884	obj/kern/kernel.asm	/^f0105884:	e8 57 13 00 00       	call   f0106be0 <__umoddi3>$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	83 c4 14             	add    $0x14,%esp$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	0f be 80 76 88 10 f0 	movsbl -0xfef778a(%eax),%eax$/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893:	50                   	push   %eax$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	ff d7                	call   *%edi$/;"	l
f0105896	obj/kern/kernel.asm	/^f0105896:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	5b                   	pop    %ebx$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	5e                   	pop    %esi$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	5f                   	pop    %edi$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	5d                   	pop    %ebp$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	c3                   	ret    $/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1 <getuint>:$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	55                   	push   %ebp$/;"	l
f01058a2	obj/kern/kernel.asm	/^f01058a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	7e 0e                	jle    f01058b7 <getuint+0x16>$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	8b 10                	mov    (%eax),%edx$/;"	l
f01058ab	obj/kern/kernel.asm	/^f01058ab:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f01058ae	obj/kern/kernel.asm	/^f01058ae:	89 08                	mov    %ecx,(%eax)$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	8b 02                	mov    (%edx),%eax$/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	eb 22                	jmp    f01058d9 <getuint+0x38>$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	85 d2                	test   %edx,%edx$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	74 10                	je     f01058cb <getuint+0x2a>$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	8b 10                	mov    (%eax),%edx$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	89 08                	mov    %ecx,(%eax)$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	8b 02                	mov    (%edx),%eax$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01058c9	obj/kern/kernel.asm	/^f01058c9:	eb 0e                	jmp    f01058d9 <getuint+0x38>$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	8b 10                	mov    (%eax),%edx$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	89 08                	mov    %ecx,(%eax)$/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2:	8b 02                	mov    (%edx),%eax$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	5d                   	pop    %ebp$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	c3                   	ret    $/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db <sprintputch>:$/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db:	55                   	push   %ebp$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01058de	obj/kern/kernel.asm	/^f01058de:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	8b 10                	mov    (%eax),%edx$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	73 0a                	jae    f01058f6 <sprintputch+0x1b>$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	89 08                	mov    %ecx,(%eax)$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	88 02                	mov    %al,(%edx)$/;"	l
f01058f6	obj/kern/kernel.asm	/^f01058f6:	5d                   	pop    %ebp$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	c3                   	ret    $/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8 <printfmt>:$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	55                   	push   %ebp$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	89 e5                	mov    %esp,%ebp$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	50                   	push   %eax$/;"	l
f0105902	obj/kern/kernel.asm	/^f0105902:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105908	obj/kern/kernel.asm	/^f0105908:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010590b	obj/kern/kernel.asm	/^f010590b:	e8 05 00 00 00       	call   f0105915 <vprintfmt>$/;"	l
f0105910	obj/kern/kernel.asm	/^f0105910:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	c9                   	leave  $/;"	l
f0105914	obj/kern/kernel.asm	/^f0105914:	c3                   	ret    $/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915 <vprintfmt>:$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	55                   	push   %ebp$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	89 e5                	mov    %esp,%ebp$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	57                   	push   %edi$/;"	l
f0105919	obj/kern/kernel.asm	/^f0105919:	56                   	push   %esi$/;"	l
f010591a	obj/kern/kernel.asm	/^f010591a:	53                   	push   %ebx$/;"	l
f010591b	obj/kern/kernel.asm	/^f010591b:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010591e	obj/kern/kernel.asm	/^f010591e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105921	obj/kern/kernel.asm	/^f0105921:	89 df                	mov    %ebx,%edi$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	e9 16 01 00 00       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	85 c0                	test   %eax,%eax$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	0f 84 78 04 00 00    	je     f0105dab <vprintfmt+0x496>$/;"	l
f0105933	obj/kern/kernel.asm	/^f0105933:	83 f8 1b             	cmp    $0x1b,%eax$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	0f 85 f8 00 00 00    	jne    f0105a34 <vprintfmt+0x11f>$/;"	l
f010593c	obj/kern/kernel.asm	/^f010593c:	8d 73 02             	lea    0x2(%ebx),%esi$/;"	l
f010593f	obj/kern/kernel.asm	/^f010593f:	0f b6 5b 01          	movzbl 0x1(%ebx),%ebx$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	83 fb 5b             	cmp    $0x5b,%ebx$/;"	l
f0105946	obj/kern/kernel.asm	/^f0105946:	0f 84 d8 00 00 00    	je     f0105a24 <vprintfmt+0x10f>$/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	57                   	push   %edi$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	6a 1b                	push   $0x1b$/;"	l
f0105952	obj/kern/kernel.asm	/^f0105952:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105958	obj/kern/kernel.asm	/^f0105958:	57                   	push   %edi$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	53                   	push   %ebx$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010595d	obj/kern/kernel.asm	/^f010595d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	89 f3                	mov    %esi,%ebx$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	e9 da 00 00 00       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	3c 33                	cmp    $0x33,%al$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	74 39                	je     f01059a4 <vprintfmt+0x8f>$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	3c 33                	cmp    $0x33,%al$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	77 09                	ja     f0105978 <vprintfmt+0x63>$/;"	l
f010596f	obj/kern/kernel.asm	/^f010596f:	3c 30                	cmp    $0x30,%al$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	74 16                	je     f0105989 <vprintfmt+0x74>$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	e9 c9 00 00 00       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105978	obj/kern/kernel.asm	/^f0105978:	3c 34                	cmp    $0x34,%al$/;"	l
f010597a	obj/kern/kernel.asm	/^f010597a:	74 67                	je     f01059e3 <vprintfmt+0xce>$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	3c 3b                	cmp    $0x3b,%al$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	0f 84 9e 00 00 00    	je     f0105a22 <vprintfmt+0x10d>$/;"	l
f0105984	obj/kern/kernel.asm	/^f0105984:	e9 b8 00 00 00       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	c7 05 00 33 12 f0 00 	movl   $0x700,0xf0123300$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	07 00 00 $/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	c7 05 00 80 22 f0 00 	movl   $0x0,0xf0228000$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	00 00 00 $/;"	l
f010599d	obj/kern/kernel.asm	/^f010599d:	89 de                	mov    %ebx,%esi$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	e9 80 00 00 00       	jmp    f0105a24 <vprintfmt+0x10f>$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01059ab	obj/kern/kernel.asm	/^f01059ab:	83 ea 30             	sub    $0x30,%edx$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f01059b4	obj/kern/kernel.asm	/^f01059b4:	b9 37 00 00 00       	mov    $0x37,%ecx$/;"	l
f01059b9	obj/kern/kernel.asm	/^f01059b9:	0f 47 c1             	cmova  %ecx,%eax$/;"	l
f01059bc	obj/kern/kernel.asm	/^f01059bc:	83 e8 30             	sub    $0x30,%eax$/;"	l
f01059bf	obj/kern/kernel.asm	/^f01059bf:	89 c2                	mov    %eax,%edx$/;"	l
f01059c1	obj/kern/kernel.asm	/^f01059c1:	83 e2 04             	and    $0x4,%edx$/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01059c7	obj/kern/kernel.asm	/^f01059c7:	89 c1                	mov    %eax,%ecx$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	83 e1 01             	and    $0x1,%ecx$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	09 ca                	or     %ecx,%edx$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	83 e0 02             	and    $0x2,%eax$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	09 d0                	or     %edx,%eax$/;"	l
f01059d6	obj/kern/kernel.asm	/^f01059d6:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01059d9	obj/kern/kernel.asm	/^f01059d9:	a3 00 33 12 f0       	mov    %eax,0xf0123300$/;"	l
f01059de	obj/kern/kernel.asm	/^f01059de:	8d 76 02             	lea    0x2(%esi),%esi$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	eb 41                	jmp    f0105a24 <vprintfmt+0x10f>$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	83 ea 30             	sub    $0x30,%edx$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	b9 30 00 00 00       	mov    $0x30,%ecx$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	0f 47 c1             	cmova  %ecx,%eax$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	83 e8 30             	sub    $0x30,%eax$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	89 c2                	mov    %eax,%edx$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	83 e2 04             	and    $0x4,%edx$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	89 c1                	mov    %eax,%ecx$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	83 e1 01             	and    $0x1,%ecx$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	09 ca                	or     %ecx,%edx$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	83 e0 02             	and    $0x2,%eax$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	09 d0                	or     %edx,%eax$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0105a18	obj/kern/kernel.asm	/^f0105a18:	a3 00 80 22 f0       	mov    %eax,0xf0228000$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	8d 76 02             	lea    0x2(%esi),%esi$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	eb 02                	jmp    f0105a24 <vprintfmt+0x10f>$/;"	l
f0105a22	obj/kern/kernel.asm	/^f0105a22:	89 de                	mov    %ebx,%esi$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	3c 6d                	cmp    $0x6d,%al$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	0f 85 35 ff ff ff    	jne    f0105967 <vprintfmt+0x52>$/;"	l
f0105a32	obj/kern/kernel.asm	/^f0105a32:	eb 0d                	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	57                   	push   %edi$/;"	l
f0105a38	obj/kern/kernel.asm	/^f0105a38:	50                   	push   %eax$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105a3c	obj/kern/kernel.asm	/^f0105a3c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a3f	obj/kern/kernel.asm	/^f0105a3f:	89 f3                	mov    %esi,%ebx$/;"	l
f0105a41	obj/kern/kernel.asm	/^f0105a41:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0105a44	obj/kern/kernel.asm	/^f0105a44:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	0f 85 db fe ff ff    	jne    f010592b <vprintfmt+0x16>$/;"	l
f0105a50	obj/kern/kernel.asm	/^f0105a50:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	eb 06                	jmp    f0105a76 <vprintfmt+0x161>$/;"	l
f0105a70	obj/kern/kernel.asm	/^f0105a70:	89 de                	mov    %ebx,%esi$/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	3c 55                	cmp    $0x55,%al$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	0f 87 03 03 00 00    	ja     f0105d8d <vprintfmt+0x478>$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	ff 24 85 c0 89 10 f0 	jmp    *-0xfef7640(,%eax,4)$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	89 de                	mov    %ebx,%esi$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	eb da                	jmp    f0105a76 <vprintfmt+0x161>$/;"	l
f0105a9c	obj/kern/kernel.asm	/^f0105a9c:	89 de                	mov    %ebx,%esi$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0105aa6	obj/kern/kernel.asm	/^f0105aa6:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	0f be 0e             	movsbl (%esi),%ecx$/;"	l
f0105aad	obj/kern/kernel.asm	/^f0105aad:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0105ab0	obj/kern/kernel.asm	/^f0105ab0:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	77 36                	ja     f0105aeb <vprintfmt+0x1d6>$/;"	l
f0105ab5	obj/kern/kernel.asm	/^f0105ab5:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	eb e9                	jmp    f0105aa3 <vprintfmt+0x18e>$/;"	l
f0105aba	obj/kern/kernel.asm	/^f0105aba:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105abd	obj/kern/kernel.asm	/^f0105abd:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	8b 00                	mov    (%eax),%eax$/;"	l
f0105ac5	obj/kern/kernel.asm	/^f0105ac5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	89 de                	mov    %ebx,%esi$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	eb 22                	jmp    f0105aee <vprintfmt+0x1d9>$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105acf	obj/kern/kernel.asm	/^f0105acf:	85 c0                	test   %eax,%eax$/;"	l
f0105ad1	obj/kern/kernel.asm	/^f0105ad1:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	0f 49 c8             	cmovns %eax,%ecx$/;"	l
f0105ad9	obj/kern/kernel.asm	/^f0105ad9:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	89 de                	mov    %ebx,%esi$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	eb 96                	jmp    f0105a76 <vprintfmt+0x161>$/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0:	89 de                	mov    %ebx,%esi$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	eb 8b                	jmp    f0105a76 <vprintfmt+0x161>$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105aee	obj/kern/kernel.asm	/^f0105aee:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105af2	obj/kern/kernel.asm	/^f0105af2:	79 82                	jns    f0105a76 <vprintfmt+0x161>$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105af7	obj/kern/kernel.asm	/^f0105af7:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105b01	obj/kern/kernel.asm	/^f0105b01:	e9 70 ff ff ff       	jmp    f0105a76 <vprintfmt+0x161>$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	89 de                	mov    %ebx,%esi$/;"	l
f0105b0b	obj/kern/kernel.asm	/^f0105b0b:	e9 66 ff ff ff       	jmp    f0105a76 <vprintfmt+0x161>$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105b19	obj/kern/kernel.asm	/^f0105b19:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105b1c	obj/kern/kernel.asm	/^f0105b1c:	57                   	push   %edi$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	ff 30                	pushl  (%eax)$/;"	l
f0105b1f	obj/kern/kernel.asm	/^f0105b1f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b22	obj/kern/kernel.asm	/^f0105b22:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	e9 17 ff ff ff       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	8b 00                	mov    (%eax),%eax$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	99                   	cltd   $/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	31 d0                	xor    %edx,%eax$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	29 d0                	sub    %edx,%eax$/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	83 f8 10             	cmp    $0x10,%eax$/;"	l
f0105b3d	obj/kern/kernel.asm	/^f0105b3d:	7f 0b                	jg     f0105b4a <vprintfmt+0x235>$/;"	l
f0105b3f	obj/kern/kernel.asm	/^f0105b3f:	8b 14 85 20 8b 10 f0 	mov    -0xfef74e0(,%eax,4),%edx$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	85 d2                	test   %edx,%edx$/;"	l
f0105b48	obj/kern/kernel.asm	/^f0105b48:	75 17                	jne    f0105b61 <vprintfmt+0x24c>$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	50                   	push   %eax$/;"	l
f0105b4b	obj/kern/kernel.asm	/^f0105b4b:	68 8e 88 10 f0       	push   $0xf010888e$/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	57                   	push   %edi$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	e8 9f fd ff ff       	call   f01058f8 <printfmt>$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	e9 e0 fe ff ff       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	52                   	push   %edx$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	68 a3 80 10 f0       	push   $0xf01080a3$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	57                   	push   %edi$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105b6b	obj/kern/kernel.asm	/^f0105b6b:	e8 88 fd ff ff       	call   f01058f8 <printfmt>$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	e9 c9 fe ff ff       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105b7b	obj/kern/kernel.asm	/^f0105b7b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	8b 30                	mov    (%eax),%esi$/;"	l
f0105b83	obj/kern/kernel.asm	/^f0105b83:	85 f6                	test   %esi,%esi$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	b8 87 88 10 f0       	mov    $0xf0108887,%eax$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	0f 8e 92 00 00 00    	jle    f0105c29 <vprintfmt+0x314>$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0105b9b	obj/kern/kernel.asm	/^f0105b9b:	0f 84 96 00 00 00    	je     f0105c37 <vprintfmt+0x322>$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	56                   	push   %esi$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	e8 77 03 00 00       	call   f0105f24 <strnlen>$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	29 c1                	sub    %eax,%ecx$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	89 cb                	mov    %ecx,%ebx$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	89 c6                	mov    %eax,%esi$/;"	l
f0105bc6	obj/kern/kernel.asm	/^f0105bc6:	eb 0e                	jmp    f0105bd6 <vprintfmt+0x2c1>$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	57                   	push   %edi$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	56                   	push   %esi$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105bd0	obj/kern/kernel.asm	/^f0105bd0:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bd6	obj/kern/kernel.asm	/^f0105bd6:	85 db                	test   %ebx,%ebx$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	7f ee                	jg     f0105bc8 <vprintfmt+0x2b3>$/;"	l
f0105bda	obj/kern/kernel.asm	/^f0105bda:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0:	85 c9                	test   %ecx,%ecx$/;"	l
f0105be2	obj/kern/kernel.asm	/^f0105be2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	29 c1                	sub    %eax,%ecx$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105bef	obj/kern/kernel.asm	/^f0105bef:	89 cf                	mov    %ecx,%edi$/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105bf4	obj/kern/kernel.asm	/^f0105bf4:	eb 4d                	jmp    f0105c43 <vprintfmt+0x32e>$/;"	l
f0105bf6	obj/kern/kernel.asm	/^f0105bf6:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	74 1b                	je     f0105c17 <vprintfmt+0x302>$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	0f be c0             	movsbl %al,%eax$/;"	l
f0105bff	obj/kern/kernel.asm	/^f0105bff:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	76 10                	jbe    f0105c17 <vprintfmt+0x302>$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105c0a	obj/kern/kernel.asm	/^f0105c0a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105c0d	obj/kern/kernel.asm	/^f0105c0d:	6a 3f                	push   $0x3f$/;"	l
f0105c0f	obj/kern/kernel.asm	/^f0105c0f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	eb 0d                	jmp    f0105c24 <vprintfmt+0x30f>$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	52                   	push   %edx$/;"	l
f0105c1e	obj/kern/kernel.asm	/^f0105c1e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105c27	obj/kern/kernel.asm	/^f0105c27:	eb 1a                	jmp    f0105c43 <vprintfmt+0x32e>$/;"	l
f0105c29	obj/kern/kernel.asm	/^f0105c29:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	eb 0c                	jmp    f0105c43 <vprintfmt+0x32e>$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46:	0f b6 46 ff          	movzbl -0x1(%esi),%eax$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	0f be d0             	movsbl %al,%edx$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	85 d2                	test   %edx,%edx$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	74 25                	je     f0105c76 <vprintfmt+0x361>$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	85 db                	test   %ebx,%ebx$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	78 a1                	js     f0105bf6 <vprintfmt+0x2e1>$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	79 9c                	jns    f0105bf6 <vprintfmt+0x2e1>$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	89 f8                	mov    %edi,%eax$/;"	l
f0105c5c	obj/kern/kernel.asm	/^f0105c5c:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105c62	obj/kern/kernel.asm	/^f0105c62:	89 c3                	mov    %eax,%ebx$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	eb 18                	jmp    f0105c7e <vprintfmt+0x369>$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	57                   	push   %edi$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	6a 20                	push   $0x20$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	ff d6                	call   *%esi$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105c71	obj/kern/kernel.asm	/^f0105c71:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	eb 08                	jmp    f0105c7e <vprintfmt+0x369>$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	89 fb                	mov    %edi,%ebx$/;"	l
f0105c78	obj/kern/kernel.asm	/^f0105c78:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105c7e	obj/kern/kernel.asm	/^f0105c7e:	85 db                	test   %ebx,%ebx$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	7f e4                	jg     f0105c66 <vprintfmt+0x351>$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105c85	obj/kern/kernel.asm	/^f0105c85:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	e9 b4 fd ff ff       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	7e 16                	jle    f0105ca8 <vprintfmt+0x393>$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0105c98	obj/kern/kernel.asm	/^f0105c98:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105c9b	obj/kern/kernel.asm	/^f0105c9b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	8b 00                	mov    (%eax),%eax$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	eb 32                	jmp    f0105cda <vprintfmt+0x3c5>$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	85 d2                	test   %edx,%edx$/;"	l
f0105caa	obj/kern/kernel.asm	/^f0105caa:	74 18                	je     f0105cc4 <vprintfmt+0x3af>$/;"	l
f0105cac	obj/kern/kernel.asm	/^f0105cac:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105cb2	obj/kern/kernel.asm	/^f0105cb2:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	8b 30                	mov    (%eax),%esi$/;"	l
f0105cb7	obj/kern/kernel.asm	/^f0105cb7:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105cba	obj/kern/kernel.asm	/^f0105cba:	89 f0                	mov    %esi,%eax$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105cbf	obj/kern/kernel.asm	/^f0105cbf:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105cc2	obj/kern/kernel.asm	/^f0105cc2:	eb 16                	jmp    f0105cda <vprintfmt+0x3c5>$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105cc7	obj/kern/kernel.asm	/^f0105cc7:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105ccd	obj/kern/kernel.asm	/^f0105ccd:	8b 30                	mov    (%eax),%esi$/;"	l
f0105ccf	obj/kern/kernel.asm	/^f0105ccf:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105cd2	obj/kern/kernel.asm	/^f0105cd2:	89 f0                	mov    %esi,%eax$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f0105ce5	obj/kern/kernel.asm	/^f0105ce5:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	79 72                	jns    f0105d5d <vprintfmt+0x448>$/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	57                   	push   %edi$/;"	l
f0105cef	obj/kern/kernel.asm	/^f0105cef:	6a 2d                	push   $0x2d$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	f7 d8                	neg    %eax$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff:	f7 da                	neg    %edx$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04:	eb 57                	jmp    f0105d5d <vprintfmt+0x448>$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	e8 93 fb ff ff       	call   f01058a1 <getuint>$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	eb 48                	jmp    f0105d5d <vprintfmt+0x448>$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	e8 84 fb ff ff       	call   f01058a1 <getuint>$/;"	l
f0105d1d	obj/kern/kernel.asm	/^f0105d1d:	be 08 00 00 00       	mov    $0x8,%esi$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	eb 39                	jmp    f0105d5d <vprintfmt+0x448>$/;"	l
f0105d24	obj/kern/kernel.asm	/^f0105d24:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	57                   	push   %edi$/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28:	6a 30                	push   $0x30$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d2d	obj/kern/kernel.asm	/^f0105d2d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	57                   	push   %edi$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	6a 78                	push   $0x78$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d36	obj/kern/kernel.asm	/^f0105d36:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105d3c	obj/kern/kernel.asm	/^f0105d3c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	8b 00                	mov    (%eax),%eax$/;"	l
f0105d41	obj/kern/kernel.asm	/^f0105d41:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d46	obj/kern/kernel.asm	/^f0105d46:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0105d4e	obj/kern/kernel.asm	/^f0105d4e:	eb 0d                	jmp    f0105d5d <vprintfmt+0x448>$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	e8 49 fb ff ff       	call   f01058a1 <getuint>$/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	0f be 4d d8          	movsbl -0x28(%ebp),%ecx$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	51                   	push   %ecx$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105d68	obj/kern/kernel.asm	/^f0105d68:	56                   	push   %esi$/;"	l
f0105d69	obj/kern/kernel.asm	/^f0105d69:	52                   	push   %edx$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	50                   	push   %eax$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	89 fa                	mov    %edi,%edx$/;"	l
f0105d6d	obj/kern/kernel.asm	/^f0105d6d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	e8 7d fa ff ff       	call   f01057f2 <printnum>$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	e9 c4 fc ff ff       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	57                   	push   %edi$/;"	l
f0105d81	obj/kern/kernel.asm	/^f0105d81:	51                   	push   %ecx$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	e9 b4 fc ff ff       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105d90	obj/kern/kernel.asm	/^f0105d90:	57                   	push   %edi$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	6a 25                	push   $0x25$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d96	obj/kern/kernel.asm	/^f0105d96:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	89 f3                	mov    %esi,%ebx$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	eb 03                	jmp    f0105da0 <vprintfmt+0x48b>$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0105da4	obj/kern/kernel.asm	/^f0105da4:	75 f7                	jne    f0105d9d <vprintfmt+0x488>$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	e9 96 fc ff ff       	jmp    f0105a41 <vprintfmt+0x12c>$/;"	l
f0105dab	obj/kern/kernel.asm	/^f0105dab:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	5b                   	pop    %ebx$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	5e                   	pop    %esi$/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	5f                   	pop    %edi$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	5d                   	pop    %ebp$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	c3                   	ret    $/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3 <vsnprintf>:$/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3:	55                   	push   %ebp$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105db6	obj/kern/kernel.asm	/^f0105db6:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105dc2	obj/kern/kernel.asm	/^f0105dc2:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0:	85 c0                	test   %eax,%eax$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	74 26                	je     f0105dfa <vsnprintf+0x47>$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	85 d2                	test   %edx,%edx$/;"	l
f0105dd6	obj/kern/kernel.asm	/^f0105dd6:	7e 22                	jle    f0105dfa <vsnprintf+0x47>$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105dde	obj/kern/kernel.asm	/^f0105dde:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	50                   	push   %eax$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	68 db 58 10 f0       	push   $0xf01058db$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	e8 29 fb ff ff       	call   f0105915 <vprintfmt>$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105df2	obj/kern/kernel.asm	/^f0105df2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105df5	obj/kern/kernel.asm	/^f0105df5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105df8	obj/kern/kernel.asm	/^f0105df8:	eb 05                	jmp    f0105dff <vsnprintf+0x4c>$/;"	l
f0105dfa	obj/kern/kernel.asm	/^f0105dfa:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	c9                   	leave  $/;"	l
f0105e00	obj/kern/kernel.asm	/^f0105e00:	c3                   	ret    $/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01 <snprintf>:$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	55                   	push   %ebp$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	50                   	push   %eax$/;"	l
f0105e0b	obj/kern/kernel.asm	/^f0105e0b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	e8 9a ff ff ff       	call   f0105db3 <vsnprintf>$/;"	l
f0105e19	obj/kern/kernel.asm	/^f0105e19:	c9                   	leave  $/;"	l
f0105e1a	obj/kern/kernel.asm	/^f0105e1a:	c3                   	ret    $/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b <readline>:$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	55                   	push   %ebp$/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	57                   	push   %edi$/;"	l
f0105e1f	obj/kern/kernel.asm	/^f0105e1f:	56                   	push   %esi$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	53                   	push   %ebx$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e27	obj/kern/kernel.asm	/^f0105e27:	85 c0                	test   %eax,%eax$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	74 11                	je     f0105e3c <readline+0x21>$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	50                   	push   %eax$/;"	l
f0105e2f	obj/kern/kernel.asm	/^f0105e2f:	68 a3 80 10 f0       	push   $0xf01080a3$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	e8 22 e1 ff ff       	call   f0103f5b <cprintf>$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	6a 00                	push   $0x0$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	e8 5f a9 ff ff       	call   f01007a5 <iscons>$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	89 c7                	mov    %eax,%edi$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	e8 3f a9 ff ff       	call   f0100794 <getchar>$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	89 c3                	mov    %eax,%ebx$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	85 c0                	test   %eax,%eax$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	79 29                	jns    f0105e84 <readline+0x69>$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	83 fb f7             	cmp    $0xfffffff7,%ebx$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	0f 84 9b 00 00 00    	je     f0105f04 <readline+0xe9>$/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105e6c	obj/kern/kernel.asm	/^f0105e6c:	53                   	push   %ebx$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	68 a7 8b 10 f0       	push   $0xf0108ba7$/;"	l
f0105e72	obj/kern/kernel.asm	/^f0105e72:	e8 e4 e0 ff ff       	call   f0103f5b <cprintf>$/;"	l
f0105e77	obj/kern/kernel.asm	/^f0105e77:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e7f	obj/kern/kernel.asm	/^f0105e7f:	e9 80 00 00 00       	jmp    f0105f04 <readline+0xe9>$/;"	l
f0105e84	obj/kern/kernel.asm	/^f0105e84:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	0f 94 c2             	sete   %dl$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0105e8d	obj/kern/kernel.asm	/^f0105e8d:	0f 94 c0             	sete   %al$/;"	l
f0105e90	obj/kern/kernel.asm	/^f0105e90:	08 c2                	or     %al,%dl$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	74 1a                	je     f0105eae <readline+0x93>$/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94:	85 f6                	test   %esi,%esi$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	7e 16                	jle    f0105eae <readline+0x93>$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	85 ff                	test   %edi,%edi$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	74 0d                	je     f0105ea9 <readline+0x8e>$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	6a 08                	push   $0x8$/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1:	e8 de a8 ff ff       	call   f0100784 <cputchar>$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	eb a2                	jmp    f0105e50 <readline+0x35>$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	7e 26                	jle    f0105ed9 <readline+0xbe>$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	7f 1e                	jg     f0105ed9 <readline+0xbe>$/;"	l
f0105ebb	obj/kern/kernel.asm	/^f0105ebb:	85 ff                	test   %edi,%edi$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	74 0c                	je     f0105ecb <readline+0xb0>$/;"	l
f0105ebf	obj/kern/kernel.asm	/^f0105ebf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105ec2	obj/kern/kernel.asm	/^f0105ec2:	53                   	push   %ebx$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	e8 bc a8 ff ff       	call   f0100784 <cputchar>$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	88 9e 80 8a 22 f0    	mov    %bl,-0xfdd7580(%esi)$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	e9 77 ff ff ff       	jmp    f0105e50 <readline+0x35>$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	74 09                	je     f0105ee7 <readline+0xcc>$/;"	l
f0105ede	obj/kern/kernel.asm	/^f0105ede:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	0f 85 69 ff ff ff    	jne    f0105e50 <readline+0x35>$/;"	l
f0105ee7	obj/kern/kernel.asm	/^f0105ee7:	85 ff                	test   %edi,%edi$/;"	l
f0105ee9	obj/kern/kernel.asm	/^f0105ee9:	74 0d                	je     f0105ef8 <readline+0xdd>$/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105eee	obj/kern/kernel.asm	/^f0105eee:	6a 0a                	push   $0xa$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	e8 8f a8 ff ff       	call   f0100784 <cputchar>$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8:	c6 86 80 8a 22 f0 00 	movb   $0x0,-0xfdd7580(%esi)$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	b8 80 8a 22 f0       	mov    $0xf0228a80,%eax$/;"	l
f0105f04	obj/kern/kernel.asm	/^f0105f04:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	5b                   	pop    %ebx$/;"	l
f0105f08	obj/kern/kernel.asm	/^f0105f08:	5e                   	pop    %esi$/;"	l
f0105f09	obj/kern/kernel.asm	/^f0105f09:	5f                   	pop    %edi$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	5d                   	pop    %ebp$/;"	l
f0105f0b	obj/kern/kernel.asm	/^f0105f0b:	c3                   	ret    $/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c <strlen>:$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	55                   	push   %ebp$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f0f	obj/kern/kernel.asm	/^f0105f0f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105f12	obj/kern/kernel.asm	/^f0105f12:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	eb 03                	jmp    f0105f1c <strlen+0x10>$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105f1c	obj/kern/kernel.asm	/^f0105f1c:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105f20	obj/kern/kernel.asm	/^f0105f20:	75 f7                	jne    f0105f19 <strlen+0xd>$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	5d                   	pop    %ebp$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	c3                   	ret    $/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24 <strnlen>:$/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24:	55                   	push   %ebp$/;"	l
f0105f25	obj/kern/kernel.asm	/^f0105f25:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f27	obj/kern/kernel.asm	/^f0105f27:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	eb 03                	jmp    f0105f37 <strnlen+0x13>$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	39 c2                	cmp    %eax,%edx$/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	74 08                	je     f0105f43 <strnlen+0x1f>$/;"	l
f0105f3b	obj/kern/kernel.asm	/^f0105f3b:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	75 f3                	jne    f0105f34 <strnlen+0x10>$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	89 d0                	mov    %edx,%eax$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	5d                   	pop    %ebp$/;"	l
f0105f44	obj/kern/kernel.asm	/^f0105f44:	c3                   	ret    $/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45 <strcpy>:$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	55                   	push   %ebp$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	53                   	push   %ebx$/;"	l
f0105f49	obj/kern/kernel.asm	/^f0105f49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	89 c2                	mov    %eax,%edx$/;"	l
f0105f51	obj/kern/kernel.asm	/^f0105f51:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105f57	obj/kern/kernel.asm	/^f0105f57:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	84 db                	test   %bl,%bl$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	75 ef                	jne    f0105f51 <strcpy+0xc>$/;"	l
f0105f62	obj/kern/kernel.asm	/^f0105f62:	5b                   	pop    %ebx$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	5d                   	pop    %ebp$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	c3                   	ret    $/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65 <strcat>:$/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65:	55                   	push   %ebp$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	53                   	push   %ebx$/;"	l
f0105f69	obj/kern/kernel.asm	/^f0105f69:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105f6c	obj/kern/kernel.asm	/^f0105f6c:	53                   	push   %ebx$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	e8 9a ff ff ff       	call   f0105f0c <strlen>$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105f75	obj/kern/kernel.asm	/^f0105f75:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	01 d8                	add    %ebx,%eax$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	50                   	push   %eax$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	e8 c5 ff ff ff       	call   f0105f45 <strcpy>$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	c9                   	leave  $/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	c3                   	ret    $/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87 <strncpy>:$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	55                   	push   %ebp$/;"	l
f0105f88	obj/kern/kernel.asm	/^f0105f88:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	56                   	push   %esi$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	53                   	push   %ebx$/;"	l
f0105f8c	obj/kern/kernel.asm	/^f0105f8c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	89 f3                	mov    %esi,%ebx$/;"	l
f0105f94	obj/kern/kernel.asm	/^f0105f94:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105f97	obj/kern/kernel.asm	/^f0105f97:	89 f2                	mov    %esi,%edx$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	eb 0f                	jmp    f0105faa <strncpy+0x23>$/;"	l
f0105f9b	obj/kern/kernel.asm	/^f0105f9b:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105f9e	obj/kern/kernel.asm	/^f0105f9e:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105fa1	obj/kern/kernel.asm	/^f0105fa1:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	39 da                	cmp    %ebx,%edx$/;"	l
f0105fac	obj/kern/kernel.asm	/^f0105fac:	75 ed                	jne    f0105f9b <strncpy+0x14>$/;"	l
f0105fae	obj/kern/kernel.asm	/^f0105fae:	89 f0                	mov    %esi,%eax$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	5b                   	pop    %ebx$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	5e                   	pop    %esi$/;"	l
f0105fb2	obj/kern/kernel.asm	/^f0105fb2:	5d                   	pop    %ebp$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	c3                   	ret    $/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4 <strlcpy>:$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	55                   	push   %ebp$/;"	l
f0105fb5	obj/kern/kernel.asm	/^f0105fb5:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fb7	obj/kern/kernel.asm	/^f0105fb7:	56                   	push   %esi$/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	53                   	push   %ebx$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	89 f0                	mov    %esi,%eax$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	85 d2                	test   %edx,%edx$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	74 21                	je     f0105fe9 <strlcpy+0x35>$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f0105fcc	obj/kern/kernel.asm	/^f0105fcc:	89 f2                	mov    %esi,%edx$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	eb 09                	jmp    f0105fd9 <strlcpy+0x25>$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	39 c2                	cmp    %eax,%edx$/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	74 09                	je     f0105fe6 <strlcpy+0x32>$/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	84 db                	test   %bl,%bl$/;"	l
f0105fe2	obj/kern/kernel.asm	/^f0105fe2:	75 ec                	jne    f0105fd0 <strlcpy+0x1c>$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	89 d0                	mov    %edx,%eax$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	29 f0                	sub    %esi,%eax$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	5b                   	pop    %ebx$/;"	l
f0105fec	obj/kern/kernel.asm	/^f0105fec:	5e                   	pop    %esi$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	5d                   	pop    %ebp$/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	c3                   	ret    $/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef <strcmp>:$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	55                   	push   %ebp$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ff2	obj/kern/kernel.asm	/^f0105ff2:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	eb 06                	jmp    f0106000 <strcmp+0x11>$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105ffd	obj/kern/kernel.asm	/^f0105ffd:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	84 c0                	test   %al,%al$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	74 04                	je     f010600b <strcmp+0x1c>$/;"	l
f0106007	obj/kern/kernel.asm	/^f0106007:	3a 02                	cmp    (%edx),%al$/;"	l
f0106009	obj/kern/kernel.asm	/^f0106009:	74 ef                	je     f0105ffa <strcmp+0xb>$/;"	l
f010600b	obj/kern/kernel.asm	/^f010600b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010600e	obj/kern/kernel.asm	/^f010600e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0106011	obj/kern/kernel.asm	/^f0106011:	29 d0                	sub    %edx,%eax$/;"	l
f0106013	obj/kern/kernel.asm	/^f0106013:	5d                   	pop    %ebp$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	c3                   	ret    $/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015 <strncmp>:$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	55                   	push   %ebp$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	89 e5                	mov    %esp,%ebp$/;"	l
f0106018	obj/kern/kernel.asm	/^f0106018:	53                   	push   %ebx$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010601f	obj/kern/kernel.asm	/^f010601f:	89 c3                	mov    %eax,%ebx$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0106024	obj/kern/kernel.asm	/^f0106024:	eb 06                	jmp    f010602c <strncmp+0x17>$/;"	l
f0106026	obj/kern/kernel.asm	/^f0106026:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106029	obj/kern/kernel.asm	/^f0106029:	83 c2 01             	add    $0x1,%edx$/;"	l
f010602c	obj/kern/kernel.asm	/^f010602c:	39 d8                	cmp    %ebx,%eax$/;"	l
f010602e	obj/kern/kernel.asm	/^f010602e:	74 15                	je     f0106045 <strncmp+0x30>$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	84 c9                	test   %cl,%cl$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	74 04                	je     f010603b <strncmp+0x26>$/;"	l
f0106037	obj/kern/kernel.asm	/^f0106037:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	74 eb                	je     f0106026 <strncmp+0x11>$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0106041	obj/kern/kernel.asm	/^f0106041:	29 d0                	sub    %edx,%eax$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	eb 05                	jmp    f010604a <strncmp+0x35>$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010604a	obj/kern/kernel.asm	/^f010604a:	5b                   	pop    %ebx$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	5d                   	pop    %ebp$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	c3                   	ret    $/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d <strchr>:$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	55                   	push   %ebp$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106053	obj/kern/kernel.asm	/^f0106053:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	eb 07                	jmp    f0106060 <strchr+0x13>$/;"	l
f0106059	obj/kern/kernel.asm	/^f0106059:	38 ca                	cmp    %cl,%dl$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	74 0f                	je     f010606c <strchr+0x1f>$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	84 d2                	test   %dl,%dl$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	75 f2                	jne    f0106059 <strchr+0xc>$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	5d                   	pop    %ebp$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	c3                   	ret    $/;"	l
f010606e	obj/kern/kernel.asm	/^f010606e <strfind>:$/;"	l
f010606e	obj/kern/kernel.asm	/^f010606e:	55                   	push   %ebp$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106078	obj/kern/kernel.asm	/^f0106078:	eb 03                	jmp    f010607d <strfind+0xf>$/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	38 ca                	cmp    %cl,%dl$/;"	l
f0106082	obj/kern/kernel.asm	/^f0106082:	74 04                	je     f0106088 <strfind+0x1a>$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	84 d2                	test   %dl,%dl$/;"	l
f0106086	obj/kern/kernel.asm	/^f0106086:	75 f2                	jne    f010607a <strfind+0xc>$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	5d                   	pop    %ebp$/;"	l
f0106089	obj/kern/kernel.asm	/^f0106089:	c3                   	ret    $/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a <memset>:$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	55                   	push   %ebp$/;"	l
f010608b	obj/kern/kernel.asm	/^f010608b:	89 e5                	mov    %esp,%ebp$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	57                   	push   %edi$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	56                   	push   %esi$/;"	l
f010608f	obj/kern/kernel.asm	/^f010608f:	53                   	push   %ebx$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	85 c9                	test   %ecx,%ecx$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	74 36                	je     f01060d0 <memset+0x46>$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	75 28                	jne    f01060ca <memset+0x40>$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	75 23                	jne    f01060ca <memset+0x40>$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	89 d3                	mov    %edx,%ebx$/;"	l
f01060ad	obj/kern/kernel.asm	/^f01060ad:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01060b0	obj/kern/kernel.asm	/^f01060b0:	89 d6                	mov    %edx,%esi$/;"	l
f01060b2	obj/kern/kernel.asm	/^f01060b2:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01060b5	obj/kern/kernel.asm	/^f01060b5:	89 d0                	mov    %edx,%eax$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	09 f0                	or     %esi,%eax$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	09 c2                	or     %eax,%edx$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	89 d8                	mov    %ebx,%eax$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	09 d0                	or     %edx,%eax$/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	fc                   	cld    $/;"	l
f01060c6	obj/kern/kernel.asm	/^f01060c6:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	eb 06                	jmp    f01060d0 <memset+0x46>$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	fc                   	cld    $/;"	l
f01060ce	obj/kern/kernel.asm	/^f01060ce:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	89 f8                	mov    %edi,%eax$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	5b                   	pop    %ebx$/;"	l
f01060d3	obj/kern/kernel.asm	/^f01060d3:	5e                   	pop    %esi$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	5f                   	pop    %edi$/;"	l
f01060d5	obj/kern/kernel.asm	/^f01060d5:	5d                   	pop    %ebp$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	c3                   	ret    $/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7 <memmove>:$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	55                   	push   %ebp$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01060da	obj/kern/kernel.asm	/^f01060da:	57                   	push   %edi$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	56                   	push   %esi$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01060e2	obj/kern/kernel.asm	/^f01060e2:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01060e5	obj/kern/kernel.asm	/^f01060e5:	39 c6                	cmp    %eax,%esi$/;"	l
f01060e7	obj/kern/kernel.asm	/^f01060e7:	73 35                	jae    f010611e <memmove+0x47>$/;"	l
f01060e9	obj/kern/kernel.asm	/^f01060e9:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	39 d0                	cmp    %edx,%eax$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	73 2e                	jae    f010611e <memmove+0x47>$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	89 d6                	mov    %edx,%esi$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	09 fe                	or     %edi,%esi$/;"	l
f01060f7	obj/kern/kernel.asm	/^f01060f7:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f01060fd	obj/kern/kernel.asm	/^f01060fd:	75 13                	jne    f0106112 <memmove+0x3b>$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	75 0e                	jne    f0106112 <memmove+0x3b>$/;"	l
f0106104	obj/kern/kernel.asm	/^f0106104:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106107	obj/kern/kernel.asm	/^f0106107:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010610d	obj/kern/kernel.asm	/^f010610d:	fd                   	std    $/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106110	obj/kern/kernel.asm	/^f0106110:	eb 09                	jmp    f010611b <memmove+0x44>$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106115	obj/kern/kernel.asm	/^f0106115:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	fd                   	std    $/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b:	fc                   	cld    $/;"	l
f010611c	obj/kern/kernel.asm	/^f010611c:	eb 1d                	jmp    f010613b <memmove+0x64>$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	89 f2                	mov    %esi,%edx$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	09 c2                	or     %eax,%edx$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	75 0f                	jne    f0106136 <memmove+0x5f>$/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	75 0a                	jne    f0106136 <memmove+0x5f>$/;"	l
f010612c	obj/kern/kernel.asm	/^f010612c:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010612f	obj/kern/kernel.asm	/^f010612f:	89 c7                	mov    %eax,%edi$/;"	l
f0106131	obj/kern/kernel.asm	/^f0106131:	fc                   	cld    $/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106134	obj/kern/kernel.asm	/^f0106134:	eb 05                	jmp    f010613b <memmove+0x64>$/;"	l
f0106136	obj/kern/kernel.asm	/^f0106136:	89 c7                	mov    %eax,%edi$/;"	l
f0106138	obj/kern/kernel.asm	/^f0106138:	fc                   	cld    $/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010613b	obj/kern/kernel.asm	/^f010613b:	5e                   	pop    %esi$/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	5f                   	pop    %edi$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	5d                   	pop    %ebp$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	c3                   	ret    $/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f <memcpy>:$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	55                   	push   %ebp$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	89 e5                	mov    %esp,%ebp$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0106145	obj/kern/kernel.asm	/^f0106145:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106148	obj/kern/kernel.asm	/^f0106148:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	e8 87 ff ff ff       	call   f01060d7 <memmove>$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	c9                   	leave  $/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	c3                   	ret    $/;"	l
f0106152	obj/kern/kernel.asm	/^f0106152 <memcmp>:$/;"	l
f0106152	obj/kern/kernel.asm	/^f0106152:	55                   	push   %ebp$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	89 e5                	mov    %esp,%ebp$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	56                   	push   %esi$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	53                   	push   %ebx$/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	89 c6                	mov    %eax,%esi$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0106162	obj/kern/kernel.asm	/^f0106162:	eb 1a                	jmp    f010617e <memcmp+0x2c>$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	38 d9                	cmp    %bl,%cl$/;"	l
f010616c	obj/kern/kernel.asm	/^f010616c:	74 0a                	je     f0106178 <memcmp+0x26>$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0106171	obj/kern/kernel.asm	/^f0106171:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	29 d8                	sub    %ebx,%eax$/;"	l
f0106176	obj/kern/kernel.asm	/^f0106176:	eb 0f                	jmp    f0106187 <memcmp+0x35>$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	83 c0 01             	add    $0x1,%eax$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010617e	obj/kern/kernel.asm	/^f010617e:	39 f0                	cmp    %esi,%eax$/;"	l
f0106180	obj/kern/kernel.asm	/^f0106180:	75 e2                	jne    f0106164 <memcmp+0x12>$/;"	l
f0106182	obj/kern/kernel.asm	/^f0106182:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	5b                   	pop    %ebx$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	5e                   	pop    %esi$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	5d                   	pop    %ebp$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	c3                   	ret    $/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b <memfind>:$/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b:	55                   	push   %ebp$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	89 e5                	mov    %esp,%ebp$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	53                   	push   %ebx$/;"	l
f010618f	obj/kern/kernel.asm	/^f010618f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106192	obj/kern/kernel.asm	/^f0106192:	89 c1                	mov    %eax,%ecx$/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f010619b	obj/kern/kernel.asm	/^f010619b:	eb 0a                	jmp    f01061a7 <memfind+0x1c>$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	39 da                	cmp    %ebx,%edx$/;"	l
f01061a2	obj/kern/kernel.asm	/^f01061a2:	74 07                	je     f01061ab <memfind+0x20>$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	39 c8                	cmp    %ecx,%eax$/;"	l
f01061a9	obj/kern/kernel.asm	/^f01061a9:	72 f2                	jb     f010619d <memfind+0x12>$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	5b                   	pop    %ebx$/;"	l
f01061ac	obj/kern/kernel.asm	/^f01061ac:	5d                   	pop    %ebp$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	c3                   	ret    $/;"	l
f01061ae	obj/kern/kernel.asm	/^f01061ae <strtol>:$/;"	l
f01061ae	obj/kern/kernel.asm	/^f01061ae:	55                   	push   %ebp$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	89 e5                	mov    %esp,%ebp$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	57                   	push   %edi$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	56                   	push   %esi$/;"	l
f01061b3	obj/kern/kernel.asm	/^f01061b3:	53                   	push   %ebx$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	eb 03                	jmp    f01061bf <strtol+0x11>$/;"	l
f01061bc	obj/kern/kernel.asm	/^f01061bc:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01061c2	obj/kern/kernel.asm	/^f01061c2:	3c 20                	cmp    $0x20,%al$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	74 f6                	je     f01061bc <strtol+0xe>$/;"	l
f01061c6	obj/kern/kernel.asm	/^f01061c6:	3c 09                	cmp    $0x9,%al$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	74 f2                	je     f01061bc <strtol+0xe>$/;"	l
f01061ca	obj/kern/kernel.asm	/^f01061ca:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01061cc	obj/kern/kernel.asm	/^f01061cc:	75 0a                	jne    f01061d8 <strtol+0x2a>$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01061d1	obj/kern/kernel.asm	/^f01061d1:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	eb 11                	jmp    f01061e9 <strtol+0x3b>$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	3c 2d                	cmp    $0x2d,%al$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	75 08                	jne    f01061e9 <strtol+0x3b>$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	75 15                	jne    f0106206 <strtol+0x58>$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	75 10                	jne    f0106206 <strtol+0x58>$/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	75 7c                	jne    f0106278 <strtol+0xca>$/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc:	83 c1 02             	add    $0x2,%ecx$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0106204	obj/kern/kernel.asm	/^f0106204:	eb 16                	jmp    f010621c <strtol+0x6e>$/;"	l
f0106206	obj/kern/kernel.asm	/^f0106206:	85 db                	test   %ebx,%ebx$/;"	l
f0106208	obj/kern/kernel.asm	/^f0106208:	75 12                	jne    f010621c <strtol+0x6e>$/;"	l
f010620a	obj/kern/kernel.asm	/^f010620a:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	75 08                	jne    f010621c <strtol+0x6e>$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	89 f3                	mov    %esi,%ebx$/;"	l
f010622c	obj/kern/kernel.asm	/^f010622c:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	77 08                	ja     f0106239 <strtol+0x8b>$/;"	l
f0106231	obj/kern/kernel.asm	/^f0106231:	0f be d2             	movsbl %dl,%edx$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0106237	obj/kern/kernel.asm	/^f0106237:	eb 22                	jmp    f010625b <strtol+0xad>$/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	89 f3                	mov    %esi,%ebx$/;"	l
f010623e	obj/kern/kernel.asm	/^f010623e:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0106241	obj/kern/kernel.asm	/^f0106241:	77 08                	ja     f010624b <strtol+0x9d>$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	0f be d2             	movsbl %dl,%edx$/;"	l
f0106246	obj/kern/kernel.asm	/^f0106246:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	eb 10                	jmp    f010625b <strtol+0xad>$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f010624e	obj/kern/kernel.asm	/^f010624e:	89 f3                	mov    %esi,%ebx$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	77 16                	ja     f010626b <strtol+0xbd>$/;"	l
f0106255	obj/kern/kernel.asm	/^f0106255:	0f be d2             	movsbl %dl,%edx$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	83 ea 37             	sub    $0x37,%edx$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	7d 0b                	jge    f010626b <strtol+0xbd>$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0106267	obj/kern/kernel.asm	/^f0106267:	01 d0                	add    %edx,%eax$/;"	l
f0106269	obj/kern/kernel.asm	/^f0106269:	eb b9                	jmp    f0106224 <strtol+0x76>$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	74 0d                	je     f010627e <strtol+0xd0>$/;"	l
f0106271	obj/kern/kernel.asm	/^f0106271:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106274	obj/kern/kernel.asm	/^f0106274:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0106276	obj/kern/kernel.asm	/^f0106276:	eb 06                	jmp    f010627e <strtol+0xd0>$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	85 db                	test   %ebx,%ebx$/;"	l
f010627a	obj/kern/kernel.asm	/^f010627a:	74 98                	je     f0106214 <strtol+0x66>$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	eb 9e                	jmp    f010621c <strtol+0x6e>$/;"	l
f010627e	obj/kern/kernel.asm	/^f010627e:	89 c2                	mov    %eax,%edx$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	f7 da                	neg    %edx$/;"	l
f0106282	obj/kern/kernel.asm	/^f0106282:	85 ff                	test   %edi,%edi$/;"	l
f0106284	obj/kern/kernel.asm	/^f0106284:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	5b                   	pop    %ebx$/;"	l
f0106288	obj/kern/kernel.asm	/^f0106288:	5e                   	pop    %esi$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	5f                   	pop    %edi$/;"	l
f010628a	obj/kern/kernel.asm	/^f010628a:	5d                   	pop    %ebp$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	c3                   	ret    $/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c <mpentry_start>:$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	fa                   	cli    $/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	31 c0                	xor    %eax,%eax$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	8e d8                	mov    %eax,%ds$/;"	l
f0106291	obj/kern/kernel.asm	/^f0106291:	8e c0                	mov    %eax,%es$/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	8e d0                	mov    %eax,%ss$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	74 70                	je     f010630a <mpsearch1+0x3>$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010629d	obj/kern/kernel.asm	/^f010629d:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01062a4	obj/kern/kernel.asm	/^f01062a4:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	08 00                	or     %al,(%eax)$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac <start32>:$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0:	8e d8                	mov    %eax,%ds$/;"	l
f01062b2	obj/kern/kernel.asm	/^f01062b2:	8e c0                	mov    %eax,%es$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	8e d0                	mov    %eax,%ss$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba:	8e e0                	mov    %eax,%fs$/;"	l
f01062bc	obj/kern/kernel.asm	/^f01062bc:	8e e8                	mov    %eax,%gs$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f01062c3	obj/kern/kernel.asm	/^f01062c3:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01062c6	obj/kern/kernel.asm	/^f01062c6:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	8b 25 84 8e 22 f0    	mov    0xf0228e84,%esp$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01062dc	obj/kern/kernel.asm	/^f01062dc:	b8 b5 01 10 f0       	mov    $0xf01001b5,%eax$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	ff d0                	call   *%eax$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3 <spin>:$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	eb fe                	jmp    f01062e3 <spin>$/;"	l
f01062e5	obj/kern/kernel.asm	/^f01062e5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01062e8	obj/kern/kernel.asm	/^f01062e8 <gdt>:$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	ff                   	(bad)  $/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	ff 00                	incl   (%eax)$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	00 00                	add    %al,(%eax)$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	00                   	.byte 0x0$/;"	l
f01062fd	obj/kern/kernel.asm	/^f01062fd:	92                   	xchg   %eax,%edx$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	cf                   	iret   $/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300 <gdtdesc>:$/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300:	17                   	pop    %ss$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306 <mpentry_end>:$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	90                   	nop$/;"	l
f0106307	obj/kern/kernel.asm	/^f0106307 <mpsearch1>:$/;"	l
f0106307	obj/kern/kernel.asm	/^f0106307:	55                   	push   %ebp$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	89 e5                	mov    %esp,%ebp$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	57                   	push   %edi$/;"	l
f010630b	obj/kern/kernel.asm	/^f010630b:	56                   	push   %esi$/;"	l
f010630c	obj/kern/kernel.asm	/^f010630c:	53                   	push   %ebx$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	8b 0d 8c 8e 22 f0    	mov    0xf0228e8c,%ecx$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	89 c3                	mov    %eax,%ebx$/;"	l
f0106318	obj/kern/kernel.asm	/^f0106318:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f010631b	obj/kern/kernel.asm	/^f010631b:	39 cb                	cmp    %ecx,%ebx$/;"	l
f010631d	obj/kern/kernel.asm	/^f010631d:	72 12                	jb     f0106331 <mpsearch1+0x2a>$/;"	l
f010631f	obj/kern/kernel.asm	/^f010631f:	50                   	push   %eax$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0106325	obj/kern/kernel.asm	/^f0106325:	6a 57                	push   $0x57$/;"	l
f0106327	obj/kern/kernel.asm	/^f0106327:	68 45 8d 10 f0       	push   $0xf0108d45$/;"	l
f010632c	obj/kern/kernel.asm	/^f010632c:	e8 0f 9d ff ff       	call   f0100040 <_panic>$/;"	l
f0106331	obj/kern/kernel.asm	/^f0106331:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	01 d0                	add    %edx,%eax$/;"	l
f0106339	obj/kern/kernel.asm	/^f0106339:	89 c2                	mov    %eax,%edx$/;"	l
f010633b	obj/kern/kernel.asm	/^f010633b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	39 ca                	cmp    %ecx,%edx$/;"	l
f0106340	obj/kern/kernel.asm	/^f0106340:	72 12                	jb     f0106354 <mpsearch1+0x4d>$/;"	l
f0106342	obj/kern/kernel.asm	/^f0106342:	50                   	push   %eax$/;"	l
f0106343	obj/kern/kernel.asm	/^f0106343:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0106348	obj/kern/kernel.asm	/^f0106348:	6a 57                	push   $0x57$/;"	l
f010634a	obj/kern/kernel.asm	/^f010634a:	68 45 8d 10 f0       	push   $0xf0108d45$/;"	l
f010634f	obj/kern/kernel.asm	/^f010634f:	e8 ec 9c ff ff       	call   f0100040 <_panic>$/;"	l
f0106354	obj/kern/kernel.asm	/^f0106354:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f010635a	obj/kern/kernel.asm	/^f010635a:	eb 2f                	jmp    f010638b <mpsearch1+0x84>$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010635f	obj/kern/kernel.asm	/^f010635f:	6a 04                	push   $0x4$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	68 55 8d 10 f0       	push   $0xf0108d55$/;"	l
f0106366	obj/kern/kernel.asm	/^f0106366:	53                   	push   %ebx$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	e8 e6 fd ff ff       	call   f0106152 <memcmp>$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010636f	obj/kern/kernel.asm	/^f010636f:	85 c0                	test   %eax,%eax$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	75 15                	jne    f0106388 <mpsearch1+0x81>$/;"	l
f0106373	obj/kern/kernel.asm	/^f0106373:	89 da                	mov    %ebx,%edx$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	01 c8                	add    %ecx,%eax$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	39 d7                	cmp    %edx,%edi$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	75 f4                	jne    f0106378 <mpsearch1+0x71>$/;"	l
f0106384	obj/kern/kernel.asm	/^f0106384:	84 c0                	test   %al,%al$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	74 0e                	je     f0106396 <mpsearch1+0x8f>$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	83 c3 10             	add    $0x10,%ebx$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	39 f3                	cmp    %esi,%ebx$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	72 cd                	jb     f010635c <mpsearch1+0x55>$/;"	l
f010638f	obj/kern/kernel.asm	/^f010638f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106394	obj/kern/kernel.asm	/^f0106394:	eb 02                	jmp    f0106398 <mpsearch1+0x91>$/;"	l
f0106396	obj/kern/kernel.asm	/^f0106396:	89 d8                	mov    %ebx,%eax$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	5b                   	pop    %ebx$/;"	l
f010639c	obj/kern/kernel.asm	/^f010639c:	5e                   	pop    %esi$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	5f                   	pop    %edi$/;"	l
f010639e	obj/kern/kernel.asm	/^f010639e:	5d                   	pop    %ebp$/;"	l
f010639f	obj/kern/kernel.asm	/^f010639f:	c3                   	ret    $/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0 <mp_init>:$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	55                   	push   %ebp$/;"	l
f01063a1	obj/kern/kernel.asm	/^f01063a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	57                   	push   %edi$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	56                   	push   %esi$/;"	l
f01063a5	obj/kern/kernel.asm	/^f01063a5:	53                   	push   %ebx$/;"	l
f01063a6	obj/kern/kernel.asm	/^f01063a6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01063a9	obj/kern/kernel.asm	/^f01063a9:	c7 05 c0 93 22 f0 20 	movl   $0xf0229020,0xf02293c0$/;"	l
f01063b0	obj/kern/kernel.asm	/^f01063b0:	90 22 f0 $/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	83 3d 8c 8e 22 f0 00 	cmpl   $0x0,0xf0228e8c$/;"	l
f01063ba	obj/kern/kernel.asm	/^f01063ba:	75 16                	jne    f01063d2 <mp_init+0x32>$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	68 00 04 00 00       	push   $0x400$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f01063c6	obj/kern/kernel.asm	/^f01063c6:	6a 6f                	push   $0x6f$/;"	l
f01063c8	obj/kern/kernel.asm	/^f01063c8:	68 45 8d 10 f0       	push   $0xf0108d45$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	e8 6e 9c ff ff       	call   f0100040 <_panic>$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	85 c0                	test   %eax,%eax$/;"	l
f01063db	obj/kern/kernel.asm	/^f01063db:	74 16                	je     f01063f3 <mp_init+0x53>$/;"	l
f01063dd	obj/kern/kernel.asm	/^f01063dd:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	e8 1d ff ff ff       	call   f0106307 <mpsearch1>$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	85 c0                	test   %eax,%eax$/;"	l
f01063ef	obj/kern/kernel.asm	/^f01063ef:	75 3c                	jne    f010642d <mp_init+0x8d>$/;"	l
f01063f1	obj/kern/kernel.asm	/^f01063f1:	eb 20                	jmp    f0106413 <mp_init+0x73>$/;"	l
f01063f3	obj/kern/kernel.asm	/^f01063f3:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f01063fa	obj/kern/kernel.asm	/^f01063fa:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01063fd	obj/kern/kernel.asm	/^f01063fd:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	e8 fb fe ff ff       	call   f0106307 <mpsearch1>$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	85 c0                	test   %eax,%eax$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	75 1a                	jne    f010642d <mp_init+0x8d>$/;"	l
f0106413	obj/kern/kernel.asm	/^f0106413:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106418	obj/kern/kernel.asm	/^f0106418:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f010641d	obj/kern/kernel.asm	/^f010641d:	e8 e5 fe ff ff       	call   f0106307 <mpsearch1>$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	85 c0                	test   %eax,%eax$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	0f 84 5d 02 00 00    	je     f010668a <mp_init+0x2ea>$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0106433	obj/kern/kernel.asm	/^f0106433:	85 f6                	test   %esi,%esi$/;"	l
f0106435	obj/kern/kernel.asm	/^f0106435:	74 06                	je     f010643d <mp_init+0x9d>$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	74 15                	je     f0106452 <mp_init+0xb2>$/;"	l
f010643d	obj/kern/kernel.asm	/^f010643d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106440	obj/kern/kernel.asm	/^f0106440:	68 b8 8b 10 f0       	push   $0xf0108bb8$/;"	l
f0106445	obj/kern/kernel.asm	/^f0106445:	e8 11 db ff ff       	call   f0103f5b <cprintf>$/;"	l
f010644a	obj/kern/kernel.asm	/^f010644a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010644d	obj/kern/kernel.asm	/^f010644d:	e9 38 02 00 00       	jmp    f010668a <mp_init+0x2ea>$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	89 f0                	mov    %esi,%eax$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0106457	obj/kern/kernel.asm	/^f0106457:	3b 05 8c 8e 22 f0    	cmp    0xf0228e8c,%eax$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	72 15                	jb     f0106474 <mp_init+0xd4>$/;"	l
f010645f	obj/kern/kernel.asm	/^f010645f:	56                   	push   %esi$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	68 90 00 00 00       	push   $0x90$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	68 45 8d 10 f0       	push   $0xf0108d45$/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	e8 cc 9b ff ff       	call   f0100040 <_panic>$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f010647a	obj/kern/kernel.asm	/^f010647a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010647d	obj/kern/kernel.asm	/^f010647d:	6a 04                	push   $0x4$/;"	l
f010647f	obj/kern/kernel.asm	/^f010647f:	68 5a 8d 10 f0       	push   $0xf0108d5a$/;"	l
f0106484	obj/kern/kernel.asm	/^f0106484:	53                   	push   %ebx$/;"	l
f0106485	obj/kern/kernel.asm	/^f0106485:	e8 c8 fc ff ff       	call   f0106152 <memcmp>$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010648d	obj/kern/kernel.asm	/^f010648d:	85 c0                	test   %eax,%eax$/;"	l
f010648f	obj/kern/kernel.asm	/^f010648f:	74 15                	je     f01064a6 <mp_init+0x106>$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106494	obj/kern/kernel.asm	/^f0106494:	68 e8 8b 10 f0       	push   $0xf0108be8$/;"	l
f0106499	obj/kern/kernel.asm	/^f0106499:	e8 bd da ff ff       	call   f0103f5b <cprintf>$/;"	l
f010649e	obj/kern/kernel.asm	/^f010649e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01064a1	obj/kern/kernel.asm	/^f01064a1:	e9 e4 01 00 00       	jmp    f010668a <mp_init+0x2ea>$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f01064aa	obj/kern/kernel.asm	/^f01064aa:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f01064ae	obj/kern/kernel.asm	/^f01064ae:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f01064b1	obj/kern/kernel.asm	/^f01064b1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01064b6	obj/kern/kernel.asm	/^f01064b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	eb 0d                	jmp    f01064ca <mp_init+0x12a>$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f01064c4	obj/kern/kernel.asm	/^f01064c4:	f0 $/;"	l
f01064c5	obj/kern/kernel.asm	/^f01064c5:	01 ca                	add    %ecx,%edx$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	83 c0 01             	add    $0x1,%eax$/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca:	39 c7                	cmp    %eax,%edi$/;"	l
f01064cc	obj/kern/kernel.asm	/^f01064cc:	75 ef                	jne    f01064bd <mp_init+0x11d>$/;"	l
f01064ce	obj/kern/kernel.asm	/^f01064ce:	84 d2                	test   %dl,%dl$/;"	l
f01064d0	obj/kern/kernel.asm	/^f01064d0:	74 15                	je     f01064e7 <mp_init+0x147>$/;"	l
f01064d2	obj/kern/kernel.asm	/^f01064d2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	68 1c 8c 10 f0       	push   $0xf0108c1c$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	e8 7c da ff ff       	call   f0103f5b <cprintf>$/;"	l
f01064df	obj/kern/kernel.asm	/^f01064df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	e9 a3 01 00 00       	jmp    f010668a <mp_init+0x2ea>$/;"	l
f01064e7	obj/kern/kernel.asm	/^f01064e7:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb:	3c 01                	cmp    $0x1,%al$/;"	l
f01064ed	obj/kern/kernel.asm	/^f01064ed:	74 1d                	je     f010650c <mp_init+0x16c>$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	3c 04                	cmp    $0x4,%al$/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	74 19                	je     f010650c <mp_init+0x16c>$/;"	l
f01064f3	obj/kern/kernel.asm	/^f01064f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01064f6	obj/kern/kernel.asm	/^f01064f6:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01064f9	obj/kern/kernel.asm	/^f01064f9:	50                   	push   %eax$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	68 40 8c 10 f0       	push   $0xf0108c40$/;"	l
f01064ff	obj/kern/kernel.asm	/^f01064ff:	e8 57 da ff ff       	call   f0103f5b <cprintf>$/;"	l
f0106504	obj/kern/kernel.asm	/^f0106504:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	e9 7e 01 00 00       	jmp    f010668a <mp_init+0x2ea>$/;"	l
f010650c	obj/kern/kernel.asm	/^f010650c:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106519	obj/kern/kernel.asm	/^f0106519:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	01 ce                	add    %ecx,%esi$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520:	eb 0d                	jmp    f010652f <mp_init+0x18f>$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	f0 $/;"	l
f010652a	obj/kern/kernel.asm	/^f010652a:	01 ca                	add    %ecx,%edx$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010652f	obj/kern/kernel.asm	/^f010652f:	39 c7                	cmp    %eax,%edi$/;"	l
f0106531	obj/kern/kernel.asm	/^f0106531:	75 ef                	jne    f0106522 <mp_init+0x182>$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	89 d0                	mov    %edx,%eax$/;"	l
f0106535	obj/kern/kernel.asm	/^f0106535:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f0106538	obj/kern/kernel.asm	/^f0106538:	74 15                	je     f010654f <mp_init+0x1af>$/;"	l
f010653a	obj/kern/kernel.asm	/^f010653a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	68 60 8c 10 f0       	push   $0xf0108c60$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	e8 14 da ff ff       	call   f0103f5b <cprintf>$/;"	l
f0106547	obj/kern/kernel.asm	/^f0106547:	83 c4 10             	add    $0x10,%esp$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	e9 3b 01 00 00       	jmp    f010668a <mp_init+0x2ea>$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	85 db                	test   %ebx,%ebx$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	0f 84 33 01 00 00    	je     f010668a <mp_init+0x2ea>$/;"	l
f0106557	obj/kern/kernel.asm	/^f0106557:	c7 05 00 90 22 f0 01 	movl   $0x1,0xf0229000$/;"	l
f010655e	obj/kern/kernel.asm	/^f010655e:	00 00 00 $/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	a3 00 a0 26 f0       	mov    %eax,0xf026a000$/;"	l
f0106569	obj/kern/kernel.asm	/^f0106569:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f010656c	obj/kern/kernel.asm	/^f010656c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106571	obj/kern/kernel.asm	/^f0106571:	e9 85 00 00 00       	jmp    f01065fb <mp_init+0x25b>$/;"	l
f0106576	obj/kern/kernel.asm	/^f0106576:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	84 c0                	test   %al,%al$/;"	l
f010657b	obj/kern/kernel.asm	/^f010657b:	74 06                	je     f0106583 <mp_init+0x1e3>$/;"	l
f010657d	obj/kern/kernel.asm	/^f010657d:	3c 04                	cmp    $0x4,%al$/;"	l
f010657f	obj/kern/kernel.asm	/^f010657f:	77 55                	ja     f01065d6 <mp_init+0x236>$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	eb 4e                	jmp    f01065d1 <mp_init+0x231>$/;"	l
f0106583	obj/kern/kernel.asm	/^f0106583:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0106587	obj/kern/kernel.asm	/^f0106587:	74 11                	je     f010659a <mp_init+0x1fa>$/;"	l
f0106589	obj/kern/kernel.asm	/^f0106589:	6b 05 c4 93 22 f0 74 	imul   $0x74,0xf02293c4,%eax$/;"	l
f0106590	obj/kern/kernel.asm	/^f0106590:	05 20 90 22 f0       	add    $0xf0229020,%eax$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	a3 c0 93 22 f0       	mov    %eax,0xf02293c0$/;"	l
f010659a	obj/kern/kernel.asm	/^f010659a:	a1 c4 93 22 f0       	mov    0xf02293c4,%eax$/;"	l
f010659f	obj/kern/kernel.asm	/^f010659f:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	7f 13                	jg     f01065b7 <mp_init+0x217>$/;"	l
f01065a4	obj/kern/kernel.asm	/^f01065a4:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01065a7	obj/kern/kernel.asm	/^f01065a7:	88 82 20 90 22 f0    	mov    %al,-0xfdd6fe0(%edx)$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	83 c0 01             	add    $0x1,%eax$/;"	l
f01065b0	obj/kern/kernel.asm	/^f01065b0:	a3 c4 93 22 f0       	mov    %eax,0xf02293c4$/;"	l
f01065b5	obj/kern/kernel.asm	/^f01065b5:	eb 15                	jmp    f01065cc <mp_init+0x22c>$/;"	l
f01065b7	obj/kern/kernel.asm	/^f01065b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01065ba	obj/kern/kernel.asm	/^f01065ba:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f01065be	obj/kern/kernel.asm	/^f01065be:	50                   	push   %eax$/;"	l
f01065bf	obj/kern/kernel.asm	/^f01065bf:	68 90 8c 10 f0       	push   $0xf0108c90$/;"	l
f01065c4	obj/kern/kernel.asm	/^f01065c4:	e8 92 d9 ff ff       	call   f0103f5b <cprintf>$/;"	l
f01065c9	obj/kern/kernel.asm	/^f01065c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01065cc	obj/kern/kernel.asm	/^f01065cc:	83 c7 14             	add    $0x14,%edi$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	eb 27                	jmp    f01065f8 <mp_init+0x258>$/;"	l
f01065d1	obj/kern/kernel.asm	/^f01065d1:	83 c7 08             	add    $0x8,%edi$/;"	l
f01065d4	obj/kern/kernel.asm	/^f01065d4:	eb 22                	jmp    f01065f8 <mp_init+0x258>$/;"	l
f01065d6	obj/kern/kernel.asm	/^f01065d6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01065d9	obj/kern/kernel.asm	/^f01065d9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01065dc	obj/kern/kernel.asm	/^f01065dc:	50                   	push   %eax$/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd:	68 b8 8c 10 f0       	push   $0xf0108cb8$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	e8 74 d9 ff ff       	call   f0103f5b <cprintf>$/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	c7 05 00 90 22 f0 00 	movl   $0x0,0xf0229000$/;"	l
f01065ee	obj/kern/kernel.asm	/^f01065ee:	00 00 00 $/;"	l
f01065f1	obj/kern/kernel.asm	/^f01065f1:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f01065f5	obj/kern/kernel.asm	/^f01065f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01065f8	obj/kern/kernel.asm	/^f01065f8:	83 c6 01             	add    $0x1,%esi$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	39 c6                	cmp    %eax,%esi$/;"	l
f0106601	obj/kern/kernel.asm	/^f0106601:	0f 82 6f ff ff ff    	jb     f0106576 <mp_init+0x1d6>$/;"	l
f0106607	obj/kern/kernel.asm	/^f0106607:	a1 c0 93 22 f0       	mov    0xf02293c0,%eax$/;"	l
f010660c	obj/kern/kernel.asm	/^f010660c:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	83 3d 00 90 22 f0 00 	cmpl   $0x0,0xf0229000$/;"	l
f010661a	obj/kern/kernel.asm	/^f010661a:	75 26                	jne    f0106642 <mp_init+0x2a2>$/;"	l
f010661c	obj/kern/kernel.asm	/^f010661c:	c7 05 c4 93 22 f0 01 	movl   $0x1,0xf02293c4$/;"	l
f0106623	obj/kern/kernel.asm	/^f0106623:	00 00 00 $/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	c7 05 00 a0 26 f0 00 	movl   $0x0,0xf026a000$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	00 00 00 $/;"	l
f0106630	obj/kern/kernel.asm	/^f0106630:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	68 d8 8c 10 f0       	push   $0xf0108cd8$/;"	l
f0106638	obj/kern/kernel.asm	/^f0106638:	e8 1e d9 ff ff       	call   f0103f5b <cprintf>$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106640	obj/kern/kernel.asm	/^f0106640:	eb 48                	jmp    f010668a <mp_init+0x2ea>$/;"	l
f0106642	obj/kern/kernel.asm	/^f0106642:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106645	obj/kern/kernel.asm	/^f0106645:	ff 35 c4 93 22 f0    	pushl  0xf02293c4$/;"	l
f010664b	obj/kern/kernel.asm	/^f010664b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010664e	obj/kern/kernel.asm	/^f010664e:	50                   	push   %eax$/;"	l
f010664f	obj/kern/kernel.asm	/^f010664f:	68 5f 8d 10 f0       	push   $0xf0108d5f$/;"	l
f0106654	obj/kern/kernel.asm	/^f0106654:	e8 02 d9 ff ff       	call   f0103f5b <cprintf>$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	83 c4 10             	add    $0x10,%esp$/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106663	obj/kern/kernel.asm	/^f0106663:	74 25                	je     f010668a <mp_init+0x2ea>$/;"	l
f0106665	obj/kern/kernel.asm	/^f0106665:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	68 04 8d 10 f0       	push   $0xf0108d04$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	e8 e9 d8 ff ff       	call   f0103f5b <cprintf>$/;"	l
f0106672	obj/kern/kernel.asm	/^f0106672:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106677	obj/kern/kernel.asm	/^f0106677:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f010667c	obj/kern/kernel.asm	/^f010667c:	ee                   	out    %al,(%dx)$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f0106682	obj/kern/kernel.asm	/^f0106682:	ec                   	in     (%dx),%al$/;"	l
f0106683	obj/kern/kernel.asm	/^f0106683:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106686	obj/kern/kernel.asm	/^f0106686:	ee                   	out    %al,(%dx)$/;"	l
f0106687	obj/kern/kernel.asm	/^f0106687:	83 c4 10             	add    $0x10,%esp$/;"	l
f010668a	obj/kern/kernel.asm	/^f010668a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010668d	obj/kern/kernel.asm	/^f010668d:	5b                   	pop    %ebx$/;"	l
f010668e	obj/kern/kernel.asm	/^f010668e:	5e                   	pop    %esi$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	5f                   	pop    %edi$/;"	l
f0106690	obj/kern/kernel.asm	/^f0106690:	5d                   	pop    %ebp$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	c3                   	ret    $/;"	l
f0106692	obj/kern/kernel.asm	/^f0106692 <lapicw>:$/;"	l
f0106692	obj/kern/kernel.asm	/^f0106692:	55                   	push   %ebp$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	89 e5                	mov    %esp,%ebp$/;"	l
f0106695	obj/kern/kernel.asm	/^f0106695:	8b 0d 04 a0 26 f0    	mov    0xf026a004,%ecx$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	89 10                	mov    %edx,(%eax)$/;"	l
f01066a0	obj/kern/kernel.asm	/^f01066a0:	a1 04 a0 26 f0       	mov    0xf026a004,%eax$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01066a8	obj/kern/kernel.asm	/^f01066a8:	5d                   	pop    %ebp$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	c3                   	ret    $/;"	l
f01066aa	obj/kern/kernel.asm	/^f01066aa <cpunum>:$/;"	l
f01066aa	obj/kern/kernel.asm	/^f01066aa:	55                   	push   %ebp$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01066ad	obj/kern/kernel.asm	/^f01066ad:	a1 04 a0 26 f0       	mov    0xf026a004,%eax$/;"	l
f01066b2	obj/kern/kernel.asm	/^f01066b2:	85 c0                	test   %eax,%eax$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	74 08                	je     f01066be <cpunum+0x14>$/;"	l
f01066b6	obj/kern/kernel.asm	/^f01066b6:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01066b9	obj/kern/kernel.asm	/^f01066b9:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01066bc	obj/kern/kernel.asm	/^f01066bc:	eb 05                	jmp    f01066c3 <cpunum+0x19>$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01066c3	obj/kern/kernel.asm	/^f01066c3:	5d                   	pop    %ebp$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	c3                   	ret    $/;"	l
f01066c5	obj/kern/kernel.asm	/^f01066c5 <lapic_init>:$/;"	l
f01066c5	obj/kern/kernel.asm	/^f01066c5:	a1 00 a0 26 f0       	mov    0xf026a000,%eax$/;"	l
f01066ca	obj/kern/kernel.asm	/^f01066ca:	85 c0                	test   %eax,%eax$/;"	l
f01066cc	obj/kern/kernel.asm	/^f01066cc:	0f 84 21 01 00 00    	je     f01067f3 <lapic_init+0x12e>$/;"	l
f01066d2	obj/kern/kernel.asm	/^f01066d2:	55                   	push   %ebp$/;"	l
f01066d3	obj/kern/kernel.asm	/^f01066d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01066d5	obj/kern/kernel.asm	/^f01066d5:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01066d8	obj/kern/kernel.asm	/^f01066d8:	68 00 10 00 00       	push   $0x1000$/;"	l
f01066dd	obj/kern/kernel.asm	/^f01066dd:	50                   	push   %eax$/;"	l
f01066de	obj/kern/kernel.asm	/^f01066de:	e8 18 b4 ff ff       	call   f0101afb <mmio_map_region>$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	a3 04 a0 26 f0       	mov    %eax,0xf026a004$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f01066ed	obj/kern/kernel.asm	/^f01066ed:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f01066f2	obj/kern/kernel.asm	/^f01066f2:	e8 9b ff ff ff       	call   f0106692 <lapicw>$/;"	l
f01066f7	obj/kern/kernel.asm	/^f01066f7:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f01066fc	obj/kern/kernel.asm	/^f01066fc:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106701	obj/kern/kernel.asm	/^f0106701:	e8 8c ff ff ff       	call   f0106692 <lapicw>$/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f010670b	obj/kern/kernel.asm	/^f010670b:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106710	obj/kern/kernel.asm	/^f0106710:	e8 7d ff ff ff       	call   f0106692 <lapicw>$/;"	l
f0106715	obj/kern/kernel.asm	/^f0106715:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f010671a	obj/kern/kernel.asm	/^f010671a:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f010671f	obj/kern/kernel.asm	/^f010671f:	e8 6e ff ff ff       	call   f0106692 <lapicw>$/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	e8 81 ff ff ff       	call   f01066aa <cpunum>$/;"	l
f0106729	obj/kern/kernel.asm	/^f0106729:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010672c	obj/kern/kernel.asm	/^f010672c:	05 20 90 22 f0       	add    $0xf0229020,%eax$/;"	l
f0106731	obj/kern/kernel.asm	/^f0106731:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106734	obj/kern/kernel.asm	/^f0106734:	39 05 c0 93 22 f0    	cmp    %eax,0xf02293c0$/;"	l
f010673a	obj/kern/kernel.asm	/^f010673a:	74 0f                	je     f010674b <lapic_init+0x86>$/;"	l
f010673c	obj/kern/kernel.asm	/^f010673c:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106741	obj/kern/kernel.asm	/^f0106741:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106746	obj/kern/kernel.asm	/^f0106746:	e8 47 ff ff ff       	call   f0106692 <lapicw>$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106755	obj/kern/kernel.asm	/^f0106755:	e8 38 ff ff ff       	call   f0106692 <lapicw>$/;"	l
f010675a	obj/kern/kernel.asm	/^f010675a:	a1 04 a0 26 f0       	mov    0xf026a004,%eax$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106762	obj/kern/kernel.asm	/^f0106762:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106765	obj/kern/kernel.asm	/^f0106765:	3c 03                	cmp    $0x3,%al$/;"	l
f0106767	obj/kern/kernel.asm	/^f0106767:	76 0f                	jbe    f0106778 <lapic_init+0xb3>$/;"	l
f0106769	obj/kern/kernel.asm	/^f0106769:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f010676e	obj/kern/kernel.asm	/^f010676e:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106773	obj/kern/kernel.asm	/^f0106773:	e8 1a ff ff ff       	call   f0106692 <lapicw>$/;"	l
f0106778	obj/kern/kernel.asm	/^f0106778:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	e8 0b ff ff ff       	call   f0106692 <lapicw>$/;"	l
f0106787	obj/kern/kernel.asm	/^f0106787:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010678c	obj/kern/kernel.asm	/^f010678c:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	e8 fc fe ff ff       	call   f0106692 <lapicw>$/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010679b	obj/kern/kernel.asm	/^f010679b:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01067a0	obj/kern/kernel.asm	/^f01067a0:	e8 ed fe ff ff       	call   f0106692 <lapicw>$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01067af	obj/kern/kernel.asm	/^f01067af:	e8 de fe ff ff       	call   f0106692 <lapicw>$/;"	l
f01067b4	obj/kern/kernel.asm	/^f01067b4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01067b9	obj/kern/kernel.asm	/^f01067b9:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01067be	obj/kern/kernel.asm	/^f01067be:	e8 cf fe ff ff       	call   f0106692 <lapicw>$/;"	l
f01067c3	obj/kern/kernel.asm	/^f01067c3:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01067cd	obj/kern/kernel.asm	/^f01067cd:	e8 c0 fe ff ff       	call   f0106692 <lapicw>$/;"	l
f01067d2	obj/kern/kernel.asm	/^f01067d2:	8b 15 04 a0 26 f0    	mov    0xf026a004,%edx$/;"	l
f01067d8	obj/kern/kernel.asm	/^f01067d8:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01067de	obj/kern/kernel.asm	/^f01067de:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01067e1	obj/kern/kernel.asm	/^f01067e1:	75 f5                	jne    f01067d8 <lapic_init+0x113>$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01067e8	obj/kern/kernel.asm	/^f01067e8:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	e8 a0 fe ff ff       	call   f0106692 <lapicw>$/;"	l
f01067f2	obj/kern/kernel.asm	/^f01067f2:	c9                   	leave  $/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	f3 c3                	repz ret $/;"	l
f01067f5	obj/kern/kernel.asm	/^f01067f5 <lapic_eoi>:$/;"	l
f01067f5	obj/kern/kernel.asm	/^f01067f5:	83 3d 04 a0 26 f0 00 	cmpl   $0x0,0xf026a004$/;"	l
f01067fc	obj/kern/kernel.asm	/^f01067fc:	74 13                	je     f0106811 <lapic_eoi+0x1c>$/;"	l
f01067fe	obj/kern/kernel.asm	/^f01067fe:	55                   	push   %ebp$/;"	l
f01067ff	obj/kern/kernel.asm	/^f01067ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0106801	obj/kern/kernel.asm	/^f0106801:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106806	obj/kern/kernel.asm	/^f0106806:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f010680b	obj/kern/kernel.asm	/^f010680b:	e8 82 fe ff ff       	call   f0106692 <lapicw>$/;"	l
f0106810	obj/kern/kernel.asm	/^f0106810:	5d                   	pop    %ebp$/;"	l
f0106811	obj/kern/kernel.asm	/^f0106811:	f3 c3                	repz ret $/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813 <lapic_startap>:$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	55                   	push   %ebp$/;"	l
f0106814	obj/kern/kernel.asm	/^f0106814:	89 e5                	mov    %esp,%ebp$/;"	l
f0106816	obj/kern/kernel.asm	/^f0106816:	56                   	push   %esi$/;"	l
f0106817	obj/kern/kernel.asm	/^f0106817:	53                   	push   %ebx$/;"	l
f0106818	obj/kern/kernel.asm	/^f0106818:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010681b	obj/kern/kernel.asm	/^f010681b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010681e	obj/kern/kernel.asm	/^f010681e:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106823	obj/kern/kernel.asm	/^f0106823:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828:	ee                   	out    %al,(%dx)$/;"	l
f0106829	obj/kern/kernel.asm	/^f0106829:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010682e	obj/kern/kernel.asm	/^f010682e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	ee                   	out    %al,(%dx)$/;"	l
f0106834	obj/kern/kernel.asm	/^f0106834:	83 3d 8c 8e 22 f0 00 	cmpl   $0x0,0xf0228e8c$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	75 19                	jne    f0106856 <lapic_startap+0x43>$/;"	l
f010683d	obj/kern/kernel.asm	/^f010683d:	68 67 04 00 00       	push   $0x467$/;"	l
f0106842	obj/kern/kernel.asm	/^f0106842:	68 64 6d 10 f0       	push   $0xf0106d64$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	68 98 00 00 00       	push   $0x98$/;"	l
f010684c	obj/kern/kernel.asm	/^f010684c:	68 7c 8d 10 f0       	push   $0xf0108d7c$/;"	l
f0106851	obj/kern/kernel.asm	/^f0106851:	e8 ea 97 ff ff       	call   f0100040 <_panic>$/;"	l
f0106856	obj/kern/kernel.asm	/^f0106856:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	00 00 $/;"	l
f010685f	obj/kern/kernel.asm	/^f010685f:	89 d8                	mov    %ebx,%eax$/;"	l
f0106861	obj/kern/kernel.asm	/^f0106861:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f010686a	obj/kern/kernel.asm	/^f010686a:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f010686d	obj/kern/kernel.asm	/^f010686d:	89 f2                	mov    %esi,%edx$/;"	l
f010686f	obj/kern/kernel.asm	/^f010686f:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	e8 19 fe ff ff       	call   f0106692 <lapicw>$/;"	l
f0106879	obj/kern/kernel.asm	/^f0106879:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f010687e	obj/kern/kernel.asm	/^f010687e:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106883	obj/kern/kernel.asm	/^f0106883:	e8 0a fe ff ff       	call   f0106692 <lapicw>$/;"	l
f0106888	obj/kern/kernel.asm	/^f0106888:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f010688d	obj/kern/kernel.asm	/^f010688d:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106892	obj/kern/kernel.asm	/^f0106892:	e8 fb fd ff ff       	call   f0106692 <lapicw>$/;"	l
f0106897	obj/kern/kernel.asm	/^f0106897:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f010689a	obj/kern/kernel.asm	/^f010689a:	80 cf 06             	or     $0x6,%bh$/;"	l
f010689d	obj/kern/kernel.asm	/^f010689d:	89 f2                	mov    %esi,%edx$/;"	l
f010689f	obj/kern/kernel.asm	/^f010689f:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01068a4	obj/kern/kernel.asm	/^f01068a4:	e8 e9 fd ff ff       	call   f0106692 <lapicw>$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	89 da                	mov    %ebx,%edx$/;"	l
f01068ab	obj/kern/kernel.asm	/^f01068ab:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01068b0	obj/kern/kernel.asm	/^f01068b0:	e8 dd fd ff ff       	call   f0106692 <lapicw>$/;"	l
f01068b5	obj/kern/kernel.asm	/^f01068b5:	89 f2                	mov    %esi,%edx$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01068bc	obj/kern/kernel.asm	/^f01068bc:	e8 d1 fd ff ff       	call   f0106692 <lapicw>$/;"	l
f01068c1	obj/kern/kernel.asm	/^f01068c1:	89 da                	mov    %ebx,%edx$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	e8 c5 fd ff ff       	call   f0106692 <lapicw>$/;"	l
f01068cd	obj/kern/kernel.asm	/^f01068cd:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	5b                   	pop    %ebx$/;"	l
f01068d1	obj/kern/kernel.asm	/^f01068d1:	5e                   	pop    %esi$/;"	l
f01068d2	obj/kern/kernel.asm	/^f01068d2:	5d                   	pop    %ebp$/;"	l
f01068d3	obj/kern/kernel.asm	/^f01068d3:	c3                   	ret    $/;"	l
f01068d4	obj/kern/kernel.asm	/^f01068d4 <lapic_ipi>:$/;"	l
f01068d4	obj/kern/kernel.asm	/^f01068d4:	55                   	push   %ebp$/;"	l
f01068d5	obj/kern/kernel.asm	/^f01068d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01068d7	obj/kern/kernel.asm	/^f01068d7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	e8 a8 fd ff ff       	call   f0106692 <lapicw>$/;"	l
f01068ea	obj/kern/kernel.asm	/^f01068ea:	8b 15 04 a0 26 f0    	mov    0xf026a004,%edx$/;"	l
f01068f0	obj/kern/kernel.asm	/^f01068f0:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01068f6	obj/kern/kernel.asm	/^f01068f6:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01068f9	obj/kern/kernel.asm	/^f01068f9:	75 f5                	jne    f01068f0 <lapic_ipi+0x1c>$/;"	l
f01068fb	obj/kern/kernel.asm	/^f01068fb:	5d                   	pop    %ebp$/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc:	c3                   	ret    $/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd <__spin_initlock>:$/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	55                   	push   %ebp$/;"	l
f01068fe	obj/kern/kernel.asm	/^f01068fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0106900	obj/kern/kernel.asm	/^f0106900:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106903	obj/kern/kernel.asm	/^f0106903:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106909	obj/kern/kernel.asm	/^f0106909:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010690c	obj/kern/kernel.asm	/^f010690c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f010690f	obj/kern/kernel.asm	/^f010690f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106916	obj/kern/kernel.asm	/^f0106916:	5d                   	pop    %ebp$/;"	l
f0106917	obj/kern/kernel.asm	/^f0106917:	c3                   	ret    $/;"	l
f0106918	obj/kern/kernel.asm	/^f0106918 <spin_lock>:$/;"	l
f0106918	obj/kern/kernel.asm	/^f0106918:	55                   	push   %ebp$/;"	l
f0106919	obj/kern/kernel.asm	/^f0106919:	89 e5                	mov    %esp,%ebp$/;"	l
f010691b	obj/kern/kernel.asm	/^f010691b:	56                   	push   %esi$/;"	l
f010691c	obj/kern/kernel.asm	/^f010691c:	53                   	push   %ebx$/;"	l
f010691d	obj/kern/kernel.asm	/^f010691d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106923	obj/kern/kernel.asm	/^f0106923:	74 14                	je     f0106939 <spin_lock+0x21>$/;"	l
f0106925	obj/kern/kernel.asm	/^f0106925:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	e8 7d fd ff ff       	call   f01066aa <cpunum>$/;"	l
f010692d	obj/kern/kernel.asm	/^f010692d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	05 20 90 22 f0       	add    $0xf0229020,%eax$/;"	l
f0106935	obj/kern/kernel.asm	/^f0106935:	39 c6                	cmp    %eax,%esi$/;"	l
f0106937	obj/kern/kernel.asm	/^f0106937:	74 07                	je     f0106940 <spin_lock+0x28>$/;"	l
f0106939	obj/kern/kernel.asm	/^f0106939:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010693e	obj/kern/kernel.asm	/^f010693e:	eb 20                	jmp    f0106960 <spin_lock+0x48>$/;"	l
f0106940	obj/kern/kernel.asm	/^f0106940:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106943	obj/kern/kernel.asm	/^f0106943:	e8 62 fd ff ff       	call   f01066aa <cpunum>$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010694b	obj/kern/kernel.asm	/^f010694b:	53                   	push   %ebx$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	50                   	push   %eax$/;"	l
f010694d	obj/kern/kernel.asm	/^f010694d:	68 8c 8d 10 f0       	push   $0xf0108d8c$/;"	l
f0106952	obj/kern/kernel.asm	/^f0106952:	6a 41                	push   $0x41$/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954:	68 f0 8d 10 f0       	push   $0xf0108df0$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	e8 e2 96 ff ff       	call   f0100040 <_panic>$/;"	l
f010695e	obj/kern/kernel.asm	/^f010695e:	f3 90                	pause  $/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	89 d0                	mov    %edx,%eax$/;"	l
f0106962	obj/kern/kernel.asm	/^f0106962:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106965	obj/kern/kernel.asm	/^f0106965:	85 c0                	test   %eax,%eax$/;"	l
f0106967	obj/kern/kernel.asm	/^f0106967:	75 f5                	jne    f010695e <spin_lock+0x46>$/;"	l
f0106969	obj/kern/kernel.asm	/^f0106969:	e8 3c fd ff ff       	call   f01066aa <cpunum>$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106971	obj/kern/kernel.asm	/^f0106971:	05 20 90 22 f0       	add    $0xf0229020,%eax$/;"	l
f0106976	obj/kern/kernel.asm	/^f0106976:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106979	obj/kern/kernel.asm	/^f0106979:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010697c	obj/kern/kernel.asm	/^f010697c:	89 ea                	mov    %ebp,%edx$/;"	l
f010697e	obj/kern/kernel.asm	/^f010697e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106983	obj/kern/kernel.asm	/^f0106983:	eb 0b                	jmp    f0106990 <spin_lock+0x78>$/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0106988	obj/kern/kernel.asm	/^f0106988:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f010698b	obj/kern/kernel.asm	/^f010698b:	8b 12                	mov    (%edx),%edx$/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	76 11                	jbe    f01069a9 <spin_lock+0x91>$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010699b	obj/kern/kernel.asm	/^f010699b:	7e e8                	jle    f0106985 <spin_lock+0x6d>$/;"	l
f010699d	obj/kern/kernel.asm	/^f010699d:	eb 0a                	jmp    f01069a9 <spin_lock+0x91>$/;"	l
f010699f	obj/kern/kernel.asm	/^f010699f:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f01069a6	obj/kern/kernel.asm	/^f01069a6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01069a9	obj/kern/kernel.asm	/^f01069a9:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01069ac	obj/kern/kernel.asm	/^f01069ac:	7e f1                	jle    f010699f <spin_lock+0x87>$/;"	l
f01069ae	obj/kern/kernel.asm	/^f01069ae:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01069b1	obj/kern/kernel.asm	/^f01069b1:	5b                   	pop    %ebx$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	5e                   	pop    %esi$/;"	l
f01069b3	obj/kern/kernel.asm	/^f01069b3:	5d                   	pop    %ebp$/;"	l
f01069b4	obj/kern/kernel.asm	/^f01069b4:	c3                   	ret    $/;"	l
f01069b5	obj/kern/kernel.asm	/^f01069b5 <spin_unlock>:$/;"	l
f01069b5	obj/kern/kernel.asm	/^f01069b5:	55                   	push   %ebp$/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01069b8	obj/kern/kernel.asm	/^f01069b8:	57                   	push   %edi$/;"	l
f01069b9	obj/kern/kernel.asm	/^f01069b9:	56                   	push   %esi$/;"	l
f01069ba	obj/kern/kernel.asm	/^f01069ba:	53                   	push   %ebx$/;"	l
f01069bb	obj/kern/kernel.asm	/^f01069bb:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01069be	obj/kern/kernel.asm	/^f01069be:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01069c1	obj/kern/kernel.asm	/^f01069c1:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f01069c4	obj/kern/kernel.asm	/^f01069c4:	74 18                	je     f01069de <spin_unlock+0x29>$/;"	l
f01069c6	obj/kern/kernel.asm	/^f01069c6:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f01069c9	obj/kern/kernel.asm	/^f01069c9:	e8 dc fc ff ff       	call   f01066aa <cpunum>$/;"	l
f01069ce	obj/kern/kernel.asm	/^f01069ce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01069d1	obj/kern/kernel.asm	/^f01069d1:	05 20 90 22 f0       	add    $0xf0229020,%eax$/;"	l
f01069d6	obj/kern/kernel.asm	/^f01069d6:	39 c3                	cmp    %eax,%ebx$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	0f 84 a5 00 00 00    	je     f0106a83 <spin_unlock+0xce>$/;"	l
f01069de	obj/kern/kernel.asm	/^f01069de:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01069e1	obj/kern/kernel.asm	/^f01069e1:	6a 28                	push   $0x28$/;"	l
f01069e3	obj/kern/kernel.asm	/^f01069e3:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f01069e6	obj/kern/kernel.asm	/^f01069e6:	50                   	push   %eax$/;"	l
f01069e7	obj/kern/kernel.asm	/^f01069e7:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f01069ea	obj/kern/kernel.asm	/^f01069ea:	53                   	push   %ebx$/;"	l
f01069eb	obj/kern/kernel.asm	/^f01069eb:	e8 e7 f6 ff ff       	call   f01060d7 <memmove>$/;"	l
f01069f0	obj/kern/kernel.asm	/^f01069f0:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01069f3	obj/kern/kernel.asm	/^f01069f3:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f01069f6	obj/kern/kernel.asm	/^f01069f6:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f01069f9	obj/kern/kernel.asm	/^f01069f9:	e8 ac fc ff ff       	call   f01066aa <cpunum>$/;"	l
f01069fe	obj/kern/kernel.asm	/^f01069fe:	57                   	push   %edi$/;"	l
f01069ff	obj/kern/kernel.asm	/^f01069ff:	56                   	push   %esi$/;"	l
f0106a00	obj/kern/kernel.asm	/^f0106a00:	50                   	push   %eax$/;"	l
f0106a01	obj/kern/kernel.asm	/^f0106a01:	68 b8 8d 10 f0       	push   $0xf0108db8$/;"	l
f0106a06	obj/kern/kernel.asm	/^f0106a06:	e8 50 d5 ff ff       	call   f0103f5b <cprintf>$/;"	l
f0106a0b	obj/kern/kernel.asm	/^f0106a0b:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106a0e	obj/kern/kernel.asm	/^f0106a0e:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0106a11	obj/kern/kernel.asm	/^f0106a11:	eb 54                	jmp    f0106a67 <spin_unlock+0xb2>$/;"	l
f0106a13	obj/kern/kernel.asm	/^f0106a13:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106a16	obj/kern/kernel.asm	/^f0106a16:	57                   	push   %edi$/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	50                   	push   %eax$/;"	l
f0106a18	obj/kern/kernel.asm	/^f0106a18:	e8 fe ea ff ff       	call   f010551b <debuginfo_eip>$/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106a20	obj/kern/kernel.asm	/^f0106a20:	85 c0                	test   %eax,%eax$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	78 27                	js     f0106a4b <spin_unlock+0x96>$/;"	l
f0106a24	obj/kern/kernel.asm	/^f0106a24:	8b 06                	mov    (%esi),%eax$/;"	l
f0106a26	obj/kern/kernel.asm	/^f0106a26:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	89 c2                	mov    %eax,%edx$/;"	l
f0106a2b	obj/kern/kernel.asm	/^f0106a2b:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0106a2e	obj/kern/kernel.asm	/^f0106a2e:	52                   	push   %edx$/;"	l
f0106a2f	obj/kern/kernel.asm	/^f0106a2f:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0106a35	obj/kern/kernel.asm	/^f0106a35:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0106a38	obj/kern/kernel.asm	/^f0106a38:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0106a3b	obj/kern/kernel.asm	/^f0106a3b:	50                   	push   %eax$/;"	l
f0106a3c	obj/kern/kernel.asm	/^f0106a3c:	68 00 8e 10 f0       	push   $0xf0108e00$/;"	l
f0106a41	obj/kern/kernel.asm	/^f0106a41:	e8 15 d5 ff ff       	call   f0103f5b <cprintf>$/;"	l
f0106a46	obj/kern/kernel.asm	/^f0106a46:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	eb 12                	jmp    f0106a5d <spin_unlock+0xa8>$/;"	l
f0106a4b	obj/kern/kernel.asm	/^f0106a4b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106a4e	obj/kern/kernel.asm	/^f0106a4e:	ff 36                	pushl  (%esi)$/;"	l
f0106a50	obj/kern/kernel.asm	/^f0106a50:	68 17 8e 10 f0       	push   $0xf0108e17$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	e8 01 d5 ff ff       	call   f0103f5b <cprintf>$/;"	l
f0106a5a	obj/kern/kernel.asm	/^f0106a5a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106a5d	obj/kern/kernel.asm	/^f0106a5d:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106a60	obj/kern/kernel.asm	/^f0106a60:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0106a63	obj/kern/kernel.asm	/^f0106a63:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106a65	obj/kern/kernel.asm	/^f0106a65:	74 08                	je     f0106a6f <spin_unlock+0xba>$/;"	l
f0106a67	obj/kern/kernel.asm	/^f0106a67:	89 de                	mov    %ebx,%esi$/;"	l
f0106a69	obj/kern/kernel.asm	/^f0106a69:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106a6b	obj/kern/kernel.asm	/^f0106a6b:	85 c0                	test   %eax,%eax$/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d:	75 a4                	jne    f0106a13 <spin_unlock+0x5e>$/;"	l
f0106a6f	obj/kern/kernel.asm	/^f0106a6f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106a72	obj/kern/kernel.asm	/^f0106a72:	68 1f 8e 10 f0       	push   $0xf0108e1f$/;"	l
f0106a77	obj/kern/kernel.asm	/^f0106a77:	6a 67                	push   $0x67$/;"	l
f0106a79	obj/kern/kernel.asm	/^f0106a79:	68 f0 8d 10 f0       	push   $0xf0108df0$/;"	l
f0106a7e	obj/kern/kernel.asm	/^f0106a7e:	e8 bd 95 ff ff       	call   f0100040 <_panic>$/;"	l
f0106a83	obj/kern/kernel.asm	/^f0106a83:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0106a8a	obj/kern/kernel.asm	/^f0106a8a:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0106a91	obj/kern/kernel.asm	/^f0106a91:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106a96	obj/kern/kernel.asm	/^f0106a96:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0106a99	obj/kern/kernel.asm	/^f0106a99:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0106a9c	obj/kern/kernel.asm	/^f0106a9c:	5b                   	pop    %ebx$/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	5e                   	pop    %esi$/;"	l
f0106a9e	obj/kern/kernel.asm	/^f0106a9e:	5f                   	pop    %edi$/;"	l
f0106a9f	obj/kern/kernel.asm	/^f0106a9f:	5d                   	pop    %ebp$/;"	l
f0106aa0	obj/kern/kernel.asm	/^f0106aa0:	c3                   	ret    $/;"	l
f0106aa1	obj/kern/kernel.asm	/^f0106aa1:	66 90                	xchg   %ax,%ax$/;"	l
f0106aa3	obj/kern/kernel.asm	/^f0106aa3:	66 90                	xchg   %ax,%ax$/;"	l
f0106aa5	obj/kern/kernel.asm	/^f0106aa5:	66 90                	xchg   %ax,%ax$/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	66 90                	xchg   %ax,%ax$/;"	l
f0106aa9	obj/kern/kernel.asm	/^f0106aa9:	66 90                	xchg   %ax,%ax$/;"	l
f0106aab	obj/kern/kernel.asm	/^f0106aab:	66 90                	xchg   %ax,%ax$/;"	l
f0106aad	obj/kern/kernel.asm	/^f0106aad:	66 90                	xchg   %ax,%ax$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	90                   	nop$/;"	l
f0106ab0	obj/kern/kernel.asm	/^f0106ab0 <__udivdi3>:$/;"	l
f0106ab0	obj/kern/kernel.asm	/^f0106ab0:	55                   	push   %ebp$/;"	l
f0106ab1	obj/kern/kernel.asm	/^f0106ab1:	57                   	push   %edi$/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	56                   	push   %esi$/;"	l
f0106ab3	obj/kern/kernel.asm	/^f0106ab3:	53                   	push   %ebx$/;"	l
f0106ab4	obj/kern/kernel.asm	/^f0106ab4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106ab7	obj/kern/kernel.asm	/^f0106ab7:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f0106abb	obj/kern/kernel.asm	/^f0106abb:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0106ac3	obj/kern/kernel.asm	/^f0106ac3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106ac7	obj/kern/kernel.asm	/^f0106ac7:	85 f6                	test   %esi,%esi$/;"	l
f0106ac9	obj/kern/kernel.asm	/^f0106ac9:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106acd	obj/kern/kernel.asm	/^f0106acd:	89 ca                	mov    %ecx,%edx$/;"	l
f0106acf	obj/kern/kernel.asm	/^f0106acf:	89 f8                	mov    %edi,%eax$/;"	l
f0106ad1	obj/kern/kernel.asm	/^f0106ad1:	75 3d                	jne    f0106b10 <__udivdi3+0x60>$/;"	l
f0106ad3	obj/kern/kernel.asm	/^f0106ad3:	39 cf                	cmp    %ecx,%edi$/;"	l
f0106ad5	obj/kern/kernel.asm	/^f0106ad5:	0f 87 c5 00 00 00    	ja     f0106ba0 <__udivdi3+0xf0>$/;"	l
f0106adb	obj/kern/kernel.asm	/^f0106adb:	85 ff                	test   %edi,%edi$/;"	l
f0106add	obj/kern/kernel.asm	/^f0106add:	89 fd                	mov    %edi,%ebp$/;"	l
f0106adf	obj/kern/kernel.asm	/^f0106adf:	75 0b                	jne    f0106aec <__udivdi3+0x3c>$/;"	l
f0106ae1	obj/kern/kernel.asm	/^f0106ae1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106ae6	obj/kern/kernel.asm	/^f0106ae6:	31 d2                	xor    %edx,%edx$/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8:	f7 f7                	div    %edi$/;"	l
f0106aea	obj/kern/kernel.asm	/^f0106aea:	89 c5                	mov    %eax,%ebp$/;"	l
f0106aec	obj/kern/kernel.asm	/^f0106aec:	89 c8                	mov    %ecx,%eax$/;"	l
f0106aee	obj/kern/kernel.asm	/^f0106aee:	31 d2                	xor    %edx,%edx$/;"	l
f0106af0	obj/kern/kernel.asm	/^f0106af0:	f7 f5                	div    %ebp$/;"	l
f0106af2	obj/kern/kernel.asm	/^f0106af2:	89 c1                	mov    %eax,%ecx$/;"	l
f0106af4	obj/kern/kernel.asm	/^f0106af4:	89 d8                	mov    %ebx,%eax$/;"	l
f0106af6	obj/kern/kernel.asm	/^f0106af6:	89 cf                	mov    %ecx,%edi$/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8:	f7 f5                	div    %ebp$/;"	l
f0106afa	obj/kern/kernel.asm	/^f0106afa:	89 c3                	mov    %eax,%ebx$/;"	l
f0106afc	obj/kern/kernel.asm	/^f0106afc:	89 d8                	mov    %ebx,%eax$/;"	l
f0106afe	obj/kern/kernel.asm	/^f0106afe:	89 fa                	mov    %edi,%edx$/;"	l
f0106b00	obj/kern/kernel.asm	/^f0106b00:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106b03	obj/kern/kernel.asm	/^f0106b03:	5b                   	pop    %ebx$/;"	l
f0106b04	obj/kern/kernel.asm	/^f0106b04:	5e                   	pop    %esi$/;"	l
f0106b05	obj/kern/kernel.asm	/^f0106b05:	5f                   	pop    %edi$/;"	l
f0106b06	obj/kern/kernel.asm	/^f0106b06:	5d                   	pop    %ebp$/;"	l
f0106b07	obj/kern/kernel.asm	/^f0106b07:	c3                   	ret    $/;"	l
f0106b08	obj/kern/kernel.asm	/^f0106b08:	90                   	nop$/;"	l
f0106b09	obj/kern/kernel.asm	/^f0106b09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106b10	obj/kern/kernel.asm	/^f0106b10:	39 ce                	cmp    %ecx,%esi$/;"	l
f0106b12	obj/kern/kernel.asm	/^f0106b12:	77 74                	ja     f0106b88 <__udivdi3+0xd8>$/;"	l
f0106b14	obj/kern/kernel.asm	/^f0106b14:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0106b17	obj/kern/kernel.asm	/^f0106b17:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0106b1a	obj/kern/kernel.asm	/^f0106b1a:	0f 84 98 00 00 00    	je     f0106bb8 <__udivdi3+0x108>$/;"	l
f0106b20	obj/kern/kernel.asm	/^f0106b20:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0106b25	obj/kern/kernel.asm	/^f0106b25:	89 f9                	mov    %edi,%ecx$/;"	l
f0106b27	obj/kern/kernel.asm	/^f0106b27:	89 c5                	mov    %eax,%ebp$/;"	l
f0106b29	obj/kern/kernel.asm	/^f0106b29:	29 fb                	sub    %edi,%ebx$/;"	l
f0106b2b	obj/kern/kernel.asm	/^f0106b2b:	d3 e6                	shl    %cl,%esi$/;"	d
f0106b2d	obj/kern/kernel.asm	/^f0106b2d:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106b2f	obj/kern/kernel.asm	/^f0106b2f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106b31	obj/kern/kernel.asm	/^f0106b31:	89 f9                	mov    %edi,%ecx$/;"	l
f0106b33	obj/kern/kernel.asm	/^f0106b33:	d3 e0                	shl    %cl,%eax$/;"	d
f0106b35	obj/kern/kernel.asm	/^f0106b35:	09 ee                	or     %ebp,%esi$/;"	l
f0106b37	obj/kern/kernel.asm	/^f0106b37:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106b39	obj/kern/kernel.asm	/^f0106b39:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106b3d	obj/kern/kernel.asm	/^f0106b3d:	89 d5                	mov    %edx,%ebp$/;"	l
f0106b3f	obj/kern/kernel.asm	/^f0106b3f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106b43	obj/kern/kernel.asm	/^f0106b43:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106b45	obj/kern/kernel.asm	/^f0106b45:	89 f9                	mov    %edi,%ecx$/;"	l
f0106b47	obj/kern/kernel.asm	/^f0106b47:	d3 e2                	shl    %cl,%edx$/;"	d
f0106b49	obj/kern/kernel.asm	/^f0106b49:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106b4b	obj/kern/kernel.asm	/^f0106b4b:	d3 e8                	shr    %cl,%eax$/;"	d
f0106b4d	obj/kern/kernel.asm	/^f0106b4d:	09 c2                	or     %eax,%edx$/;"	l
f0106b4f	obj/kern/kernel.asm	/^f0106b4f:	89 d0                	mov    %edx,%eax$/;"	l
f0106b51	obj/kern/kernel.asm	/^f0106b51:	89 ea                	mov    %ebp,%edx$/;"	l
f0106b53	obj/kern/kernel.asm	/^f0106b53:	f7 f6                	div    %esi$/;"	l
f0106b55	obj/kern/kernel.asm	/^f0106b55:	89 d5                	mov    %edx,%ebp$/;"	l
f0106b57	obj/kern/kernel.asm	/^f0106b57:	89 c3                	mov    %eax,%ebx$/;"	l
f0106b59	obj/kern/kernel.asm	/^f0106b59:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0106b5d	obj/kern/kernel.asm	/^f0106b5d:	39 d5                	cmp    %edx,%ebp$/;"	l
f0106b5f	obj/kern/kernel.asm	/^f0106b5f:	72 10                	jb     f0106b71 <__udivdi3+0xc1>$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0106b65	obj/kern/kernel.asm	/^f0106b65:	89 f9                	mov    %edi,%ecx$/;"	l
f0106b67	obj/kern/kernel.asm	/^f0106b67:	d3 e6                	shl    %cl,%esi$/;"	d
f0106b69	obj/kern/kernel.asm	/^f0106b69:	39 c6                	cmp    %eax,%esi$/;"	l
f0106b6b	obj/kern/kernel.asm	/^f0106b6b:	73 07                	jae    f0106b74 <__udivdi3+0xc4>$/;"	l
f0106b6d	obj/kern/kernel.asm	/^f0106b6d:	39 d5                	cmp    %edx,%ebp$/;"	l
f0106b6f	obj/kern/kernel.asm	/^f0106b6f:	75 03                	jne    f0106b74 <__udivdi3+0xc4>$/;"	l
f0106b71	obj/kern/kernel.asm	/^f0106b71:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106b74	obj/kern/kernel.asm	/^f0106b74:	31 ff                	xor    %edi,%edi$/;"	l
f0106b76	obj/kern/kernel.asm	/^f0106b76:	89 d8                	mov    %ebx,%eax$/;"	l
f0106b78	obj/kern/kernel.asm	/^f0106b78:	89 fa                	mov    %edi,%edx$/;"	l
f0106b7a	obj/kern/kernel.asm	/^f0106b7a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106b7d	obj/kern/kernel.asm	/^f0106b7d:	5b                   	pop    %ebx$/;"	l
f0106b7e	obj/kern/kernel.asm	/^f0106b7e:	5e                   	pop    %esi$/;"	l
f0106b7f	obj/kern/kernel.asm	/^f0106b7f:	5f                   	pop    %edi$/;"	l
f0106b80	obj/kern/kernel.asm	/^f0106b80:	5d                   	pop    %ebp$/;"	l
f0106b81	obj/kern/kernel.asm	/^f0106b81:	c3                   	ret    $/;"	l
f0106b82	obj/kern/kernel.asm	/^f0106b82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106b88	obj/kern/kernel.asm	/^f0106b88:	31 ff                	xor    %edi,%edi$/;"	l
f0106b8a	obj/kern/kernel.asm	/^f0106b8a:	31 db                	xor    %ebx,%ebx$/;"	l
f0106b8c	obj/kern/kernel.asm	/^f0106b8c:	89 d8                	mov    %ebx,%eax$/;"	l
f0106b8e	obj/kern/kernel.asm	/^f0106b8e:	89 fa                	mov    %edi,%edx$/;"	l
f0106b90	obj/kern/kernel.asm	/^f0106b90:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106b93	obj/kern/kernel.asm	/^f0106b93:	5b                   	pop    %ebx$/;"	l
f0106b94	obj/kern/kernel.asm	/^f0106b94:	5e                   	pop    %esi$/;"	l
f0106b95	obj/kern/kernel.asm	/^f0106b95:	5f                   	pop    %edi$/;"	l
f0106b96	obj/kern/kernel.asm	/^f0106b96:	5d                   	pop    %ebp$/;"	l
f0106b97	obj/kern/kernel.asm	/^f0106b97:	c3                   	ret    $/;"	l
f0106b98	obj/kern/kernel.asm	/^f0106b98:	90                   	nop$/;"	l
f0106b99	obj/kern/kernel.asm	/^f0106b99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106ba0	obj/kern/kernel.asm	/^f0106ba0:	89 d8                	mov    %ebx,%eax$/;"	l
f0106ba2	obj/kern/kernel.asm	/^f0106ba2:	f7 f7                	div    %edi$/;"	l
f0106ba4	obj/kern/kernel.asm	/^f0106ba4:	31 ff                	xor    %edi,%edi$/;"	l
f0106ba6	obj/kern/kernel.asm	/^f0106ba6:	89 c3                	mov    %eax,%ebx$/;"	l
f0106ba8	obj/kern/kernel.asm	/^f0106ba8:	89 d8                	mov    %ebx,%eax$/;"	l
f0106baa	obj/kern/kernel.asm	/^f0106baa:	89 fa                	mov    %edi,%edx$/;"	l
f0106bac	obj/kern/kernel.asm	/^f0106bac:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106baf	obj/kern/kernel.asm	/^f0106baf:	5b                   	pop    %ebx$/;"	l
f0106bb0	obj/kern/kernel.asm	/^f0106bb0:	5e                   	pop    %esi$/;"	l
f0106bb1	obj/kern/kernel.asm	/^f0106bb1:	5f                   	pop    %edi$/;"	l
f0106bb2	obj/kern/kernel.asm	/^f0106bb2:	5d                   	pop    %ebp$/;"	l
f0106bb3	obj/kern/kernel.asm	/^f0106bb3:	c3                   	ret    $/;"	l
f0106bb4	obj/kern/kernel.asm	/^f0106bb4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106bb8	obj/kern/kernel.asm	/^f0106bb8:	39 ce                	cmp    %ecx,%esi$/;"	l
f0106bba	obj/kern/kernel.asm	/^f0106bba:	72 0c                	jb     f0106bc8 <__udivdi3+0x118>$/;"	l
f0106bbc	obj/kern/kernel.asm	/^f0106bbc:	31 db                	xor    %ebx,%ebx$/;"	l
f0106bbe	obj/kern/kernel.asm	/^f0106bbe:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0106bc2	obj/kern/kernel.asm	/^f0106bc2:	0f 87 34 ff ff ff    	ja     f0106afc <__udivdi3+0x4c>$/;"	l
f0106bc8	obj/kern/kernel.asm	/^f0106bc8:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0106bcd	obj/kern/kernel.asm	/^f0106bcd:	e9 2a ff ff ff       	jmp    f0106afc <__udivdi3+0x4c>$/;"	l
f0106bd2	obj/kern/kernel.asm	/^f0106bd2:	66 90                	xchg   %ax,%ax$/;"	l
f0106bd4	obj/kern/kernel.asm	/^f0106bd4:	66 90                	xchg   %ax,%ax$/;"	l
f0106bd6	obj/kern/kernel.asm	/^f0106bd6:	66 90                	xchg   %ax,%ax$/;"	l
f0106bd8	obj/kern/kernel.asm	/^f0106bd8:	66 90                	xchg   %ax,%ax$/;"	l
f0106bda	obj/kern/kernel.asm	/^f0106bda:	66 90                	xchg   %ax,%ax$/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	66 90                	xchg   %ax,%ax$/;"	l
f0106bde	obj/kern/kernel.asm	/^f0106bde:	66 90                	xchg   %ax,%ax$/;"	l
f0106be0	obj/kern/kernel.asm	/^f0106be0 <__umoddi3>:$/;"	l
f0106be0	obj/kern/kernel.asm	/^f0106be0:	55                   	push   %ebp$/;"	l
f0106be1	obj/kern/kernel.asm	/^f0106be1:	57                   	push   %edi$/;"	l
f0106be2	obj/kern/kernel.asm	/^f0106be2:	56                   	push   %esi$/;"	l
f0106be3	obj/kern/kernel.asm	/^f0106be3:	53                   	push   %ebx$/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106be7	obj/kern/kernel.asm	/^f0106be7:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f0106beb	obj/kern/kernel.asm	/^f0106beb:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f0106bef	obj/kern/kernel.asm	/^f0106bef:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0106bf3	obj/kern/kernel.asm	/^f0106bf3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106bf7	obj/kern/kernel.asm	/^f0106bf7:	85 d2                	test   %edx,%edx$/;"	l
f0106bf9	obj/kern/kernel.asm	/^f0106bf9:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0106bfd	obj/kern/kernel.asm	/^f0106bfd:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106c01	obj/kern/kernel.asm	/^f0106c01:	89 f3                	mov    %esi,%ebx$/;"	l
f0106c03	obj/kern/kernel.asm	/^f0106c03:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106c06	obj/kern/kernel.asm	/^f0106c06:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106c0a	obj/kern/kernel.asm	/^f0106c0a:	75 1c                	jne    f0106c28 <__umoddi3+0x48>$/;"	l
f0106c0c	obj/kern/kernel.asm	/^f0106c0c:	39 f7                	cmp    %esi,%edi$/;"	l
f0106c0e	obj/kern/kernel.asm	/^f0106c0e:	76 50                	jbe    f0106c60 <__umoddi3+0x80>$/;"	l
f0106c10	obj/kern/kernel.asm	/^f0106c10:	89 c8                	mov    %ecx,%eax$/;"	l
f0106c12	obj/kern/kernel.asm	/^f0106c12:	89 f2                	mov    %esi,%edx$/;"	l
f0106c14	obj/kern/kernel.asm	/^f0106c14:	f7 f7                	div    %edi$/;"	l
f0106c16	obj/kern/kernel.asm	/^f0106c16:	89 d0                	mov    %edx,%eax$/;"	l
f0106c18	obj/kern/kernel.asm	/^f0106c18:	31 d2                	xor    %edx,%edx$/;"	l
f0106c1a	obj/kern/kernel.asm	/^f0106c1a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106c1d	obj/kern/kernel.asm	/^f0106c1d:	5b                   	pop    %ebx$/;"	l
f0106c1e	obj/kern/kernel.asm	/^f0106c1e:	5e                   	pop    %esi$/;"	l
f0106c1f	obj/kern/kernel.asm	/^f0106c1f:	5f                   	pop    %edi$/;"	l
f0106c20	obj/kern/kernel.asm	/^f0106c20:	5d                   	pop    %ebp$/;"	l
f0106c21	obj/kern/kernel.asm	/^f0106c21:	c3                   	ret    $/;"	l
f0106c22	obj/kern/kernel.asm	/^f0106c22:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106c28	obj/kern/kernel.asm	/^f0106c28:	39 f2                	cmp    %esi,%edx$/;"	l
f0106c2a	obj/kern/kernel.asm	/^f0106c2a:	89 d0                	mov    %edx,%eax$/;"	l
f0106c2c	obj/kern/kernel.asm	/^f0106c2c:	77 52                	ja     f0106c80 <__umoddi3+0xa0>$/;"	l
f0106c2e	obj/kern/kernel.asm	/^f0106c2e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0106c31	obj/kern/kernel.asm	/^f0106c31:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0106c34	obj/kern/kernel.asm	/^f0106c34:	75 5a                	jne    f0106c90 <__umoddi3+0xb0>$/;"	l
f0106c36	obj/kern/kernel.asm	/^f0106c36:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f0106c3a	obj/kern/kernel.asm	/^f0106c3a:	0f 82 e0 00 00 00    	jb     f0106d20 <__umoddi3+0x140>$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0106c43	obj/kern/kernel.asm	/^f0106c43:	0f 86 d7 00 00 00    	jbe    f0106d20 <__umoddi3+0x140>$/;"	l
f0106c49	obj/kern/kernel.asm	/^f0106c49:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106c4d	obj/kern/kernel.asm	/^f0106c4d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106c51	obj/kern/kernel.asm	/^f0106c51:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106c54	obj/kern/kernel.asm	/^f0106c54:	5b                   	pop    %ebx$/;"	l
f0106c55	obj/kern/kernel.asm	/^f0106c55:	5e                   	pop    %esi$/;"	l
f0106c56	obj/kern/kernel.asm	/^f0106c56:	5f                   	pop    %edi$/;"	l
f0106c57	obj/kern/kernel.asm	/^f0106c57:	5d                   	pop    %ebp$/;"	l
f0106c58	obj/kern/kernel.asm	/^f0106c58:	c3                   	ret    $/;"	l
f0106c59	obj/kern/kernel.asm	/^f0106c59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106c60	obj/kern/kernel.asm	/^f0106c60:	85 ff                	test   %edi,%edi$/;"	l
f0106c62	obj/kern/kernel.asm	/^f0106c62:	89 fd                	mov    %edi,%ebp$/;"	l
f0106c64	obj/kern/kernel.asm	/^f0106c64:	75 0b                	jne    f0106c71 <__umoddi3+0x91>$/;"	l
f0106c66	obj/kern/kernel.asm	/^f0106c66:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106c6b	obj/kern/kernel.asm	/^f0106c6b:	31 d2                	xor    %edx,%edx$/;"	l
f0106c6d	obj/kern/kernel.asm	/^f0106c6d:	f7 f7                	div    %edi$/;"	l
f0106c6f	obj/kern/kernel.asm	/^f0106c6f:	89 c5                	mov    %eax,%ebp$/;"	l
f0106c71	obj/kern/kernel.asm	/^f0106c71:	89 f0                	mov    %esi,%eax$/;"	l
f0106c73	obj/kern/kernel.asm	/^f0106c73:	31 d2                	xor    %edx,%edx$/;"	l
f0106c75	obj/kern/kernel.asm	/^f0106c75:	f7 f5                	div    %ebp$/;"	l
f0106c77	obj/kern/kernel.asm	/^f0106c77:	89 c8                	mov    %ecx,%eax$/;"	l
f0106c79	obj/kern/kernel.asm	/^f0106c79:	f7 f5                	div    %ebp$/;"	l
f0106c7b	obj/kern/kernel.asm	/^f0106c7b:	89 d0                	mov    %edx,%eax$/;"	l
f0106c7d	obj/kern/kernel.asm	/^f0106c7d:	eb 99                	jmp    f0106c18 <__umoddi3+0x38>$/;"	l
f0106c7f	obj/kern/kernel.asm	/^f0106c7f:	90                   	nop$/;"	l
f0106c80	obj/kern/kernel.asm	/^f0106c80:	89 c8                	mov    %ecx,%eax$/;"	l
f0106c82	obj/kern/kernel.asm	/^f0106c82:	89 f2                	mov    %esi,%edx$/;"	l
f0106c84	obj/kern/kernel.asm	/^f0106c84:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106c87	obj/kern/kernel.asm	/^f0106c87:	5b                   	pop    %ebx$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	5e                   	pop    %esi$/;"	l
f0106c89	obj/kern/kernel.asm	/^f0106c89:	5f                   	pop    %edi$/;"	l
f0106c8a	obj/kern/kernel.asm	/^f0106c8a:	5d                   	pop    %ebp$/;"	l
f0106c8b	obj/kern/kernel.asm	/^f0106c8b:	c3                   	ret    $/;"	l
f0106c8c	obj/kern/kernel.asm	/^f0106c8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106c90	obj/kern/kernel.asm	/^f0106c90:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0106c93	obj/kern/kernel.asm	/^f0106c93:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0106c98	obj/kern/kernel.asm	/^f0106c98:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106c9a	obj/kern/kernel.asm	/^f0106c9a:	29 ef                	sub    %ebp,%edi$/;"	l
f0106c9c	obj/kern/kernel.asm	/^f0106c9c:	d3 e0                	shl    %cl,%eax$/;"	d
f0106c9e	obj/kern/kernel.asm	/^f0106c9e:	89 f9                	mov    %edi,%ecx$/;"	l
f0106ca0	obj/kern/kernel.asm	/^f0106ca0:	89 f2                	mov    %esi,%edx$/;"	l
f0106ca2	obj/kern/kernel.asm	/^f0106ca2:	d3 ea                	shr    %cl,%edx$/;"	d
f0106ca4	obj/kern/kernel.asm	/^f0106ca4:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106ca6	obj/kern/kernel.asm	/^f0106ca6:	09 c2                	or     %eax,%edx$/;"	l
f0106ca8	obj/kern/kernel.asm	/^f0106ca8:	89 d8                	mov    %ebx,%eax$/;"	l
f0106caa	obj/kern/kernel.asm	/^f0106caa:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0106cad	obj/kern/kernel.asm	/^f0106cad:	89 f2                	mov    %esi,%edx$/;"	l
f0106caf	obj/kern/kernel.asm	/^f0106caf:	d3 e2                	shl    %cl,%edx$/;"	d
f0106cb1	obj/kern/kernel.asm	/^f0106cb1:	89 f9                	mov    %edi,%ecx$/;"	l
f0106cb3	obj/kern/kernel.asm	/^f0106cb3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106cb7	obj/kern/kernel.asm	/^f0106cb7:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0106cbb	obj/kern/kernel.asm	/^f0106cbb:	d3 e8                	shr    %cl,%eax$/;"	d
f0106cbd	obj/kern/kernel.asm	/^f0106cbd:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106cbf	obj/kern/kernel.asm	/^f0106cbf:	89 c6                	mov    %eax,%esi$/;"	l
f0106cc1	obj/kern/kernel.asm	/^f0106cc1:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106cc3	obj/kern/kernel.asm	/^f0106cc3:	89 f9                	mov    %edi,%ecx$/;"	l
f0106cc5	obj/kern/kernel.asm	/^f0106cc5:	89 d0                	mov    %edx,%eax$/;"	l
f0106cc7	obj/kern/kernel.asm	/^f0106cc7:	d3 e8                	shr    %cl,%eax$/;"	d
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106ccb	obj/kern/kernel.asm	/^f0106ccb:	09 d8                	or     %ebx,%eax$/;"	l
f0106ccd	obj/kern/kernel.asm	/^f0106ccd:	89 d3                	mov    %edx,%ebx$/;"	l
f0106ccf	obj/kern/kernel.asm	/^f0106ccf:	89 f2                	mov    %esi,%edx$/;"	l
f0106cd1	obj/kern/kernel.asm	/^f0106cd1:	f7 34 24             	divl   (%esp)$/;"	l
f0106cd4	obj/kern/kernel.asm	/^f0106cd4:	89 d6                	mov    %edx,%esi$/;"	l
f0106cd6	obj/kern/kernel.asm	/^f0106cd6:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106cd8	obj/kern/kernel.asm	/^f0106cd8:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f0106cdc	obj/kern/kernel.asm	/^f0106cdc:	39 d6                	cmp    %edx,%esi$/;"	l
f0106cde	obj/kern/kernel.asm	/^f0106cde:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106ce2	obj/kern/kernel.asm	/^f0106ce2:	89 d1                	mov    %edx,%ecx$/;"	l
f0106ce4	obj/kern/kernel.asm	/^f0106ce4:	89 c3                	mov    %eax,%ebx$/;"	l
f0106ce6	obj/kern/kernel.asm	/^f0106ce6:	72 08                	jb     f0106cf0 <__umoddi3+0x110>$/;"	l
f0106ce8	obj/kern/kernel.asm	/^f0106ce8:	75 11                	jne    f0106cfb <__umoddi3+0x11b>$/;"	l
f0106cea	obj/kern/kernel.asm	/^f0106cea:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f0106cee	obj/kern/kernel.asm	/^f0106cee:	73 0b                	jae    f0106cfb <__umoddi3+0x11b>$/;"	l
f0106cf0	obj/kern/kernel.asm	/^f0106cf0:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0106cf4	obj/kern/kernel.asm	/^f0106cf4:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0106cf7	obj/kern/kernel.asm	/^f0106cf7:	89 d1                	mov    %edx,%ecx$/;"	l
f0106cf9	obj/kern/kernel.asm	/^f0106cf9:	89 c3                	mov    %eax,%ebx$/;"	l
f0106cfb	obj/kern/kernel.asm	/^f0106cfb:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f0106cff	obj/kern/kernel.asm	/^f0106cff:	29 da                	sub    %ebx,%edx$/;"	l
f0106d01	obj/kern/kernel.asm	/^f0106d01:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106d03	obj/kern/kernel.asm	/^f0106d03:	89 f9                	mov    %edi,%ecx$/;"	l
f0106d05	obj/kern/kernel.asm	/^f0106d05:	89 f0                	mov    %esi,%eax$/;"	l
f0106d07	obj/kern/kernel.asm	/^f0106d07:	d3 e0                	shl    %cl,%eax$/;"	d
f0106d09	obj/kern/kernel.asm	/^f0106d09:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106d0b	obj/kern/kernel.asm	/^f0106d0b:	d3 ea                	shr    %cl,%edx$/;"	d
f0106d0d	obj/kern/kernel.asm	/^f0106d0d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106d0f	obj/kern/kernel.asm	/^f0106d0f:	d3 ee                	shr    %cl,%esi$/;"	d
f0106d11	obj/kern/kernel.asm	/^f0106d11:	09 d0                	or     %edx,%eax$/;"	l
f0106d13	obj/kern/kernel.asm	/^f0106d13:	89 f2                	mov    %esi,%edx$/;"	l
f0106d15	obj/kern/kernel.asm	/^f0106d15:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106d18	obj/kern/kernel.asm	/^f0106d18:	5b                   	pop    %ebx$/;"	l
f0106d19	obj/kern/kernel.asm	/^f0106d19:	5e                   	pop    %esi$/;"	l
f0106d1a	obj/kern/kernel.asm	/^f0106d1a:	5f                   	pop    %edi$/;"	l
f0106d1b	obj/kern/kernel.asm	/^f0106d1b:	5d                   	pop    %ebp$/;"	l
f0106d1c	obj/kern/kernel.asm	/^f0106d1c:	c3                   	ret    $/;"	l
f0106d1d	obj/kern/kernel.asm	/^f0106d1d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106d20	obj/kern/kernel.asm	/^f0106d20:	29 f9                	sub    %edi,%ecx$/;"	l
f0106d22	obj/kern/kernel.asm	/^f0106d22:	19 d6                	sbb    %edx,%esi$/;"	l
f0106d24	obj/kern/kernel.asm	/^f0106d24:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106d28	obj/kern/kernel.asm	/^f0106d28:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106d2c	obj/kern/kernel.asm	/^f0106d2c:	e9 18 ff ff ff       	jmp    f0106c49 <__umoddi3+0x69>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultio.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultio.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fputest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fputest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/lottery.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lottery.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/singlestep.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/singlestep.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnfaultio.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = r;$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testexec.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testexec.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testexec.asm	/^    fd = r;$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon2	typeref:struct:Fd::__anon2::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultio.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fputest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lottery.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/singlestep.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnfaultio.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testexec.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
fxsave	inc/env.h	/^	char fxsave[512] __attribute__((aligned(16)));$/;"	m	struct:Env
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idttable	kern/trapentry.S	/^idttable:$/;"	l
idttable	obj/kern/kernel.asm	/^idttable:$/;"	l
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
init_stack	lib/exec.c	/^init_stack(const char **argv, uintptr_t *init_esp, void **nextpgp)$/;"	f	file:
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/fs/fs.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/kern/kernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/badsegment.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/breakpoint.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/buggyhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/buggyhello2.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/cat.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/divzero.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/dumbfork.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/echo.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/evilhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/fairness.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultalloc.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultallocbad.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultbadhandler.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultdie.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultevilhandler.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultio.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultio.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultio.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultnostack.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultread.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultreadkernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultregs.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultwrite.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultwritekernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/forktree.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/fputest.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/fputest.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/fputest.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/hello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/icode.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/idle.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/init.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/lottery.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/lottery.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/lottery.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/ls.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/lsfd.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/num.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/pingpong.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/pingpongs.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/primes.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/primespipe.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/sendpage.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/sh.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/singlestep.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/singlestep.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/singlestep.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/softint.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnfaultio.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/spawnfaultio.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/spawnfaultio.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/spawnhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/spin.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/stresssched.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testbss.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testexec.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testexec.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testexec.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testfdsharing.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testfile.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testkbd.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testpipe.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testpiperace.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testpiperace2.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testpteshare.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testshell.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/yield.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultio.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/fputest.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/lottery.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/singlestep.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnfaultio.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testexec.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipc_try_recv	kern/syscall.c	/^ipc_try_recv(struct Env *recenv)$/;"	f	file:
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
irqtable	kern/trapentry.S	/^irqtable:$/;"	l
irqtable	obj/kern/kernel.asm	/^irqtable:$/;"	l
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fputest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lottery.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/singlestep.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnfaultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testexec.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	user/num.c	/^int line = 0;$/;"	v
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultio.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/fputest.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/lottery.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/singlestep.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnfaultio.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testexec.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lottery_sched_init	kern/sched.c	/^void lottery_sched_init()$/;"	f
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultio.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultio.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultio.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fputest.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fputest.asm	/^		m = n - tot;$/;"	d
m	obj/user/fputest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lottery.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lottery.asm	/^		m = n - tot;$/;"	d
m	obj/user/lottery.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/singlestep.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/singlestep.asm	/^		m = n - tot;$/;"	d
m	obj/user/singlestep.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnfaultio.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testexec.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testexec.asm	/^		m = n - tot;$/;"	d
m	obj/user/testexec.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
map_segment	lib/exec.c	/^map_segment(uintptr_t va, size_t memsz, int fd, size_t filesz,$/;"	f	file:
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_chperm	kern/monitor.c	/^mon_chperm(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_continue	kern/monitor.c	/^mon_continue(int argc, char **argv, struct Trapframe *tf) {$/;"	f
mon_dumpmem	kern/monitor.c	/^mon_dumpmem(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_showmappings	kern/monitor.c	/^mon_showmappings(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_showtime	kern/monitor.c	/^mon_showtime(int argc, char **argv, struct Trapframe *tf) {$/;"	f
mon_step	kern/monitor.c	/^mon_step(int argc, char **argv, struct Trapframe *tf) {$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon10	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon10	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultio.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fputest.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lottery.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/singlestep.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnfaultio.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testexec.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
newblk	obj/fs/fs.asm	/^		newblk = alloc_block();$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultio.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fputest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lottery.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/singlestep.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnfaultio.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testexec.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
next	kern/sched.c	/^static unsigned next = 1;$/;"	v	file:
next	obj/kern/kernel.asm	/^	next = next * 1103515245 + 12345;$/;"	d
next	obj/kern/kernel.asm	/^	next = seed;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultio.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fputest.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lottery.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/singlestep.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnfaultio.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testexec.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultio.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultio.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fputest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fputest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fputest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fputest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lottery.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lottery.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lottery.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lottery.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/singlestep.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/singlestep.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/singlestep.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/singlestep.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnfaultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testexec.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testexec.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testexec.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testexec.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultio.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/fputest.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/lottery.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/singlestep.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnfaultio.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testexec.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultio.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fputest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lottery.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/singlestep.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnfaultio.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testexec.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/kern/kernel.asm	/^			offset = PGOFF(i);$/;"	d
offsetof	inc/types.h	73;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultio.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fputest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lottery.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/singlestep.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnfaultio.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testexec.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultio.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultio.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fputest.asm	/^				p = "(null)";$/;"	d
p	obj/user/fputest.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fputest.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lottery.asm	/^				p = "(null)";$/;"	d
p	obj/user/lottery.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lottery.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/singlestep.asm	/^				p = "(null)";$/;"	d
p	obj/user/singlestep.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/singlestep.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnfaultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testexec.asm	/^				p = "(null)";$/;"	d
p	obj/user/testexec.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testexec.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/fputest.asm	/^			padc = '-';$/;"	d
padc	obj/user/fputest.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/lottery.asm	/^			padc = '-';$/;"	d
padc	obj/user/lottery.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/singlestep.asm	/^			padc = '-';$/;"	d
padc	obj/user/singlestep.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testexec.asm	/^			padc = '-';$/;"	d
padc	obj/user/testexec.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	inc/syscall.h	/^    int perm;$/;"	m	struct:SegmentInfo
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnfaultio.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testexec.asm	/^        perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
pg	obj/fs/fs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/user/badsegment.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/breakpoint.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/buggyhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/buggyhello2.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/cat.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/divzero.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/dumbfork.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/echo.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/evilhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/fairness.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultalloc.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultallocbad.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultdie.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultio.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultnostack.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultread.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultregs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultwrite.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/fputest.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/init.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/lottery.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/ls.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/lsfd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/num.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primespipe.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/sendpage.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/sh.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/singlestep.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/softint.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/spawnfaultio.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/spawnhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/spin.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/stresssched.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testbss.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testexec.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testfdsharing.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testkbd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpipe.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpiperace.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpiperace2.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpteshare.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testshell.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/yield.asm	/^		pg = (void *) UTOP;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgnum	obj/kern/kernel.asm	/^			pgnum = i >> PGSHIFT;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *)((uint8_t *)elfhdr + elfhdr->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnfaultio.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testexec.asm	/^    ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pn	obj/kern/kernel.asm	/^		pn = pn >> PGSHIFT;$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/fputest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fputest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fputest.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/lottery.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lottery.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lottery.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/singlestep.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/singlestep.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/singlestep.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnfaultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnfaultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnfaultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testexec.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testexec.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testexec.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultio.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fputest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lottery.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/singlestep.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnfaultio.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testexec.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultio.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fputest.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lottery.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/singlestep.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnfaultio.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testexec.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_p	obj/kern/kernel.asm	/^			pte_p = pgdir_walk(pgdir, (void *) va, true);$/;"	d
pte_p	obj/kern/kernel.asm	/^		pte_p = pgdir_walk(kern_pgdir, (void *) va, 0);$/;"	d
pte_p	obj/kern/kernel.asm	/^		pte_p = pgdir_walk(pgdir, (void *) va, true);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = file_read(o->o_file, (void *)ret->ret_buf, req->req_n, o->o_fd->fd_offset);$/;"	d
r	obj/fs/fs.asm	/^	r = file_write(o->o_file, (void *)req->req_buf, req->req_n, o->o_fd->fd_offset);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/fs/fs.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^        r = sys_ipc_page_map(sender->env_id, sender->env_ipc_va,$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/badsegment.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultio.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultio.asm	/^			r = 0;$/;"	d
r	obj/user/faultio.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultio.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultio.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/fputest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fputest.asm	/^			r = 0;$/;"	d
r	obj/user/fputest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fputest.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fputest.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/icode.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/lottery.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lottery.asm	/^			r = 0;$/;"	d
r	obj/user/lottery.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lottery.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lottery.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/singlestep.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/singlestep.asm	/^			r = 0;$/;"	d
r	obj/user/singlestep.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/singlestep.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/singlestep.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/softint.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = 0;$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testbss.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testexec.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testexec.asm	/^			r = 0;$/;"	d
r	obj/user/testexec.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testexec.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testexec.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
rand	kern/sched.c	/^static unsigned rand()$/;"	f	file:
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fputest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lottery.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/singlestep.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnfaultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testexec.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rdmsr	inc/x86.h	6;"	d
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultio.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fputest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lottery.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/singlestep.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnfaultio.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testexec.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultio.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/fputest.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fputest.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/lottery.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lottery.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/singlestep.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/singlestep.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnfaultio.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnfaultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testexec.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testexec.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon8	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultio.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/fputest.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/lottery.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/singlestep.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnfaultio.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testexec.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
sender_list_head	inc/env.h	/^	struct Env *sender_list_head, *sender_list_tail;	\/\/ for non-loop ipc_send challenge$/;"	m	struct:Env	typeref:struct:Env::Env
sender_list_tail	inc/env.h	/^	struct Env *sender_list_head, *sender_list_tail;	\/\/ for non-loop ipc_send challenge$/;"	m	struct:Env	typeref:struct:Env::
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size	inc/syscall.h	/^	unsigned int size;$/;"	m	struct:SegmentInfo
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultio.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/fputest.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/lottery.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/singlestep.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnfaultio.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testexec.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
srand	kern/sched.c	/^void srand(unsigned seed)$/;"	f
srcpp	obj/kern/kernel.asm	/^	srcpp = page_lookup(srcenv->env_pgdir, srcva, &srcpte);$/;"	d
srcpp	obj/kern/kernel.asm	/^        srcpp = page_lookup(curenv->env_pgdir, srcva, &srcpte);$/;"	d
srcva	inc/syscall.h	/^    void *srcva, *dstva;$/;"	m	struct:SegmentInfo
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultio.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fputest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lottery.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/singlestep.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnfaultio.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testexec.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static int32_t$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool use_lottery = false;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static unsigned next = 1;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned rand()$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static int32_t$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static int32_t$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static int32_t$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static int32_t$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static int32_t$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static int32_t$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static int32_t$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultio.asm	/^static inline uint32_t$/;"	l
static	obj/user/faultio.asm	/^static inline void$/;"	l
static	obj/user/faultio.asm	/^static int$/;"	l
static	obj/user/faultio.asm	/^static int32_t$/;"	l
static	obj/user/faultio.asm	/^static long long$/;"	l
static	obj/user/faultio.asm	/^static ssize_t$/;"	l
static	obj/user/faultio.asm	/^static unsigned long long$/;"	l
static	obj/user/faultio.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static int32_t$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static int32_t$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static int32_t$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/fputest.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/fputest.asm	/^static int$/;"	l
static	obj/user/fputest.asm	/^static int32_t$/;"	l
static	obj/user/fputest.asm	/^static long long$/;"	l
static	obj/user/fputest.asm	/^static ssize_t$/;"	l
static	obj/user/fputest.asm	/^static unsigned long long$/;"	l
static	obj/user/fputest.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static int32_t$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static int32_t$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static int32_t$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static int32_t$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/lottery.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/lottery.asm	/^static int$/;"	l
static	obj/user/lottery.asm	/^static int32_t$/;"	l
static	obj/user/lottery.asm	/^static long long$/;"	l
static	obj/user/lottery.asm	/^static ssize_t$/;"	l
static	obj/user/lottery.asm	/^static unsigned long long$/;"	l
static	obj/user/lottery.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static int32_t$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static int32_t$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static int32_t$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static int32_t$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static int32_t$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static int32_t$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static int32_t$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static int32_t$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/singlestep.asm	/^static int$/;"	l
static	obj/user/singlestep.asm	/^static int32_t$/;"	l
static	obj/user/singlestep.asm	/^static long long$/;"	l
static	obj/user/singlestep.asm	/^static ssize_t$/;"	l
static	obj/user/singlestep.asm	/^static unsigned long long$/;"	l
static	obj/user/singlestep.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static int32_t$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnfaultio.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnfaultio.asm	/^static int$/;"	l
static	obj/user/spawnfaultio.asm	/^static int32_t$/;"	l
static	obj/user/spawnfaultio.asm	/^static long long$/;"	l
static	obj/user/spawnfaultio.asm	/^static ssize_t$/;"	l
static	obj/user/spawnfaultio.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnfaultio.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static int32_t$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static int32_t$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static int32_t$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static int32_t$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testexec.asm	/^static int map_segment(uintptr_t va, size_t memsz, int fd, size_t filesz,$/;"	l
static	obj/user/testexec.asm	/^static int$/;"	l
static	obj/user/testexec.asm	/^static int32_t$/;"	l
static	obj/user/testexec.asm	/^static long long$/;"	l
static	obj/user/testexec.asm	/^static ssize_t$/;"	l
static	obj/user/testexec.asm	/^static unsigned long long$/;"	l
static	obj/user/testexec.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static int32_t$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static int32_t$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static int32_t$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static int32_t$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static int32_t$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static int32_t$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static int32_t$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static int32_t$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static int32_t$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnfaultio.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testexec.asm	/^    string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size - 4; \/\/ -4 to work with lab4 sfork's thisenv setting$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size - 4; \/\/ -4 to work with lab4 sfork's thisenv setting$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size - 4; \/\/ -4 to work with lab4 sfork's thisenv setting$/;"	d
string_store	obj/user/spawnfaultio.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size - 4; \/\/ -4 to work with lab4 sfork's thisenv setting$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size - 4; \/\/ -4 to work with lab4 sfork's thisenv setting$/;"	d
string_store	obj/user/testexec.asm	/^    string_store = (char*) *nextpgp + PGSIZE - string_size - 4; \/\/ -4 to work with lab4 sfork's thisenv setting$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size - 4; \/\/ -4 to work with lab4 sfork's thisenv setting$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size - 4; \/\/ -4 to work with lab4 sfork's thisenv setting$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_load_elf	kern/syscall.c	/^sys_env_load_elf(struct Trapframe *tf, struct SegmentInfo *seginfo)$/;"	f	file:
sys_env_load_elf	lib/syscall.c	/^sys_env_load_elf(struct Trapframe *tf, struct SegmentInfo *seginfo)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_tickets	kern/syscall.c	/^sys_env_set_tickets(envid_t envid, int tickets)$/;"	f	file:
sys_env_set_tickets	lib/syscall.c	/^sys_env_set_tickets(envid_t envid, int tickets)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_page_map	kern/syscall.c	/^sys_ipc_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
sysenter	lib/syscall.c	/^sysenter(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4)$/;"	f	file:
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultio	grade-lab5	/^def test_faultio():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf	obj/user/testexec.asm	/^    tf = envs[ENVX(sys_getenvid())].env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	inc/lib.h	25;"	d
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fputest.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fputest.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lottery.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lottery.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/singlestep.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnfaultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testexec.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tickets	obj/kern/kernel.asm	/^		tickets = ENV_DEFAULT_TICKETS; \/\/ default$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
total_tickets	obj/kern/kernel.asm	/^		total_tickets = 0;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultio.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fputest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lottery.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/singlestep.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnfaultio.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testexec.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
use_lottery	kern/sched.c	/^static bool use_lottery = false;$/;"	v	file:
use_lottery	obj/kern/kernel.asm	/^	use_lottery = true;$/;"	d
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = MAX((size_t) va, ULIM);$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = curva;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^		user_mem_check_addr = curva;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(curenv->env_tf.tf_esp$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^			va = (unsigned char *)(page2kva(&pages[pgnum]) + offset);$/;"	d
va	obj/kern/kernel.asm	/^		va = (uintptr_t) page2kva(&pages[pn]);$/;"	d
va	obj/kern/kernel.asm	/^		va = (uintptr_t) pn << PGSHIFT;$/;"	d
va	obj/kern/kernel.asm	/^		va = PDX(va) << PDXSHIFT;$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultio.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fputest.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lottery.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/singlestep.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnfaultio.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testexec.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void enable_PS_percpu()$/;"	l
void	obj/kern/kernel.asm	/^void lottery_sched_init()$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void srand(unsigned seed)$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultio.asm	/^void *$/;"	l
void	obj/user/faultio.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultio.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/fputest.asm	/^void *$/;"	l
void	obj/user/fputest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fputest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/fputest.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/lottery.asm	/^void *$/;"	l
void	obj/user/lottery.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lottery.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/singlestep.asm	/^void *$/;"	l
void	obj/user/singlestep.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/singlestep.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnfaultio.asm	/^void *$/;"	l
void	obj/user/spawnfaultio.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnfaultio.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testexec.asm	/^void *$/;"	l
void	obj/user/testexec.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testexec.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/testexec.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultio.asm	/^				width = 0;$/;"	d
width	obj/user/faultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultio.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/fputest.asm	/^				width = 0;$/;"	d
width	obj/user/fputest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fputest.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/lottery.asm	/^				width = 0;$/;"	d
width	obj/user/lottery.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lottery.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/singlestep.asm	/^				width = 0;$/;"	d
width	obj/user/singlestep.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/singlestep.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = 0;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testexec.asm	/^				width = 0;$/;"	d
width	obj/user/testexec.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testexec.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon8	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
wrmsr	inc/x86.h	11;"	d
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
