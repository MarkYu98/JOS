!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon7
ALT	kern/console.c	229;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultio.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fputest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lottery.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/singlestep.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnfaultio.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	296;"	d	file:
CAPSLOCK	kern/console.c	231;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	17;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	399;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon9
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon9
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon9
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	228;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fputest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lottery.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/singlestep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnfaultio.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	235;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DEFAULT_TICKETS	inc/env.h	33;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon3
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon3
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon3
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon3
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon3
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon1
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon1
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon1
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon1
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon1
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon1
E_IPC_NO_SENDER	inc/error.h	/^	E_IPC_NO_SENDER , 	\/\/ No Env is trying to send to this env: Lab4 challenge$/;"	e	enum:__anon1
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon1
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon1
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon1
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon1
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon1
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	8;"	d	file:
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon6
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon6
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon6
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon6
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon6
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon6
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon6
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon6
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IA32_SYSENTER_CS	inc/x86.h	17;"	d
IA32_SYSENTER_EIP	inc/x86.h	19;"	d
IA32_SYSENTER_EIP	obj/user/testfdsharing.asm	/^#define IA32_SYSENTER_EIP	374$/;"	d
IA32_SYSENTER_EIP	obj/user/testpteshare.asm	/^#define IA32_SYSENTER_EIP	374$/;"	d
IA32_SYSENTER_EIP	obj/user/testshell.asm	/^#define IA32_SYSENTER_EIP	374$/;"	d
IA32_SYSENTER_ESP	inc/x86.h	18;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	39;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=5$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	297;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	225;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon5
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	232;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	127;"	d
O_CREAT	inc/lib.h	129;"	d
O_EXCL	inc/lib.h	131;"	d
O_MKDIR	inc/lib.h	132;"	d
O_RDONLY	inc/lib.h	124;"	d
O_RDWR	inc/lib.h	126;"	d
O_TRUNC	inc/lib.h	130;"	d
O_WRONLY	inc/lib.h	125;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 24 20:44:37 EDT 2018$/;"	m
PADDR	kern/pmap.h	27;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PS_enabled	kern/pmap.c	/^bool PS_enabled;$/;"	v
PS_enabled	obj/kern/kernel.asm	/^	PS_enabled = !!(edx & (1 << 3));$/;"	d
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	81;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	233;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEED	kern/sched.c	7;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	227;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	187;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon5
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon5
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon5
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon5
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon5
SYS_env_set_tickets	inc/syscall.h	/^	SYS_env_set_tickets,$/;"	e	enum:__anon5
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon5
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon5
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon5
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon5
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon5
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon5
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon5
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon5
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon5
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	24;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	296;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	186;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/fputest.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/lottery.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/fputest.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/lottery.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultio.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/fputest.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/lottery.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/singlestep.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnfaultio.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/user/sh.asm	/^again:$/;"	l
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fputest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fputest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lottery.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lottery.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/singlestep.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/singlestep.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnfaultio.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/fputest.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/lottery.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/singlestep.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnfaultio.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnfaultio.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 10;$/;"	d
base	obj/user/faultio.asm	/^			base = 16;$/;"	d
base	obj/user/faultio.asm	/^			base = 8;$/;"	d
base	obj/user/faultio.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/fputest.asm	/^			base = 10;$/;"	d
base	obj/user/fputest.asm	/^			base = 16;$/;"	d
base	obj/user/fputest.asm	/^			base = 8;$/;"	d
base	obj/user/fputest.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/lottery.asm	/^			base = 10;$/;"	d
base	obj/user/lottery.asm	/^			base = 16;$/;"	d
base	obj/user/lottery.asm	/^			base = 8;$/;"	d
base	obj/user/lottery.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/singlestep.asm	/^			base = 10;$/;"	d
base	obj/user/singlestep.asm	/^			base = 16;$/;"	d
base	obj/user/singlestep.asm	/^			base = 8;$/;"	d
base	obj/user/singlestep.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 10;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 16;$/;"	d
base	obj/user/spawnfaultio.asm	/^			base = 8;$/;"	d
base	obj/user/spawnfaultio.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fputest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lottery.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/singlestep.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnfaultio.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
broken	obj/fs/fs.asm	/^					broken = false;$/;"	d
broken	obj/kern/kernel.asm	/^					broken = false;$/;"	d
broken	obj/user/badsegment.asm	/^					broken = false;$/;"	d
broken	obj/user/breakpoint.asm	/^					broken = false;$/;"	d
broken	obj/user/buggyhello.asm	/^					broken = false;$/;"	d
broken	obj/user/buggyhello2.asm	/^					broken = false;$/;"	d
broken	obj/user/cat.asm	/^					broken = false;$/;"	d
broken	obj/user/divzero.asm	/^					broken = false;$/;"	d
broken	obj/user/dumbfork.asm	/^					broken = false;$/;"	d
broken	obj/user/echo.asm	/^					broken = false;$/;"	d
broken	obj/user/evilhello.asm	/^					broken = false;$/;"	d
broken	obj/user/fairness.asm	/^					broken = false;$/;"	d
broken	obj/user/faultalloc.asm	/^					broken = false;$/;"	d
broken	obj/user/faultallocbad.asm	/^					broken = false;$/;"	d
broken	obj/user/faultbadhandler.asm	/^					broken = false;$/;"	d
broken	obj/user/faultdie.asm	/^					broken = false;$/;"	d
broken	obj/user/faultevilhandler.asm	/^					broken = false;$/;"	d
broken	obj/user/faultio.asm	/^					broken = false;$/;"	d
broken	obj/user/faultnostack.asm	/^					broken = false;$/;"	d
broken	obj/user/faultread.asm	/^					broken = false;$/;"	d
broken	obj/user/faultreadkernel.asm	/^					broken = false;$/;"	d
broken	obj/user/faultregs.asm	/^					broken = false;$/;"	d
broken	obj/user/faultwrite.asm	/^					broken = false;$/;"	d
broken	obj/user/faultwritekernel.asm	/^					broken = false;$/;"	d
broken	obj/user/forktree.asm	/^					broken = false;$/;"	d
broken	obj/user/fputest.asm	/^					broken = false;$/;"	d
broken	obj/user/hello.asm	/^					broken = false;$/;"	d
broken	obj/user/icode.asm	/^					broken = false;$/;"	d
broken	obj/user/idle.asm	/^					broken = false;$/;"	d
broken	obj/user/init.asm	/^					broken = false;$/;"	d
broken	obj/user/lottery.asm	/^					broken = false;$/;"	d
broken	obj/user/ls.asm	/^					broken = false;$/;"	d
broken	obj/user/lsfd.asm	/^					broken = false;$/;"	d
broken	obj/user/num.asm	/^					broken = false;$/;"	d
broken	obj/user/pingpong.asm	/^					broken = false;$/;"	d
broken	obj/user/pingpongs.asm	/^					broken = false;$/;"	d
broken	obj/user/primes.asm	/^					broken = false;$/;"	d
broken	obj/user/primespipe.asm	/^					broken = false;$/;"	d
broken	obj/user/sendpage.asm	/^					broken = false;$/;"	d
broken	obj/user/sh.asm	/^					broken = false;$/;"	d
broken	obj/user/singlestep.asm	/^					broken = false;$/;"	d
broken	obj/user/softint.asm	/^					broken = false;$/;"	d
broken	obj/user/spawnfaultio.asm	/^					broken = false;$/;"	d
broken	obj/user/spawnhello.asm	/^					broken = false;$/;"	d
broken	obj/user/spin.asm	/^					broken = false;$/;"	d
broken	obj/user/stresssched.asm	/^					broken = false;$/;"	d
broken	obj/user/testbss.asm	/^					broken = false;$/;"	d
broken	obj/user/testfdsharing.asm	/^					broken = false;$/;"	d
broken	obj/user/testfile.asm	/^					broken = false;$/;"	d
broken	obj/user/testkbd.asm	/^					broken = false;$/;"	d
broken	obj/user/testpipe.asm	/^					broken = false;$/;"	d
broken	obj/user/testpiperace.asm	/^					broken = false;$/;"	d
broken	obj/user/testpiperace2.asm	/^					broken = false;$/;"	d
broken	obj/user/testpteshare.asm	/^					broken = false;$/;"	d
broken	obj/user/testshell.asm	/^					broken = false;$/;"	d
broken	obj/user/yield.asm	/^					broken = false;$/;"	d
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon8	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultio.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fputest.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lottery.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/singlestep.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnfaultio.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fputest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lottery.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/singlestep.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnfaultio.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/fs/fs.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/fs/fs.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/kern/kernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/kern/kernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/badsegment.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/badsegment.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/breakpoint.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/breakpoint.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello2.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello2.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/cat.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/cat.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/divzero.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/divzero.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/dumbfork.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/dumbfork.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/echo.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/echo.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/evilhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/evilhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/fairness.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/fairness.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultalloc.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultalloc.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultallocbad.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultallocbad.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultbadhandler.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultbadhandler.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultdie.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultdie.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultevilhandler.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultevilhandler.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultio.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultio.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultio.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultnostack.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultnostack.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultread.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultread.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultreadkernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultreadkernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultregs.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultregs.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwrite.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwrite.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwritekernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwritekernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/forktree.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/forktree.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fputest.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/fputest.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/fputest.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/fputest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/hello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/hello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/icode.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/icode.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/idle.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/idle.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/init.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/init.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lottery.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/lottery.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/lottery.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/lottery.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/ls.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/ls.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/lsfd.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/lsfd.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/num.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/num.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpong.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpong.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpongs.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpongs.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/primes.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/primes.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/primespipe.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/primespipe.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/sendpage.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/sendpage.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/sh.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/sh.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/singlestep.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/singlestep.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/singlestep.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/singlestep.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/softint.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/softint.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnfaultio.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/spawnfaultio.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/spawnfaultio.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/spawnfaultio.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/spawnhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/spawnhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/spin.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/spin.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/stresssched.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/stresssched.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testbss.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testbss.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testfdsharing.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testfdsharing.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testfile.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testfile.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testkbd.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testkbd.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testpipe.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testpipe.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testpiperace.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testpiperace.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testpiperace2.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testpiperace2.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testpteshare.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testpteshare.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testshell.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testshell.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/yield.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/yield.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultio.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/fputest.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/lottery.asm	/^char *$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/singlestep.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnfaultio.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnfaultio.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnfaultio.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	lib/fd.c	/^close(int fdnum)$/;"	f
close_all	lib/fd.c	/^close_all(void)$/;"	f
clr	obj/fs/fs.asm	/^						clr = ch - '0';$/;"	d
clr	obj/kern/kernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/badsegment.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/breakpoint.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/buggyhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/buggyhello2.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/cat.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/divzero.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/dumbfork.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/echo.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/evilhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/fairness.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultalloc.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultallocbad.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultbadhandler.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultdie.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultevilhandler.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultio.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultnostack.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultread.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultreadkernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultregs.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultwrite.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultwritekernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/forktree.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/fputest.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/hello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/icode.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/idle.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/init.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/lottery.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/ls.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/lsfd.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/num.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/pingpong.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/pingpongs.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/primes.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/primespipe.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/sendpage.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/sh.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/singlestep.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/softint.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/spawnfaultio.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/spawnhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/spin.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/stresssched.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testbss.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testfdsharing.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testfile.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testkbd.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testpipe.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testpiperace.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testpiperace2.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testpteshare.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testshell.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/yield.asm	/^						clr = ch - '0';$/;"	d
clr_b	obj/fs/fs.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/kern/kernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/badsegment.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/breakpoint.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/buggyhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/buggyhello2.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/cat.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/divzero.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/dumbfork.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/echo.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/evilhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/fairness.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultalloc.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultallocbad.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultbadhandler.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultdie.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultevilhandler.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultio.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultnostack.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultread.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultreadkernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultregs.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultwrite.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultwritekernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/forktree.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/fputest.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/hello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/icode.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/idle.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/init.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/lottery.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/ls.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/lsfd.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/num.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/pingpong.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/pingpongs.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/primes.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/primespipe.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/sendpage.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/sh.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/singlestep.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/softint.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/spawnfaultio.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/spawnhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/spin.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/stresssched.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testbss.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testfdsharing.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testfile.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testkbd.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testpipe.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testpiperace.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testpiperace2.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testpteshare.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testshell.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/yield.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_g	obj/fs/fs.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/kern/kernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/badsegment.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/breakpoint.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/buggyhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/buggyhello2.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/cat.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/divzero.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/dumbfork.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/echo.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/evilhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/fairness.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultalloc.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultallocbad.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultbadhandler.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultdie.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultevilhandler.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultio.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultnostack.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultread.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultreadkernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultregs.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultwrite.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultwritekernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/forktree.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/fputest.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/hello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/icode.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/idle.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/init.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/lottery.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/ls.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/lsfd.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/num.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/pingpong.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/pingpongs.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/primes.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/primespipe.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/sendpage.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/sh.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/singlestep.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/softint.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/spawnfaultio.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/spawnhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/spin.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/stresssched.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testbss.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testfdsharing.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testfile.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testkbd.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testpipe.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testpiperace.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testpiperace2.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testpteshare.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testshell.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/yield.asm	/^						clr_g = clr & 2;$/;"	d
clr_r	obj/fs/fs.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/kern/kernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/badsegment.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/breakpoint.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/buggyhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/buggyhello2.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/cat.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/divzero.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/dumbfork.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/echo.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/evilhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/fairness.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultalloc.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultallocbad.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultbadhandler.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultdie.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultevilhandler.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultio.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultnostack.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultread.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultreadkernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultregs.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultwrite.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultwritekernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/forktree.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/fputest.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/hello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/icode.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/idle.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/init.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/lottery.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/ls.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/lsfd.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/num.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/pingpong.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/pingpongs.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/primes.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/primespipe.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/sendpage.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/sh.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/singlestep.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/softint.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/spawnfaultio.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/spawnhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/spin.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/stresssched.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testbss.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testfdsharing.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testfile.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testkbd.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testpipe.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testpiperace.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testpiperace2.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testpteshare.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testshell.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/yield.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fputest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lottery.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/singlestep.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnfaultio.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon8	file:
cons_bgclr	kern/console.c	/^int cons_bgclr = 0;$/;"	v
cons_bgclr	lib/printf.c	/^int cons_bgclr = 0;$/;"	v
cons_bgclr	obj/fs/fs.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/fs/fs.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/kern/kernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/kern/kernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/badsegment.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/badsegment.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/breakpoint.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/breakpoint.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/buggyhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/buggyhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/buggyhello2.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/buggyhello2.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/cat.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/cat.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/divzero.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/divzero.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/dumbfork.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/dumbfork.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/echo.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/echo.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/evilhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/evilhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/fairness.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/fairness.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultalloc.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultalloc.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultallocbad.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultallocbad.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultbadhandler.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultbadhandler.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultdie.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultdie.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultevilhandler.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultevilhandler.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultio.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultio.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultnostack.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultnostack.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultread.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultread.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultreadkernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultreadkernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultregs.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultregs.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultwrite.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultwrite.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultwritekernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultwritekernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/forktree.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/forktree.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/fputest.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/fputest.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/hello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/hello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/icode.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/icode.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/idle.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/idle.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/init.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/init.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/lottery.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/lottery.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/ls.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/ls.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/lsfd.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/lsfd.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/num.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/num.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/pingpong.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/pingpong.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/pingpongs.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/pingpongs.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/primes.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/primes.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/primespipe.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/primespipe.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/sendpage.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/sendpage.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/sh.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/sh.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/singlestep.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/singlestep.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/softint.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/softint.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/spawnfaultio.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/spawnfaultio.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/spawnhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/spawnhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/spin.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/spin.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/stresssched.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/stresssched.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testbss.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testbss.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testfdsharing.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testfdsharing.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testfile.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testfile.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testkbd.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testkbd.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testpipe.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testpipe.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testpiperace.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testpiperace.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testpiperace2.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testpiperace2.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testpteshare.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testpteshare.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testshell.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testshell.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/yield.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/yield.asm	/^						cons_bgclr = 0;$/;"	d
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
cons_textclr	kern/console.c	/^int cons_textclr = 0x0700;$/;"	v
cons_textclr	lib/printf.c	/^int cons_textclr = 0x0700;$/;"	v
cons_textclr	obj/fs/fs.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/fs/fs.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/fs/fs.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/cat.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/cat.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/cat.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/divzero.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/divzero.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/divzero.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/echo.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/echo.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/echo.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/fairness.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/fairness.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/fairness.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultio.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultio.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultio.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultread.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultread.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultread.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/forktree.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/forktree.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/forktree.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/fputest.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/fputest.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/fputest.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/hello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/hello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/hello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/icode.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/icode.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/icode.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/idle.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/idle.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/idle.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/init.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/init.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/init.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/lottery.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/lottery.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/lottery.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/ls.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/ls.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/ls.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/lsfd.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/lsfd.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/lsfd.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/num.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/num.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/num.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/primes.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/primes.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/primes.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/primespipe.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/primespipe.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/primespipe.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/sh.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/sh.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/sh.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/softint.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/softint.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/softint.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/spawnfaultio.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/spawnfaultio.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/spawnfaultio.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/spawnhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/spawnhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/spawnhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/spin.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/spin.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/spin.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testbss.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testbss.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testbss.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testfdsharing.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testfdsharing.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testfdsharing.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testfile.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testfile.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testfile.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testkbd.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testkbd.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testkbd.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testpipe.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testpipe.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testpipe.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testpiperace.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testpiperace.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testpiperace.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testpiperace2.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testpiperace2.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testpiperace2.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testpteshare.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testpteshare.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testpteshare.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testshell.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testshell.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testshell.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/yield.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/yield.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/yield.asm	/^			cons_textclr = num;$/;"	d
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fputest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lottery.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/singlestep.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnfaultio.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr4	obj/kern/kernel.asm	/^		cr4 = rcr4();$/;"	d
cr4	obj/kern/kernel.asm	/^	cr4 = rcr4();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
cur_env_id	obj/kern/kernel.asm	/^		cur_env_id = ENVX(curenv->env_id);$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
curva	obj/kern/kernel.asm	/^		curva = ROUNDDOWN(curva, PGSIZE);$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultio.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/fputest.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/lottery.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/singlestep.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnfaultio.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon10
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultio.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/fputest.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/lottery.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/singlestep.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnfaultio.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
detect_PS_support	kern/pmap.c	/^detect_PS_support()$/;"	f	file:
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fputest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fputest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fputest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lottery.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lottery.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lottery.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnfaultio.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fputest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lottery.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/singlestep.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnfaultio.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebp	obj/kern/kernel.asm	/^        ebp = (unsigned int*)(*ebp);$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnfaultio.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
enable_PS_percpu	kern/pmap.c	/^void enable_PS_percpu()$/;"	f
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_sending	inc/env.h	/^	bool env_ipc_sending;		\/\/ Env is blocked sending, for non-loop ipc_send challenge$/;"	m	struct:Env
env_ipc_va	inc/env.h	/^	void *env_ipc_va;			\/\/ VA of sended page or at which to map received page$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value to send or received$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env or next in sender_list$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_tickets	inc/env.h	/^	int env_tickets;$/;"	m	struct:Env
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultio.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/fputest.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/lottery.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/singlestep.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnfaultio.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultio.asm	/^				err = -err;$/;"	d
err	obj/user/faultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultio.asm	/^    err:$/;"	l
err	obj/user/faultio.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/fputest.asm	/^				err = -err;$/;"	d
err	obj/user/fputest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fputest.asm	/^    err:$/;"	l
err	obj/user/fputest.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/lottery.asm	/^				err = -err;$/;"	d
err	obj/user/lottery.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lottery.asm	/^    err:$/;"	l
err	obj/user/lottery.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/singlestep.asm	/^				err = -err;$/;"	d
err	obj/user/singlestep.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/singlestep.asm	/^    err:$/;"	l
err	obj/user/singlestep.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnfaultio.asm	/^				err = -err;$/;"	d
err	obj/user/spawnfaultio.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnfaultio.asm	/^    err:$/;"	l
err	obj/user/spawnfaultio.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultio.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/fputest.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/lottery.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/singlestep.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnfaultio.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultio.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/fputest.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/lottery.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/singlestep.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnfaultio.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultio.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/fputest.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/lottery.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/singlestep.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnfaultio.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnfaultio.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 00 12 00       	mov    $0x120000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 00 12 f0       	mov    $0xf0120000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 5c 00 00 00       	call   f010009a <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d 80 4e 22 f0 00 	cmpl   $0x0,0xf0224e80$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	75 3a                	jne    f010008b <_panic+0x4b>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	89 35 80 4e 22 f0    	mov    %esi,0xf0224e80$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	fa                   	cli    $/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	fc                   	cld    $/;"	l
f0100059	obj/kern/kernel.asm	/^f0100059:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	e8 99 63 00 00       	call   f01063fa <cpunum>$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	50                   	push   %eax$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	68 a0 6a 10 f0       	push   $0xf0106aa0$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	e8 ca 3d 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	53                   	push   %ebx$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	56                   	push   %esi$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	e8 9a 3d 00 00       	call   f0103e16 <vcprintf>$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	c7 04 24 5f 80 10 f0 	movl   $0xf010805f,(%esp)$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	e8 b4 3d 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	6a 00                	push   $0x0$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	e8 04 0f 00 00       	call   f0100f99 <monitor>$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	eb f1                	jmp    f010008b <_panic+0x4b>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a <i386_init>:$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	55                   	push   %ebp$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	89 e5                	mov    %esp,%ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	53                   	push   %ebx$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 98 05 00 00       	call   f010063e <cons_init>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	68 0c 6b 10 f0       	push   $0xf0106b0c$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	e8 84 3d 00 00       	call   f0103e3c <cprintf>$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	e8 8b 19 00 00       	call   f0101a48 <mem_init>$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	e8 d5 35 00 00       	call   f0103697 <env_init>$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	e8 99 3e 00 00       	call   f0103f60 <trap_init>$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	e8 24 60 00 00       	call   f01060f0 <mp_init>$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 44 63 00 00       	call   f0106415 <lapic_init>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 8d 3c 00 00       	call   f0103d63 <pic_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	e8 bc 46 00 00       	call   f0104797 <lottery_sched_init>$/;"	l
f01000db	obj/kern/kernel.asm	/^f01000db:	c7 04 24 60 24 12 f0 	movl   $0xf0122460,(%esp)$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	e8 81 65 00 00       	call   f0106668 <spin_lock>$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	83 3d 8c 4e 22 f0 07 	cmpl   $0x7,0xf0224e8c$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	77 16                	ja     f0100109 <i386_init+0x6f>$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	68 00 70 00 00       	push   $0x7000$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	6a 56                	push   $0x56$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	68 27 6b 10 f0       	push   $0xf0106b27$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	e8 37 ff ff ff       	call   f0100040 <_panic>$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	b8 56 60 10 f0       	mov    $0xf0106056,%eax$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	2d dc 5f 10 f0       	sub    $0xf0105fdc,%eax$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	50                   	push   %eax$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	68 dc 5f 10 f0       	push   $0xf0105fdc$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	e8 00 5d 00 00       	call   f0105e26 <memmove>$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	bb 20 50 22 f0       	mov    $0xf0225020,%ebx$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	eb 4d                	jmp    f010017d <i386_init+0xe3>$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	e8 c5 62 00 00       	call   f01063fa <cpunum>$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	74 39                	je     f010017a <i386_init+0xe0>$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	89 d8                	mov    %ebx,%eax$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	2d 20 50 22 f0       	sub    $0xf0225020,%eax$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	05 00 e0 22 f0       	add    $0xf022e000,%eax$/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	a3 84 4e 22 f0       	mov    %eax,0xf0224e84$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	50                   	push   %eax$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	e8 f4 63 00 00       	call   f0106563 <lapic_startap>$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	75 f8                	jne    f0100172 <i386_init+0xd8>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	6b 05 c4 53 22 f0 74 	imul   $0x74,0xf02253c4,%eax$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	39 c3                	cmp    %eax,%ebx$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	72 a3                	jb     f0100130 <i386_init+0x96>$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	6a 01                	push   $0x1$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	68 f0 2c 1e f0       	push   $0xf01e2cf0$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	e8 e5 36 00 00       	call   f0103881 <env_create>$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	6a 00                	push   $0x0$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	68 00 de 1d f0       	push   $0xf01dde00$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	e8 d6 36 00 00       	call   f0103881 <env_create>$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	e8 32 04 00 00       	call   f01005e2 <kbd_intr>$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	e8 cf 46 00 00       	call   f0104884 <sched_yield>$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5 <mp_main>:$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	55                   	push   %ebp$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	e8 31 13 00 00       	call   f01014f1 <enable_PS_percpu>$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	77 12                	ja     f01001de <mp_main+0x29>$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	50                   	push   %eax$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	6a 6f                	push   $0x6f$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	68 27 6b 10 f0       	push   $0xf0106b27$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	e8 62 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	e8 0f 62 00 00       	call   f01063fa <cpunum>$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	50                   	push   %eax$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	68 33 6b 10 f0       	push   $0xf0106b33$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	e8 43 3c 00 00       	call   f0103e3c <cprintf>$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	e8 17 62 00 00       	call   f0106415 <lapic_init>$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	e8 64 34 00 00       	call   f0103667 <env_init_percpu>$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	e8 48 3c 00 00       	call   f0103e50 <trap_init_percpu>$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	e8 ed 61 00 00       	call   f01063fa <cpunum>$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	81 c2 20 50 22 f0    	add    $0xf0225020,%edx$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	c7 04 24 60 24 12 f0 	movl   $0xf0122460,(%esp)$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	e8 3d 64 00 00       	call   f0106668 <spin_lock>$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	e8 54 46 00 00       	call   f0104884 <sched_yield>$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230 <_warn>:$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	55                   	push   %ebp$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	89 e5                	mov    %esp,%ebp$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	53                   	push   %ebx$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	68 49 6b 10 f0       	push   $0xf0106b49$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	e8 f2 3b 00 00       	call   f0103e3c <cprintf>$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010024d	obj/kern/kernel.asm	/^f010024d:	53                   	push   %ebx$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	e8 c0 3b 00 00       	call   f0103e16 <vcprintf>$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	c7 04 24 5f 80 10 f0 	movl   $0xf010805f,(%esp)$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	e8 da 3b 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100268	obj/kern/kernel.asm	/^f0100268:	c9                   	leave  $/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	c3                   	ret    $/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a <serial_proc_data>:$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	55                   	push   %ebp$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	89 e5                	mov    %esp,%ebp$/;"	l
f010026d	obj/kern/kernel.asm	/^f010026d:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	ec                   	in     (%dx),%al$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	a8 01                	test   $0x1,%al$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	74 0b                	je     f0100282 <serial_proc_data+0x18>$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010027c	obj/kern/kernel.asm	/^f010027c:	ec                   	in     (%dx),%al$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	eb 05                	jmp    f0100287 <serial_proc_data+0x1d>$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	5d                   	pop    %ebp$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	c3                   	ret    $/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289 <cons_intr>:$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	55                   	push   %ebp$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	89 e5                	mov    %esp,%ebp$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	53                   	push   %ebx$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	89 c3                	mov    %eax,%ebx$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	eb 2b                	jmp    f01002bf <cons_intr+0x36>$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	85 c0                	test   %eax,%eax$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	74 27                	je     f01002bf <cons_intr+0x36>$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	8b 0d 24 42 22 f0    	mov    0xf0224224,%ecx$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	89 15 24 42 22 f0    	mov    %edx,0xf0224224$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	88 81 20 40 22 f0    	mov    %al,-0xfddbfe0(%ecx)$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	75 0a                	jne    f01002bf <cons_intr+0x36>$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	c7 05 24 42 22 f0 00 	movl   $0x0,0xf0224224$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	00 00 00 $/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	ff d3                	call   *%ebx$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	75 ce                	jne    f0100294 <cons_intr+0xb>$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	83 c4 04             	add    $0x4,%esp$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	5b                   	pop    %ebx$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	5d                   	pop    %ebp$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	c3                   	ret    $/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc <kbd_proc_data>:$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	ec                   	in     (%dx),%al$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	a8 01                	test   $0x1,%al$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	0f 84 f8 00 00 00    	je     f01003d2 <kbd_proc_data+0x106>$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	a8 20                	test   $0x20,%al$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	0f 85 f6 00 00 00    	jne    f01003d8 <kbd_proc_data+0x10c>$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	ec                   	in     (%dx),%al$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	89 c2                	mov    %eax,%edx$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	3c e0                	cmp    $0xe0,%al$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	75 0d                	jne    f01002fb <kbd_proc_data+0x2f>$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	83 0d 04 40 22 f0 40 	orl    $0x40,0xf0224004$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	c3                   	ret    $/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	55                   	push   %ebp$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	53                   	push   %ebx$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	84 c0                	test   %al,%al$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	79 36                	jns    f010033c <kbd_proc_data+0x70>$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	8b 0d 04 40 22 f0    	mov    0xf0224004,%ecx$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	89 cb                	mov    %ecx,%ebx$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	83 e3 40             	and    $0x40,%ebx$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	85 db                	test   %ebx,%ebx$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	0f b6 82 c0 6c 10 f0 	movzbl -0xfef9340(%edx),%eax$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	f7 d0                	not    %eax$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	21 c8                	and    %ecx,%eax$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	a3 04 40 22 f0       	mov    %eax,0xf0224004$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	e9 a4 00 00 00       	jmp    f01003e0 <kbd_proc_data+0x114>$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	8b 0d 04 40 22 f0    	mov    0xf0224004,%ecx$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	74 0e                	je     f0100355 <kbd_proc_data+0x89>$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	89 c2                	mov    %eax,%edx$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	89 0d 04 40 22 f0    	mov    %ecx,0xf0224004$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	0f b6 82 c0 6c 10 f0 	movzbl -0xfef9340(%edx),%eax$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	0b 05 04 40 22 f0    	or     0xf0224004,%eax$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	0f b6 8a c0 6b 10 f0 	movzbl -0xfef9440(%edx),%ecx$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	31 c8                	xor    %ecx,%eax$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	a3 04 40 22 f0       	mov    %eax,0xf0224004$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	89 c1                	mov    %eax,%ecx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	8b 0c 8d a0 6b 10 f0 	mov    -0xfef9460(,%ecx,4),%ecx$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	a8 08                	test   $0x8,%al$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	74 1b                	je     f01003a5 <kbd_proc_data+0xd9>$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	89 da                	mov    %ebx,%edx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	77 05                	ja     f0100399 <kbd_proc_data+0xcd>$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	eb 0c                	jmp    f01003a5 <kbd_proc_data+0xd9>$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	83 ea 41             	sub    $0x41,%edx$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	f7 d0                	not    %eax$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	a8 06                	test   $0x6,%al$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	75 33                	jne    f01003de <kbd_proc_data+0x112>$/;"	l
f01003ab	obj/kern/kernel.asm	/^f01003ab:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	75 2b                	jne    f01003de <kbd_proc_data+0x112>$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	68 63 6b 10 f0       	push   $0xf0106b63$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	e8 7c 3a 00 00       	call   f0103e3c <cprintf>$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	ee                   	out    %al,(%dx)$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	89 d8                	mov    %ebx,%eax$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	eb 0e                	jmp    f01003e0 <kbd_proc_data+0x114>$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	c3                   	ret    $/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	c3                   	ret    $/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	89 d8                	mov    %ebx,%eax$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	c9                   	leave  $/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	c3                   	ret    $/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5 <cons_putc>:$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	55                   	push   %ebp$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	57                   	push   %edi$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	56                   	push   %esi$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	53                   	push   %ebx$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	89 c6                	mov    %eax,%esi$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	eb 09                	jmp    f010040a <cons_putc+0x25>$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	89 ca                	mov    %ecx,%edx$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	ec                   	in     (%dx),%al$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	ec                   	in     (%dx),%al$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	ec                   	in     (%dx),%al$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	ec                   	in     (%dx),%al$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	89 fa                	mov    %edi,%edx$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	ec                   	in     (%dx),%al$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	a8 20                	test   $0x20,%al$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	75 08                	jne    f0100419 <cons_putc+0x34>$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	7e e8                	jle    f0100401 <cons_putc+0x1c>$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	89 f0                	mov    %esi,%eax$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	ee                   	out    %al,(%dx)$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	eb 09                	jmp    f010043b <cons_putc+0x56>$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	89 ca                	mov    %ecx,%edx$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	ec                   	in     (%dx),%al$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	ec                   	in     (%dx),%al$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	ec                   	in     (%dx),%al$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	ec                   	in     (%dx),%al$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	89 fa                	mov    %edi,%edx$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	ec                   	in     (%dx),%al$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	7f 04                	jg     f010044a <cons_putc+0x65>$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	84 c0                	test   %al,%al$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	79 e8                	jns    f0100432 <cons_putc+0x4d>$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	89 f0                	mov    %esi,%eax$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	ee                   	out    %al,(%dx)$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	ee                   	out    %al,(%dx)$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	ee                   	out    %al,(%dx)$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	a1 00 23 12 f0       	mov    0xf0122300,%eax$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	0b 05 00 40 22 f0    	or     0xf0224000,%eax$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	09 f0                	or     %esi,%eax$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	89 c1                	mov    %eax,%ecx$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	74 76                	je     f01004f0 <cons_putc+0x10b>$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	7f 0a                	jg     f0100489 <cons_putc+0xa4>$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	74 14                	je     f0100498 <cons_putc+0xb3>$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	e9 9b 00 00 00       	jmp    f0100524 <cons_putc+0x13f>$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	74 3c                	je     f01004ca <cons_putc+0xe5>$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	74 3f                	je     f01004d2 <cons_putc+0xed>$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	e9 8c 00 00 00       	jmp    f0100524 <cons_putc+0x13f>$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	0f b7 05 28 42 22 f0 	movzwl 0xf0224228,%eax$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	66 85 c0             	test   %ax,%ax$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	0f 84 e8 00 00 00    	je     f0100590 <cons_putc+0x1ab>$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	66 a3 28 42 22 f0    	mov    %ax,0xf0224228$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	89 ce                	mov    %ecx,%esi$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	66 81 e6 00 ff       	and    $0xff00,%si$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	83 ce 20             	or     $0x20,%esi$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	8b 15 2c 42 22 f0    	mov    0xf022422c,%edx$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	eb 78                	jmp    f0100542 <cons_putc+0x15d>$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	66 83 05 28 42 22 f0 	addw   $0x50,0xf0224228$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	50 $/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	0f b7 05 28 42 22 f0 	movzwl 0xf0224228,%eax$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	66 a3 28 42 22 f0    	mov    %ax,0xf0224228$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	eb 52                	jmp    f0100542 <cons_putc+0x15d>$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	e8 eb fe ff ff       	call   f01003e5 <cons_putc>$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	e8 e1 fe ff ff       	call   f01003e5 <cons_putc>$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	e8 d7 fe ff ff       	call   f01003e5 <cons_putc>$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	e8 cd fe ff ff       	call   f01003e5 <cons_putc>$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	e8 c3 fe ff ff       	call   f01003e5 <cons_putc>$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	eb 1e                	jmp    f0100542 <cons_putc+0x15d>$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	0f b7 05 28 42 22 f0 	movzwl 0xf0224228,%eax$/;"	l
f010052b	obj/kern/kernel.asm	/^f010052b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	66 89 15 28 42 22 f0 	mov    %dx,0xf0224228$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	8b 15 2c 42 22 f0    	mov    0xf022422c,%edx$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	66 89 0c 42          	mov    %cx,(%edx,%eax,2)$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	66 81 3d 28 42 22 f0 	cmpw   $0x7cf,0xf0224228$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	cf 07 $/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	76 43                	jbe    f0100590 <cons_putc+0x1ab>$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	a1 2c 42 22 f0       	mov    0xf022422c,%eax$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	68 00 0f 00 00       	push   $0xf00$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	52                   	push   %edx$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	50                   	push   %eax$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	e8 bf 58 00 00       	call   f0105e26 <memmove>$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	8b 15 2c 42 22 f0    	mov    0xf022422c,%edx$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	83 c4 10             	add    $0x10,%esp$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	39 d0                	cmp    %edx,%eax$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	75 f4                	jne    f010057c <cons_putc+0x197>$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	66 83 2d 28 42 22 f0 	subw   $0x50,0xf0224228$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	50 $/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	8b 0d 30 42 22 f0    	mov    0xf0224230,%ecx$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	89 ca                	mov    %ecx,%edx$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	ee                   	out    %al,(%dx)$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	0f b7 1d 28 42 22 f0 	movzwl 0xf0224228,%ebx$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	89 d8                	mov    %ebx,%eax$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	89 f2                	mov    %esi,%edx$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	ee                   	out    %al,(%dx)$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	89 ca                	mov    %ecx,%edx$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	ee                   	out    %al,(%dx)$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	89 d8                	mov    %ebx,%eax$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	89 f2                	mov    %esi,%edx$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	ee                   	out    %al,(%dx)$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	5b                   	pop    %ebx$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	5e                   	pop    %esi$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	5f                   	pop    %edi$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	5d                   	pop    %ebp$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	c3                   	ret    $/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6 <serial_intr>:$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	80 3d 34 42 22 f0 00 	cmpb   $0x0,0xf0224234$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	74 11                	je     f01005e0 <serial_intr+0x1a>$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	55                   	push   %ebp$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	89 e5                	mov    %esp,%ebp$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	b8 6a 02 10 f0       	mov    $0xf010026a,%eax$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	e8 aa fc ff ff       	call   f0100289 <cons_intr>$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	c9                   	leave  $/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	f3 c3                	repz ret $/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2 <kbd_intr>:$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	55                   	push   %ebp$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	b8 cc 02 10 f0       	mov    $0xf01002cc,%eax$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	e8 97 fc ff ff       	call   f0100289 <cons_intr>$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	c9                   	leave  $/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	c3                   	ret    $/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4 <cons_getc>:$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	55                   	push   %ebp$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	e8 c7 ff ff ff       	call   f01005c6 <serial_intr>$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	e8 de ff ff ff       	call   f01005e2 <kbd_intr>$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	a1 20 42 22 f0       	mov    0xf0224220,%eax$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	3b 05 24 42 22 f0    	cmp    0xf0224224,%eax$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	74 26                	je     f0100637 <cons_getc+0x43>$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	89 15 20 42 22 f0    	mov    %edx,0xf0224220$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	0f b6 88 20 40 22 f0 	movzbl -0xfddbfe0(%eax),%ecx$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	89 c8                	mov    %ecx,%eax$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	75 11                	jne    f010063c <cons_getc+0x48>$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	c7 05 20 42 22 f0 00 	movl   $0x0,0xf0224220$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	00 00 00 $/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	eb 05                	jmp    f010063c <cons_getc+0x48>$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	c9                   	leave  $/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	c3                   	ret    $/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e <cons_init>:$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	55                   	push   %ebp$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	57                   	push   %edi$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	56                   	push   %esi$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	53                   	push   %ebx$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	5a a5 $/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	74 11                	je     f0100675 <cons_init+0x37>$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	c7 05 30 42 22 f0 b4 	movl   $0x3b4,0xf0224230$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	03 00 00 $/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	eb 16                	jmp    f010068b <cons_init+0x4d>$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	c7 05 30 42 22 f0 d4 	movl   $0x3d4,0xf0224230$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	03 00 00 $/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	8b 3d 30 42 22 f0    	mov    0xf0224230,%edi$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	89 fa                	mov    %edi,%edx$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	ee                   	out    %al,(%dx)$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	89 da                	mov    %ebx,%edx$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	ec                   	in     (%dx),%al$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	89 fa                	mov    %edi,%edx$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	ee                   	out    %al,(%dx)$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	89 da                	mov    %ebx,%edx$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	ec                   	in     (%dx),%al$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	89 35 2c 42 22 f0    	mov    %esi,0xf022422c$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	09 c8                	or     %ecx,%eax$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	66 a3 28 42 22 f0    	mov    %ax,0xf0224228$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	e8 1c ff ff ff       	call   f01005e2 <kbd_intr>$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	0f b7 05 a8 23 12 f0 	movzwl 0xf01223a8,%eax$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	50                   	push   %eax$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	e8 10 36 00 00       	call   f0103ceb <irq_setmask_8259A>$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	89 f2                	mov    %esi,%edx$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	ee                   	out    %al,(%dx)$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	ee                   	out    %al,(%dx)$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	89 da                	mov    %ebx,%edx$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	ee                   	out    %al,(%dx)$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	ee                   	out    %al,(%dx)$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	ee                   	out    %al,(%dx)$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	ee                   	out    %al,(%dx)$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	ee                   	out    %al,(%dx)$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	ec                   	in     (%dx),%al$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	89 c1                	mov    %eax,%ecx$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	3c ff                	cmp    $0xff,%al$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	0f 95 05 34 42 22 f0 	setne  0xf0224234$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	89 f2                	mov    %esi,%edx$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	ec                   	in     (%dx),%al$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	89 da                	mov    %ebx,%edx$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	ec                   	in     (%dx),%al$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	74 21                	je     f010076c <cons_init+0x12e>$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	0f b7 05 a8 23 12 f0 	movzwl 0xf01223a8,%eax$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	50                   	push   %eax$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	e8 8b 35 00 00       	call   f0103ceb <irq_setmask_8259A>$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	80 3d 34 42 22 f0 00 	cmpb   $0x0,0xf0224234$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	75 10                	jne    f010077c <cons_init+0x13e>$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	68 6f 6b 10 f0       	push   $0xf0106b6f$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	e8 c3 36 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	83 c4 10             	add    $0x10,%esp$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	5b                   	pop    %ebx$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	5e                   	pop    %esi$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	5f                   	pop    %edi$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	5d                   	pop    %ebp$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	c3                   	ret    $/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784 <cputchar>:$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	55                   	push   %ebp$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	89 e5                	mov    %esp,%ebp$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	e8 53 fc ff ff       	call   f01003e5 <cons_putc>$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	c9                   	leave  $/;"	l
f0100793	obj/kern/kernel.asm	/^f0100793:	c3                   	ret    $/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794 <getchar>:$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	55                   	push   %ebp$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	89 e5                	mov    %esp,%ebp$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	e8 55 fe ff ff       	call   f01005f4 <cons_getc>$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	85 c0                	test   %eax,%eax$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	74 f7                	je     f010079a <getchar+0x6>$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	c9                   	leave  $/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	c3                   	ret    $/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5 <iscons>:$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	55                   	push   %ebp$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	89 e5                	mov    %esp,%ebp$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	5d                   	pop    %ebp$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	c3                   	ret    $/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af <mon_help>:$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	55                   	push   %ebp$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	56                   	push   %esi$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	53                   	push   %ebx$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	bb 84 73 10 f0       	mov    $0xf0107384,%ebx$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	be e4 73 10 f0       	mov    $0xf01073e4,%esi$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	ff 33                	pushl  (%ebx)$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	ff 73 fc             	pushl  -0x4(%ebx)$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	68 c0 6d 10 f0       	push   $0xf0106dc0$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	e8 6c 36 00 00       	call   f0103e3c <cprintf>$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	39 f3                	cmp    %esi,%ebx$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	75 e4                	jne    f01007be <mon_help+0xf>$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	5b                   	pop    %ebx$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	5e                   	pop    %esi$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	5d                   	pop    %ebp$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	c3                   	ret    $/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6 <mon_kerninfo>:$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	55                   	push   %ebp$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	68 c9 6d 10 f0       	push   $0xf0106dc9$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	e8 46 36 00 00       	call   f0103e3c <cprintf>$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	68 a4 6f 10 f0       	push   $0xf0106fa4$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	e8 34 36 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	68 cc 6f 10 f0       	push   $0xf0106fcc$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	e8 1d 36 00 00       	call   f0103e3c <cprintf>$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	68 81 6a 10 00       	push   $0x106a81$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	68 81 6a 10 f0       	push   $0xf0106a81$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	68 f0 6f 10 f0       	push   $0xf0106ff0$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	e8 06 36 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	68 00 40 22 00       	push   $0x224000$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	68 00 40 22 f0       	push   $0xf0224000$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	68 14 70 10 f0       	push   $0xf0107014$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	e8 ef 35 00 00       	call   f0103e3c <cprintf>$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	68 08 60 26 00       	push   $0x266008$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	68 08 60 26 f0       	push   $0xf0266008$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	68 38 70 10 f0       	push   $0xf0107038$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	e8 d8 35 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	b8 07 64 26 f0       	mov    $0xf0266407,%eax$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	85 c0                	test   %eax,%eax$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	50                   	push   %eax$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	68 5c 70 10 f0       	push   $0xf010705c$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	e8 ad 35 00 00       	call   f0103e3c <cprintf>$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	c9                   	leave  $/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	c3                   	ret    $/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896 <mon_backtrace>:$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	55                   	push   %ebp$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	89 e5                	mov    %esp,%ebp$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	57                   	push   %edi$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	56                   	push   %esi$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	53                   	push   %ebx$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	83 ec 48             	sub    $0x48,%esp$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	89 ee                	mov    %ebp,%esi$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	68 e2 6d 10 f0       	push   $0xf0106de2$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	e8 91 35 00 00       	call   f0103e3c <cprintf>$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	eb 78                	jmp    f0100928 <mon_backtrace+0x92>$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	89 c7                	mov    %eax,%edi$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	8d 55 d0             	lea    -0x30(%ebp),%edx$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	52                   	push   %edx$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	50                   	push   %eax$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	e8 a5 49 00 00       	call   f010526a <debuginfo_eip>$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	57                   	push   %edi$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	56                   	push   %esi$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	68 f4 6d 10 f0       	push   $0xf0106df4$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	e8 68 35 00 00       	call   f0103e3c <cprintf>$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	ff 33                	pushl  (%ebx)$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	68 0b 6e 10 f0       	push   $0xf0106e0b$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	e8 50 35 00 00       	call   f0103e3c <cprintf>$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	39 fb                	cmp    %edi,%ebx$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	75 e7                	jne    f01008dd <mon_backtrace+0x47>$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	68 5f 80 10 f0       	push   $0xf010805f$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	e8 39 35 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	50                   	push   %eax$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	68 11 6e 10 f0       	push   $0xf0106e11$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	e8 19 35 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	8b 36                	mov    (%esi),%esi$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	85 f6                	test   %esi,%esi$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	75 84                	jne    f01008b0 <mon_backtrace+0x1a>$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	5b                   	pop    %ebx$/;"	l
f0100935	obj/kern/kernel.asm	/^f0100935:	5e                   	pop    %esi$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	5f                   	pop    %edi$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	5d                   	pop    %ebp$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	c3                   	ret    $/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939 <mon_showmappings>:$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	55                   	push   %ebp$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	89 e5                	mov    %esp,%ebp$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	57                   	push   %edi$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	56                   	push   %esi$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	53                   	push   %ebx$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	74 26                	je     f010096e <mon_showmappings+0x35>$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	68 22 6e 10 f0       	push   $0xf0106e22$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	e8 e7 34 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	c7 04 24 88 70 10 f0 	movl   $0xf0107088,(%esp)$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	e8 db 34 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	e9 8a 01 00 00       	jmp    f0100af8 <mon_showmappings+0x1bf>$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	6a 00                	push   $0x0$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	6a 00                	push   $0x0$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	e8 7d 55 00 00       	call   f0105efd <strtol>$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	89 c3                	mov    %eax,%ebx$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	6a 00                	push   $0x0$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	6a 00                	push   $0x0$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	e8 69 55 00 00       	call   f0105efd <strtol>$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	89 c7                	mov    %eax,%edi$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	6a 00                	push   $0x0$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	53                   	push   %ebx$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	e8 10 0d 00 00       	call   f01016b7 <pgdir_walk>$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	85 c0                	test   %eax,%eax$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	75 08                	jne    f01009b6 <mon_showmappings+0x7d>$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	eb 1a                	jmp    f01009d0 <mon_showmappings+0x97>$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	8b 00                	mov    (%eax),%eax$/;"	l
f01009b8	obj/kern/kernel.asm	/^f01009b8:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	89 da                	mov    %ebx,%edx$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	81 e2 00 00 c0 ff    	and    $0xffc00000,%edx$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	85 c0                	test   %eax,%eax$/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	0f 45 da             	cmovne %edx,%ebx$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	68 b0 70 10 f0       	push   $0xf01070b0$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	e8 5f 34 00 00       	call   f0103e3c <cprintf>$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	e9 f1 00 00 00       	jmp    f0100ad6 <mon_showmappings+0x19d>$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	6a 00                	push   $0x0$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	53                   	push   %ebx$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	e8 c1 0c 00 00       	call   f01016b7 <pgdir_walk>$/;"	l
f01009f6	obj/kern/kernel.asm	/^f01009f6:	89 c6                	mov    %eax,%esi$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	53                   	push   %ebx$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	68 3e 6e 10 f0       	push   $0xf0106e3e$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	e8 36 34 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	85 f6                	test   %esi,%esi$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	74 06                	je     f0100a13 <mon_showmappings+0xda>$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	8b 06                	mov    (%esi),%eax$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	a8 01                	test   $0x1,%al$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	75 29                	jne    f0100a3c <mon_showmappings+0x103>$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	68 46 6e 10 f0       	push   $0xf0106e46$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	e8 1c 34 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	8d 83 00 00 40 00    	lea    0x400000(%ebx),%eax$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	0f 83 b4 00 00 00    	jae    f0100ae5 <mon_showmappings+0x1ac>$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	e9 9a 00 00 00       	jmp    f0100ad6 <mon_showmappings+0x19d>$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	50                   	push   %eax$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	68 3e 6e 10 f0       	push   $0xf0106e3e$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	e8 ed 33 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	8b 06                	mov    (%esi),%eax$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	89 c2                	mov    %eax,%edx$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	83 e2 06             	and    $0x6,%edx$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	b9 2d 00 00 00       	mov    $0x2d,%ecx$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	89 c2                	mov    %eax,%edx$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	19 d2                	sbb    %edx,%edx$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	19 c0                	sbb    %eax,%eax$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	51                   	push   %ecx$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	52                   	push   %edx$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	50                   	push   %eax$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	68 55 6e 10 f0       	push   $0xf0106e55$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	e8 a8 33 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100a94	obj/kern/kernel.asm	/^f0100a94:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	f6 06 80             	testb  $0x80,(%esi)$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	74 1e                	je     f0100aba <mon_showmappings+0x181>$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	68 5e 6e 10 f0       	push   $0xf0106e5e$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	e8 93 33 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	8d 83 00 00 40 00    	lea    0x400000(%ebx),%eax$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	73 36                	jae    f0100aec <mon_showmappings+0x1b3>$/;"	l
f0100ab6	obj/kern/kernel.asm	/^f0100ab6:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	eb 1c                	jmp    f0100ad6 <mon_showmappings+0x19d>$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	68 65 6e 10 f0       	push   $0xf0106e65$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	e8 75 33 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	73 1f                	jae    f0100af3 <mon_showmappings+0x1ba>$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	0f 86 07 ff ff ff    	jbe    f01009e5 <mon_showmappings+0xac>$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	eb 13                	jmp    f0100af8 <mon_showmappings+0x1bf>$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	eb 0c                	jmp    f0100af8 <mon_showmappings+0x1bf>$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	eb 05                	jmp    f0100af8 <mon_showmappings+0x1bf>$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	5b                   	pop    %ebx$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	5e                   	pop    %esi$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	5f                   	pop    %edi$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	5d                   	pop    %ebp$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	c3                   	ret    $/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00 <mon_chperm>:$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	55                   	push   %ebp$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	57                   	push   %edi$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	56                   	push   %esi$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	53                   	push   %ebx$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	74 26                	je     f0100b35 <mon_chperm+0x35>$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	68 22 6e 10 f0       	push   $0xf0106e22$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	e8 20 33 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	c7 04 24 dc 70 10 f0 	movl   $0xf01070dc,(%esp)$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	e8 14 33 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	e9 40 02 00 00       	jmp    f0100d75 <mon_chperm+0x275>$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	80 38 2d             	cmpb   $0x2d,(%eax)$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	75 0e                	jne    f0100b4e <mon_chperm+0x4e>$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	0f b6 58 01          	movzbl 0x1(%eax),%ebx$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	80 fb 70             	cmp    $0x70,%bl$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	74 2c                	je     f0100b75 <mon_chperm+0x75>$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	80 fb 76             	cmp    $0x76,%bl$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	74 27                	je     f0100b75 <mon_chperm+0x75>$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	50                   	push   %eax$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	68 6c 6e 10 f0       	push   $0xf0106e6c$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	e8 e0 32 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	c7 04 24 dc 70 10 f0 	movl   $0xf01070dc,(%esp)$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	e8 d4 32 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	e9 00 02 00 00       	jmp    f0100d75 <mon_chperm+0x275>$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	0f b6 78 02          	movzbl 0x2(%eax),%edi$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	6a 00                	push   $0x0$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	6a 00                	push   $0x0$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	e8 72 53 00 00       	call   f0105efd <strtol>$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	89 c2                	mov    %eax,%edx$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	89 f9                	mov    %edi,%ecx$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	80 f9 70             	cmp    $0x70,%cl$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	89 c6                	mov    %eax,%esi$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	80 fb 70             	cmp    $0x70,%bl$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	75 25                	jne    f0100bca <mon_chperm+0xca>$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	89 f2                	mov    %esi,%edx$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	3b 15 8c 4e 22 f0    	cmp    0xf0224e8c,%edx$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	72 12                	jb     f0100bc4 <mon_chperm+0xc4>$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	56                   	push   %esi$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	6a 5a                	push   $0x5a$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	e8 7c f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	8d b6 00 00 00 f0    	lea    -0x10000000(%esi),%esi$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	6a 00                	push   $0x0$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	56                   	push   %esi$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	e8 dc 0a 00 00       	call   f01016b7 <pgdir_walk>$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	89 c7                	mov    %eax,%edi$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	8b 18                	mov    (%eax),%ebx$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	f6 c3 01             	test   $0x1,%bl$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	75 1a                	jne    f0100c01 <mon_chperm+0x101>$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	68 14 71 10 f0       	push   $0xf0107114$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	e8 48 32 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	e9 74 01 00 00       	jmp    f0100d75 <mon_chperm+0x275>$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	89 da                	mov    %ebx,%edx$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	81 e2 80 00 00 00    	and    $0x80,%edx$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	89 f0                	mov    %esi,%eax$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	85 d2                	test   %edx,%edx$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	0f 45 f0             	cmovne %eax,%esi$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	80 f9 07             	cmp    $0x7,%cl$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	77 36                	ja     f0100c5c <mon_chperm+0x15c>$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	6a 00                	push   $0x0$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	6a 00                	push   $0x0$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	52                   	push   %edx$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	e8 ca 52 00 00       	call   f0105efd <strtol>$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	89 da                	mov    %ebx,%edx$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	83 e2 f8             	and    $0xfffffff8,%edx$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	09 d0                	or     %edx,%eax$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	a8 01                	test   $0x1,%al$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	74 04                	je     f0100c45 <mon_chperm+0x145>$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	eb 65                	jmp    f0100caa <mon_chperm+0x1aa>$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	83 c8 01             	or     $0x1,%eax$/;"	l
f0100c48	obj/kern/kernel.asm	/^f0100c48:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	68 48 71 10 f0       	push   $0xf0107148$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	e8 e5 31 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	eb 4e                	jmp    f0100caa <mon_chperm+0x1aa>$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	3c 55                	cmp    $0x55,%al$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	75 09                	jne    f0100c69 <mon_chperm+0x169>$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	83 c8 04             	or     $0x4,%eax$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	eb 0b                	jmp    f0100c74 <mon_chperm+0x174>$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	75 07                	jne    f0100c74 <mon_chperm+0x174>$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	83 e0 fb             	and    $0xfffffffb,%eax$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	0f b6 40 01          	movzbl 0x1(%eax),%eax$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	3c 57                	cmp    $0x57,%al$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	75 05                	jne    f0100c87 <mon_chperm+0x187>$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	83 0f 02             	orl    $0x2,(%edi)$/;"	l
f0100c85	obj/kern/kernel.asm	/^f0100c85:	eb 07                	jmp    f0100c8e <mon_chperm+0x18e>$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	75 03                	jne    f0100c8e <mon_chperm+0x18e>$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	83 27 fd             	andl   $0xfffffffd,(%edi)$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	80 78 02 2d          	cmpb   $0x2d,0x2(%eax)$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	75 10                	jne    f0100caa <mon_chperm+0x1aa>$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	68 48 71 10 f0       	push   $0xf0107148$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	e8 95 31 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100ca7	obj/kern/kernel.asm	/^f0100ca7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	56                   	push   %esi$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	68 91 6e 10 f0       	push   $0xf0106e91$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	e8 84 31 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	8b 07                	mov    (%edi),%eax$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	50                   	push   %eax$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	68 a2 6e 10 f0       	push   $0xf0106ea2$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	e8 6f 31 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	c7 04 24 6c 71 10 f0 	movl   $0xf010716c,(%esp)$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	e8 63 31 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	89 d8                	mov    %ebx,%eax$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	83 e0 06             	and    $0x6,%eax$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100ce4	obj/kern/kernel.asm	/^f0100ce4:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	b9 57 00 00 00       	mov    $0x57,%ecx$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	0f 45 c8             	cmovne %eax,%ecx$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	89 d8                	mov    %ebx,%eax$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	83 e0 04             	and    $0x4,%eax$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	19 d2                	sbb    %edx,%edx$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	83 e3 02             	and    $0x2,%ebx$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	19 c0                	sbb    %eax,%eax$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	51                   	push   %ecx$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	52                   	push   %edx$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	50                   	push   %eax$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	68 b3 6e 10 f0       	push   $0xf0106eb3$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	e8 20 31 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	c7 04 24 90 71 10 f0 	movl   $0xf0107190,(%esp)$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	e8 14 31 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	8b 07                	mov    (%edi),%eax$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	89 c2                	mov    %eax,%edx$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	83 e2 06             	and    $0x6,%edx$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	b9 2d 00 00 00       	mov    $0x2d,%ecx$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	89 c2                	mov    %eax,%edx$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	19 d2                	sbb    %edx,%edx$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	19 c0                	sbb    %eax,%eax$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	51                   	push   %ecx$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	52                   	push   %edx$/;"	l
f0100d62	obj/kern/kernel.asm	/^f0100d62:	50                   	push   %eax$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	68 b3 6e 10 f0       	push   $0xf0106eb3$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	e8 cf 30 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	5b                   	pop    %ebx$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	5e                   	pop    %esi$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	5f                   	pop    %edi$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	5d                   	pop    %ebp$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	c3                   	ret    $/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d <mon_continue>:$/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d:	55                   	push   %ebp$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	85 c0                	test   %eax,%eax$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	74 1d                	je     f0100da7 <mon_continue+0x2a>$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	81 60 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%eax)$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	e8 64 56 00 00       	call   f01063fa <cpunum>$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	e8 41 2e 00 00       	call   f0103be8 <env_run>$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	68 bd 6e 10 f0       	push   $0xf0106ebd$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	e8 88 30 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	c9                   	leave  $/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	c3                   	ret    $/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb <mon_step>:$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	55                   	push   %ebp$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	85 c0                	test   %eax,%eax$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	74 1d                	je     f0100de5 <mon_step+0x2a>$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	81 48 38 00 01 00 00 	orl    $0x100,0x38(%eax)$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	e8 26 56 00 00       	call   f01063fa <cpunum>$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	e8 03 2e 00 00       	call   f0103be8 <env_run>$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	68 bd 6e 10 f0       	push   $0xf0106ebd$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	e8 4a 30 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	c9                   	leave  $/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	c3                   	ret    $/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9 <mon_dumpmem>:$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	55                   	push   %ebp$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	57                   	push   %edi$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	56                   	push   %esi$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	53                   	push   %ebx$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	74 26                	je     f0100e31 <mon_dumpmem+0x38>$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	68 22 6e 10 f0       	push   $0xf0106e22$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	e8 24 30 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	c7 04 24 b0 71 10 f0 	movl   $0xf01071b0,(%esp)$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	e8 18 30 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	e9 60 01 00 00       	jmp    f0100f91 <mon_dumpmem+0x198>$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	80 38 2d             	cmpb   $0x2d,(%eax)$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	75 0e                	jne    f0100e47 <mon_dumpmem+0x4e>$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	0f b6 50 01          	movzbl 0x1(%eax),%edx$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	80 fa 70             	cmp    $0x70,%dl$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	74 2c                	je     f0100e6e <mon_dumpmem+0x75>$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	80 fa 76             	cmp    $0x76,%dl$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	74 27                	je     f0100e6e <mon_dumpmem+0x75>$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	50                   	push   %eax$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	68 6c 6e 10 f0       	push   $0xf0106e6c$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	e8 e7 2f 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	c7 04 24 b0 71 10 f0 	movl   $0xf01071b0,(%esp)$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	e8 db 2f 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	e9 23 01 00 00       	jmp    f0100f91 <mon_dumpmem+0x198>$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	6a 00                	push   $0x0$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	6a 00                	push   $0x0$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	e8 80 50 00 00       	call   f0105efd <strtol>$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	89 c3                	mov    %eax,%ebx$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	6a 00                	push   $0x0$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	6a 00                	push   $0x0$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	ff 77 0c             	pushl  0xc(%edi)$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	e8 6f 50 00 00       	call   f0105efd <strtol>$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	89 c6                	mov    %eax,%esi$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	80 78 01 70          	cmpb   $0x70,0x1(%eax)$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	0f 85 93 00 00 00    	jne    f0100f33 <mon_dumpmem+0x13a>$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	74 73                	je     f0100f18 <mon_dumpmem+0x11f>$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	53                   	push   %ebx$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	68 da 6e 10 f0       	push   $0xf0106eda$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	e8 89 2f 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	eb 60                	jmp    f0100f18 <mon_dumpmem+0x11f>$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	75 11                	jne    f0100ece <mon_dumpmem+0xd5>$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	53                   	push   %ebx$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	68 d9 6e 10 f0       	push   $0xf0106ed9$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	e8 71 2f 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	89 da                	mov    %ebx,%edx$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	89 d8                	mov    %ebx,%eax$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	89 c1                	mov    %eax,%ecx$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	3b 0d 8c 4e 22 f0    	cmp    0xf0224e8c,%ecx$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	72 12                	jb     f0100efc <mon_dumpmem+0x103>$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	50                   	push   %eax$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	6a 5a                	push   $0x5a$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	e8 44 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	0f b6 84 02 00 00 00 	movzbl -0x10000000(%edx,%eax,1),%eax$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	f0 $/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	50                   	push   %eax$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	e8 2a 2f 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	72 9c                	jb     f0100eb8 <mon_dumpmem+0xbf>$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	68 5f 80 10 f0       	push   $0xf010805f$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	e8 13 2f 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	eb 5e                	jmp    f0100f91 <mon_dumpmem+0x198>$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	74 40                	je     f0100f78 <mon_dumpmem+0x17f>$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	53                   	push   %ebx$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	68 da 6e 10 f0       	push   $0xf0106eda$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	e8 f6 2e 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	eb 2d                	jmp    f0100f78 <mon_dumpmem+0x17f>$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	75 11                	jne    f0100f61 <mon_dumpmem+0x168>$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	53                   	push   %ebx$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	68 d9 6e 10 f0       	push   $0xf0106ed9$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	e8 de 2e 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	50                   	push   %eax$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	e8 ca 2e 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	72 cf                	jb     f0100f4b <mon_dumpmem+0x152>$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	68 5f 80 10 f0       	push   $0xf010805f$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	e8 b3 2e 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	5b                   	pop    %ebx$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	5e                   	pop    %esi$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	5f                   	pop    %edi$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	5d                   	pop    %ebp$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	c3                   	ret    $/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99 <monitor>:$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	55                   	push   %ebp$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	57                   	push   %edi$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	56                   	push   %esi$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	53                   	push   %ebx$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	83 ec 58             	sub    $0x58,%esp$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	68 dc 71 10 f0       	push   $0xf01071dc$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	e8 90 2e 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	c7 04 24 00 72 10 f0 	movl   $0xf0107200,(%esp)$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	e8 84 2e 00 00       	call   f0103e3c <cprintf>$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	74 0e                	je     f0100fcf <monitor+0x36>$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	e8 ec 30 00 00       	call   f01040b8 <print_trapframe>$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	68 e9 6e 10 f0       	push   $0xf0106ee9$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	e8 8e 4b 00 00       	call   f0105b6a <readline>$/;"	l
f0100fdc	obj/kern/kernel.asm	/^f0100fdc:	89 c3                	mov    %eax,%ebx$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	85 c0                	test   %eax,%eax$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	74 ea                	je     f0100fcf <monitor+0x36>$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	eb 0a                	jmp    f0100ffd <monitor+0x64>$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	89 f7                	mov    %esi,%edi$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	89 fe                	mov    %edi,%esi$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	84 c0                	test   %al,%al$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	74 63                	je     f0101067 <monitor+0xce>$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	0f be c0             	movsbl %al,%eax$/;"	l
f010100a	obj/kern/kernel.asm	/^f010100a:	50                   	push   %eax$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	68 ed 6e 10 f0       	push   $0xf0106eed$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	e8 87 4d 00 00       	call   f0105d9c <strchr>$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	85 c0                	test   %eax,%eax$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	75 d7                	jne    f0100ff3 <monitor+0x5a>$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	74 46                	je     f0101067 <monitor+0xce>$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	75 14                	jne    f010103a <monitor+0xa1>$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	6a 10                	push   $0x10$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	68 f2 6e 10 f0       	push   $0xf0106ef2$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	e8 07 2e 00 00       	call   f0103e3c <cprintf>$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	eb 95                	jmp    f0100fcf <monitor+0x36>$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	eb 03                	jmp    f0101046 <monitor+0xad>$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	84 c0                	test   %al,%al$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	74 ae                	je     f0100ffb <monitor+0x62>$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	0f be c0             	movsbl %al,%eax$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	50                   	push   %eax$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	68 ed 6e 10 f0       	push   $0xf0106eed$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	e8 3e 4d 00 00       	call   f0105d9c <strchr>$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	85 c0                	test   %eax,%eax$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	74 de                	je     f0101043 <monitor+0xaa>$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	eb 94                	jmp    f0100ffb <monitor+0x62>$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	00 $/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	85 f6                	test   %esi,%esi$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	0f 84 58 ff ff ff    	je     f0100fcf <monitor+0x36>$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	ff 34 85 80 73 10 f0 	pushl  -0xfef8c80(,%eax,4)$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010108c	obj/kern/kernel.asm	/^f010108c:	e8 ad 4c 00 00       	call   f0105d3e <strcmp>$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	85 c0                	test   %eax,%eax$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	75 21                	jne    f01010b9 <monitor+0x120>$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	52                   	push   %edx$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	56                   	push   %esi$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	ff 14 85 88 73 10 f0 	call   *-0xfef8c78(,%eax,4)$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	85 c0                	test   %eax,%eax$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	78 25                	js     f01010d9 <monitor+0x140>$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	e9 16 ff ff ff       	jmp    f0100fcf <monitor+0x36>$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	83 fb 08             	cmp    $0x8,%ebx$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	75 bb                	jne    f010107c <monitor+0xe3>$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	68 0f 6f 10 f0       	push   $0xf0106f0f$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	e8 6b 2d 00 00       	call   f0103e3c <cprintf>$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	e9 f6 fe ff ff       	jmp    f0100fcf <monitor+0x36>$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	5b                   	pop    %ebx$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	5e                   	pop    %esi$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	5f                   	pop    %edi$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	5d                   	pop    %ebp$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	c3                   	ret    $/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1 <boot_alloc>:$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	55                   	push   %ebp$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	89 c2                	mov    %eax,%edx$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	83 3d 38 42 22 f0 00 	cmpl   $0x0,0xf0224238$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	75 0f                	jne    f01010fe <boot_alloc+0x1d>$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	b8 07 70 26 f0       	mov    $0xf0267007,%eax$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	a3 38 42 22 f0       	mov    %eax,0xf0224238$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	a1 38 42 22 f0       	mov    0xf0224238,%eax$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	01 c2                	add    %eax,%edx$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	89 15 38 42 22 f0    	mov    %edx,0xf0224238$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	5d                   	pop    %ebp$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	c3                   	ret    $/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119 <nvram_read>:$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	55                   	push   %ebp$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	89 e5                	mov    %esp,%ebp$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	56                   	push   %esi$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	53                   	push   %ebx$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	89 c3                	mov    %eax,%ebx$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	50                   	push   %eax$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	e8 94 2b 00 00       	call   f0103cbd <mc146818_read>$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	89 c6                	mov    %eax,%esi$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	e8 87 2b 00 00       	call   f0103cbd <mc146818_read>$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	09 f0                	or     %esi,%eax$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	5b                   	pop    %ebx$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	5e                   	pop    %esi$/;"	l
f0101140	obj/kern/kernel.asm	/^f0101140:	5d                   	pop    %ebp$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	c3                   	ret    $/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142 <page2kva>:$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	89 c2                	mov    %eax,%edx$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	39 15 8c 4e 22 f0    	cmp    %edx,0xf0224e8c$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	77 18                	ja     f0101173 <page2kva+0x31>$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	55                   	push   %ebp$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	89 e5                	mov    %esp,%ebp$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	50                   	push   %eax$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	6a 5a                	push   $0x5a$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	e8 cd ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	c3                   	ret    $/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179 <check_va2pa>:$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	89 d1                	mov    %edx,%ecx$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0101181	obj/kern/kernel.asm	/^f0101181:	a8 01                	test   $0x1,%al$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	74 64                	je     f01011e9 <check_va2pa+0x70>$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	a8 80                	test   $0x80,%al$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	74 0e                	je     f0101197 <check_va2pa+0x1e>$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	81 e2 00 f0 3f 00    	and    $0x3ff000,%edx$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	09 d0                	or     %edx,%eax$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	c3                   	ret    $/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	89 c1                	mov    %eax,%ecx$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	3b 0d 8c 4e 22 f0    	cmp    0xf0224e8c,%ecx$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	72 1b                	jb     f01011c4 <check_va2pa+0x4b>$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	55                   	push   %ebp$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	50                   	push   %eax$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	68 b9 03 00 00       	push   $0x3b9$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	e8 7c ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	89 c2                	mov    %eax,%edx$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	83 e2 01             	and    $0x1,%edx$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	85 d2                	test   %edx,%edx$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	c3                   	ret    $/;"	l
f01011e9	obj/kern/kernel.asm	/^f01011e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	c3                   	ret    $/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef <check_page_free_list>:$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	55                   	push   %ebp$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	89 e5                	mov    %esp,%ebp$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	57                   	push   %edi$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	56                   	push   %esi$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	53                   	push   %ebx$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	84 c0                	test   %al,%al$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	0f 85 a0 02 00 00    	jne    f01014a0 <check_page_free_list+0x2b1>$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	e9 ad 02 00 00       	jmp    f01014b2 <check_page_free_list+0x2c3>$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	68 e0 73 10 f0       	push   $0xf01073e0$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	68 e8 02 00 00       	push   $0x2e8$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	e8 24 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	89 c2                	mov    %eax,%edx$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	2b 15 94 4e 22 f0    	sub    0xf0224e94,%edx$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	0f 95 c2             	setne  %dl$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	89 01                	mov    %eax,(%ecx)$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	8b 00                	mov    (%eax),%eax$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	85 c0                	test   %eax,%eax$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	75 dc                	jne    f0101228 <check_page_free_list+0x39>$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	89 10                	mov    %edx,(%eax)$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	a3 40 42 22 f0       	mov    %eax,0xf0224240$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	8b 1d 40 42 22 f0    	mov    0xf0224240,%ebx$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	eb 53                	jmp    f01012c5 <check_page_free_list+0xd6>$/;"	l
f0101272	obj/kern/kernel.asm	/^f0101272:	89 d8                	mov    %ebx,%eax$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	89 c2                	mov    %eax,%edx$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	39 f2                	cmp    %esi,%edx$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	73 3a                	jae    f01012c3 <check_page_free_list+0xd4>$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	89 c2                	mov    %eax,%edx$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	3b 15 8c 4e 22 f0    	cmp    0xf0224e8c,%edx$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	72 12                	jb     f01012a8 <check_page_free_list+0xb9>$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	50                   	push   %eax$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	6a 5a                	push   $0x5a$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	e8 98 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	68 80 00 00 00       	push   $0x80$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	68 97 00 00 00       	push   $0x97$/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	50                   	push   %eax$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	e8 19 4b 00 00       	call   f0105dd9 <memset>$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	85 db                	test   %ebx,%ebx$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	75 a9                	jne    f0101272 <check_page_free_list+0x83>$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	e8 0e fe ff ff       	call   f01010e1 <boot_alloc>$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	8b 15 40 42 22 f0    	mov    0xf0224240,%edx$/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	8b 0d 94 4e 22 f0    	mov    0xf0224e94,%ecx$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	e9 52 01 00 00       	jmp    f010144f <check_page_free_list+0x260>$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	39 ca                	cmp    %ecx,%edx$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	73 19                	jae    f010131a <check_page_free_list+0x12b>$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	68 99 7d 10 f0       	push   $0xf0107d99$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	68 02 03 00 00       	push   $0x302$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	e8 26 ed ff ff       	call   f0100040 <_panic>$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	72 19                	jb     f0101338 <check_page_free_list+0x149>$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	68 ba 7d 10 f0       	push   $0xf0107dba$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	68 03 03 00 00       	push   $0x303$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	e8 08 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	89 d0                	mov    %edx,%eax$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	a8 07                	test   $0x7,%al$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	74 19                	je     f010135a <check_page_free_list+0x16b>$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	68 04 74 10 f0       	push   $0xf0107404$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	68 04 03 00 00       	push   $0x304$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	e8 e6 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	85 c0                	test   %eax,%eax$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	75 19                	jne    f010137d <check_page_free_list+0x18e>$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	68 ce 7d 10 f0       	push   $0xf0107dce$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	68 07 03 00 00       	push   $0x307$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	e8 c3 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	75 19                	jne    f010139d <check_page_free_list+0x1ae>$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	68 df 7d 10 f0       	push   $0xf0107ddf$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	68 08 03 00 00       	push   $0x308$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	e8 a3 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	75 19                	jne    f01013bd <check_page_free_list+0x1ce>$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	68 38 74 10 f0       	push   $0xf0107438$/;"	l
f01013a9	obj/kern/kernel.asm	/^f01013a9:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	68 09 03 00 00       	push   $0x309$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	e8 83 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	75 19                	jne    f01013dd <check_page_free_list+0x1ee>$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	68 f8 7d 10 f0       	push   $0xf0107df8$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	68 0a 03 00 00       	push   $0x30a$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	e8 63 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	0f 86 f1 00 00 00    	jbe    f01014d9 <check_page_free_list+0x2ea>$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	89 c7                	mov    %eax,%edi$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	77 12                	ja     f0101404 <check_page_free_list+0x215>$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	50                   	push   %eax$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f01013f8	obj/kern/kernel.asm	/^f01013f8:	6a 5a                	push   $0x5a$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	e8 3c ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	0f 86 b6 00 00 00    	jbe    f01014c9 <check_page_free_list+0x2da>$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	68 5c 74 10 f0       	push   $0xf010745c$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	68 0b 03 00 00       	push   $0x30b$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	e8 14 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	68 12 7e 10 f0       	push   $0xf0107e12$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	68 0d 03 00 00       	push   $0x30d$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	e8 fb eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	eb 03                	jmp    f010144d <check_page_free_list+0x25e>$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	8b 12                	mov    (%edx),%edx$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	85 d2                	test   %edx,%edx$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	0f 85 a6 fe ff ff    	jne    f01012fd <check_page_free_list+0x10e>$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	85 f6                	test   %esi,%esi$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	7f 19                	jg     f0101474 <check_page_free_list+0x285>$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	68 2f 7e 10 f0       	push   $0xf0107e2f$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	68 15 03 00 00       	push   $0x315$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	e8 cc eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	85 db                	test   %ebx,%ebx$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	7f 19                	jg     f0101491 <check_page_free_list+0x2a2>$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	68 41 7e 10 f0       	push   $0xf0107e41$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	68 16 03 00 00       	push   $0x316$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	e8 af eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	68 a4 74 10 f0       	push   $0xf01074a4$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	e8 9e 29 00 00       	call   f0103e3c <cprintf>$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	eb 49                	jmp    f01014e9 <check_page_free_list+0x2fa>$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	a1 40 42 22 f0       	mov    0xf0224240,%eax$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	85 c0                	test   %eax,%eax$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	0f 85 6f fd ff ff    	jne    f010121c <check_page_free_list+0x2d>$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	e9 53 fd ff ff       	jmp    f0101205 <check_page_free_list+0x16>$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	83 3d 40 42 22 f0 00 	cmpl   $0x0,0xf0224240$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	0f 84 46 fd ff ff    	je     f0101205 <check_page_free_list+0x16>$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	e9 a1 fd ff ff       	jmp    f010126a <check_page_free_list+0x7b>$/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	0f 85 76 ff ff ff    	jne    f010144a <check_page_free_list+0x25b>$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	e9 53 ff ff ff       	jmp    f010142c <check_page_free_list+0x23d>$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	0f 85 61 ff ff ff    	jne    f0101445 <check_page_free_list+0x256>$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	e9 43 ff ff ff       	jmp    f010142c <check_page_free_list+0x23d>$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	5b                   	pop    %ebx$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	5e                   	pop    %esi$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	5f                   	pop    %edi$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	5d                   	pop    %ebp$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	c3                   	ret    $/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1 <enable_PS_percpu>:$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	55                   	push   %ebp$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	89 e5                	mov    %esp,%ebp$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	80 3d 88 4e 22 f0 00 	cmpb   $0x0,0xf0224e88$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	74 0f                	je     f010150c <enable_PS_percpu+0x1b>$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	83 c8 10             	or     $0x10,%eax$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	0f 20 d8             	mov    %cr3,%eax$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	5d                   	pop    %ebp$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	c3                   	ret    $/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e <page_init>:$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	55                   	push   %ebp$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	57                   	push   %edi$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	56                   	push   %esi$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	53                   	push   %ebx$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	e8 c0 fb ff ff       	call   f01010e1 <boot_alloc>$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	77 15                	ja     f010153d <page_init+0x2f>$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	50                   	push   %eax$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	68 64 01 00 00       	push   $0x164$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	e8 03 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	c7 05 40 42 22 f0 00 	movl   $0x0,0xf0224240$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	00 00 00 $/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	8b 3d 44 42 22 f0    	mov    0xf0224244,%edi$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	eb 47                	jmp    f01015ac <page_init+0x9e>$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	8d 1c d5 00 00 00 00 	lea    0x0(,%edx,8),%ebx$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	89 d9                	mov    %ebx,%ecx$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	03 0d 94 4e 22 f0    	add    0xf0224e94,%ecx$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	85 d2                	test   %edx,%edx$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	74 25                	je     f01015a3 <page_init+0x95>$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	74 04                	je     f0101587 <page_init+0x79>$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	39 fa                	cmp    %edi,%edx$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	72 0c                	jb     f0101593 <page_init+0x85>$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	81 fa ff 00 00 00    	cmp    $0xff,%edx$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	76 14                	jbe    f01015a3 <page_init+0x95>$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	39 c2                	cmp    %eax,%edx$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	72 10                	jb     f01015a3 <page_init+0x95>$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	89 31                	mov    %esi,(%ecx)$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	89 de                	mov    %ebx,%esi$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	03 35 94 4e 22 f0    	add    0xf0224e94,%esi$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	c6 45 e7 01          	movb   $0x1,-0x19(%ebp)$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	eb 06                	jmp    f01015a9 <page_init+0x9b>$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	83 c2 01             	add    $0x1,%edx$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	3b 15 8c 4e 22 f0    	cmp    0xf0224e8c,%edx$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	72 b1                	jb     f0101565 <page_init+0x57>$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	74 06                	je     f01015c0 <page_init+0xb2>$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	89 35 40 42 22 f0    	mov    %esi,0xf0224240$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	5b                   	pop    %ebx$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	5e                   	pop    %esi$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	5f                   	pop    %edi$/;"	l
f01015c6	obj/kern/kernel.asm	/^f01015c6:	5d                   	pop    %ebp$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	c3                   	ret    $/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8 <page_alloc>:$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	55                   	push   %ebp$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	53                   	push   %ebx$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	8b 1d 40 42 22 f0    	mov    0xf0224240,%ebx$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	85 db                	test   %ebx,%ebx$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	74 58                	je     f0101631 <page_alloc+0x69>$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	8b 03                	mov    (%ebx),%eax$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	a3 40 42 22 f0       	mov    %eax,0xf0224240$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	74 45                	je     f0101631 <page_alloc+0x69>$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	89 d8                	mov    %ebx,%eax$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	89 c2                	mov    %eax,%edx$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	3b 15 8c 4e 22 f0    	cmp    0xf0224e8c,%edx$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	72 12                	jb     f0101619 <page_alloc+0x51>$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	50                   	push   %eax$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	6a 5a                	push   $0x5a$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	e8 27 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	6a 00                	push   $0x0$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	50                   	push   %eax$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	e8 ab 47 00 00       	call   f0105dd9 <memset>$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	89 d8                	mov    %ebx,%eax$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	c9                   	leave  $/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	c3                   	ret    $/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638 <page_free>:$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	55                   	push   %ebp$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	89 e5                	mov    %esp,%ebp$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	74 1a                	je     f0101662 <page_free+0x2a>$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	e8 f5 fa ff ff       	call   f0101142 <page2kva>$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	50                   	push   %eax$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	68 c8 74 10 f0       	push   $0xf01074c8$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	68 9a 01 00 00       	push   $0x19a$/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	e8 de e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	74 1a                	je     f0101681 <page_free+0x49>$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	e8 d6 fa ff ff       	call   f0101142 <page2kva>$/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	50                   	push   %eax$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	68 fc 74 10 f0       	push   $0xf01074fc$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	68 9d 01 00 00       	push   $0x19d$/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	e8 bf e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	8b 15 40 42 22 f0    	mov    0xf0224240,%edx$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	89 10                	mov    %edx,(%eax)$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	a3 40 42 22 f0       	mov    %eax,0xf0224240$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	c9                   	leave  $/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	c3                   	ret    $/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690 <page_decref>:$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	55                   	push   %ebp$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	89 e5                	mov    %esp,%ebp$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	66 85 c0             	test   %ax,%ax$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	75 0c                	jne    f01016b5 <page_decref+0x25>$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	52                   	push   %edx$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	e8 86 ff ff ff       	call   f0101638 <page_free>$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	c9                   	leave  $/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	c3                   	ret    $/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7 <pgdir_walk>:$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	55                   	push   %ebp$/;"	l
f01016b8	obj/kern/kernel.asm	/^f01016b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	56                   	push   %esi$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	53                   	push   %ebx$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	89 f3                	mov    %esi,%ebx$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	8b 03                	mov    (%ebx),%eax$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	a8 01                	test   $0x1,%al$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	74 41                	je     f0101711 <pgdir_walk+0x5a>$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	a8 80                	test   $0x80,%al$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	0f 85 b4 00 00 00    	jne    f010178c <pgdir_walk+0xd5>$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	89 c2                	mov    %eax,%edx$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	39 15 8c 4e 22 f0    	cmp    %edx,0xf0224e8c$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	77 15                	ja     f01016ff <pgdir_walk+0x48>$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	50                   	push   %eax$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	68 cb 01 00 00       	push   $0x1cb$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	e8 41 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	8d 9c 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%ebx$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	eb 7b                	jmp    f010178c <pgdir_walk+0xd5>$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	74 69                	je     f0101780 <pgdir_walk+0xc9>$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	6a 01                	push   $0x1$/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	e8 a7 fe ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	85 c0                	test   %eax,%eax$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	74 5f                	je     f0101787 <pgdir_walk+0xd0>$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	89 c2                	mov    %eax,%edx$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	2b 15 94 4e 22 f0    	sub    0xf0224e94,%edx$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	83 ca 07             	or     $0x7,%edx$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	89 c2                	mov    %eax,%edx$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	3b 15 8c 4e 22 f0    	cmp    0xf0224e8c,%edx$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	72 15                	jb     f010176e <pgdir_walk+0xb7>$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	50                   	push   %eax$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	68 d6 01 00 00       	push   $0x1d6$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	e8 d2 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	8d 9c 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%ebx$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	eb 0c                	jmp    f010178c <pgdir_walk+0xd5>$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	eb 05                	jmp    f010178c <pgdir_walk+0xd5>$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	89 d8                	mov    %ebx,%eax$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	5b                   	pop    %ebx$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	5e                   	pop    %esi$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	5d                   	pop    %ebp$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	c3                   	ret    $/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795 <boot_map_region>:$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	55                   	push   %ebp$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	89 e5                	mov    %esp,%ebp$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	57                   	push   %edi$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	56                   	push   %esi$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	53                   	push   %ebx$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010179e	obj/kern/kernel.asm	/^f010179e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	89 cf                	mov    %ecx,%edi$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	80 3d 88 4e 22 f0 00 	cmpb   $0x0,0xf0224e88$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	0f 84 ad 00 00 00    	je     f0101860 <boot_map_region+0xcb>$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	89 d0                	mov    %edx,%eax$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	31 c8                	xor    %ecx,%eax$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	a9 ff ff 3f 00       	test   $0x3fffff,%eax$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	74 29                	je     f01017e7 <boot_map_region+0x52>$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	e9 9d 00 00 00       	jmp    f0101860 <boot_map_region+0xcb>$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	6a 01                	push   $0x1$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	53                   	push   %ebx$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	e8 e6 fe ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f01017d1	obj/kern/kernel.asm	/^f01017d1:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	89 30                	mov    %esi,(%eax)$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	eb 10                	jmp    f01017f7 <boot_map_region+0x62>$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	89 d3                	mov    %edx,%ebx$/;"	l
f01017e9	obj/kern/kernel.asm	/^f01017e9:	29 d1                	sub    %edx,%ecx$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	83 c8 01             	or     $0x1,%eax$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01017f7	obj/kern/kernel.asm	/^f01017f7:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	89 c8                	mov    %ecx,%eax$/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	8d 34 0b             	lea    (%ebx,%ecx,1),%esi$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	85 ff                	test   %edi,%edi$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	0f 84 97 00 00 00    	je     f010189e <boot_map_region+0x109>$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	f7 c3 ff ff 3f 00    	test   $0x3fffff,%ebx$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	75 b4                	jne    f01017c3 <boot_map_region+0x2e>$/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	89 fa                	mov    %edi,%edx$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0101814	obj/kern/kernel.asm	/^f0101814:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	01 da                	add    %ebx,%edx$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	80 c9 81             	or     $0x81,%cl$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	89 c6                	mov    %eax,%esi$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	eb 11                	jmp    f0101846 <boot_map_region+0xb1>$/;"	l
f0101835	obj/kern/kernel.asm	/^f0101835:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	0b 45 e0             	or     -0x20(%ebp),%eax$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	89 04 8f             	mov    %eax,(%edi,%ecx,4)$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	81 c3 00 00 40 00    	add    $0x400000,%ebx$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	39 d3                	cmp    %edx,%ebx$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	75 e8                	jne    f0101835 <boot_map_region+0xa0>$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	29 c7                	sub    %eax,%edi$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	01 f1                	add    %esi,%ecx$/;"	l
f0101860	obj/kern/kernel.asm	/^f0101860:	89 d3                	mov    %edx,%ebx$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	29 d1                	sub    %edx,%ecx$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	83 c8 01             	or     $0x1,%eax$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	eb 22                	jmp    f0101894 <boot_map_region+0xff>$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	6a 01                	push   $0x1$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	53                   	push   %ebx$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	e8 37 fe ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	89 30                	mov    %esi,(%eax)$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	8d 34 18             	lea    (%eax,%ebx,1),%esi$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	85 ff                	test   %edi,%edi$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	75 d4                	jne    f0101872 <boot_map_region+0xdd>$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	5b                   	pop    %ebx$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	5e                   	pop    %esi$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	5f                   	pop    %edi$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	5d                   	pop    %ebp$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	c3                   	ret    $/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6 <page_lookup>:$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	55                   	push   %ebp$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	53                   	push   %ebx$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0:	6a 00                	push   $0x0$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	e8 fa fd ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	85 c0                	test   %eax,%eax$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	74 37                	je     f01018fb <page_lookup+0x55>$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	74 39                	je     f0101902 <page_lookup+0x5c>$/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	85 db                	test   %ebx,%ebx$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	74 02                	je     f01018cf <page_lookup+0x29>$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	89 03                	mov    %eax,(%ebx)$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	8b 00                	mov    (%eax),%eax$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	3b 05 8c 4e 22 f0    	cmp    0xf0224e8c,%eax$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	72 14                	jb     f01018f0 <page_lookup+0x4a>$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	68 30 75 10 f0       	push   $0xf0107530$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	6a 53                	push   $0x53$/;"	l
f01018e6	obj/kern/kernel.asm	/^f01018e6:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f01018eb	obj/kern/kernel.asm	/^f01018eb:	e8 50 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	8b 15 94 4e 22 f0    	mov    0xf0224e94,%edx$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	eb 0c                	jmp    f0101907 <page_lookup+0x61>$/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	eb 05                	jmp    f0101907 <page_lookup+0x61>$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	c9                   	leave  $/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	c3                   	ret    $/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c <tlb_invalidate>:$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	55                   	push   %ebp$/;"	l
f010190d	obj/kern/kernel.asm	/^f010190d:	89 e5                	mov    %esp,%ebp$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	e8 e3 4a 00 00       	call   f01063fa <cpunum>$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	74 16                	je     f0101939 <tlb_invalidate+0x2d>$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	e8 d2 4a 00 00       	call   f01063fa <cpunum>$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	75 06                	jne    f010193f <tlb_invalidate+0x33>$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	0f 01 38             	invlpg (%eax)$/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	c9                   	leave  $/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	c3                   	ret    $/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941 <page_remove>:$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	55                   	push   %ebp$/;"	l
f0101942	obj/kern/kernel.asm	/^f0101942:	89 e5                	mov    %esp,%ebp$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	56                   	push   %esi$/;"	l
f0101945	obj/kern/kernel.asm	/^f0101945:	53                   	push   %ebx$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010194c	obj/kern/kernel.asm	/^f010194c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	50                   	push   %eax$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	56                   	push   %esi$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	53                   	push   %ebx$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	e8 4c ff ff ff       	call   f01018a6 <page_lookup>$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	85 c0                	test   %eax,%eax$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	74 1f                	je     f0101980 <page_remove+0x3f>$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	50                   	push   %eax$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	e8 26 fd ff ff       	call   f0101690 <page_decref>$/;"	l
f010196a	obj/kern/kernel.asm	/^f010196a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010196d	obj/kern/kernel.asm	/^f010196d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	56                   	push   %esi$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	53                   	push   %ebx$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	e8 8f ff ff ff       	call   f010190c <tlb_invalidate>$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	5b                   	pop    %ebx$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	5e                   	pop    %esi$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	5d                   	pop    %ebp$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	c3                   	ret    $/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987 <page_insert>:$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	55                   	push   %ebp$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	89 e5                	mov    %esp,%ebp$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	57                   	push   %edi$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	56                   	push   %esi$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	53                   	push   %ebx$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	6a 01                	push   $0x1$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	57                   	push   %edi$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	e8 16 fd ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	85 c0                	test   %eax,%eax$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	74 33                	je     f01019db <page_insert+0x54>$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	89 c6                	mov    %eax,%esi$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	57                   	push   %edi$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	e8 86 ff ff ff       	call   f0101941 <page_remove>$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	2b 1d 94 4e 22 f0    	sub    0xf0224e94,%ebx$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	83 c8 01             	or     $0x1,%eax$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	09 c3                	or     %eax,%ebx$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	89 1e                	mov    %ebx,(%esi)$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	eb 05                	jmp    f01019e0 <page_insert+0x59>$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	5b                   	pop    %ebx$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	5e                   	pop    %esi$/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	5f                   	pop    %edi$/;"	l
f01019e6	obj/kern/kernel.asm	/^f01019e6:	5d                   	pop    %ebp$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	c3                   	ret    $/;"	l
f01019e8	obj/kern/kernel.asm	/^f01019e8 <mmio_map_region>:$/;"	l
f01019e8	obj/kern/kernel.asm	/^f01019e8:	55                   	push   %ebp$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01019eb	obj/kern/kernel.asm	/^f01019eb:	56                   	push   %esi$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	53                   	push   %ebx$/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	8b 35 04 23 12 f0    	mov    0xf0122304,%esi$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	76 17                	jbe    f0101a23 <mmio_map_region+0x3b>$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	68 50 75 10 f0       	push   $0xf0107550$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	68 91 02 00 00       	push   $0x291$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	e8 1d e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	6a 1a                	push   $0x1a$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	89 f2                	mov    %esi,%edx$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	e8 5c fd ff ff       	call   f0101795 <boot_map_region>$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	01 1d 04 23 12 f0    	add    %ebx,0xf0122304$/;"	l
f0101a3f	obj/kern/kernel.asm	/^f0101a3f:	89 f0                	mov    %esi,%eax$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	5b                   	pop    %ebx$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	5e                   	pop    %esi$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	5d                   	pop    %ebp$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	c3                   	ret    $/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48 <mem_init>:$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	55                   	push   %ebp$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	57                   	push   %edi$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	56                   	push   %esi$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	53                   	push   %ebx$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101a51	obj/kern/kernel.asm	/^f0101a51:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101a56	obj/kern/kernel.asm	/^f0101a56:	e8 be f6 ff ff       	call   f0101119 <nvram_read>$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	89 c3                	mov    %eax,%ebx$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	e8 b2 f6 ff ff       	call   f0101119 <nvram_read>$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	89 c6                	mov    %eax,%esi$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	e8 a6 f6 ff ff       	call   f0101119 <nvram_read>$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	85 c0                	test   %eax,%eax$/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	74 07                	je     f0101a81 <mem_init+0x39>$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	eb 0b                	jmp    f0101a8c <mem_init+0x44>$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f0101a87	obj/kern/kernel.asm	/^f0101a87:	85 f6                	test   %esi,%esi$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	89 c2                	mov    %eax,%edx$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	89 15 8c 4e 22 f0    	mov    %edx,0xf0224e8c$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	89 da                	mov    %ebx,%edx$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101a9c	obj/kern/kernel.asm	/^f0101a9c:	89 15 44 42 22 f0    	mov    %edx,0xf0224244$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	89 c2                	mov    %eax,%edx$/;"	l
f0101aa4	obj/kern/kernel.asm	/^f0101aa4:	29 da                	sub    %ebx,%edx$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	52                   	push   %edx$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	53                   	push   %ebx$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	50                   	push   %eax$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	68 74 75 10 f0       	push   $0xf0107574$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	e8 89 23 00 00       	call   f0103e3c <cprintf>$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	0f a2                	cpuid  $/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	c1 ea 03             	shr    $0x3,%edx$/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd:	83 e2 01             	and    $0x1,%edx$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	88 15 88 4e 22 f0    	mov    %dl,0xf0224e88$/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	e8 26 fa ff ff       	call   f01014f1 <enable_PS_percpu>$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	e8 0c f6 ff ff       	call   f01010e1 <boot_alloc>$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	a3 90 4e 22 f0       	mov    %eax,0xf0224e90$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	6a 00                	push   $0x0$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	50                   	push   %eax$/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	e8 ef 42 00 00       	call   f0105dd9 <memset>$/;"	l
f0101aea	obj/kern/kernel.asm	/^f0101aea:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	77 15                	ja     f0101b0e <mem_init+0xc6>$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	50                   	push   %eax$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	68 b3 00 00 00       	push   $0xb3$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	e8 32 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	e8 b7 f5 ff ff       	call   f01010e1 <boot_alloc>$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	a3 94 4e 22 f0       	mov    %eax,0xf0224e94$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	8b 0d 8c 4e 22 f0    	mov    0xf0224e8c,%ecx$/;"	l
f0101b38	obj/kern/kernel.asm	/^f0101b38:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	52                   	push   %edx$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	6a 00                	push   $0x0$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	50                   	push   %eax$/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	e8 91 42 00 00       	call   f0105dd9 <memset>$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	b8 00 40 0a 00       	mov    $0xa4000,%eax$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	e8 8f f5 ff ff       	call   f01010e1 <boot_alloc>$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	a3 48 42 22 f0       	mov    %eax,0xf0224248$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	e8 b2 f9 ff ff       	call   f010150e <page_init>$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	e8 89 f6 ff ff       	call   f01011ef <check_page_free_list>$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	83 3d 94 4e 22 f0 00 	cmpl   $0x0,0xf0224e94$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	75 17                	jne    f0101b89 <mem_init+0x141>$/;"	l
f0101b72	obj/kern/kernel.asm	/^f0101b72:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	68 52 7e 10 f0       	push   $0xf0107e52$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	68 29 03 00 00       	push   $0x329$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	e8 b7 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	a1 40 42 22 f0       	mov    0xf0224240,%eax$/;"	l
f0101b8e	obj/kern/kernel.asm	/^f0101b8e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	eb 05                	jmp    f0101b9a <mem_init+0x152>$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	8b 00                	mov    (%eax),%eax$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	85 c0                	test   %eax,%eax$/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	75 f7                	jne    f0101b95 <mem_init+0x14d>$/;"	l
f0101b9e	obj/kern/kernel.asm	/^f0101b9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	6a 00                	push   $0x0$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	e8 20 fa ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	89 c7                	mov    %eax,%edi$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	85 c0                	test   %eax,%eax$/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	75 19                	jne    f0101bca <mem_init+0x182>$/;"	l
f0101bb1	obj/kern/kernel.asm	/^f0101bb1:	68 6d 7e 10 f0       	push   $0xf0107e6d$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	68 31 03 00 00       	push   $0x331$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	e8 76 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	6a 00                	push   $0x0$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	e8 f4 f9 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	89 c6                	mov    %eax,%esi$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	85 c0                	test   %eax,%eax$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	75 19                	jne    f0101bf6 <mem_init+0x1ae>$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	68 83 7e 10 f0       	push   $0xf0107e83$/;"	l
f0101be2	obj/kern/kernel.asm	/^f0101be2:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101be7	obj/kern/kernel.asm	/^f0101be7:	68 32 03 00 00       	push   $0x332$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	e8 4a e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bf6	obj/kern/kernel.asm	/^f0101bf6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	6a 00                	push   $0x0$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	e8 c8 f9 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101c03	obj/kern/kernel.asm	/^f0101c03:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	85 c0                	test   %eax,%eax$/;"	l
f0101c08	obj/kern/kernel.asm	/^f0101c08:	75 19                	jne    f0101c23 <mem_init+0x1db>$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	68 99 7e 10 f0       	push   $0xf0107e99$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	68 33 03 00 00       	push   $0x333$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	e8 1d e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	39 f7                	cmp    %esi,%edi$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	75 19                	jne    f0101c40 <mem_init+0x1f8>$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	68 af 7e 10 f0       	push   $0xf0107eaf$/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	68 36 03 00 00       	push   $0x336$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	e8 00 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	39 c6                	cmp    %eax,%esi$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	74 04                	je     f0101c4b <mem_init+0x203>$/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	39 c7                	cmp    %eax,%edi$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	75 19                	jne    f0101c64 <mem_init+0x21c>$/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	68 b0 75 10 f0       	push   $0xf01075b0$/;"	l
f0101c50	obj/kern/kernel.asm	/^f0101c50:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	68 37 03 00 00       	push   $0x337$/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	e8 dc e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	8b 0d 94 4e 22 f0    	mov    0xf0224e94,%ecx$/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	8b 15 8c 4e 22 f0    	mov    0xf0224e8c,%edx$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	89 f8                	mov    %edi,%eax$/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	29 c8                	sub    %ecx,%eax$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	72 19                	jb     f0101c9a <mem_init+0x252>$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	68 c1 7e 10 f0       	push   $0xf0107ec1$/;"	l
f0101c86	obj/kern/kernel.asm	/^f0101c86:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101c8b	obj/kern/kernel.asm	/^f0101c8b:	68 38 03 00 00       	push   $0x338$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	e8 a6 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	89 f0                	mov    %esi,%eax$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	29 c8                	sub    %ecx,%eax$/;"	l
f0101c9e	obj/kern/kernel.asm	/^f0101c9e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	39 c2                	cmp    %eax,%edx$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	77 19                	ja     f0101cc1 <mem_init+0x279>$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	68 de 7e 10 f0       	push   $0xf0107ede$/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	68 39 03 00 00       	push   $0x339$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	e8 7f e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	29 c8                	sub    %ecx,%eax$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	39 c2                	cmp    %eax,%edx$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	77 19                	ja     f0101ce9 <mem_init+0x2a1>$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	68 fb 7e 10 f0       	push   $0xf0107efb$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	68 3a 03 00 00       	push   $0x33a$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	e8 57 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	a1 40 42 22 f0       	mov    0xf0224240,%eax$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	c7 05 40 42 22 f0 00 	movl   $0x0,0xf0224240$/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	00 00 00 $/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	6a 00                	push   $0x0$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	e8 c3 f8 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101d05	obj/kern/kernel.asm	/^f0101d05:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	85 c0                	test   %eax,%eax$/;"	l
f0101d0a	obj/kern/kernel.asm	/^f0101d0a:	74 19                	je     f0101d25 <mem_init+0x2dd>$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	68 18 7f 10 f0       	push   $0xf0107f18$/;"	l
f0101d11	obj/kern/kernel.asm	/^f0101d11:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16:	68 41 03 00 00       	push   $0x341$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	e8 1b e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d25	obj/kern/kernel.asm	/^f0101d25:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d28	obj/kern/kernel.asm	/^f0101d28:	57                   	push   %edi$/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	e8 0a f9 ff ff       	call   f0101638 <page_free>$/;"	l
f0101d2e	obj/kern/kernel.asm	/^f0101d2e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	e8 02 f9 ff ff       	call   f0101638 <page_free>$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101d39	obj/kern/kernel.asm	/^f0101d39:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	e8 f7 f8 ff ff       	call   f0101638 <page_free>$/;"	l
f0101d41	obj/kern/kernel.asm	/^f0101d41:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	e8 7b f8 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	89 c6                	mov    %eax,%esi$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	85 c0                	test   %eax,%eax$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	75 19                	jne    f0101d6f <mem_init+0x327>$/;"	l
f0101d56	obj/kern/kernel.asm	/^f0101d56:	68 6d 7e 10 f0       	push   $0xf0107e6d$/;"	l
f0101d5b	obj/kern/kernel.asm	/^f0101d5b:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	68 48 03 00 00       	push   $0x348$/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101d6a	obj/kern/kernel.asm	/^f0101d6a:	e8 d1 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d72	obj/kern/kernel.asm	/^f0101d72:	6a 00                	push   $0x0$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	e8 4f f8 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	89 c7                	mov    %eax,%edi$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	85 c0                	test   %eax,%eax$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	75 19                	jne    f0101d9b <mem_init+0x353>$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	68 83 7e 10 f0       	push   $0xf0107e83$/;"	l
f0101d87	obj/kern/kernel.asm	/^f0101d87:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	68 49 03 00 00       	push   $0x349$/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	e8 a5 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d9e	obj/kern/kernel.asm	/^f0101d9e:	6a 00                	push   $0x0$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	e8 23 f8 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101dab	obj/kern/kernel.asm	/^f0101dab:	85 c0                	test   %eax,%eax$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	75 19                	jne    f0101dc8 <mem_init+0x380>$/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	68 99 7e 10 f0       	push   $0xf0107e99$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	68 4a 03 00 00       	push   $0x34a$/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101dc3	obj/kern/kernel.asm	/^f0101dc3:	e8 78 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	39 fe                	cmp    %edi,%esi$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	75 19                	jne    f0101de5 <mem_init+0x39d>$/;"	l
f0101dcc	obj/kern/kernel.asm	/^f0101dcc:	68 af 7e 10 f0       	push   $0xf0107eaf$/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	68 4c 03 00 00       	push   $0x34c$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	e8 5b e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	39 c7                	cmp    %eax,%edi$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	74 04                	je     f0101df0 <mem_init+0x3a8>$/;"	l
f0101dec	obj/kern/kernel.asm	/^f0101dec:	39 c6                	cmp    %eax,%esi$/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	75 19                	jne    f0101e09 <mem_init+0x3c1>$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	68 b0 75 10 f0       	push   $0xf01075b0$/;"	l
f0101df5	obj/kern/kernel.asm	/^f0101df5:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	68 4d 03 00 00       	push   $0x34d$/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	e8 37 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	6a 00                	push   $0x0$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	e8 b5 f7 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101e13	obj/kern/kernel.asm	/^f0101e13:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	85 c0                	test   %eax,%eax$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	74 19                	je     f0101e33 <mem_init+0x3eb>$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	68 18 7f 10 f0       	push   $0xf0107f18$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	68 4e 03 00 00       	push   $0x34e$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	e8 0d e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	89 f0                	mov    %esi,%eax$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	89 c2                	mov    %eax,%edx$/;"	l
f0101e43	obj/kern/kernel.asm	/^f0101e43:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101e46	obj/kern/kernel.asm	/^f0101e46:	3b 15 8c 4e 22 f0    	cmp    0xf0224e8c,%edx$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	72 12                	jb     f0101e60 <mem_init+0x418>$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	50                   	push   %eax$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	6a 5a                	push   $0x5a$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	e8 e0 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	6a 01                	push   $0x1$/;"	l
f0101e6a	obj/kern/kernel.asm	/^f0101e6a:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	50                   	push   %eax$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	e8 64 3f 00 00       	call   f0105dd9 <memset>$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	e8 bb f7 ff ff       	call   f0101638 <page_free>$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	e8 3f f7 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101e89	obj/kern/kernel.asm	/^f0101e89:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	85 c0                	test   %eax,%eax$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	75 19                	jne    f0101ea9 <mem_init+0x461>$/;"	l
f0101e90	obj/kern/kernel.asm	/^f0101e90:	68 27 7f 10 f0       	push   $0xf0107f27$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	68 53 03 00 00       	push   $0x353$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	e8 97 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	39 c6                	cmp    %eax,%esi$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	74 19                	je     f0101ec6 <mem_init+0x47e>$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	68 45 7f 10 f0       	push   $0xf0107f45$/;"	l
f0101eb2	obj/kern/kernel.asm	/^f0101eb2:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	68 54 03 00 00       	push   $0x354$/;"	l
f0101ebc	obj/kern/kernel.asm	/^f0101ebc:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	e8 7a e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	89 f0                	mov    %esi,%eax$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101ed1	obj/kern/kernel.asm	/^f0101ed1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	89 c2                	mov    %eax,%edx$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	3b 15 8c 4e 22 f0    	cmp    0xf0224e8c,%edx$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	72 12                	jb     f0101ef3 <mem_init+0x4ab>$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	50                   	push   %eax$/;"	l
f0101ee2	obj/kern/kernel.asm	/^f0101ee2:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	6a 5a                	push   $0x5a$/;"	l
f0101ee9	obj/kern/kernel.asm	/^f0101ee9:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	e8 4d e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101eff	obj/kern/kernel.asm	/^f0101eff:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101f02	obj/kern/kernel.asm	/^f0101f02:	74 19                	je     f0101f1d <mem_init+0x4d5>$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	68 55 7f 10 f0       	push   $0xf0107f55$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	68 57 03 00 00       	push   $0x357$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	e8 23 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	75 db                	jne    f0101eff <mem_init+0x4b7>$/;"	l
f0101f24	obj/kern/kernel.asm	/^f0101f24:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	a3 40 42 22 f0       	mov    %eax,0xf0224240$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f2f	obj/kern/kernel.asm	/^f0101f2f:	56                   	push   %esi$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	e8 03 f7 ff ff       	call   f0101638 <page_free>$/;"	l
f0101f35	obj/kern/kernel.asm	/^f0101f35:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	e8 fb f6 ff ff       	call   f0101638 <page_free>$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	e8 f0 f6 ff ff       	call   f0101638 <page_free>$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	a1 40 42 22 f0       	mov    0xf0224240,%eax$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	eb 05                	jmp    f0101f57 <mem_init+0x50f>$/;"	l
f0101f52	obj/kern/kernel.asm	/^f0101f52:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101f55	obj/kern/kernel.asm	/^f0101f55:	8b 00                	mov    (%eax),%eax$/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	85 c0                	test   %eax,%eax$/;"	l
f0101f59	obj/kern/kernel.asm	/^f0101f59:	75 f7                	jne    f0101f52 <mem_init+0x50a>$/;"	l
f0101f5b	obj/kern/kernel.asm	/^f0101f5b:	85 db                	test   %ebx,%ebx$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	74 19                	je     f0101f78 <mem_init+0x530>$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	68 5f 7f 10 f0       	push   $0xf0107f5f$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	68 64 03 00 00       	push   $0x364$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	e8 c8 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f78	obj/kern/kernel.asm	/^f0101f78:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	68 d0 75 10 f0       	push   $0xf01075d0$/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	e8 b7 1e 00 00       	call   f0103e3c <cprintf>$/;"	l
f0101f85	obj/kern/kernel.asm	/^f0101f85:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f8c	obj/kern/kernel.asm	/^f0101f8c:	e8 37 f6 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f97	obj/kern/kernel.asm	/^f0101f97:	85 c0                	test   %eax,%eax$/;"	l
f0101f99	obj/kern/kernel.asm	/^f0101f99:	75 19                	jne    f0101fb4 <mem_init+0x56c>$/;"	l
f0101f9b	obj/kern/kernel.asm	/^f0101f9b:	68 6d 7e 10 f0       	push   $0xf0107e6d$/;"	l
f0101fa0	obj/kern/kernel.asm	/^f0101fa0:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	68 ce 03 00 00       	push   $0x3ce$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	e8 8c e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fb4	obj/kern/kernel.asm	/^f0101fb4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	6a 00                	push   $0x0$/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	e8 0a f6 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101fbe	obj/kern/kernel.asm	/^f0101fbe:	89 c3                	mov    %eax,%ebx$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	85 c0                	test   %eax,%eax$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	75 19                	jne    f0101fe0 <mem_init+0x598>$/;"	l
f0101fc7	obj/kern/kernel.asm	/^f0101fc7:	68 83 7e 10 f0       	push   $0xf0107e83$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	68 cf 03 00 00       	push   $0x3cf$/;"	l
f0101fd6	obj/kern/kernel.asm	/^f0101fd6:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0101fdb	obj/kern/kernel.asm	/^f0101fdb:	e8 60 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fe0	obj/kern/kernel.asm	/^f0101fe0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	6a 00                	push   $0x0$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	e8 de f5 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	89 c6                	mov    %eax,%esi$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fef	obj/kern/kernel.asm	/^f0101fef:	85 c0                	test   %eax,%eax$/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	75 19                	jne    f010200c <mem_init+0x5c4>$/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3:	68 99 7e 10 f0       	push   $0xf0107e99$/;"	l
f0101ff8	obj/kern/kernel.asm	/^f0101ff8:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	68 d0 03 00 00       	push   $0x3d0$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	e8 34 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	75 19                	jne    f010202a <mem_init+0x5e2>$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	68 af 7e 10 f0       	push   $0xf0107eaf$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	68 d3 03 00 00       	push   $0x3d3$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	e8 16 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	39 c3                	cmp    %eax,%ebx$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	74 05                	je     f0102033 <mem_init+0x5eb>$/;"	l
f010202e	obj/kern/kernel.asm	/^f010202e:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	75 19                	jne    f010204c <mem_init+0x604>$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	68 b0 75 10 f0       	push   $0xf01075b0$/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010203d	obj/kern/kernel.asm	/^f010203d:	68 d4 03 00 00       	push   $0x3d4$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102047	obj/kern/kernel.asm	/^f0102047:	e8 f4 df ff ff       	call   f0100040 <_panic>$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	a1 40 42 22 f0       	mov    0xf0224240,%eax$/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	c7 05 40 42 22 f0 00 	movl   $0x0,0xf0224240$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	00 00 00 $/;"	l
f010205e	obj/kern/kernel.asm	/^f010205e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	6a 00                	push   $0x0$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	e8 60 f5 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	83 c4 10             	add    $0x10,%esp$/;"	l
f010206b	obj/kern/kernel.asm	/^f010206b:	85 c0                	test   %eax,%eax$/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	74 19                	je     f0102088 <mem_init+0x640>$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	68 18 7f 10 f0       	push   $0xf0107f18$/;"	l
f0102074	obj/kern/kernel.asm	/^f0102074:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	68 db 03 00 00       	push   $0x3db$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102083	obj/kern/kernel.asm	/^f0102083:	e8 b8 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102088	obj/kern/kernel.asm	/^f0102088:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	50                   	push   %eax$/;"	l
f010208f	obj/kern/kernel.asm	/^f010208f:	6a 00                	push   $0x0$/;"	l
f0102091	obj/kern/kernel.asm	/^f0102091:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0102097	obj/kern/kernel.asm	/^f0102097:	e8 0a f8 ff ff       	call   f01018a6 <page_lookup>$/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010209f	obj/kern/kernel.asm	/^f010209f:	85 c0                	test   %eax,%eax$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	74 19                	je     f01020bc <mem_init+0x674>$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	68 f0 75 10 f0       	push   $0xf01075f0$/;"	l
f01020a8	obj/kern/kernel.asm	/^f01020a8:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	68 de 03 00 00       	push   $0x3de$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	e8 84 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	6a 02                	push   $0x2$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	6a 00                	push   $0x0$/;"	l
f01020c0	obj/kern/kernel.asm	/^f01020c0:	53                   	push   %ebx$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	e8 bb f8 ff ff       	call   f0101987 <page_insert>$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020cf	obj/kern/kernel.asm	/^f01020cf:	85 c0                	test   %eax,%eax$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	78 19                	js     f01020ec <mem_init+0x6a4>$/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	68 28 76 10 f0       	push   $0xf0107628$/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	68 e1 03 00 00       	push   $0x3e1$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	e8 54 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01020f2	obj/kern/kernel.asm	/^f01020f2:	e8 41 f5 ff ff       	call   f0101638 <page_free>$/;"	l
f01020f7	obj/kern/kernel.asm	/^f01020f7:	6a 02                	push   $0x2$/;"	l
f01020f9	obj/kern/kernel.asm	/^f01020f9:	6a 00                	push   $0x0$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	53                   	push   %ebx$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	e8 80 f8 ff ff       	call   f0101987 <page_insert>$/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	83 c4 20             	add    $0x20,%esp$/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	85 c0                	test   %eax,%eax$/;"	l
f010210c	obj/kern/kernel.asm	/^f010210c:	74 19                	je     f0102127 <mem_init+0x6df>$/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	68 58 76 10 f0       	push   $0xf0107658$/;"	l
f0102113	obj/kern/kernel.asm	/^f0102113:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	68 e5 03 00 00       	push   $0x3e5$/;"	l
f010211d	obj/kern/kernel.asm	/^f010211d:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	e8 19 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	8b 3d 90 4e 22 f0    	mov    0xf0224e90,%edi$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	a1 94 4e 22 f0       	mov    0xf0224e94,%eax$/;"	l
f0102132	obj/kern/kernel.asm	/^f0102132:	89 c1                	mov    %eax,%ecx$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	8b 17                	mov    (%edi),%edx$/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	29 c8                	sub    %ecx,%eax$/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010214a	obj/kern/kernel.asm	/^f010214a:	39 c2                	cmp    %eax,%edx$/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	74 19                	je     f0102167 <mem_init+0x71f>$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	68 88 76 10 f0       	push   $0xf0107688$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	68 e6 03 00 00       	push   $0x3e6$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102162	obj/kern/kernel.asm	/^f0102162:	e8 d9 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010216c	obj/kern/kernel.asm	/^f010216c:	89 f8                	mov    %edi,%eax$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	e8 06 f0 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f0102173	obj/kern/kernel.asm	/^f0102173:	89 da                	mov    %ebx,%edx$/;"	l
f0102175	obj/kern/kernel.asm	/^f0102175:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0102178	obj/kern/kernel.asm	/^f0102178:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	39 d0                	cmp    %edx,%eax$/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	74 19                	je     f010219b <mem_init+0x753>$/;"	l
f0102182	obj/kern/kernel.asm	/^f0102182:	68 b0 76 10 f0       	push   $0xf01076b0$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	68 e7 03 00 00       	push   $0x3e7$/;"	l
f0102191	obj/kern/kernel.asm	/^f0102191:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	e8 a5 de ff ff       	call   f0100040 <_panic>$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01021a0	obj/kern/kernel.asm	/^f01021a0:	74 19                	je     f01021bb <mem_init+0x773>$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	68 6a 7f 10 f0       	push   $0xf0107f6a$/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01021ac	obj/kern/kernel.asm	/^f01021ac:	68 e8 03 00 00       	push   $0x3e8$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	e8 85 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	74 19                	je     f01021de <mem_init+0x796>$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	68 7b 7f 10 f0       	push   $0xf0107f7b$/;"	l
f01021ca	obj/kern/kernel.asm	/^f01021ca:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	68 e9 03 00 00       	push   $0x3e9$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	e8 62 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	6a 02                	push   $0x2$/;"	l
f01021e0	obj/kern/kernel.asm	/^f01021e0:	68 00 10 00 00       	push   $0x1000$/;"	l
f01021e5	obj/kern/kernel.asm	/^f01021e5:	56                   	push   %esi$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	57                   	push   %edi$/;"	l
f01021e7	obj/kern/kernel.asm	/^f01021e7:	e8 9b f7 ff ff       	call   f0101987 <page_insert>$/;"	l
f01021ec	obj/kern/kernel.asm	/^f01021ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	85 c0                	test   %eax,%eax$/;"	l
f01021f1	obj/kern/kernel.asm	/^f01021f1:	74 19                	je     f010220c <mem_init+0x7c4>$/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	68 e0 76 10 f0       	push   $0xf01076e0$/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	68 ec 03 00 00       	push   $0x3ec$/;"	l
f0102202	obj/kern/kernel.asm	/^f0102202:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	e8 34 de ff ff       	call   f0100040 <_panic>$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102211	obj/kern/kernel.asm	/^f0102211:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	e8 5e ef ff ff       	call   f0101179 <check_va2pa>$/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	89 f2                	mov    %esi,%edx$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	2b 15 94 4e 22 f0    	sub    0xf0224e94,%edx$/;"	l
f0102223	obj/kern/kernel.asm	/^f0102223:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102226	obj/kern/kernel.asm	/^f0102226:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102229	obj/kern/kernel.asm	/^f0102229:	39 d0                	cmp    %edx,%eax$/;"	l
f010222b	obj/kern/kernel.asm	/^f010222b:	74 19                	je     f0102246 <mem_init+0x7fe>$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	68 1c 77 10 f0       	push   $0xf010771c$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	68 ed 03 00 00       	push   $0x3ed$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	e8 fa dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	74 19                	je     f0102266 <mem_init+0x81e>$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	68 8c 7f 10 f0       	push   $0xf0107f8c$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	68 ee 03 00 00       	push   $0x3ee$/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	e8 da dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	6a 00                	push   $0x0$/;"	l
f010226b	obj/kern/kernel.asm	/^f010226b:	e8 58 f3 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	85 c0                	test   %eax,%eax$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	74 19                	je     f0102290 <mem_init+0x848>$/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	68 18 7f 10 f0       	push   $0xf0107f18$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	68 f1 03 00 00       	push   $0x3f1$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	e8 b0 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	6a 02                	push   $0x2$/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	56                   	push   %esi$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	e8 e4 f6 ff ff       	call   f0101987 <page_insert>$/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022a6	obj/kern/kernel.asm	/^f01022a6:	85 c0                	test   %eax,%eax$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	74 19                	je     f01022c3 <mem_init+0x87b>$/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	68 e0 76 10 f0       	push   $0xf01076e0$/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	68 f4 03 00 00       	push   $0x3f4$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	e8 7d dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	e8 a7 ee ff ff       	call   f0101179 <check_va2pa>$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	89 f2                	mov    %esi,%edx$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	2b 15 94 4e 22 f0    	sub    0xf0224e94,%edx$/;"	l
f01022da	obj/kern/kernel.asm	/^f01022da:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	39 d0                	cmp    %edx,%eax$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	74 19                	je     f01022fd <mem_init+0x8b5>$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	68 1c 77 10 f0       	push   $0xf010771c$/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	68 f5 03 00 00       	push   $0x3f5$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	e8 43 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	74 19                	je     f010231d <mem_init+0x8d5>$/;"	l
f0102304	obj/kern/kernel.asm	/^f0102304:	68 8c 7f 10 f0       	push   $0xf0107f8c$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	68 f6 03 00 00       	push   $0x3f6$/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	e8 23 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	6a 00                	push   $0x0$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	e8 a1 f2 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	83 c4 10             	add    $0x10,%esp$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	85 c0                	test   %eax,%eax$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	74 19                	je     f0102347 <mem_init+0x8ff>$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	68 18 7f 10 f0       	push   $0xf0107f18$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	68 fa 03 00 00       	push   $0x3fa$/;"	l
f010233d	obj/kern/kernel.asm	/^f010233d:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	e8 f9 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102347	obj/kern/kernel.asm	/^f0102347:	8b 15 90 4e 22 f0    	mov    0xf0224e90,%edx$/;"	l
f010234d	obj/kern/kernel.asm	/^f010234d:	8b 02                	mov    (%edx),%eax$/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	89 c1                	mov    %eax,%ecx$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	3b 0d 8c 4e 22 f0    	cmp    0xf0224e8c,%ecx$/;"	l
f010235f	obj/kern/kernel.asm	/^f010235f:	72 15                	jb     f0102376 <mem_init+0x92e>$/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	50                   	push   %eax$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f010236c	obj/kern/kernel.asm	/^f010236c:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102371	obj/kern/kernel.asm	/^f0102371:	e8 ca dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102376	obj/kern/kernel.asm	/^f0102376:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010237b	obj/kern/kernel.asm	/^f010237b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	6a 00                	push   $0x0$/;"	l
f0102383	obj/kern/kernel.asm	/^f0102383:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	52                   	push   %edx$/;"	l
f0102389	obj/kern/kernel.asm	/^f0102389:	e8 29 f3 ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102391	obj/kern/kernel.asm	/^f0102391:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	39 d0                	cmp    %edx,%eax$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	74 19                	je     f01023b4 <mem_init+0x96c>$/;"	l
f010239b	obj/kern/kernel.asm	/^f010239b:	68 4c 77 10 f0       	push   $0xf010774c$/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	68 fe 03 00 00       	push   $0x3fe$/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01023af	obj/kern/kernel.asm	/^f01023af:	e8 8c dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	6a 06                	push   $0x6$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	68 00 10 00 00       	push   $0x1000$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	56                   	push   %esi$/;"	l
f01023bc	obj/kern/kernel.asm	/^f01023bc:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f01023c2	obj/kern/kernel.asm	/^f01023c2:	e8 c0 f5 ff ff       	call   f0101987 <page_insert>$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	85 c0                	test   %eax,%eax$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	74 19                	je     f01023e7 <mem_init+0x99f>$/;"	l
f01023ce	obj/kern/kernel.asm	/^f01023ce:	68 8c 77 10 f0       	push   $0xf010778c$/;"	l
f01023d3	obj/kern/kernel.asm	/^f01023d3:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01023d8	obj/kern/kernel.asm	/^f01023d8:	68 01 04 00 00       	push   $0x401$/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01023e2	obj/kern/kernel.asm	/^f01023e2:	e8 59 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023e7	obj/kern/kernel.asm	/^f01023e7:	8b 3d 90 4e 22 f0    	mov    0xf0224e90,%edi$/;"	l
f01023ed	obj/kern/kernel.asm	/^f01023ed:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	89 f8                	mov    %edi,%eax$/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	e8 80 ed ff ff       	call   f0101179 <check_va2pa>$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	89 f2                	mov    %esi,%edx$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	2b 15 94 4e 22 f0    	sub    0xf0224e94,%edx$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102404	obj/kern/kernel.asm	/^f0102404:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102407	obj/kern/kernel.asm	/^f0102407:	39 d0                	cmp    %edx,%eax$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	74 19                	je     f0102424 <mem_init+0x9dc>$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	68 1c 77 10 f0       	push   $0xf010771c$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	68 02 04 00 00       	push   $0x402$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	e8 1c dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102429	obj/kern/kernel.asm	/^f0102429:	74 19                	je     f0102444 <mem_init+0x9fc>$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	68 8c 7f 10 f0       	push   $0xf0107f8c$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	68 03 04 00 00       	push   $0x403$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	e8 fc db ff ff       	call   f0100040 <_panic>$/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	6a 00                	push   $0x0$/;"	l
f0102449	obj/kern/kernel.asm	/^f0102449:	68 00 10 00 00       	push   $0x1000$/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	57                   	push   %edi$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	e8 63 f2 ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102457	obj/kern/kernel.asm	/^f0102457:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	75 19                	jne    f0102475 <mem_init+0xa2d>$/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	68 cc 77 10 f0       	push   $0xf01077cc$/;"	l
f0102461	obj/kern/kernel.asm	/^f0102461:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	68 04 04 00 00       	push   $0x404$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102470	obj/kern/kernel.asm	/^f0102470:	e8 cb db ff ff       	call   f0100040 <_panic>$/;"	l
f0102475	obj/kern/kernel.asm	/^f0102475:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f010247a	obj/kern/kernel.asm	/^f010247a:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	75 19                	jne    f0102498 <mem_init+0xa50>$/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	68 9d 7f 10 f0       	push   $0xf0107f9d$/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102489	obj/kern/kernel.asm	/^f0102489:	68 05 04 00 00       	push   $0x405$/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102493	obj/kern/kernel.asm	/^f0102493:	e8 a8 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102498	obj/kern/kernel.asm	/^f0102498:	6a 02                	push   $0x2$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	68 00 10 00 00       	push   $0x1000$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	56                   	push   %esi$/;"	l
f01024a0	obj/kern/kernel.asm	/^f01024a0:	50                   	push   %eax$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	e8 e1 f4 ff ff       	call   f0101987 <page_insert>$/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	85 c0                	test   %eax,%eax$/;"	l
f01024ab	obj/kern/kernel.asm	/^f01024ab:	74 19                	je     f01024c6 <mem_init+0xa7e>$/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	68 e0 76 10 f0       	push   $0xf01076e0$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01024b7	obj/kern/kernel.asm	/^f01024b7:	68 08 04 00 00       	push   $0x408$/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	e8 7a db ff ff       	call   f0100040 <_panic>$/;"	l
f01024c6	obj/kern/kernel.asm	/^f01024c6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	6a 00                	push   $0x0$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	68 00 10 00 00       	push   $0x1000$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	e8 dc f1 ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024de	obj/kern/kernel.asm	/^f01024de:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	75 19                	jne    f01024fc <mem_init+0xab4>$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	68 00 78 10 f0       	push   $0xf0107800$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	68 09 04 00 00       	push   $0x409$/;"	l
f01024f2	obj/kern/kernel.asm	/^f01024f2:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	e8 44 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	6a 00                	push   $0x0$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	e8 a6 f1 ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f0102511	obj/kern/kernel.asm	/^f0102511:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	74 19                	je     f0102532 <mem_init+0xaea>$/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	68 34 78 10 f0       	push   $0xf0107834$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102523	obj/kern/kernel.asm	/^f0102523:	68 0a 04 00 00       	push   $0x40a$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010252d	obj/kern/kernel.asm	/^f010252d:	e8 0e db ff ff       	call   f0100040 <_panic>$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	6a 02                	push   $0x2$/;"	l
f0102534	obj/kern/kernel.asm	/^f0102534:	68 00 00 40 00       	push   $0x400000$/;"	l
f0102539	obj/kern/kernel.asm	/^f0102539:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	e8 40 f4 ff ff       	call   f0101987 <page_insert>$/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	83 c4 10             	add    $0x10,%esp$/;"	l
f010254a	obj/kern/kernel.asm	/^f010254a:	85 c0                	test   %eax,%eax$/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	78 19                	js     f0102567 <mem_init+0xb1f>$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	68 6c 78 10 f0       	push   $0xf010786c$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	68 0d 04 00 00       	push   $0x40d$/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	e8 d9 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	6a 02                	push   $0x2$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	68 00 10 00 00       	push   $0x1000$/;"	l
f010256e	obj/kern/kernel.asm	/^f010256e:	53                   	push   %ebx$/;"	l
f010256f	obj/kern/kernel.asm	/^f010256f:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	e8 0d f4 ff ff       	call   f0101987 <page_insert>$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	85 c0                	test   %eax,%eax$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	74 19                	je     f010259a <mem_init+0xb52>$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	68 a4 78 10 f0       	push   $0xf01078a4$/;"	l
f0102586	obj/kern/kernel.asm	/^f0102586:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	68 10 04 00 00       	push   $0x410$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	e8 a6 da ff ff       	call   f0100040 <_panic>$/;"	l
f010259a	obj/kern/kernel.asm	/^f010259a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010259d	obj/kern/kernel.asm	/^f010259d:	6a 00                	push   $0x0$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	68 00 10 00 00       	push   $0x1000$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f01025aa	obj/kern/kernel.asm	/^f01025aa:	e8 08 f1 ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01025b5	obj/kern/kernel.asm	/^f01025b5:	74 19                	je     f01025d0 <mem_init+0xb88>$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	68 34 78 10 f0       	push   $0xf0107834$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	68 11 04 00 00       	push   $0x411$/;"	l
f01025c6	obj/kern/kernel.asm	/^f01025c6:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	e8 70 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	8b 3d 90 4e 22 f0    	mov    0xf0224e90,%edi$/;"	l
f01025d6	obj/kern/kernel.asm	/^f01025d6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	89 f8                	mov    %edi,%eax$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	e8 97 eb ff ff       	call   f0101179 <check_va2pa>$/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	89 c1                	mov    %eax,%ecx$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	89 d8                	mov    %ebx,%eax$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01025f2	obj/kern/kernel.asm	/^f01025f2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01025f5	obj/kern/kernel.asm	/^f01025f5:	39 c1                	cmp    %eax,%ecx$/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	74 19                	je     f0102612 <mem_init+0xbca>$/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	68 e0 78 10 f0       	push   $0xf01078e0$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	68 14 04 00 00       	push   $0x414$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	e8 2e da ff ff       	call   f0100040 <_panic>$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	89 f8                	mov    %edi,%eax$/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	e8 5b eb ff ff       	call   f0101179 <check_va2pa>$/;"	l
f010261e	obj/kern/kernel.asm	/^f010261e:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	74 19                	je     f010263c <mem_init+0xbf4>$/;"	l
f0102623	obj/kern/kernel.asm	/^f0102623:	68 0c 79 10 f0       	push   $0xf010790c$/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010262d	obj/kern/kernel.asm	/^f010262d:	68 15 04 00 00       	push   $0x415$/;"	l
f0102632	obj/kern/kernel.asm	/^f0102632:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	e8 04 da ff ff       	call   f0100040 <_panic>$/;"	l
f010263c	obj/kern/kernel.asm	/^f010263c:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	74 19                	je     f010265c <mem_init+0xc14>$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	68 b3 7f 10 f0       	push   $0xf0107fb3$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	68 17 04 00 00       	push   $0x417$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	e8 e4 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	74 19                	je     f010267c <mem_init+0xc34>$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	68 c4 7f 10 f0       	push   $0xf0107fc4$/;"	l
f0102668	obj/kern/kernel.asm	/^f0102668:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010266d	obj/kern/kernel.asm	/^f010266d:	68 18 04 00 00       	push   $0x418$/;"	l
f0102672	obj/kern/kernel.asm	/^f0102672:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	e8 c4 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010267c	obj/kern/kernel.asm	/^f010267c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	6a 00                	push   $0x0$/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	e8 42 ef ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102689	obj/kern/kernel.asm	/^f0102689:	85 c0                	test   %eax,%eax$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	74 04                	je     f0102691 <mem_init+0xc49>$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	39 c6                	cmp    %eax,%esi$/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	74 19                	je     f01026aa <mem_init+0xc62>$/;"	l
f0102691	obj/kern/kernel.asm	/^f0102691:	68 3c 79 10 f0       	push   $0xf010793c$/;"	l
f0102696	obj/kern/kernel.asm	/^f0102696:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	68 1b 04 00 00       	push   $0x41b$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	e8 96 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026aa	obj/kern/kernel.asm	/^f01026aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01026ad	obj/kern/kernel.asm	/^f01026ad:	6a 00                	push   $0x0$/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f01026b5	obj/kern/kernel.asm	/^f01026b5:	e8 87 f2 ff ff       	call   f0101941 <page_remove>$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	8b 3d 90 4e 22 f0    	mov    0xf0224e90,%edi$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	89 f8                	mov    %edi,%eax$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	e8 ad ea ff ff       	call   f0101179 <check_va2pa>$/;"	l
f01026cc	obj/kern/kernel.asm	/^f01026cc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	74 19                	je     f01026ed <mem_init+0xca5>$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	68 60 79 10 f0       	push   $0xf0107960$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	68 1f 04 00 00       	push   $0x41f$/;"	l
f01026e3	obj/kern/kernel.asm	/^f01026e3:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	e8 53 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	89 f8                	mov    %edi,%eax$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	e8 80 ea ff ff       	call   f0101179 <check_va2pa>$/;"	l
f01026f9	obj/kern/kernel.asm	/^f01026f9:	89 da                	mov    %ebx,%edx$/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	2b 15 94 4e 22 f0    	sub    0xf0224e94,%edx$/;"	l
f0102701	obj/kern/kernel.asm	/^f0102701:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	39 d0                	cmp    %edx,%eax$/;"	l
f0102709	obj/kern/kernel.asm	/^f0102709:	74 19                	je     f0102724 <mem_init+0xcdc>$/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	68 0c 79 10 f0       	push   $0xf010790c$/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102715	obj/kern/kernel.asm	/^f0102715:	68 20 04 00 00       	push   $0x420$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	e8 1c d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102724	obj/kern/kernel.asm	/^f0102724:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102729	obj/kern/kernel.asm	/^f0102729:	74 19                	je     f0102744 <mem_init+0xcfc>$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	68 6a 7f 10 f0       	push   $0xf0107f6a$/;"	l
f0102730	obj/kern/kernel.asm	/^f0102730:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102735	obj/kern/kernel.asm	/^f0102735:	68 21 04 00 00       	push   $0x421$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010273f	obj/kern/kernel.asm	/^f010273f:	e8 fc d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	74 19                	je     f0102764 <mem_init+0xd1c>$/;"	l
f010274b	obj/kern/kernel.asm	/^f010274b:	68 c4 7f 10 f0       	push   $0xf0107fc4$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	68 22 04 00 00       	push   $0x422$/;"	l
f010275a	obj/kern/kernel.asm	/^f010275a:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	e8 dc d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	6a 00                	push   $0x0$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	68 00 10 00 00       	push   $0x1000$/;"	l
f010276b	obj/kern/kernel.asm	/^f010276b:	53                   	push   %ebx$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	57                   	push   %edi$/;"	l
f010276d	obj/kern/kernel.asm	/^f010276d:	e8 15 f2 ff ff       	call   f0101987 <page_insert>$/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102775	obj/kern/kernel.asm	/^f0102775:	85 c0                	test   %eax,%eax$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	74 19                	je     f0102792 <mem_init+0xd4a>$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	68 84 79 10 f0       	push   $0xf0107984$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	68 25 04 00 00       	push   $0x425$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010278d	obj/kern/kernel.asm	/^f010278d:	e8 ae d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	75 19                	jne    f01027b2 <mem_init+0xd6a>$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	68 d5 7f 10 f0       	push   $0xf0107fd5$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	68 26 04 00 00       	push   $0x426$/;"	l
f01027a8	obj/kern/kernel.asm	/^f01027a8:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	e8 8e d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027b2	obj/kern/kernel.asm	/^f01027b2:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f01027b5	obj/kern/kernel.asm	/^f01027b5:	74 19                	je     f01027d0 <mem_init+0xd88>$/;"	l
f01027b7	obj/kern/kernel.asm	/^f01027b7:	68 e1 7f 10 f0       	push   $0xf0107fe1$/;"	l
f01027bc	obj/kern/kernel.asm	/^f01027bc:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01027c1	obj/kern/kernel.asm	/^f01027c1:	68 27 04 00 00       	push   $0x427$/;"	l
f01027c6	obj/kern/kernel.asm	/^f01027c6:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	e8 70 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	68 00 10 00 00       	push   $0x1000$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	e8 5e f1 ff ff       	call   f0101941 <page_remove>$/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	8b 3d 90 4e 22 f0    	mov    0xf0224e90,%edi$/;"	l
f01027e9	obj/kern/kernel.asm	/^f01027e9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01027ee	obj/kern/kernel.asm	/^f01027ee:	89 f8                	mov    %edi,%eax$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	e8 84 e9 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f01027f5	obj/kern/kernel.asm	/^f01027f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01027f8	obj/kern/kernel.asm	/^f01027f8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	74 19                	je     f0102816 <mem_init+0xdce>$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	68 60 79 10 f0       	push   $0xf0107960$/;"	l
f0102802	obj/kern/kernel.asm	/^f0102802:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102807	obj/kern/kernel.asm	/^f0102807:	68 2b 04 00 00       	push   $0x42b$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102811	obj/kern/kernel.asm	/^f0102811:	e8 2a d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	89 f8                	mov    %edi,%eax$/;"	l
f010281d	obj/kern/kernel.asm	/^f010281d:	e8 57 e9 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f0102822	obj/kern/kernel.asm	/^f0102822:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102825	obj/kern/kernel.asm	/^f0102825:	74 19                	je     f0102840 <mem_init+0xdf8>$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	68 bc 79 10 f0       	push   $0xf01079bc$/;"	l
f010282c	obj/kern/kernel.asm	/^f010282c:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102831	obj/kern/kernel.asm	/^f0102831:	68 2c 04 00 00       	push   $0x42c$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	e8 00 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102840	obj/kern/kernel.asm	/^f0102840:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102845	obj/kern/kernel.asm	/^f0102845:	74 19                	je     f0102860 <mem_init+0xe18>$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	68 f6 7f 10 f0       	push   $0xf0107ff6$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	68 2d 04 00 00       	push   $0x42d$/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	e8 e0 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	74 19                	je     f0102880 <mem_init+0xe38>$/;"	l
f0102867	obj/kern/kernel.asm	/^f0102867:	68 c4 7f 10 f0       	push   $0xf0107fc4$/;"	l
f010286c	obj/kern/kernel.asm	/^f010286c:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	68 2e 04 00 00       	push   $0x42e$/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010287b	obj/kern/kernel.asm	/^f010287b:	e8 c0 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102880	obj/kern/kernel.asm	/^f0102880:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	6a 00                	push   $0x0$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	e8 3e ed ff ff       	call   f01015c8 <page_alloc>$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010288d	obj/kern/kernel.asm	/^f010288d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	75 04                	jne    f0102895 <mem_init+0xe4d>$/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	85 c0                	test   %eax,%eax$/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	75 19                	jne    f01028ae <mem_init+0xe66>$/;"	l
f0102895	obj/kern/kernel.asm	/^f0102895:	68 e4 79 10 f0       	push   $0xf01079e4$/;"	l
f010289a	obj/kern/kernel.asm	/^f010289a:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010289f	obj/kern/kernel.asm	/^f010289f:	68 31 04 00 00       	push   $0x431$/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	e8 92 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028ae	obj/kern/kernel.asm	/^f01028ae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	6a 00                	push   $0x0$/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	e8 10 ed ff ff       	call   f01015c8 <page_alloc>$/;"	l
f01028b8	obj/kern/kernel.asm	/^f01028b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	85 c0                	test   %eax,%eax$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	74 19                	je     f01028d8 <mem_init+0xe90>$/;"	l
f01028bf	obj/kern/kernel.asm	/^f01028bf:	68 18 7f 10 f0       	push   $0xf0107f18$/;"	l
f01028c4	obj/kern/kernel.asm	/^f01028c4:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	68 34 04 00 00       	push   $0x434$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	e8 68 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028d8	obj/kern/kernel.asm	/^f01028d8:	8b 0d 90 4e 22 f0    	mov    0xf0224e90,%ecx$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	8b 11                	mov    (%ecx),%edx$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01028e6	obj/kern/kernel.asm	/^f01028e6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01028e9	obj/kern/kernel.asm	/^f01028e9:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f01028ef	obj/kern/kernel.asm	/^f01028ef:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	39 c2                	cmp    %eax,%edx$/;"	l
f01028f7	obj/kern/kernel.asm	/^f01028f7:	74 19                	je     f0102912 <mem_init+0xeca>$/;"	l
f01028f9	obj/kern/kernel.asm	/^f01028f9:	68 88 76 10 f0       	push   $0xf0107688$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102903	obj/kern/kernel.asm	/^f0102903:	68 37 04 00 00       	push   $0x437$/;"	l
f0102908	obj/kern/kernel.asm	/^f0102908:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	e8 2e d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102912	obj/kern/kernel.asm	/^f0102912:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010291b	obj/kern/kernel.asm	/^f010291b:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102920	obj/kern/kernel.asm	/^f0102920:	74 19                	je     f010293b <mem_init+0xef3>$/;"	l
f0102922	obj/kern/kernel.asm	/^f0102922:	68 7b 7f 10 f0       	push   $0xf0107f7b$/;"	l
f0102927	obj/kern/kernel.asm	/^f0102927:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	68 39 04 00 00       	push   $0x439$/;"	l
f0102931	obj/kern/kernel.asm	/^f0102931:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102936	obj/kern/kernel.asm	/^f0102936:	e8 05 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010293b	obj/kern/kernel.asm	/^f010293b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102947	obj/kern/kernel.asm	/^f0102947:	50                   	push   %eax$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	e8 eb ec ff ff       	call   f0101638 <page_free>$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	6a 01                	push   $0x1$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	68 00 10 40 00       	push   $0x401000$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	e8 55 ed ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f0102962	obj/kern/kernel.asm	/^f0102962:	89 c7                	mov    %eax,%edi$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102967	obj/kern/kernel.asm	/^f0102967:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f010296c	obj/kern/kernel.asm	/^f010296c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102977	obj/kern/kernel.asm	/^f0102977:	8b 0d 8c 4e 22 f0    	mov    0xf0224e8c,%ecx$/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	89 c2                	mov    %eax,%edx$/;"	l
f010297f	obj/kern/kernel.asm	/^f010297f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102982	obj/kern/kernel.asm	/^f0102982:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102985	obj/kern/kernel.asm	/^f0102985:	39 ca                	cmp    %ecx,%edx$/;"	l
f0102987	obj/kern/kernel.asm	/^f0102987:	72 15                	jb     f010299e <mem_init+0xf56>$/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	50                   	push   %eax$/;"	l
f010298a	obj/kern/kernel.asm	/^f010298a:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f010298f	obj/kern/kernel.asm	/^f010298f:	68 40 04 00 00       	push   $0x440$/;"	l
f0102994	obj/kern/kernel.asm	/^f0102994:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	e8 a2 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	39 c7                	cmp    %eax,%edi$/;"	l
f01029a5	obj/kern/kernel.asm	/^f01029a5:	74 19                	je     f01029c0 <mem_init+0xf78>$/;"	l
f01029a7	obj/kern/kernel.asm	/^f01029a7:	68 07 80 10 f0       	push   $0xf0108007$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	68 41 04 00 00       	push   $0x441$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	e8 80 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01029c3	obj/kern/kernel.asm	/^f01029c3:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01029df	obj/kern/kernel.asm	/^f01029df:	89 c2                	mov    %eax,%edx$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	39 d1                	cmp    %edx,%ecx$/;"	l
f01029e6	obj/kern/kernel.asm	/^f01029e6:	77 12                	ja     f01029fa <mem_init+0xfb2>$/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	50                   	push   %eax$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f01029ee	obj/kern/kernel.asm	/^f01029ee:	6a 5a                	push   $0x5a$/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	e8 46 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	68 ff 00 00 00       	push   $0xff$/;"	l
f0102a07	obj/kern/kernel.asm	/^f0102a07:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	50                   	push   %eax$/;"	l
f0102a0d	obj/kern/kernel.asm	/^f0102a0d:	e8 c7 33 00 00       	call   f0105dd9 <memset>$/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	e8 1b ec ff ff       	call   f0101638 <page_free>$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	6a 01                	push   $0x1$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	6a 00                	push   $0x0$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	e8 88 ec ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f0102a2f	obj/kern/kernel.asm	/^f0102a2f:	89 fa                	mov    %edi,%edx$/;"	l
f0102a31	obj/kern/kernel.asm	/^f0102a31:	2b 15 94 4e 22 f0    	sub    0xf0224e94,%edx$/;"	l
f0102a37	obj/kern/kernel.asm	/^f0102a37:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	89 d0                	mov    %edx,%eax$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	3b 05 8c 4e 22 f0    	cmp    0xf0224e8c,%eax$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	72 12                	jb     f0102a5f <mem_init+0x1017>$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	52                   	push   %edx$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	6a 5a                	push   $0x5a$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	e8 e1 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102a71	obj/kern/kernel.asm	/^f0102a71:	74 19                	je     f0102a8c <mem_init+0x1044>$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	68 1f 80 10 f0       	push   $0xf010801f$/;"	l
f0102a78	obj/kern/kernel.asm	/^f0102a78:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	68 4b 04 00 00       	push   $0x44b$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	e8 b4 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	75 db                	jne    f0102a6e <mem_init+0x1026>$/;"	l
f0102a93	obj/kern/kernel.asm	/^f0102a93:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102aa1	obj/kern/kernel.asm	/^f0102aa1:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102aaa	obj/kern/kernel.asm	/^f0102aaa:	89 0d 40 42 22 f0    	mov    %ecx,0xf0224240$/;"	l
f0102ab0	obj/kern/kernel.asm	/^f0102ab0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	50                   	push   %eax$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	e8 7f eb ff ff       	call   f0101638 <page_free>$/;"	l
f0102ab9	obj/kern/kernel.asm	/^f0102ab9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	e8 77 eb ff ff       	call   f0101638 <page_free>$/;"	l
f0102ac1	obj/kern/kernel.asm	/^f0102ac1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	e8 6f eb ff ff       	call   f0101638 <page_free>$/;"	l
f0102ac9	obj/kern/kernel.asm	/^f0102ac9:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102acc	obj/kern/kernel.asm	/^f0102acc:	68 01 10 00 00       	push   $0x1001$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	6a 00                	push   $0x0$/;"	l
f0102ad3	obj/kern/kernel.asm	/^f0102ad3:	e8 10 ef ff ff       	call   f01019e8 <mmio_map_region>$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	89 c3                	mov    %eax,%ebx$/;"	l
f0102ada	obj/kern/kernel.asm	/^f0102ada:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	6a 00                	push   $0x0$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	e8 ff ee ff ff       	call   f01019e8 <mmio_map_region>$/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	89 c6                	mov    %eax,%esi$/;"	l
f0102aeb	obj/kern/kernel.asm	/^f0102aeb:	8d 83 00 20 00 00    	lea    0x2000(%ebx),%eax$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102af4	obj/kern/kernel.asm	/^f0102af4:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102afa	obj/kern/kernel.asm	/^f0102afa:	76 07                	jbe    f0102b03 <mem_init+0x10bb>$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	76 19                	jbe    f0102b1c <mem_init+0x10d4>$/;"	l
f0102b03	obj/kern/kernel.asm	/^f0102b03:	68 08 7a 10 f0       	push   $0xf0107a08$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102b0d	obj/kern/kernel.asm	/^f0102b0d:	68 5b 04 00 00       	push   $0x45b$/;"	l
f0102b12	obj/kern/kernel.asm	/^f0102b12:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102b17	obj/kern/kernel.asm	/^f0102b17:	e8 24 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b1c	obj/kern/kernel.asm	/^f0102b1c:	8d 96 00 20 00 00    	lea    0x2000(%esi),%edx$/;"	l
f0102b22	obj/kern/kernel.asm	/^f0102b22:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	77 08                	ja     f0102b32 <mem_init+0x10ea>$/;"	l
f0102b2a	obj/kern/kernel.asm	/^f0102b2a:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	77 19                	ja     f0102b4b <mem_init+0x1103>$/;"	l
f0102b32	obj/kern/kernel.asm	/^f0102b32:	68 30 7a 10 f0       	push   $0xf0107a30$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	68 5c 04 00 00       	push   $0x45c$/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	e8 f5 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b4b	obj/kern/kernel.asm	/^f0102b4b:	89 da                	mov    %ebx,%edx$/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	09 f2                	or     %esi,%edx$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	74 19                	je     f0102b70 <mem_init+0x1128>$/;"	l
f0102b57	obj/kern/kernel.asm	/^f0102b57:	68 58 7a 10 f0       	push   $0xf0107a58$/;"	l
f0102b5c	obj/kern/kernel.asm	/^f0102b5c:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	68 5e 04 00 00       	push   $0x45e$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102b6b	obj/kern/kernel.asm	/^f0102b6b:	e8 d0 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	39 c6                	cmp    %eax,%esi$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	73 19                	jae    f0102b8d <mem_init+0x1145>$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	68 36 80 10 f0       	push   $0xf0108036$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	68 60 04 00 00       	push   $0x460$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	e8 b3 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	8b 3d 90 4e 22 f0    	mov    0xf0224e90,%edi$/;"	l
f0102b93	obj/kern/kernel.asm	/^f0102b93:	89 da                	mov    %ebx,%edx$/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	89 f8                	mov    %edi,%eax$/;"	l
f0102b97	obj/kern/kernel.asm	/^f0102b97:	e8 dd e5 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	85 c0                	test   %eax,%eax$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	74 19                	je     f0102bb9 <mem_init+0x1171>$/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	68 80 7a 10 f0       	push   $0xf0107a80$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	68 62 04 00 00       	push   $0x462$/;"	l
f0102baf	obj/kern/kernel.asm	/^f0102baf:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	e8 87 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bb9	obj/kern/kernel.asm	/^f0102bb9:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102bc2	obj/kern/kernel.asm	/^f0102bc2:	89 c2                	mov    %eax,%edx$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	89 f8                	mov    %edi,%eax$/;"	l
f0102bc6	obj/kern/kernel.asm	/^f0102bc6:	e8 ae e5 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102bd0	obj/kern/kernel.asm	/^f0102bd0:	74 19                	je     f0102beb <mem_init+0x11a3>$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	68 a4 7a 10 f0       	push   $0xf0107aa4$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	68 63 04 00 00       	push   $0x463$/;"	l
f0102be1	obj/kern/kernel.asm	/^f0102be1:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102be6	obj/kern/kernel.asm	/^f0102be6:	e8 55 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	89 f2                	mov    %esi,%edx$/;"	l
f0102bed	obj/kern/kernel.asm	/^f0102bed:	89 f8                	mov    %edi,%eax$/;"	l
f0102bef	obj/kern/kernel.asm	/^f0102bef:	e8 85 e5 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f0102bf4	obj/kern/kernel.asm	/^f0102bf4:	85 c0                	test   %eax,%eax$/;"	l
f0102bf6	obj/kern/kernel.asm	/^f0102bf6:	74 19                	je     f0102c11 <mem_init+0x11c9>$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	68 d4 7a 10 f0       	push   $0xf0107ad4$/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102c02	obj/kern/kernel.asm	/^f0102c02:	68 64 04 00 00       	push   $0x464$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102c0c	obj/kern/kernel.asm	/^f0102c0c:	e8 2f d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c11	obj/kern/kernel.asm	/^f0102c11:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	89 f8                	mov    %edi,%eax$/;"	l
f0102c19	obj/kern/kernel.asm	/^f0102c19:	e8 5b e5 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f0102c1e	obj/kern/kernel.asm	/^f0102c1e:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	74 19                	je     f0102c3c <mem_init+0x11f4>$/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	68 f8 7a 10 f0       	push   $0xf0107af8$/;"	l
f0102c28	obj/kern/kernel.asm	/^f0102c28:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102c2d	obj/kern/kernel.asm	/^f0102c2d:	68 65 04 00 00       	push   $0x465$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	e8 04 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	6a 00                	push   $0x0$/;"	l
f0102c41	obj/kern/kernel.asm	/^f0102c41:	53                   	push   %ebx$/;"	l
f0102c42	obj/kern/kernel.asm	/^f0102c42:	57                   	push   %edi$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	e8 6f ea ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102c4e	obj/kern/kernel.asm	/^f0102c4e:	75 19                	jne    f0102c69 <mem_init+0x1221>$/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	68 24 7b 10 f0       	push   $0xf0107b24$/;"	l
f0102c55	obj/kern/kernel.asm	/^f0102c55:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	68 67 04 00 00       	push   $0x467$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102c64	obj/kern/kernel.asm	/^f0102c64:	e8 d7 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	6a 00                	push   $0x0$/;"	l
f0102c6e	obj/kern/kernel.asm	/^f0102c6e:	53                   	push   %ebx$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0102c75	obj/kern/kernel.asm	/^f0102c75:	e8 3d ea ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	8b 00                	mov    (%eax),%eax$/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	83 e0 04             	and    $0x4,%eax$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	74 19                	je     f0102ca0 <mem_init+0x1258>$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	68 68 7b 10 f0       	push   $0xf0107b68$/;"	l
f0102c8c	obj/kern/kernel.asm	/^f0102c8c:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	68 68 04 00 00       	push   $0x468$/;"	l
f0102c96	obj/kern/kernel.asm	/^f0102c96:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102c9b	obj/kern/kernel.asm	/^f0102c9b:	e8 a0 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102ca3	obj/kern/kernel.asm	/^f0102ca3:	6a 00                	push   $0x0$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	53                   	push   %ebx$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	e8 06 ea ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102cb7	obj/kern/kernel.asm	/^f0102cb7:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	6a 00                	push   $0x0$/;"	l
f0102cbc	obj/kern/kernel.asm	/^f0102cbc:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	e8 ed e9 ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	6a 00                	push   $0x0$/;"	l
f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	56                   	push   %esi$/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	e8 d6 e9 ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f0102ce1	obj/kern/kernel.asm	/^f0102ce1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	c7 04 24 48 80 10 f0 	movl   $0xf0108048,(%esp)$/;"	l
f0102cee	obj/kern/kernel.asm	/^f0102cee:	e8 49 11 00 00       	call   f0103e3c <cprintf>$/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	a1 94 4e 22 f0       	mov    0xf0224e94,%eax$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	77 15                	ja     f0102d17 <mem_init+0x12cf>$/;"	l
f0102d02	obj/kern/kernel.asm	/^f0102d02:	50                   	push   %eax$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0102d08	obj/kern/kernel.asm	/^f0102d08:	68 dd 00 00 00       	push   $0xdd$/;"	l
f0102d0d	obj/kern/kernel.asm	/^f0102d0d:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102d12	obj/kern/kernel.asm	/^f0102d12:	e8 29 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	8b 15 8c 4e 22 f0    	mov    0xf0224e8c,%edx$/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102d2d	obj/kern/kernel.asm	/^f0102d2d:	6a 05                	push   $0x5$/;"	l
f0102d2f	obj/kern/kernel.asm	/^f0102d2f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	50                   	push   %eax$/;"	l
f0102d35	obj/kern/kernel.asm	/^f0102d35:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	e8 51 ea ff ff       	call   f0101795 <boot_map_region>$/;"	l
f0102d44	obj/kern/kernel.asm	/^f0102d44:	a1 48 42 22 f0       	mov    0xf0224248,%eax$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d51	obj/kern/kernel.asm	/^f0102d51:	77 15                	ja     f0102d68 <mem_init+0x1320>$/;"	l
f0102d53	obj/kern/kernel.asm	/^f0102d53:	50                   	push   %eax$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0102d59	obj/kern/kernel.asm	/^f0102d59:	68 e8 00 00 00       	push   $0xe8$/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102d63	obj/kern/kernel.asm	/^f0102d63:	e8 d8 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	6a 05                	push   $0x5$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	50                   	push   %eax$/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	b9 00 40 0a 00       	mov    $0xa4000,%ecx$/;"	l
f0102d78	obj/kern/kernel.asm	/^f0102d78:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102d7d	obj/kern/kernel.asm	/^f0102d7d:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	e8 0e ea ff ff       	call   f0101795 <boot_map_region>$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	b8 00 80 11 f0       	mov    $0xf0118000,%eax$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	77 15                	ja     f0102dab <mem_init+0x1363>$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	50                   	push   %eax$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	68 f6 00 00 00       	push   $0xf6$/;"	l
f0102da1	obj/kern/kernel.asm	/^f0102da1:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102da6	obj/kern/kernel.asm	/^f0102da6:	e8 95 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102dae	obj/kern/kernel.asm	/^f0102dae:	6a 03                	push   $0x3$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	68 00 80 11 00       	push   $0x118000$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	e8 cc e9 ff ff       	call   f0101795 <boot_map_region>$/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	6a 03                	push   $0x3$/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	6a 00                	push   $0x0$/;"	l
f0102dd0	obj/kern/kernel.asm	/^f0102dd0:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102dd5	obj/kern/kernel.asm	/^f0102dd5:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	e8 b1 e9 ff ff       	call   f0101795 <boot_map_region>$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	c7 45 c4 00 60 22 f0 	movl   $0xf0226000,-0x3c(%ebp)$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	bb 00 60 22 f0       	mov    $0xf0226000,%ebx$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102dfe	obj/kern/kernel.asm	/^f0102dfe:	77 15                	ja     f0102e15 <mem_init+0x13cd>$/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	53                   	push   %ebx$/;"	l
f0102e01	obj/kern/kernel.asm	/^f0102e01:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	68 39 01 00 00       	push   $0x139$/;"	l
f0102e0b	obj/kern/kernel.asm	/^f0102e0b:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	e8 2b d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e15	obj/kern/kernel.asm	/^f0102e15:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102e18	obj/kern/kernel.asm	/^f0102e18:	6a 03                	push   $0x3$/;"	l
f0102e1a	obj/kern/kernel.asm	/^f0102e1a:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	50                   	push   %eax$/;"	l
f0102e21	obj/kern/kernel.asm	/^f0102e21:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	89 f2                	mov    %esi,%edx$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	e8 63 e9 ff ff       	call   f0101795 <boot_map_region>$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102e38	obj/kern/kernel.asm	/^f0102e38:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e41	obj/kern/kernel.asm	/^f0102e41:	b8 00 60 26 f0       	mov    $0xf0266000,%eax$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	75 ae                	jne    f0102df8 <mem_init+0x13b0>$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	8b 3d 90 4e 22 f0    	mov    0xf0224e90,%edi$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102e58	obj/kern/kernel.asm	/^f0102e58:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102e67	obj/kern/kernel.asm	/^f0102e67:	8b 35 94 4e 22 f0    	mov    0xf0224e94,%esi$/;"	l
f0102e6d	obj/kern/kernel.asm	/^f0102e6d:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0102e70	obj/kern/kernel.asm	/^f0102e70:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e75	obj/kern/kernel.asm	/^f0102e75:	eb 55                	jmp    f0102ecc <mem_init+0x1484>$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	89 f8                	mov    %edi,%eax$/;"	l
f0102e7f	obj/kern/kernel.asm	/^f0102e7f:	e8 f5 e2 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	77 15                	ja     f0102ea2 <mem_init+0x145a>$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	56                   	push   %esi$/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	68 7c 03 00 00       	push   $0x37c$/;"	l
f0102e98	obj/kern/kernel.asm	/^f0102e98:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	e8 9e d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	39 c2                	cmp    %eax,%edx$/;"	l
f0102eab	obj/kern/kernel.asm	/^f0102eab:	74 19                	je     f0102ec6 <mem_init+0x147e>$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	68 9c 7b 10 f0       	push   $0xf0107b9c$/;"	l
f0102eb2	obj/kern/kernel.asm	/^f0102eb2:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	68 7c 03 00 00       	push   $0x37c$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	e8 7a d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ecc	obj/kern/kernel.asm	/^f0102ecc:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	77 a6                	ja     f0102e77 <mem_init+0x142f>$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	8b 35 48 42 22 f0    	mov    0xf0224248,%esi$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102edf	obj/kern/kernel.asm	/^f0102edf:	89 da                	mov    %ebx,%edx$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	89 f8                	mov    %edi,%eax$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	e8 91 e2 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f0102ee8	obj/kern/kernel.asm	/^f0102ee8:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	77 15                	ja     f0102f06 <mem_init+0x14be>$/;"	l
f0102ef1	obj/kern/kernel.asm	/^f0102ef1:	56                   	push   %esi$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	68 81 03 00 00       	push   $0x381$/;"	l
f0102efc	obj/kern/kernel.asm	/^f0102efc:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	e8 3a d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	74 19                	je     f0102f2a <mem_init+0x14e2>$/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	68 d0 7b 10 f0       	push   $0xf0107bd0$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102f1b	obj/kern/kernel.asm	/^f0102f1b:	68 81 03 00 00       	push   $0x381$/;"	l
f0102f20	obj/kern/kernel.asm	/^f0102f20:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	e8 16 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f30	obj/kern/kernel.asm	/^f0102f30:	81 fb 00 40 ca ee    	cmp    $0xeeca4000,%ebx$/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	75 a7                	jne    f0102edf <mem_init+0x1497>$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102f43	obj/kern/kernel.asm	/^f0102f43:	eb 30                	jmp    f0102f75 <mem_init+0x152d>$/;"	l
f0102f45	obj/kern/kernel.asm	/^f0102f45:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	89 f8                	mov    %edi,%eax$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	e8 27 e2 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f0102f52	obj/kern/kernel.asm	/^f0102f52:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	74 19                	je     f0102f6f <mem_init+0x1527>$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	68 04 7c 10 f0       	push   $0xf0107c04$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	68 85 03 00 00       	push   $0x385$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102f6a	obj/kern/kernel.asm	/^f0102f6a:	e8 d1 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	72 cc                	jb     f0102f45 <mem_init+0x14fd>$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102f7e	obj/kern/kernel.asm	/^f0102f7e:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102f87	obj/kern/kernel.asm	/^f0102f87:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0102f90	obj/kern/kernel.asm	/^f0102f90:	89 c3                	mov    %eax,%ebx$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0102f9a	obj/kern/kernel.asm	/^f0102f9a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	89 da                	mov    %ebx,%edx$/;"	l
f0102f9f	obj/kern/kernel.asm	/^f0102f9f:	89 f8                	mov    %edi,%eax$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	e8 d3 e1 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	77 15                	ja     f0102fc3 <mem_init+0x157b>$/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	56                   	push   %esi$/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	68 8d 03 00 00       	push   $0x38d$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	e8 7d d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fc3	obj/kern/kernel.asm	/^f0102fc3:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102fc6	obj/kern/kernel.asm	/^f0102fc6:	8d 94 0b 00 60 22 f0 	lea    -0xfdda000(%ebx,%ecx,1),%edx$/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	39 d0                	cmp    %edx,%eax$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	74 19                	je     f0102fea <mem_init+0x15a2>$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	68 2c 7c 10 f0       	push   $0xf0107c2c$/;"	l
f0102fd6	obj/kern/kernel.asm	/^f0102fd6:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	68 8d 03 00 00       	push   $0x38d$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	e8 56 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0102ff3	obj/kern/kernel.asm	/^f0102ff3:	75 a8                	jne    f0102f9d <mem_init+0x1555>$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f0102ffe	obj/kern/kernel.asm	/^f0102ffe:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	89 c6                	mov    %eax,%esi$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	89 da                	mov    %ebx,%edx$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	89 f8                	mov    %edi,%eax$/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	e8 6d e1 ff ff       	call   f0101179 <check_va2pa>$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	74 19                	je     f010302a <mem_init+0x15e2>$/;"	l
f0103011	obj/kern/kernel.asm	/^f0103011:	68 74 7c 10 f0       	push   $0xf0107c74$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	68 8f 03 00 00       	push   $0x38f$/;"	l
f0103020	obj/kern/kernel.asm	/^f0103020:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	e8 16 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f010302a	obj/kern/kernel.asm	/^f010302a:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103030	obj/kern/kernel.asm	/^f0103030:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103032	obj/kern/kernel.asm	/^f0103032:	75 cf                	jne    f0103003 <mem_init+0x15bb>$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0103037	obj/kern/kernel.asm	/^f0103037:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f010303e	obj/kern/kernel.asm	/^f010303e:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	b8 00 60 26 f0       	mov    $0xf0266000,%eax$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	39 f0                	cmp    %esi,%eax$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	0f 85 2c ff ff ff    	jne    f0102f84 <mem_init+0x153c>$/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010305d	obj/kern/kernel.asm	/^f010305d:	eb 2a                	jmp    f0103089 <mem_init+0x1641>$/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	77 1f                	ja     f0103089 <mem_init+0x1641>$/;"	l
f010306a	obj/kern/kernel.asm	/^f010306a:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	75 7e                	jne    f01030ee <mem_init+0x16a6>$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	68 61 80 10 f0       	push   $0xf0108061$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	68 9a 03 00 00       	push   $0x39a$/;"	l
f010307f	obj/kern/kernel.asm	/^f010307f:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0103084	obj/kern/kernel.asm	/^f0103084:	e8 b7 cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103089	obj/kern/kernel.asm	/^f0103089:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f010308e	obj/kern/kernel.asm	/^f010308e:	76 3f                	jbe    f01030cf <mem_init+0x1687>$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0103093	obj/kern/kernel.asm	/^f0103093:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0103096	obj/kern/kernel.asm	/^f0103096:	75 19                	jne    f01030b1 <mem_init+0x1669>$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	68 61 80 10 f0       	push   $0xf0108061$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01030a2	obj/kern/kernel.asm	/^f01030a2:	68 9e 03 00 00       	push   $0x39e$/;"	l
f01030a7	obj/kern/kernel.asm	/^f01030a7:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01030ac	obj/kern/kernel.asm	/^f01030ac:	e8 8f cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	75 38                	jne    f01030ee <mem_init+0x16a6>$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	68 72 80 10 f0       	push   $0xf0108072$/;"	l
f01030bb	obj/kern/kernel.asm	/^f01030bb:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01030c0	obj/kern/kernel.asm	/^f01030c0:	68 9f 03 00 00       	push   $0x39f$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01030ca	obj/kern/kernel.asm	/^f01030ca:	e8 71 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f01030d3	obj/kern/kernel.asm	/^f01030d3:	74 19                	je     f01030ee <mem_init+0x16a6>$/;"	l
f01030d5	obj/kern/kernel.asm	/^f01030d5:	68 83 80 10 f0       	push   $0xf0108083$/;"	l
f01030da	obj/kern/kernel.asm	/^f01030da:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	68 a1 03 00 00       	push   $0x3a1$/;"	l
f01030e4	obj/kern/kernel.asm	/^f01030e4:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	e8 52 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	83 c0 01             	add    $0x1,%eax$/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f01030f6	obj/kern/kernel.asm	/^f01030f6:	0f 86 63 ff ff ff    	jbe    f010305f <mem_init+0x1617>$/;"	l
f01030fc	obj/kern/kernel.asm	/^f01030fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01030ff	obj/kern/kernel.asm	/^f01030ff:	68 98 7c 10 f0       	push   $0xf0107c98$/;"	l
f0103104	obj/kern/kernel.asm	/^f0103104:	e8 33 0d 00 00       	call   f0103e3c <cprintf>$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f010310e	obj/kern/kernel.asm	/^f010310e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	77 15                	ja     f010312d <mem_init+0x16e5>$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	50                   	push   %eax$/;"	l
f0103119	obj/kern/kernel.asm	/^f0103119:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f010311e	obj/kern/kernel.asm	/^f010311e:	68 11 01 00 00       	push   $0x111$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	e8 13 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010312d	obj/kern/kernel.asm	/^f010312d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103135	obj/kern/kernel.asm	/^f0103135:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010313a	obj/kern/kernel.asm	/^f010313a:	e8 b0 e0 ff ff       	call   f01011ef <check_page_free_list>$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010314a	obj/kern/kernel.asm	/^f010314a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	6a 00                	push   $0x0$/;"	l
f0103152	obj/kern/kernel.asm	/^f0103152:	e8 71 e4 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	89 c3                	mov    %eax,%ebx$/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	83 c4 10             	add    $0x10,%esp$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	85 c0                	test   %eax,%eax$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	75 19                	jne    f0103179 <mem_init+0x1731>$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	68 6d 7e 10 f0       	push   $0xf0107e6d$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010316a	obj/kern/kernel.asm	/^f010316a:	68 7d 04 00 00       	push   $0x47d$/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	e8 c7 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	6a 00                	push   $0x0$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	e8 45 e4 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	89 c7                	mov    %eax,%edi$/;"	l
f0103185	obj/kern/kernel.asm	/^f0103185:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	85 c0                	test   %eax,%eax$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	75 19                	jne    f01031a5 <mem_init+0x175d>$/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	68 83 7e 10 f0       	push   $0xf0107e83$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	68 7e 04 00 00       	push   $0x47e$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	e8 9b ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031a5	obj/kern/kernel.asm	/^f01031a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	6a 00                	push   $0x0$/;"	l
f01031aa	obj/kern/kernel.asm	/^f01031aa:	e8 19 e4 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	89 c6                	mov    %eax,%esi$/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031b4	obj/kern/kernel.asm	/^f01031b4:	85 c0                	test   %eax,%eax$/;"	l
f01031b6	obj/kern/kernel.asm	/^f01031b6:	75 19                	jne    f01031d1 <mem_init+0x1789>$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	68 99 7e 10 f0       	push   $0xf0107e99$/;"	l
f01031bd	obj/kern/kernel.asm	/^f01031bd:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01031c2	obj/kern/kernel.asm	/^f01031c2:	68 7f 04 00 00       	push   $0x47f$/;"	l
f01031c7	obj/kern/kernel.asm	/^f01031c7:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	e8 6f ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	53                   	push   %ebx$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	e8 5e e4 ff ff       	call   f0101638 <page_free>$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	89 f8                	mov    %edi,%eax$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01031e5	obj/kern/kernel.asm	/^f01031e5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01031e8	obj/kern/kernel.asm	/^f01031e8:	89 c2                	mov    %eax,%edx$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	3b 15 8c 4e 22 f0    	cmp    0xf0224e8c,%edx$/;"	l
f01031f6	obj/kern/kernel.asm	/^f01031f6:	72 12                	jb     f010320a <mem_init+0x17c2>$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	50                   	push   %eax$/;"	l
f01031f9	obj/kern/kernel.asm	/^f01031f9:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	6a 5a                	push   $0x5a$/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f0103205	obj/kern/kernel.asm	/^f0103205:	e8 36 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010320a	obj/kern/kernel.asm	/^f010320a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	6a 01                	push   $0x1$/;"	l
f0103214	obj/kern/kernel.asm	/^f0103214:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	50                   	push   %eax$/;"	l
f010321a	obj/kern/kernel.asm	/^f010321a:	e8 ba 2b 00 00       	call   f0105dd9 <memset>$/;"	l
f010321f	obj/kern/kernel.asm	/^f010321f:	89 f0                	mov    %esi,%eax$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	89 c2                	mov    %eax,%edx$/;"	l
f010322f	obj/kern/kernel.asm	/^f010322f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	3b 15 8c 4e 22 f0    	cmp    0xf0224e8c,%edx$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	72 12                	jb     f010324f <mem_init+0x1807>$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	50                   	push   %eax$/;"	l
f010323e	obj/kern/kernel.asm	/^f010323e:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0103243	obj/kern/kernel.asm	/^f0103243:	6a 5a                	push   $0x5a$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	e8 f1 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010324f	obj/kern/kernel.asm	/^f010324f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103252	obj/kern/kernel.asm	/^f0103252:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103257	obj/kern/kernel.asm	/^f0103257:	6a 02                	push   $0x2$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	50                   	push   %eax$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	e8 75 2b 00 00       	call   f0105dd9 <memset>$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	6a 02                	push   $0x2$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	68 00 10 00 00       	push   $0x1000$/;"	l
f010326b	obj/kern/kernel.asm	/^f010326b:	57                   	push   %edi$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	e8 10 e7 ff ff       	call   f0101987 <page_insert>$/;"	l
f0103277	obj/kern/kernel.asm	/^f0103277:	83 c4 20             	add    $0x20,%esp$/;"	l
f010327a	obj/kern/kernel.asm	/^f010327a:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	74 19                	je     f010329a <mem_init+0x1852>$/;"	l
f0103281	obj/kern/kernel.asm	/^f0103281:	68 6a 7f 10 f0       	push   $0xf0107f6a$/;"	l
f0103286	obj/kern/kernel.asm	/^f0103286:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	68 84 04 00 00       	push   $0x484$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0103295	obj/kern/kernel.asm	/^f0103295:	e8 a6 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	01 01 01 $/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	74 19                	je     f01032bf <mem_init+0x1877>$/;"	l
f01032a6	obj/kern/kernel.asm	/^f01032a6:	68 b8 7c 10 f0       	push   $0xf0107cb8$/;"	l
f01032ab	obj/kern/kernel.asm	/^f01032ab:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01032b0	obj/kern/kernel.asm	/^f01032b0:	68 85 04 00 00       	push   $0x485$/;"	l
f01032b5	obj/kern/kernel.asm	/^f01032b5:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01032ba	obj/kern/kernel.asm	/^f01032ba:	e8 81 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032bf	obj/kern/kernel.asm	/^f01032bf:	6a 02                	push   $0x2$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	68 00 10 00 00       	push   $0x1000$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	56                   	push   %esi$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	e8 b5 e6 ff ff       	call   f0101987 <page_insert>$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032d5	obj/kern/kernel.asm	/^f01032d5:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	02 02 02 $/;"	l
f01032df	obj/kern/kernel.asm	/^f01032df:	74 19                	je     f01032fa <mem_init+0x18b2>$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	68 dc 7c 10 f0       	push   $0xf0107cdc$/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	68 87 04 00 00       	push   $0x487$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01032f5	obj/kern/kernel.asm	/^f01032f5:	e8 46 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032fa	obj/kern/kernel.asm	/^f01032fa:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01032ff	obj/kern/kernel.asm	/^f01032ff:	74 19                	je     f010331a <mem_init+0x18d2>$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	68 8c 7f 10 f0       	push   $0xf0107f8c$/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	68 88 04 00 00       	push   $0x488$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	e8 26 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	74 19                	je     f010333a <mem_init+0x18f2>$/;"	l
f0103321	obj/kern/kernel.asm	/^f0103321:	68 f6 7f 10 f0       	push   $0xf0107ff6$/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	68 89 04 00 00       	push   $0x489$/;"	l
f0103330	obj/kern/kernel.asm	/^f0103330:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0103335	obj/kern/kernel.asm	/^f0103335:	e8 06 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010333a	obj/kern/kernel.asm	/^f010333a:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	03 03 03 $/;"	l
f0103344	obj/kern/kernel.asm	/^f0103344:	89 f0                	mov    %esi,%eax$/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f010334c	obj/kern/kernel.asm	/^f010334c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	89 c2                	mov    %eax,%edx$/;"	l
f0103354	obj/kern/kernel.asm	/^f0103354:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103357	obj/kern/kernel.asm	/^f0103357:	3b 15 8c 4e 22 f0    	cmp    0xf0224e8c,%edx$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	72 12                	jb     f0103371 <mem_init+0x1929>$/;"	l
f010335f	obj/kern/kernel.asm	/^f010335f:	50                   	push   %eax$/;"	l
f0103360	obj/kern/kernel.asm	/^f0103360:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0103365	obj/kern/kernel.asm	/^f0103365:	6a 5a                	push   $0x5a$/;"	l
f0103367	obj/kern/kernel.asm	/^f0103367:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f010336c	obj/kern/kernel.asm	/^f010336c:	e8 cf cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103378	obj/kern/kernel.asm	/^f0103378:	03 03 03 $/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	74 19                	je     f0103396 <mem_init+0x194e>$/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d:	68 00 7d 10 f0       	push   $0xf0107d00$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f0103387	obj/kern/kernel.asm	/^f0103387:	68 8b 04 00 00       	push   $0x48b$/;"	l
f010338c	obj/kern/kernel.asm	/^f010338c:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	e8 aa cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103399	obj/kern/kernel.asm	/^f0103399:	68 00 10 00 00       	push   $0x1000$/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	ff 35 90 4e 22 f0    	pushl  0xf0224e90$/;"	l
f01033a4	obj/kern/kernel.asm	/^f01033a4:	e8 98 e5 ff ff       	call   f0101941 <page_remove>$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01033b1	obj/kern/kernel.asm	/^f01033b1:	74 19                	je     f01033cc <mem_init+0x1984>$/;"	l
f01033b3	obj/kern/kernel.asm	/^f01033b3:	68 c4 7f 10 f0       	push   $0xf0107fc4$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	68 8d 04 00 00       	push   $0x48d$/;"	l
f01033c2	obj/kern/kernel.asm	/^f01033c2:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	e8 74 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	8b 0d 90 4e 22 f0    	mov    0xf0224e90,%ecx$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	8b 11                	mov    (%ecx),%edx$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	89 d8                	mov    %ebx,%eax$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	2b 05 94 4e 22 f0    	sub    0xf0224e94,%eax$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01033e8	obj/kern/kernel.asm	/^f01033e8:	39 c2                	cmp    %eax,%edx$/;"	l
f01033ea	obj/kern/kernel.asm	/^f01033ea:	74 19                	je     f0103405 <mem_init+0x19bd>$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	68 88 76 10 f0       	push   $0xf0107688$/;"	l
f01033f1	obj/kern/kernel.asm	/^f01033f1:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	68 90 04 00 00       	push   $0x490$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	e8 3b cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103405	obj/kern/kernel.asm	/^f0103405:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	74 19                	je     f010342b <mem_init+0x19e3>$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	68 7b 7f 10 f0       	push   $0xf0107f7b$/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c:	68 92 04 00 00       	push   $0x492$/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	68 8d 7d 10 f0       	push   $0xf0107d8d$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	e8 15 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010342b	obj/kern/kernel.asm	/^f010342b:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103434	obj/kern/kernel.asm	/^f0103434:	53                   	push   %ebx$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	e8 fe e1 ff ff       	call   f0101638 <page_free>$/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	c7 04 24 2c 7d 10 f0 	movl   $0xf0107d2c,(%esp)$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	e8 f6 09 00 00       	call   f0103e3c <cprintf>$/;"	l
f0103446	obj/kern/kernel.asm	/^f0103446:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103449	obj/kern/kernel.asm	/^f0103449:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010344c	obj/kern/kernel.asm	/^f010344c:	5b                   	pop    %ebx$/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	5e                   	pop    %esi$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	5f                   	pop    %edi$/;"	l
f010344f	obj/kern/kernel.asm	/^f010344f:	5d                   	pop    %ebp$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	c3                   	ret    $/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451 <user_mem_check>:$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	55                   	push   %ebp$/;"	l
f0103452	obj/kern/kernel.asm	/^f0103452:	89 e5                	mov    %esp,%ebp$/;"	l
f0103454	obj/kern/kernel.asm	/^f0103454:	57                   	push   %edi$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	56                   	push   %esi$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456:	53                   	push   %ebx$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103463	obj/kern/kernel.asm	/^f0103463:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	39 c3                	cmp    %eax,%ebx$/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	76 6b                	jbe    f01034e7 <user_mem_check+0x96>$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	89 1d 3c 42 22 f0    	mov    %ebx,0xf022423c$/;"	l
f0103482	obj/kern/kernel.asm	/^f0103482:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103487	obj/kern/kernel.asm	/^f0103487:	eb 68                	jmp    f01034f1 <user_mem_check+0xa0>$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f010348f	obj/kern/kernel.asm	/^f010348f:	76 1c                	jbe    f01034ad <user_mem_check+0x5c>$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	81 7d 0c 00 00 80 ef 	cmpl   $0xef800000,0xc(%ebp)$/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	b8 00 00 80 ef       	mov    $0xef800000,%eax$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	0f 43 45 0c          	cmovae 0xc(%ebp),%eax$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	a3 3c 42 22 f0       	mov    %eax,0xf022423c$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01034ab	obj/kern/kernel.asm	/^f01034ab:	eb 44                	jmp    f01034f1 <user_mem_check+0xa0>$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	6a 00                	push   $0x0$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	53                   	push   %ebx$/;"	l
f01034b3	obj/kern/kernel.asm	/^f01034b3:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	e8 fc e1 ff ff       	call   f01016b7 <pgdir_walk>$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	85 c0                	test   %eax,%eax$/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	74 0c                	je     f01034ce <user_mem_check+0x7d>$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	8b 00                	mov    (%eax),%eax$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	a8 01                	test   $0x1,%al$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	74 06                	je     f01034ce <user_mem_check+0x7d>$/;"	l
f01034c8	obj/kern/kernel.asm	/^f01034c8:	21 f0                	and    %esi,%eax$/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca:	39 c6                	cmp    %eax,%esi$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	74 0d                	je     f01034db <user_mem_check+0x8a>$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	89 1d 3c 42 22 f0    	mov    %ebx,0xf022423c$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01034d9	obj/kern/kernel.asm	/^f01034d9:	eb 16                	jmp    f01034f1 <user_mem_check+0xa0>$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	72 9d                	jb     f0103489 <user_mem_check+0x38>$/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	5b                   	pop    %ebx$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	5e                   	pop    %esi$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	5f                   	pop    %edi$/;"	l
f01034f7	obj/kern/kernel.asm	/^f01034f7:	5d                   	pop    %ebp$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	c3                   	ret    $/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9 <user_mem_assert>:$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	55                   	push   %ebp$/;"	l
f01034fa	obj/kern/kernel.asm	/^f01034fa:	89 e5                	mov    %esp,%ebp$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	53                   	push   %ebx$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103506	obj/kern/kernel.asm	/^f0103506:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	50                   	push   %eax$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	53                   	push   %ebx$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	e8 3b ff ff ff       	call   f0103451 <user_mem_check>$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	85 c0                	test   %eax,%eax$/;"	l
f010351b	obj/kern/kernel.asm	/^f010351b:	79 21                	jns    f010353e <user_mem_assert+0x45>$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	ff 35 3c 42 22 f0    	pushl  0xf022423c$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f0103529	obj/kern/kernel.asm	/^f0103529:	68 58 7d 10 f0       	push   $0xf0107d58$/;"	l
f010352e	obj/kern/kernel.asm	/^f010352e:	e8 09 09 00 00       	call   f0103e3c <cprintf>$/;"	l
f0103533	obj/kern/kernel.asm	/^f0103533:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	e8 ff 05 00 00       	call   f0103b3a <env_destroy>$/;"	l
f010353b	obj/kern/kernel.asm	/^f010353b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541:	c9                   	leave  $/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	c3                   	ret    $/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543 <region_alloc>:$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	55                   	push   %ebp$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	89 e5                	mov    %esp,%ebp$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	57                   	push   %edi$/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547:	56                   	push   %esi$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	53                   	push   %ebx$/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010354c	obj/kern/kernel.asm	/^f010354c:	89 c7                	mov    %eax,%edi$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	89 d3                	mov    %edx,%ebx$/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	eb 56                	jmp    f01035bb <region_alloc+0x78>$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103568	obj/kern/kernel.asm	/^f0103568:	6a 00                	push   $0x0$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	e8 59 e0 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103572	obj/kern/kernel.asm	/^f0103572:	85 c0                	test   %eax,%eax$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	75 17                	jne    f010358d <region_alloc+0x4a>$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	68 91 80 10 f0       	push   $0xf0108091$/;"	l
f010357e	obj/kern/kernel.asm	/^f010357e:	68 35 01 00 00       	push   $0x135$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	e8 b3 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	6a 06                	push   $0x6$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	53                   	push   %ebx$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	50                   	push   %eax$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0103594	obj/kern/kernel.asm	/^f0103594:	e8 ee e3 ff ff       	call   f0101987 <page_insert>$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	83 c4 10             	add    $0x10,%esp$/;"	l
f010359c	obj/kern/kernel.asm	/^f010359c:	85 c0                	test   %eax,%eax$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	74 15                	je     f01035b5 <region_alloc+0x72>$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	50                   	push   %eax$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	68 b8 80 10 f0       	push   $0xf01080b8$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	68 38 01 00 00       	push   $0x138$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	e8 8b ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	39 f3                	cmp    %esi,%ebx$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	75 a6                	jne    f0103565 <region_alloc+0x22>$/;"	l
f01035bf	obj/kern/kernel.asm	/^f01035bf:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2:	5b                   	pop    %ebx$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	5e                   	pop    %esi$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	5f                   	pop    %edi$/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	5d                   	pop    %ebp$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	c3                   	ret    $/;"	l
f01035c7	obj/kern/kernel.asm	/^f01035c7 <envid2env>:$/;"	l
f01035c7	obj/kern/kernel.asm	/^f01035c7:	55                   	push   %ebp$/;"	l
f01035c8	obj/kern/kernel.asm	/^f01035c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01035ca	obj/kern/kernel.asm	/^f01035ca:	56                   	push   %esi$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	53                   	push   %ebx$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	85 c0                	test   %eax,%eax$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	75 1a                	jne    f01035f0 <envid2env+0x29>$/;"	l
f01035d6	obj/kern/kernel.asm	/^f01035d6:	e8 1f 2e 00 00       	call   f01063fa <cpunum>$/;"	l
f01035db	obj/kern/kernel.asm	/^f01035db:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	89 01                	mov    %eax,(%ecx)$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	eb 73                	jmp    f0103663 <envid2env+0x9c>$/;"	l
f01035f0	obj/kern/kernel.asm	/^f01035f0:	89 c3                	mov    %eax,%ebx$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	69 db 90 02 00 00    	imul   $0x290,%ebx,%ebx$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	03 1d 48 42 22 f0    	add    0xf0224248,%ebx$/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	74 05                	je     f010360f <envid2env+0x48>$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	3b 43 48             	cmp    0x48(%ebx),%eax$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	74 10                	je     f010361f <envid2env+0x58>$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103612	obj/kern/kernel.asm	/^f0103612:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103618	obj/kern/kernel.asm	/^f0103618:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	eb 44                	jmp    f0103663 <envid2env+0x9c>$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	84 d2                	test   %dl,%dl$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	74 36                	je     f0103659 <envid2env+0x92>$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	e8 d2 2d 00 00       	call   f01063fa <cpunum>$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010362b	obj/kern/kernel.asm	/^f010362b:	3b 98 28 50 22 f0    	cmp    -0xfddafd8(%eax),%ebx$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	74 26                	je     f0103659 <envid2env+0x92>$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0103636	obj/kern/kernel.asm	/^f0103636:	e8 bf 2d 00 00       	call   f01063fa <cpunum>$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	74 10                	je     f0103659 <envid2env+0x92>$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	eb 0a                	jmp    f0103663 <envid2env+0x9c>$/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	89 18                	mov    %ebx,(%eax)$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	5b                   	pop    %ebx$/;"	l
f0103664	obj/kern/kernel.asm	/^f0103664:	5e                   	pop    %esi$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	5d                   	pop    %ebp$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	c3                   	ret    $/;"	l
f0103667	obj/kern/kernel.asm	/^f0103667 <env_init_percpu>:$/;"	l
f0103667	obj/kern/kernel.asm	/^f0103667:	55                   	push   %ebp$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	89 e5                	mov    %esp,%ebp$/;"	l
f010366a	obj/kern/kernel.asm	/^f010366a:	b8 20 23 12 f0       	mov    $0xf0122320,%eax$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	8e e8                	mov    %eax,%gs$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	8e e0                	mov    %eax,%fs$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680:	8e c0                	mov    %eax,%es$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	8e d8                	mov    %eax,%ds$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	8e d0                	mov    %eax,%ss$/;"	l
f0103686	obj/kern/kernel.asm	/^f0103686:	ea 8d 36 10 f0 08 00 	ljmp   $0x8,$0xf010368d$/;"	l
f010368d	obj/kern/kernel.asm	/^f010368d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	0f 00 d0             	lldt   %ax$/;"	l
f0103695	obj/kern/kernel.asm	/^f0103695:	5d                   	pop    %ebp$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	c3                   	ret    $/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697 <env_init>:$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	55                   	push   %ebp$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	89 e5                	mov    %esp,%ebp$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	56                   	push   %esi$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	53                   	push   %ebx$/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c:	8b 35 48 42 22 f0    	mov    0xf0224248,%esi$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	8b 15 4c 42 22 f0    	mov    0xf022424c,%edx$/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	8d 86 70 3d 0a 00    	lea    0xa3d70(%esi),%eax$/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	8d 9e 70 fd ff ff    	lea    -0x290(%esi),%ebx$/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	89 c1                	mov    %eax,%ecx$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%eax)$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%eax)$/;"	l
f01036d5	obj/kern/kernel.asm	/^f01036d5:	c7 40 60 00 00 00 00 	movl   $0x0,0x60(%eax)$/;"	l
f01036dc	obj/kern/kernel.asm	/^f01036dc:	2d 90 02 00 00       	sub    $0x290,%eax$/;"	l
f01036e1	obj/kern/kernel.asm	/^f01036e1:	89 ca                	mov    %ecx,%edx$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	39 d8                	cmp    %ebx,%eax$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	75 cd                	jne    f01036b4 <env_init+0x1d>$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	89 35 4c 42 22 f0    	mov    %esi,0xf022424c$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	e8 75 ff ff ff       	call   f0103667 <env_init_percpu>$/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2:	5b                   	pop    %ebx$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	5e                   	pop    %esi$/;"	l
f01036f4	obj/kern/kernel.asm	/^f01036f4:	5d                   	pop    %ebp$/;"	l
f01036f5	obj/kern/kernel.asm	/^f01036f5:	c3                   	ret    $/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6 <env_alloc>:$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	55                   	push   %ebp$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	89 e5                	mov    %esp,%ebp$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	53                   	push   %ebx$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	8b 1d 4c 42 22 f0    	mov    0xf022424c,%ebx$/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	85 db                	test   %ebx,%ebx$/;"	l
f0103705	obj/kern/kernel.asm	/^f0103705:	0f 84 65 01 00 00    	je     f0103870 <env_alloc+0x17a>$/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	6a 01                	push   $0x1$/;"	l
f0103710	obj/kern/kernel.asm	/^f0103710:	e8 b3 de ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	85 c0                	test   %eax,%eax$/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	0f 84 57 01 00 00    	je     f0103877 <env_alloc+0x181>$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	89 c2                	mov    %eax,%edx$/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	2b 15 94 4e 22 f0    	sub    0xf0224e94,%edx$/;"	l
f0103728	obj/kern/kernel.asm	/^f0103728:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	89 d1                	mov    %edx,%ecx$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	3b 0d 8c 4e 22 f0    	cmp    0xf0224e8c,%ecx$/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	72 12                	jb     f010374d <env_alloc+0x57>$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	52                   	push   %edx$/;"	l
f010373c	obj/kern/kernel.asm	/^f010373c:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	6a 5a                	push   $0x5a$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	e8 f3 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010375e	obj/kern/kernel.asm	/^f010375e:	68 14 01 00 00       	push   $0x114$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	05 ec 0e 00 00       	add    $0xeec,%eax$/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d:	50                   	push   %eax$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	05 ec 0e 00 00       	add    $0xeec,%eax$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	50                   	push   %eax$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	e8 12 27 00 00       	call   f0105e8e <memcpy>$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103787	obj/kern/kernel.asm	/^f0103787:	77 15                	ja     f010379e <env_alloc+0xa8>$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	50                   	push   %eax$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	68 ca 00 00 00       	push   $0xca$/;"	l
f0103794	obj/kern/kernel.asm	/^f0103794:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f0103799	obj/kern/kernel.asm	/^f0103799:	e8 a2 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	83 ca 05             	or     $0x5,%edx$/;"	l
f01037a7	obj/kern/kernel.asm	/^f01037a7:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01037ad	obj/kern/kernel.asm	/^f01037ad:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f01037b5	obj/kern/kernel.asm	/^f01037b5:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01037ba	obj/kern/kernel.asm	/^f01037ba:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01037bf	obj/kern/kernel.asm	/^f01037bf:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	89 da                	mov    %ebx,%edx$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	2b 15 48 42 22 f0    	sub    0xf0224248,%edx$/;"	l
f01037ca	obj/kern/kernel.asm	/^f01037ca:	c1 fa 04             	sar    $0x4,%edx$/;"	l
f01037cd	obj/kern/kernel.asm	/^f01037cd:	69 d2 19 9c 8f c1    	imul   $0xc18f9c19,%edx,%edx$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	09 d0                	or     %edx,%eax$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f01037d8	obj/kern/kernel.asm	/^f01037d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f01037e5	obj/kern/kernel.asm	/^f01037e5:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f01037ec	obj/kern/kernel.asm	/^f01037ec:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	6a 44                	push   $0x44$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	6a 00                	push   $0x0$/;"	l
f01037fa	obj/kern/kernel.asm	/^f01037fa:	53                   	push   %ebx$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	e8 d9 25 00 00       	call   f0105dd9 <memset>$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103812	obj/kern/kernel.asm	/^f0103812:	c7 43 3c fc df bf ee 	movl   $0xeebfdffc,0x3c(%ebx)$/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f010381f	obj/kern/kernel.asm	/^f010381f:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0103826	obj/kern/kernel.asm	/^f0103826:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	c6 83 70 02 00 00 00 	movb   $0x0,0x270(%ebx)$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	c6 83 71 02 00 00 00 	movb   $0x0,0x271(%ebx)$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	c7 83 88 02 00 00 00 	movl   $0x0,0x288(%ebx)$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	00 00 00 $/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	c7 83 84 02 00 00 00 	movl   $0x0,0x284(%ebx)$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	00 00 00 $/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	c7 83 8c 02 00 00 05 	movl   $0x5,0x28c(%ebx)$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	00 00 00 $/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	a3 4c 42 22 f0       	mov    %eax,0xf022424c$/;"	l
f0103861	obj/kern/kernel.asm	/^f0103861:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010386e	obj/kern/kernel.asm	/^f010386e:	eb 0c                	jmp    f010387c <env_alloc+0x186>$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	eb 05                	jmp    f010387c <env_alloc+0x186>$/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010387c	obj/kern/kernel.asm	/^f010387c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010387f	obj/kern/kernel.asm	/^f010387f:	c9                   	leave  $/;"	l
f0103880	obj/kern/kernel.asm	/^f0103880:	c3                   	ret    $/;"	l
f0103881	obj/kern/kernel.asm	/^f0103881 <env_create>:$/;"	l
f0103881	obj/kern/kernel.asm	/^f0103881:	55                   	push   %ebp$/;"	l
f0103882	obj/kern/kernel.asm	/^f0103882:	89 e5                	mov    %esp,%ebp$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	57                   	push   %edi$/;"	l
f0103885	obj/kern/kernel.asm	/^f0103885:	56                   	push   %esi$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	53                   	push   %ebx$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	83 ec 34             	sub    $0x34,%esp$/;"	l
f010388a	obj/kern/kernel.asm	/^f010388a:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	6a 00                	push   $0x0$/;"	l
f010388f	obj/kern/kernel.asm	/^f010388f:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103892	obj/kern/kernel.asm	/^f0103892:	50                   	push   %eax$/;"	l
f0103893	obj/kern/kernel.asm	/^f0103893:	e8 5e fe ff ff       	call   f01036f6 <env_alloc>$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010389b	obj/kern/kernel.asm	/^f010389b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010389e	obj/kern/kernel.asm	/^f010389e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01038a1	obj/kern/kernel.asm	/^f01038a1:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	74 15                	je     f01038be <env_create+0x3d>$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	57                   	push   %edi$/;"	l
f01038aa	obj/kern/kernel.asm	/^f01038aa:	68 d8 80 10 f0       	push   $0xf01080d8$/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	68 75 01 00 00       	push   $0x175$/;"	l
f01038b4	obj/kern/kernel.asm	/^f01038b4:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f01038b9	obj/kern/kernel.asm	/^f01038b9:	e8 82 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	89 fb                	mov    %edi,%ebx$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f01038c7	obj/kern/kernel.asm	/^f01038c7:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	01 de                	add    %ebx,%esi$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01038cf	obj/kern/kernel.asm	/^f01038cf:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	77 15                	ja     f01038ee <env_create+0x6d>$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	50                   	push   %eax$/;"	l
f01038da	obj/kern/kernel.asm	/^f01038da:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f01038df	obj/kern/kernel.asm	/^f01038df:	68 7a 01 00 00       	push   $0x17a$/;"	l
f01038e4	obj/kern/kernel.asm	/^f01038e4:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	e8 52 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	eb 44                	jmp    f010393c <env_create+0xbb>$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	75 3c                	jne    f0103939 <env_create+0xb8>$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	e8 38 fc ff ff       	call   f0103543 <region_alloc>$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	89 f8                	mov    %edi,%eax$/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	50                   	push   %eax$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a:	e8 6f 25 00 00       	call   f0105e8e <memcpy>$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	29 c2                	sub    %eax,%edx$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	52                   	push   %edx$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	6a 00                	push   $0x0$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0103930	obj/kern/kernel.asm	/^f0103930:	50                   	push   %eax$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	e8 a3 24 00 00       	call   f0105dd9 <memset>$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	83 c3 20             	add    $0x20,%ebx$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	39 de                	cmp    %ebx,%esi$/;"	l
f010393e	obj/kern/kernel.asm	/^f010393e:	77 b8                	ja     f01038f8 <env_create+0x77>$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010394a	obj/kern/kernel.asm	/^f010394a:	77 15                	ja     f0103961 <env_create+0xe0>$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	50                   	push   %eax$/;"	l
f010394d	obj/kern/kernel.asm	/^f010394d:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	68 83 01 00 00       	push   $0x183$/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	e8 df c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103961	obj/kern/kernel.asm	/^f0103961:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103966	obj/kern/kernel.asm	/^f0103966:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103969	obj/kern/kernel.asm	/^f0103969:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103977	obj/kern/kernel.asm	/^f0103977:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f010397c	obj/kern/kernel.asm	/^f010397c:	89 f8                	mov    %edi,%eax$/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	e8 c0 fb ff ff       	call   f0103543 <region_alloc>$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103986	obj/kern/kernel.asm	/^f0103986:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0103989	obj/kern/kernel.asm	/^f0103989:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f010398c	obj/kern/kernel.asm	/^f010398c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010398f	obj/kern/kernel.asm	/^f010398f:	5b                   	pop    %ebx$/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990:	5e                   	pop    %esi$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	5f                   	pop    %edi$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	5d                   	pop    %ebp$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	c3                   	ret    $/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994 <env_free>:$/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994:	55                   	push   %ebp$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	89 e5                	mov    %esp,%ebp$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	57                   	push   %edi$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	56                   	push   %esi$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	53                   	push   %ebx$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	e8 55 2a 00 00       	call   f01063fa <cpunum>$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af:	39 b8 28 50 22 f0    	cmp    %edi,-0xfddafd8(%eax)$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	75 30                	jne    f01039e7 <env_free+0x53>$/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	77 15                	ja     f01039d8 <env_free+0x44>$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	50                   	push   %eax$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	68 af 01 00 00       	push   $0x1af$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	e8 68 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f01039d8	obj/kern/kernel.asm	/^f01039d8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	89 d0                	mov    %edx,%eax$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01039f5	obj/kern/kernel.asm	/^f01039f5:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	0f 84 a8 00 00 00    	je     f0103aac <env_free+0x118>$/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	89 f0                	mov    %esi,%eax$/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	39 05 8c 4e 22 f0    	cmp    %eax,0xf0224e8c$/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	77 15                	ja     f0103a2f <env_free+0x9b>$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	56                   	push   %esi$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	68 be 01 00 00       	push   $0x1be$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	e8 11 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103a32	obj/kern/kernel.asm	/^f0103a32:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103a3d	obj/kern/kernel.asm	/^f0103a3d:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	01 $/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	74 17                	je     f0103a5e <env_free+0xca>$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	89 d8                	mov    %ebx,%eax$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103a4f	obj/kern/kernel.asm	/^f0103a4f:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	50                   	push   %eax$/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	e8 e6 de ff ff       	call   f0101941 <page_remove>$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a5e	obj/kern/kernel.asm	/^f0103a5e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103a67	obj/kern/kernel.asm	/^f0103a67:	75 d4                	jne    f0103a3d <env_free+0xa9>$/;"	l
f0103a69	obj/kern/kernel.asm	/^f0103a69:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103a79	obj/kern/kernel.asm	/^f0103a79:	3b 05 8c 4e 22 f0    	cmp    0xf0224e8c,%eax$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	72 14                	jb     f0103a95 <env_free+0x101>$/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	68 30 75 10 f0       	push   $0xf0107530$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	6a 53                	push   $0x53$/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f0103a90	obj/kern/kernel.asm	/^f0103a90:	e8 ab c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	a1 94 4e 22 f0       	mov    0xf0224e94,%eax$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103aa0	obj/kern/kernel.asm	/^f0103aa0:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	50                   	push   %eax$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	e8 e7 db ff ff       	call   f0101690 <page_decref>$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103aac	obj/kern/kernel.asm	/^f0103aac:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	0f 85 29 ff ff ff    	jne    f01039e7 <env_free+0x53>$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	77 15                	ja     f0103add <env_free+0x149>$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	50                   	push   %eax$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	68 cc 01 00 00       	push   $0x1cc$/;"	l
f0103ad3	obj/kern/kernel.asm	/^f0103ad3:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f0103ad8	obj/kern/kernel.asm	/^f0103ad8:	e8 63 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103add	obj/kern/kernel.asm	/^f0103add:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103ae9	obj/kern/kernel.asm	/^f0103ae9:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	3b 05 8c 4e 22 f0    	cmp    0xf0224e8c,%eax$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	72 14                	jb     f0103b08 <env_free+0x174>$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	68 30 75 10 f0       	push   $0xf0107530$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	6a 53                	push   $0x53$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	68 83 6e 10 f0       	push   $0xf0106e83$/;"	l
f0103b03	obj/kern/kernel.asm	/^f0103b03:	e8 38 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	8b 15 94 4e 22 f0    	mov    0xf0224e94,%edx$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	50                   	push   %eax$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	e8 76 db ff ff       	call   f0101690 <page_decref>$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	a1 4c 42 22 f0       	mov    0xf022424c,%eax$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	89 3d 4c 42 22 f0    	mov    %edi,0xf022424c$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b32	obj/kern/kernel.asm	/^f0103b32:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103b35	obj/kern/kernel.asm	/^f0103b35:	5b                   	pop    %ebx$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	5e                   	pop    %esi$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	5f                   	pop    %edi$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	5d                   	pop    %ebp$/;"	l
f0103b39	obj/kern/kernel.asm	/^f0103b39:	c3                   	ret    $/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a <env_destroy>:$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	55                   	push   %ebp$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	53                   	push   %ebx$/;"	l
f0103b3e	obj/kern/kernel.asm	/^f0103b3e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103b44	obj/kern/kernel.asm	/^f0103b44:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	75 19                	jne    f0103b63 <env_destroy+0x29>$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	e8 ab 28 00 00       	call   f01063fa <cpunum>$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b52	obj/kern/kernel.asm	/^f0103b52:	3b 98 28 50 22 f0    	cmp    -0xfddafd8(%eax),%ebx$/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58:	74 09                	je     f0103b63 <env_destroy+0x29>$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	eb 33                	jmp    f0103b96 <env_destroy+0x5c>$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	53                   	push   %ebx$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	e8 28 fe ff ff       	call   f0103994 <env_free>$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	e8 89 28 00 00       	call   f01063fa <cpunum>$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	3b 98 28 50 22 f0    	cmp    -0xfddafd8(%eax),%ebx$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	75 17                	jne    f0103b96 <env_destroy+0x5c>$/;"	l
f0103b7f	obj/kern/kernel.asm	/^f0103b7f:	e8 76 28 00 00       	call   f01063fa <cpunum>$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	c7 80 28 50 22 f0 00 	movl   $0x0,-0xfddafd8(%eax)$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	00 00 00 $/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	e8 ee 0c 00 00       	call   f0104884 <sched_yield>$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	c9                   	leave  $/;"	l
f0103b9a	obj/kern/kernel.asm	/^f0103b9a:	c3                   	ret    $/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b <env_pop_tf>:$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	55                   	push   %ebp$/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b9e	obj/kern/kernel.asm	/^f0103b9e:	53                   	push   %ebx$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	e8 53 28 00 00       	call   f01063fa <cpunum>$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	8b 98 28 50 22 f0    	mov    -0xfddafd8(%eax),%ebx$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	e8 45 28 00 00       	call   f01063fa <cpunum>$/;"	l
f0103bb5	obj/kern/kernel.asm	/^f0103bb5:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	e8 40 2b 00 00       	call   f0106705 <spin_unlock>$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	f3 90                	pause  $/;"	l
f0103bc7	obj/kern/kernel.asm	/^f0103bc7:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	61                   	popa   $/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	07                   	pop    %es$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	1f                   	pop    %ds$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	cf                   	iret   $/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	68 c9 80 10 f0       	push   $0xf01080c9$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	68 04 02 00 00       	push   $0x204$/;"	l
f0103bde	obj/kern/kernel.asm	/^f0103bde:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	e8 58 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8 <env_run>:$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	55                   	push   %ebp$/;"	l
f0103be9	obj/kern/kernel.asm	/^f0103be9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103bee	obj/kern/kernel.asm	/^f0103bee:	e8 07 28 00 00       	call   f01063fa <cpunum>$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f0103bfd	obj/kern/kernel.asm	/^f0103bfd:	74 29                	je     f0103c28 <env_run+0x40>$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	e8 f6 27 00 00       	call   f01063fa <cpunum>$/;"	l
f0103c04	obj/kern/kernel.asm	/^f0103c04:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	75 15                	jne    f0103c28 <env_run+0x40>$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	e8 e2 27 00 00       	call   f01063fa <cpunum>$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0103c21	obj/kern/kernel.asm	/^f0103c21:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103c28	obj/kern/kernel.asm	/^f0103c28:	e8 cd 27 00 00       	call   f01063fa <cpunum>$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103c33	obj/kern/kernel.asm	/^f0103c33:	89 90 28 50 22 f0    	mov    %edx,-0xfddafd8(%eax)$/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	e8 bc 27 00 00       	call   f01063fa <cpunum>$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	e8 a7 27 00 00       	call   f01063fa <cpunum>$/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0103c5c	obj/kern/kernel.asm	/^f0103c5c:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	e8 95 27 00 00       	call   f01063fa <cpunum>$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103c71	obj/kern/kernel.asm	/^f0103c71:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	77 15                	ja     f0103c8d <env_run+0xa5>$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	50                   	push   %eax$/;"	l
f0103c79	obj/kern/kernel.asm	/^f0103c79:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	68 27 02 00 00       	push   $0x227$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	68 ad 80 10 f0       	push   $0xf01080ad$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	e8 b3 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c8d	obj/kern/kernel.asm	/^f0103c8d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103c95	obj/kern/kernel.asm	/^f0103c95:	e8 60 27 00 00       	call   f01063fa <cpunum>$/;"	l
f0103c9a	obj/kern/kernel.asm	/^f0103c9a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c9d	obj/kern/kernel.asm	/^f0103c9d:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	0f ae 48 70          	fxrstor 0x70(%eax)$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	e8 4e 27 00 00       	call   f01063fa <cpunum>$/;"	l
f0103cac	obj/kern/kernel.asm	/^f0103cac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103caf	obj/kern/kernel.asm	/^f0103caf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cb2	obj/kern/kernel.asm	/^f0103cb2:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f0103cb8	obj/kern/kernel.asm	/^f0103cb8:	e8 de fe ff ff       	call   f0103b9b <env_pop_tf>$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd <mc146818_read>:$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	55                   	push   %ebp$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cc0	obj/kern/kernel.asm	/^f0103cc0:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103cc8	obj/kern/kernel.asm	/^f0103cc8:	ee                   	out    %al,(%dx)$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	ec                   	in     (%dx),%al$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103cd2	obj/kern/kernel.asm	/^f0103cd2:	5d                   	pop    %ebp$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	c3                   	ret    $/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4 <mc146818_write>:$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	55                   	push   %ebp$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	ee                   	out    %al,(%dx)$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103ce5	obj/kern/kernel.asm	/^f0103ce5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	ee                   	out    %al,(%dx)$/;"	l
f0103ce9	obj/kern/kernel.asm	/^f0103ce9:	5d                   	pop    %ebp$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	c3                   	ret    $/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb <irq_setmask_8259A>:$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	55                   	push   %ebp$/;"	l
f0103cec	obj/kern/kernel.asm	/^f0103cec:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	56                   	push   %esi$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	53                   	push   %ebx$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	66 a3 a8 23 12 f0    	mov    %ax,0xf01223a8$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	80 3d 50 42 22 f0 00 	cmpb   $0x0,0xf0224250$/;"	l
f0103d00	obj/kern/kernel.asm	/^f0103d00:	74 5a                	je     f0103d5c <irq_setmask_8259A+0x71>$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	89 c6                	mov    %eax,%esi$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	ee                   	out    %al,(%dx)$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103d13	obj/kern/kernel.asm	/^f0103d13:	ee                   	out    %al,(%dx)$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d17	obj/kern/kernel.asm	/^f0103d17:	68 fc 80 10 f0       	push   $0xf01080fc$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	e8 1b 01 00 00       	call   f0103e3c <cprintf>$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d24	obj/kern/kernel.asm	/^f0103d24:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	f7 d6                	not    %esi$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	73 11                	jae    f0103d44 <irq_setmask_8259A+0x59>$/;"	l
f0103d33	obj/kern/kernel.asm	/^f0103d33:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d36	obj/kern/kernel.asm	/^f0103d36:	53                   	push   %ebx$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	68 8f 85 10 f0       	push   $0xf010858f$/;"	l
f0103d3c	obj/kern/kernel.asm	/^f0103d3c:	e8 fb 00 00 00       	call   f0103e3c <cprintf>$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103d47	obj/kern/kernel.asm	/^f0103d47:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103d4a	obj/kern/kernel.asm	/^f0103d4a:	75 e2                	jne    f0103d2e <irq_setmask_8259A+0x43>$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	68 5f 80 10 f0       	push   $0xf010805f$/;"	l
f0103d54	obj/kern/kernel.asm	/^f0103d54:	e8 e3 00 00 00       	call   f0103e3c <cprintf>$/;"	l
f0103d59	obj/kern/kernel.asm	/^f0103d59:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d5c	obj/kern/kernel.asm	/^f0103d5c:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103d5f	obj/kern/kernel.asm	/^f0103d5f:	5b                   	pop    %ebx$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	5e                   	pop    %esi$/;"	l
f0103d61	obj/kern/kernel.asm	/^f0103d61:	5d                   	pop    %ebp$/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	c3                   	ret    $/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63 <pic_init>:$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	c6 05 50 42 22 f0 01 	movb   $0x1,0xf0224250$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	ee                   	out    %al,(%dx)$/;"	l
f0103d75	obj/kern/kernel.asm	/^f0103d75:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	ee                   	out    %al,(%dx)$/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103d80	obj/kern/kernel.asm	/^f0103d80:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	ee                   	out    %al,(%dx)$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	ee                   	out    %al,(%dx)$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	ee                   	out    %al,(%dx)$/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103d9c	obj/kern/kernel.asm	/^f0103d9c:	ee                   	out    %al,(%dx)$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	ee                   	out    %al,(%dx)$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	ee                   	out    %al,(%dx)$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	ee                   	out    %al,(%dx)$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	ee                   	out    %al,(%dx)$/;"	l
f0103dbf	obj/kern/kernel.asm	/^f0103dbf:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	ee                   	out    %al,(%dx)$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	ee                   	out    %al,(%dx)$/;"	l
f0103dd0	obj/kern/kernel.asm	/^f0103dd0:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	ee                   	out    %al,(%dx)$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	ee                   	out    %al,(%dx)$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	0f b7 05 a8 23 12 f0 	movzwl 0xf01223a8,%eax$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103dec	obj/kern/kernel.asm	/^f0103dec:	74 13                	je     f0103e01 <pic_init+0x9e>$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	55                   	push   %ebp$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	89 e5                	mov    %esp,%ebp$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	50                   	push   %eax$/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	e8 ee fe ff ff       	call   f0103ceb <irq_setmask_8259A>$/;"	l
f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	c9                   	leave  $/;"	l
f0103e01	obj/kern/kernel.asm	/^f0103e01:	f3 c3                	repz ret $/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03 <putch>:$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	55                   	push   %ebp$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	e8 73 c9 ff ff       	call   f0100784 <cputchar>$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	c9                   	leave  $/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	c3                   	ret    $/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16 <vcprintf>:$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	55                   	push   %ebp$/;"	l
f0103e17	obj/kern/kernel.asm	/^f0103e17:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e19	obj/kern/kernel.asm	/^f0103e19:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103e29	obj/kern/kernel.asm	/^f0103e29:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	50                   	push   %eax$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	68 03 3e 10 f0       	push   $0xf0103e03$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	e8 2d 18 00 00       	call   f0105664 <vprintfmt>$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	c9                   	leave  $/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	c3                   	ret    $/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c <cprintf>:$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	55                   	push   %ebp$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	50                   	push   %eax$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	e8 c8 ff ff ff       	call   f0103e16 <vcprintf>$/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	c9                   	leave  $/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	c3                   	ret    $/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50 <trap_init_percpu>:$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	55                   	push   %ebp$/;"	l
f0103e51	obj/kern/kernel.asm	/^f0103e51:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	57                   	push   %edi$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	56                   	push   %esi$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	53                   	push   %ebx$/;"	l
f0103e56	obj/kern/kernel.asm	/^f0103e56:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103e59	obj/kern/kernel.asm	/^f0103e59:	e8 9c 25 00 00       	call   f01063fa <cpunum>$/;"	l
f0103e5e	obj/kern/kernel.asm	/^f0103e5e:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0103e61	obj/kern/kernel.asm	/^f0103e61:	bf 00 00 00 f0       	mov    $0xf0000000,%edi$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	29 c7                	sub    %eax,%edi$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	e8 8d 25 00 00       	call   f01063fa <cpunum>$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	89 b8 30 50 22 f0    	mov    %edi,-0xfddafd0(%eax)$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	e8 7f 25 00 00       	call   f01063fa <cpunum>$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	66 c7 80 34 50 22 f0 	movw   $0x10,-0xfddafcc(%eax)$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	10 00 $/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	e8 6e 25 00 00       	call   f01063fa <cpunum>$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	66 c7 80 92 50 22 f0 	movw   $0x68,-0xfddaf6e(%eax)$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	68 00 $/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	e8 5d 25 00 00       	call   f01063fa <cpunum>$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	8d 58 05             	lea    0x5(%eax),%ebx$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	e8 55 25 00 00       	call   f01063fa <cpunum>$/;"	l
f0103ea5	obj/kern/kernel.asm	/^f0103ea5:	89 c6                	mov    %eax,%esi$/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	e8 4e 25 00 00       	call   f01063fa <cpunum>$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	e8 46 25 00 00       	call   f01063fa <cpunum>$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	66 c7 04 dd 40 23 12 	movw   $0x67,-0xfeddcc0(,%ebx,8)$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	f0 67 00 $/;"	l
f0103ebe	obj/kern/kernel.asm	/^f0103ebe:	6b f6 74             	imul   $0x74,%esi,%esi$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	81 c6 2c 50 22 f0    	add    $0xf022502c,%esi$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	66 89 34 dd 42 23 12 	mov    %si,-0xfeddcbe(,%ebx,8)$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	f0 $/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	6b 55 e4 74          	imul   $0x74,-0x1c(%ebp),%edx$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	81 c2 2c 50 22 f0    	add    $0xf022502c,%edx$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	88 14 dd 44 23 12 f0 	mov    %dl,-0xfeddcbc(,%ebx,8)$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	c6 04 dd 45 23 12 f0 	movb   $0x99,-0xfeddcbb(,%ebx,8)$/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	99 $/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	c6 04 dd 46 23 12 f0 	movb   $0x40,-0xfeddcba(,%ebx,8)$/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	40 $/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	05 2c 50 22 f0       	add    $0xf022502c,%eax$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	88 04 dd 47 23 12 f0 	mov    %al,-0xfeddcb9(,%ebx,8)$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	e8 f0 24 00 00       	call   f01063fa <cpunum>$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	80 24 c5 6d 23 12 f0 	andb   $0xef,-0xfeddc93(,%eax,8)$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	ef $/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	e8 e3 24 00 00       	call   f01063fa <cpunum>$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	8d 04 c5 28 00 00 00 	lea    0x28(,%eax,8),%eax$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	0f 00 d8             	ltr    %ax$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	b8 ac 23 12 f0       	mov    $0xf01223ac,%eax$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103f29	obj/kern/kernel.asm	/^f0103f29:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	0f 30                	wrmsr  $/;"	l
f0103f3a	obj/kern/kernel.asm	/^f0103f3a:	b9 75 01 00 00       	mov    $0x175,%ecx$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	89 f8                	mov    %edi,%eax$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	0f 30                	wrmsr  $/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	b8 4a 47 10 f0       	mov    $0xf010474a,%eax$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	b9 76 01 00 00       	mov    $0x176,%ecx$/;"	l
f0103f4d	obj/kern/kernel.asm	/^f0103f4d:	0f 30                	wrmsr  $/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	80 cc 02             	or     $0x2,%ah$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	5b                   	pop    %ebx$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	5e                   	pop    %esi$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	5f                   	pop    %edi$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	5d                   	pop    %ebp$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	c3                   	ret    $/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60 <trap_init>:$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	8b 0c 85 b2 23 12 f0 	mov    -0xfeddc4e(,%eax,4),%ecx$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	66 89 0c c5 60 42 22 	mov    %cx,-0xfddbda0(,%eax,8)$/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	f0 $/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	66 c7 04 c5 62 42 22 	movw   $0x8,-0xfddbd9e(,%eax,8)$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	f0 08 00 $/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	c6 04 c5 64 42 22 f0 	movb   $0x0,-0xfddbd9c(,%eax,8)$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	00 $/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	0f 94 c2             	sete   %dl$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	f7 da                	neg    %edx$/;"	l
f0103f8e	obj/kern/kernel.asm	/^f0103f8e:	83 e2 03             	and    $0x3,%edx$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	83 ca 8e             	or     $0xffffff8e,%edx$/;"	l
f0103f97	obj/kern/kernel.asm	/^f0103f97:	88 14 c5 65 42 22 f0 	mov    %dl,-0xfddbd9b(,%eax,8)$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	66 89 0c c5 66 42 22 	mov    %cx,-0xfddbd9a(,%eax,8)$/;"	l
f0103fa8	obj/kern/kernel.asm	/^f0103fa8:	f0 $/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	83 f8 14             	cmp    $0x14,%eax$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	75 b4                	jne    f0103f65 <trap_init+0x5>$/;"	l
f0103fb1	obj/kern/kernel.asm	/^f0103fb1:	a1 02 24 12 f0       	mov    0xf0122402,%eax$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	66 a3 e0 43 22 f0    	mov    %ax,0xf02243e0$/;"	l
f0103fbc	obj/kern/kernel.asm	/^f0103fbc:	66 c7 05 e2 43 22 f0 	movw   $0x8,0xf02243e2$/;"	l
f0103fc3	obj/kern/kernel.asm	/^f0103fc3:	08 00 $/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	c6 05 e4 43 22 f0 00 	movb   $0x0,0xf02243e4$/;"	l
f0103fcc	obj/kern/kernel.asm	/^f0103fcc:	c6 05 e5 43 22 f0 ee 	movb   $0xee,0xf02243e5$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	66 a3 e6 43 22 f0    	mov    %ax,0xf02243e6$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103fe1	obj/kern/kernel.asm	/^f0103fe1:	8b 14 85 86 23 12 f0 	mov    -0xfeddc7a(,%eax,4),%edx$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	66 89 14 c5 60 42 22 	mov    %dx,-0xfddbda0(,%eax,8)$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	f0 $/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	66 c7 04 c5 62 42 22 	movw   $0x8,-0xfddbd9e(,%eax,8)$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	f0 08 00 $/;"	l
f0103ffa	obj/kern/kernel.asm	/^f0103ffa:	c6 04 c5 64 42 22 f0 	movb   $0x0,-0xfddbd9c(,%eax,8)$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	00 $/;"	l
f0104002	obj/kern/kernel.asm	/^f0104002:	c6 04 c5 65 42 22 f0 	movb   $0x8e,-0xfddbd9b(,%eax,8)$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	8e $/;"	l
f010400a	obj/kern/kernel.asm	/^f010400a:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	66 89 14 c5 66 42 22 	mov    %dx,-0xfddbd9a(,%eax,8)$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	f0 $/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	75 c4                	jne    f0103fe1 <trap_init+0x81>$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	55                   	push   %ebp$/;"	l
f010401e	obj/kern/kernel.asm	/^f010401e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104023	obj/kern/kernel.asm	/^f0104023:	e8 28 fe ff ff       	call   f0103e50 <trap_init_percpu>$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	c9                   	leave  $/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	c3                   	ret    $/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a <print_regs>:$/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	55                   	push   %ebp$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	89 e5                	mov    %esp,%ebp$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	53                   	push   %ebx$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	ff 33                	pushl  (%ebx)$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	68 10 81 10 f0       	push   $0xf0108110$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	e8 fc fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104043	obj/kern/kernel.asm	/^f0104043:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	68 1f 81 10 f0       	push   $0xf010811f$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	e8 ec fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	68 2e 81 10 f0       	push   $0xf010812e$/;"	l
f010405b	obj/kern/kernel.asm	/^f010405b:	e8 dc fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104060	obj/kern/kernel.asm	/^f0104060:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104063	obj/kern/kernel.asm	/^f0104063:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066:	68 3d 81 10 f0       	push   $0xf010813d$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	e8 cc fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104073	obj/kern/kernel.asm	/^f0104073:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0104076	obj/kern/kernel.asm	/^f0104076:	68 4c 81 10 f0       	push   $0xf010814c$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	e8 bc fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104083	obj/kern/kernel.asm	/^f0104083:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0104086	obj/kern/kernel.asm	/^f0104086:	68 5b 81 10 f0       	push   $0xf010815b$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	e8 ac fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	68 6a 81 10 f0       	push   $0xf010816a$/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	e8 9c fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f01040a0	obj/kern/kernel.asm	/^f01040a0:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040a3	obj/kern/kernel.asm	/^f01040a3:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f01040a6	obj/kern/kernel.asm	/^f01040a6:	68 79 81 10 f0       	push   $0xf0108179$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	e8 8c fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01040b6	obj/kern/kernel.asm	/^f01040b6:	c9                   	leave  $/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	c3                   	ret    $/;"	l
f01040b8	obj/kern/kernel.asm	/^f01040b8 <print_trapframe>:$/;"	l
f01040b8	obj/kern/kernel.asm	/^f01040b8:	55                   	push   %ebp$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	56                   	push   %esi$/;"	l
f01040bc	obj/kern/kernel.asm	/^f01040bc:	53                   	push   %ebx$/;"	l
f01040bd	obj/kern/kernel.asm	/^f01040bd:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	e8 35 23 00 00       	call   f01063fa <cpunum>$/;"	l
f01040c5	obj/kern/kernel.asm	/^f01040c5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	50                   	push   %eax$/;"	l
f01040c9	obj/kern/kernel.asm	/^f01040c9:	53                   	push   %ebx$/;"	l
f01040ca	obj/kern/kernel.asm	/^f01040ca:	68 dd 81 10 f0       	push   $0xf01081dd$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	e8 68 fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f01040d4	obj/kern/kernel.asm	/^f01040d4:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01040d7	obj/kern/kernel.asm	/^f01040d7:	e8 4e ff ff ff       	call   f010402a <print_regs>$/;"	l
f01040dc	obj/kern/kernel.asm	/^f01040dc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f01040e3	obj/kern/kernel.asm	/^f01040e3:	50                   	push   %eax$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	68 fb 81 10 f0       	push   $0xf01081fb$/;"	l
f01040e9	obj/kern/kernel.asm	/^f01040e9:	e8 4e fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	50                   	push   %eax$/;"	l
f01040f6	obj/kern/kernel.asm	/^f01040f6:	68 0e 82 10 f0       	push   $0xf010820e$/;"	l
f01040fb	obj/kern/kernel.asm	/^f01040fb:	e8 3c fd ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104100	obj/kern/kernel.asm	/^f0104100:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	77 09                	ja     f0104114 <print_trapframe+0x5c>$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	8b 14 85 a0 84 10 f0 	mov    -0xfef7b60(,%eax,4),%edx$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	eb 1f                	jmp    f0104133 <print_trapframe+0x7b>$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	74 15                	je     f010412e <print_trapframe+0x76>$/;"	l
f0104119	obj/kern/kernel.asm	/^f0104119:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	b9 a7 81 10 f0       	mov    $0xf01081a7,%ecx$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	ba 94 81 10 f0       	mov    $0xf0108194,%edx$/;"	l
f0104129	obj/kern/kernel.asm	/^f0104129:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	eb 05                	jmp    f0104133 <print_trapframe+0x7b>$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	ba 88 81 10 f0       	mov    $0xf0108188,%edx$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	52                   	push   %edx$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	50                   	push   %eax$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	68 21 82 10 f0       	push   $0xf0108221$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	e8 fa fc ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104145	obj/kern/kernel.asm	/^f0104145:	3b 1d 60 4a 22 f0    	cmp    0xf0224a60,%ebx$/;"	l
f010414b	obj/kern/kernel.asm	/^f010414b:	75 1a                	jne    f0104167 <print_trapframe+0xaf>$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104151	obj/kern/kernel.asm	/^f0104151:	75 14                	jne    f0104167 <print_trapframe+0xaf>$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	50                   	push   %eax$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	68 33 82 10 f0       	push   $0xf0108233$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	e8 d8 fc ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	68 42 82 10 f0       	push   $0xf0108242$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	e8 c5 fc ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104177	obj/kern/kernel.asm	/^f0104177:	83 c4 10             	add    $0x10,%esp$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	75 49                	jne    f01041c9 <print_trapframe+0x111>$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	89 c2                	mov    %eax,%edx$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	83 e2 01             	and    $0x1,%edx$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	ba c1 81 10 f0       	mov    $0xf01081c1,%edx$/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	b9 b6 81 10 f0       	mov    $0xf01081b6,%ecx$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	89 c2                	mov    %eax,%edx$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	83 e2 02             	and    $0x2,%edx$/;"	l
f010419a	obj/kern/kernel.asm	/^f010419a:	ba d3 81 10 f0       	mov    $0xf01081d3,%edx$/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	be cd 81 10 f0       	mov    $0xf01081cd,%esi$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	83 e0 04             	and    $0x4,%eax$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa:	be 2b 83 10 f0       	mov    $0xf010832b,%esi$/;"	l
f01041af	obj/kern/kernel.asm	/^f01041af:	b8 d8 81 10 f0       	mov    $0xf01081d8,%eax$/;"	l
f01041b4	obj/kern/kernel.asm	/^f01041b4:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	51                   	push   %ecx$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	52                   	push   %edx$/;"	l
f01041b9	obj/kern/kernel.asm	/^f01041b9:	50                   	push   %eax$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	68 50 82 10 f0       	push   $0xf0108250$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	e8 78 fc ff ff       	call   f0103e3c <cprintf>$/;"	l
f01041c4	obj/kern/kernel.asm	/^f01041c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041c7	obj/kern/kernel.asm	/^f01041c7:	eb 10                	jmp    f01041d9 <print_trapframe+0x121>$/;"	l
f01041c9	obj/kern/kernel.asm	/^f01041c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01041cc	obj/kern/kernel.asm	/^f01041cc:	68 5f 80 10 f0       	push   $0xf010805f$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	e8 66 fc ff ff       	call   f0103e3c <cprintf>$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01041dc	obj/kern/kernel.asm	/^f01041dc:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	68 5f 82 10 f0       	push   $0xf010825f$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	e8 53 fc ff ff       	call   f0103e3c <cprintf>$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	83 c4 08             	add    $0x8,%esp$/;"	l
f01041ec	obj/kern/kernel.asm	/^f01041ec:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	50                   	push   %eax$/;"	l
f01041f1	obj/kern/kernel.asm	/^f01041f1:	68 6e 82 10 f0       	push   $0xf010826e$/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6:	e8 41 fc ff ff       	call   f0103e3c <cprintf>$/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	83 c4 08             	add    $0x8,%esp$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0104201	obj/kern/kernel.asm	/^f0104201:	68 81 82 10 f0       	push   $0xf0108281$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	e8 31 fc ff ff       	call   f0103e3c <cprintf>$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	74 25                	je     f0104239 <print_trapframe+0x181>$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	68 90 82 10 f0       	push   $0xf0108290$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	e8 18 fc ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104224	obj/kern/kernel.asm	/^f0104224:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f010422b	obj/kern/kernel.asm	/^f010422b:	50                   	push   %eax$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	68 9f 82 10 f0       	push   $0xf010829f$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	e8 06 fc ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	5b                   	pop    %ebx$/;"	l
f010423d	obj/kern/kernel.asm	/^f010423d:	5e                   	pop    %esi$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	5d                   	pop    %ebp$/;"	l
f010423f	obj/kern/kernel.asm	/^f010423f:	c3                   	ret    $/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240 <page_fault_handler>:$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	55                   	push   %ebp$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	89 e5                	mov    %esp,%ebp$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	57                   	push   %edi$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	56                   	push   %esi$/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245:	53                   	push   %ebx$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104253	obj/kern/kernel.asm	/^f0104253:	75 15                	jne    f010426a <page_fault_handler+0x2a>$/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	56                   	push   %esi$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	68 b2 82 10 f0       	push   $0xf01082b2$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	68 4c 01 00 00       	push   $0x14c$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	68 d0 82 10 f0       	push   $0xf01082d0$/;"	l
f0104265	obj/kern/kernel.asm	/^f0104265:	e8 d6 bd ff ff       	call   f0100040 <_panic>$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	e8 8b 21 00 00       	call   f01063fa <cpunum>$/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	0f 84 d5 00 00 00    	je     f0104357 <page_fault_handler+0x117>$/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	e8 73 21 00 00       	call   f01063fa <cpunum>$/;"	l
f0104287	obj/kern/kernel.asm	/^f0104287:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010428a	obj/kern/kernel.asm	/^f010428a:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	81 78 3c ff ef bf ee 	cmpl   $0xeebfefff,0x3c(%eax)$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	76 35                	jbe    f01042ce <page_fault_handler+0x8e>$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	e8 5c 21 00 00       	call   f01063fa <cpunum>$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01042a7	obj/kern/kernel.asm	/^f01042a7:	81 78 3c ff ff bf ee 	cmpl   $0xeebfffff,0x3c(%eax)$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	77 1e                	ja     f01042ce <page_fault_handler+0x8e>$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	e8 45 21 00 00       	call   f01063fa <cpunum>$/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f01042c1	obj/kern/kernel.asm	/^f01042c1:	83 e8 38             	sub    $0x38,%eax$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	89 c7                	mov    %eax,%edi$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	0f 84 8b 00 00 00    	je     f0104357 <page_fault_handler+0x117>$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	eb 1c                	jmp    f01042ea <page_fault_handler+0xaa>$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	e8 27 21 00 00       	call   f01063fa <cpunum>$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	81 78 3c 00 e0 bf ee 	cmpl   $0xeebfe000,0x3c(%eax)$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	77 72                	ja     f0104357 <page_fault_handler+0x117>$/;"	l
f01042e5	obj/kern/kernel.asm	/^f01042e5:	bf cc ff bf ee       	mov    $0xeebfffcc,%edi$/;"	l
f01042ea	obj/kern/kernel.asm	/^f01042ea:	e8 0b 21 00 00       	call   f01063fa <cpunum>$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	6a 06                	push   $0x6$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	6a 34                	push   $0x34$/;"	l
f01042f3	obj/kern/kernel.asm	/^f01042f3:	57                   	push   %edi$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	e8 f7 f1 ff ff       	call   f01034f9 <user_mem_assert>$/;"	l
f0104302	obj/kern/kernel.asm	/^f0104302:	89 37                	mov    %esi,(%edi)$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	89 fa                	mov    %edi,%edx$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	89 de                	mov    %ebx,%esi$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104327	obj/kern/kernel.asm	/^f0104327:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	89 53 3c             	mov    %edx,0x3c(%ebx)$/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	e8 c8 20 00 00       	call   f01063fa <cpunum>$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f010433b	obj/kern/kernel.asm	/^f010433b:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	e8 b4 20 00 00       	call   f01063fa <cpunum>$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104349	obj/kern/kernel.asm	/^f0104349:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f0104352	obj/kern/kernel.asm	/^f0104352:	e8 91 f8 ff ff       	call   f0103be8 <env_run>$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f010435a	obj/kern/kernel.asm	/^f010435a:	e8 9b 20 00 00       	call   f01063fa <cpunum>$/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f:	57                   	push   %edi$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	56                   	push   %esi$/;"	l
f0104361	obj/kern/kernel.asm	/^f0104361:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	68 78 84 10 f0       	push   $0xf0108478$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	e8 c5 fa ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010437a	obj/kern/kernel.asm	/^f010437a:	e8 39 fd ff ff       	call   f01040b8 <print_trapframe>$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	e8 76 20 00 00       	call   f01063fa <cpunum>$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104387	obj/kern/kernel.asm	/^f0104387:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f0104390	obj/kern/kernel.asm	/^f0104390:	e8 a5 f7 ff ff       	call   f0103b3a <env_destroy>$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	5b                   	pop    %ebx$/;"	l
f010439c	obj/kern/kernel.asm	/^f010439c:	5e                   	pop    %esi$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	5f                   	pop    %edi$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	5d                   	pop    %ebp$/;"	l
f010439f	obj/kern/kernel.asm	/^f010439f:	c3                   	ret    $/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0 <trap>:$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	55                   	push   %ebp$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01043a3	obj/kern/kernel.asm	/^f01043a3:	57                   	push   %edi$/;"	l
f01043a4	obj/kern/kernel.asm	/^f01043a4:	56                   	push   %esi$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01043a8	obj/kern/kernel.asm	/^f01043a8:	fc                   	cld    $/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	83 3d 80 4e 22 f0 00 	cmpl   $0x0,0xf0224e80$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	74 01                	je     f01043b3 <trap+0x13>$/;"	l
f01043b2	obj/kern/kernel.asm	/^f01043b2:	f4                   	hlt    $/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	e8 42 20 00 00       	call   f01063fa <cpunum>$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	81 c2 20 50 22 f0    	add    $0xf0225020,%edx$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f01043ca	obj/kern/kernel.asm	/^f01043ca:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f01043cd	obj/kern/kernel.asm	/^f01043cd:	75 10                	jne    f01043df <trap+0x3f>$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043d2	obj/kern/kernel.asm	/^f01043d2:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	e8 8c 22 00 00       	call   f0106668 <spin_lock>$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	9c                   	pushf  $/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	58                   	pop    %eax$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	f6 c4 02             	test   $0x2,%ah$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	74 19                	je     f01043ff <trap+0x5f>$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	68 dc 82 10 f0       	push   $0xf01082dc$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	68 13 01 00 00       	push   $0x113$/;"	l
f01043f5	obj/kern/kernel.asm	/^f01043f5:	68 d0 82 10 f0       	push   $0xf01082d0$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	e8 41 bc ff ff       	call   f0100040 <_panic>$/;"	l
f01043ff	obj/kern/kernel.asm	/^f01043ff:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104406	obj/kern/kernel.asm	/^f0104406:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f010440a	obj/kern/kernel.asm	/^f010440a:	0f 85 b2 00 00 00    	jne    f01044c2 <trap+0x122>$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	e8 e5 1f 00 00       	call   f01063fa <cpunum>$/;"	l
f0104415	obj/kern/kernel.asm	/^f0104415:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	75 19                	jne    f010443a <trap+0x9a>$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	68 f5 82 10 f0       	push   $0xf01082f5$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	68 a5 7d 10 f0       	push   $0xf0107da5$/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	68 1a 01 00 00       	push   $0x11a$/;"	l
f0104430	obj/kern/kernel.asm	/^f0104430:	68 d0 82 10 f0       	push   $0xf01082d0$/;"	l
f0104435	obj/kern/kernel.asm	/^f0104435:	e8 06 bc ff ff       	call   f0100040 <_panic>$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010443d	obj/kern/kernel.asm	/^f010443d:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	e8 21 22 00 00       	call   f0106668 <spin_lock>$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	e8 ae 1f 00 00       	call   f01063fa <cpunum>$/;"	l
f010444c	obj/kern/kernel.asm	/^f010444c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010444f	obj/kern/kernel.asm	/^f010444f:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104455	obj/kern/kernel.asm	/^f0104455:	0f ae 40 70          	fxsave 0x70(%eax)$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	e8 9c 1f 00 00       	call   f01063fa <cpunum>$/;"	l
f010445e	obj/kern/kernel.asm	/^f010445e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104461	obj/kern/kernel.asm	/^f0104461:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	83 c4 10             	add    $0x10,%esp$/;"	l
f010446a	obj/kern/kernel.asm	/^f010446a:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f010446e	obj/kern/kernel.asm	/^f010446e:	75 2d                	jne    f010449d <trap+0xfd>$/;"	l
f0104470	obj/kern/kernel.asm	/^f0104470:	e8 85 1f 00 00       	call   f01063fa <cpunum>$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010447b	obj/kern/kernel.asm	/^f010447b:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	e8 0e f5 ff ff       	call   f0103994 <env_free>$/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	e8 6f 1f 00 00       	call   f01063fa <cpunum>$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	c7 80 28 50 22 f0 00 	movl   $0x0,-0xfddafd8(%eax)$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	00 00 00 $/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	e8 e7 03 00 00       	call   f0104884 <sched_yield>$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	e8 58 1f 00 00       	call   f01063fa <cpunum>$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044a5	obj/kern/kernel.asm	/^f01044a5:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01044b0	obj/kern/kernel.asm	/^f01044b0:	89 c7                	mov    %eax,%edi$/;"	l
f01044b2	obj/kern/kernel.asm	/^f01044b2:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	e8 41 1f 00 00       	call   f01063fa <cpunum>$/;"	l
f01044b9	obj/kern/kernel.asm	/^f01044b9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	8b b0 28 50 22 f0    	mov    -0xfddafd8(%eax),%esi$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	89 35 60 4a 22 f0    	mov    %esi,0xf0224a60$/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	75 11                	jne    f01044e1 <trap+0x141>$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	56                   	push   %esi$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	e8 67 fd ff ff       	call   f0104240 <page_fault_handler>$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	e9 c3 00 00 00       	jmp    f01045a4 <trap+0x204>$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	75 11                	jne    f01044f7 <trap+0x157>$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	56                   	push   %esi$/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea:	e8 aa ca ff ff       	call   f0100f99 <monitor>$/;"	l
f01044ef	obj/kern/kernel.asm	/^f01044ef:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044f2	obj/kern/kernel.asm	/^f01044f2:	e9 ad 00 00 00       	jmp    f01045a4 <trap+0x204>$/;"	l
f01044f7	obj/kern/kernel.asm	/^f01044f7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa:	75 11                	jne    f010450d <trap+0x16d>$/;"	l
f01044fc	obj/kern/kernel.asm	/^f01044fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044ff	obj/kern/kernel.asm	/^f01044ff:	56                   	push   %esi$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	e8 94 ca ff ff       	call   f0100f99 <monitor>$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	e9 97 00 00 00       	jmp    f01045a4 <trap+0x204>$/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	75 21                	jne    f0104533 <trap+0x193>$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104515	obj/kern/kernel.asm	/^f0104515:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0104518	obj/kern/kernel.asm	/^f0104518:	ff 36                	pushl  (%esi)$/;"	l
f010451a	obj/kern/kernel.asm	/^f010451a:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f010451d	obj/kern/kernel.asm	/^f010451d:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526:	e8 a0 06 00 00       	call   f0104bcb <syscall>$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104531	obj/kern/kernel.asm	/^f0104531:	eb 71                	jmp    f01045a4 <trap+0x204>$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	75 1a                	jne    f0104552 <trap+0x1b2>$/;"	l
f0104538	obj/kern/kernel.asm	/^f0104538:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	68 fc 82 10 f0       	push   $0xf01082fc$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	e8 f7 f8 ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	e8 6b fb ff ff       	call   f01040b8 <print_trapframe>$/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104550	obj/kern/kernel.asm	/^f0104550:	eb 52                	jmp    f01045a4 <trap+0x204>$/;"	l
f0104552	obj/kern/kernel.asm	/^f0104552:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	75 0a                	jne    f0104561 <trap+0x1c1>$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	e8 e9 1f 00 00       	call   f0106545 <lapic_eoi>$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	e8 23 03 00 00       	call   f0104884 <sched_yield>$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	56                   	push   %esi$/;"	l
f0104565	obj/kern/kernel.asm	/^f0104565:	e8 4e fb ff ff       	call   f01040b8 <print_trapframe>$/;"	l
f010456a	obj/kern/kernel.asm	/^f010456a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572:	75 17                	jne    f010458b <trap+0x1eb>$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	68 19 83 10 f0       	push   $0xf0108319$/;"	l
f010457c	obj/kern/kernel.asm	/^f010457c:	68 f9 00 00 00       	push   $0xf9$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	68 d0 82 10 f0       	push   $0xf01082d0$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	e8 b5 ba ff ff       	call   f0100040 <_panic>$/;"	l
f010458b	obj/kern/kernel.asm	/^f010458b:	e8 6a 1e 00 00       	call   f01063fa <cpunum>$/;"	l
f0104590	obj/kern/kernel.asm	/^f0104590:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f010459c	obj/kern/kernel.asm	/^f010459c:	e8 99 f5 ff ff       	call   f0103b3a <env_destroy>$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	e8 51 1e 00 00       	call   f01063fa <cpunum>$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f01045b3	obj/kern/kernel.asm	/^f01045b3:	74 2a                	je     f01045df <trap+0x23f>$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	e8 40 1e 00 00       	call   f01063fa <cpunum>$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045bd	obj/kern/kernel.asm	/^f01045bd:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	75 16                	jne    f01045df <trap+0x23f>$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	e8 2c 1e 00 00       	call   f01063fa <cpunum>$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045d1	obj/kern/kernel.asm	/^f01045d1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	e8 09 f6 ff ff       	call   f0103be8 <env_run>$/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	e8 a0 02 00 00       	call   f0104884 <sched_yield>$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4 <divide_handler>:$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	6a 00                	push   $0x0$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	6a 00                	push   $0x0$/;"	l
f01045e8	obj/kern/kernel.asm	/^f01045e8:	e9 59 de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01045ed	obj/kern/kernel.asm	/^f01045ed:	90                   	nop$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee <debug_handler>:$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	6a 00                	push   $0x0$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	6a 01                	push   $0x1$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	e9 4f de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	90                   	nop$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8 <nmi_handler>:$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	6a 00                	push   $0x0$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	6a 02                	push   $0x2$/;"	l
f01045fc	obj/kern/kernel.asm	/^f01045fc:	e9 45 de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104601	obj/kern/kernel.asm	/^f0104601:	90                   	nop$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602 <brkpt_handler>:$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	6a 00                	push   $0x0$/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	6a 03                	push   $0x3$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	e9 3b de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	90                   	nop$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c <oflow_handler>:$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	6a 00                	push   $0x0$/;"	l
f010460e	obj/kern/kernel.asm	/^f010460e:	6a 04                	push   $0x4$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	e9 31 de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	90                   	nop$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616 <bound_handler>:$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	6a 00                	push   $0x0$/;"	l
f0104618	obj/kern/kernel.asm	/^f0104618:	6a 05                	push   $0x5$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	e9 27 de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	90                   	nop$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620 <illop_handler>:$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	6a 00                	push   $0x0$/;"	l
f0104622	obj/kern/kernel.asm	/^f0104622:	6a 06                	push   $0x6$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	e9 1d de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	90                   	nop$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a <device_handler>:$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	6a 00                	push   $0x0$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	6a 07                	push   $0x7$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	e9 13 de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	90                   	nop$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634 <dblflt_handler>:$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	6a 08                	push   $0x8$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	e9 0b de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	90                   	nop$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c <coproc_handler>:$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	6a 00                	push   $0x0$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	6a 09                	push   $0x9$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	e9 01 de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	90                   	nop$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646 <tss_handler>:$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	6a 0a                	push   $0xa$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648:	e9 f9 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	90                   	nop$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e <segnp_handler>:$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	6a 0b                	push   $0xb$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	e9 f1 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	90                   	nop$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656 <stack_handler>:$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	6a 0c                	push   $0xc$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	e9 e9 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	90                   	nop$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e <gpflt_handler>:$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	6a 0d                	push   $0xd$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	e9 e1 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	90                   	nop$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666 <pgflt_handler>:$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666:	6a 0e                	push   $0xe$/;"	l
f0104668	obj/kern/kernel.asm	/^f0104668:	e9 d9 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	90                   	nop$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e <res_handler>:$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	6a 00                	push   $0x0$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	6a 0f                	push   $0xf$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	e9 cf dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	90                   	nop$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678 <fperr_handler>:$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	6a 00                	push   $0x0$/;"	l
f010467a	obj/kern/kernel.asm	/^f010467a:	6a 10                	push   $0x10$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	e9 c5 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	90                   	nop$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682 <align_handler>:$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	6a 00                	push   $0x0$/;"	l
f0104684	obj/kern/kernel.asm	/^f0104684:	6a 11                	push   $0x11$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	e9 bb dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	90                   	nop$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c <mchk_handler>:$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	6a 00                	push   $0x0$/;"	l
f010468e	obj/kern/kernel.asm	/^f010468e:	6a 12                	push   $0x12$/;"	l
f0104690	obj/kern/kernel.asm	/^f0104690:	e9 b1 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	90                   	nop$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696 <simderr_handler>:$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	6a 00                	push   $0x0$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	6a 13                	push   $0x13$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	e9 a7 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	90                   	nop$/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0 <syscall_handler>:$/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	6a 00                	push   $0x0$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	6a 30                	push   $0x30$/;"	l
f01046a4	obj/kern/kernel.asm	/^f01046a4:	e9 9d dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046a9	obj/kern/kernel.asm	/^f01046a9:	90                   	nop$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa <irq0_handler>:$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	6a 00                	push   $0x0$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	6a 20                	push   $0x20$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	e9 93 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	90                   	nop$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4 <irq1_handler>:$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	6a 00                	push   $0x0$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	6a 21                	push   $0x21$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	e9 89 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd:	90                   	nop$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be <irq2_handler>:$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	6a 00                	push   $0x0$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	6a 22                	push   $0x22$/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2:	e9 7f dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	90                   	nop$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8 <irq3_handler>:$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8:	6a 00                	push   $0x0$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	6a 23                	push   $0x23$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	e9 75 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	90                   	nop$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2 <irq4_handler>:$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	6a 00                	push   $0x0$/;"	l
f01046d4	obj/kern/kernel.asm	/^f01046d4:	6a 24                	push   $0x24$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	e9 6b dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	90                   	nop$/;"	l
f01046dc	obj/kern/kernel.asm	/^f01046dc <irq5_handler>:$/;"	l
f01046dc	obj/kern/kernel.asm	/^f01046dc:	6a 00                	push   $0x0$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	6a 25                	push   $0x25$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	e9 61 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	90                   	nop$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6 <irq6_handler>:$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	6a 00                	push   $0x0$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	6a 26                	push   $0x26$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	e9 57 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	90                   	nop$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0 <irq7_handler>:$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0:	6a 00                	push   $0x0$/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	6a 27                	push   $0x27$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	e9 4d dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	90                   	nop$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa <irq8_handler>:$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	6a 00                	push   $0x0$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	6a 28                	push   $0x28$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	e9 43 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	90                   	nop$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704 <irq9_handler>:$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	6a 00                	push   $0x0$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	6a 29                	push   $0x29$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	e9 39 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	90                   	nop$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e <irq10_handler>:$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	6a 00                	push   $0x0$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	6a 2a                	push   $0x2a$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	e9 2f dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	90                   	nop$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718 <irq11_handler>:$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718:	6a 00                	push   $0x0$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	6a 2b                	push   $0x2b$/;"	l
f010471c	obj/kern/kernel.asm	/^f010471c:	e9 25 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	90                   	nop$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722 <irq12_handler>:$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	6a 00                	push   $0x0$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	6a 2c                	push   $0x2c$/;"	l
f0104726	obj/kern/kernel.asm	/^f0104726:	e9 1b dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	90                   	nop$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c <irq13_handler>:$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	6a 00                	push   $0x0$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	6a 2d                	push   $0x2d$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	e9 11 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	90                   	nop$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736 <irq14_handler>:$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	6a 00                	push   $0x0$/;"	l
f0104738	obj/kern/kernel.asm	/^f0104738:	6a 2e                	push   $0x2e$/;"	l
f010473a	obj/kern/kernel.asm	/^f010473a:	e9 07 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	90                   	nop$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740 <irq15_handler>:$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	6a 00                	push   $0x0$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	6a 2f                	push   $0x2f$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	e9 fd dc 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	90                   	nop$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a <sysenter_handler>:$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	fa                   	cli    $/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	fc                   	cld    $/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	56                   	push   %esi$/;"	l
f010474d	obj/kern/kernel.asm	/^f010474d:	55                   	push   %ebp$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	57                   	push   %edi$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	53                   	push   %ebx$/;"	l
f0104750	obj/kern/kernel.asm	/^f0104750:	51                   	push   %ecx$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	52                   	push   %edx$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	50                   	push   %eax$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	8e c0                	mov    %eax,%es$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	8e d8                	mov    %eax,%ds$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	e8 03 1f 00 00       	call   f0106668 <spin_lock>$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	e8 5e 04 00 00       	call   f0104bcb <syscall>$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	50                   	push   %eax$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	e8 8d 1f 00 00       	call   f0106705 <spin_unlock>$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	58                   	pop    %eax$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	58                   	pop    %eax$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	66 bb 20 00          	mov    $0x20,%bx$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	8e c3                	mov    %ebx,%es$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	8e db                	mov    %ebx,%ds$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	59                   	pop    %ecx$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786:	5a                   	pop    %edx$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	fb                   	sti    $/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	0f 35                	sysexit $/;"	l
f010478a	obj/kern/kernel.asm	/^f010478a <srand>:$/;"	l
f010478a	obj/kern/kernel.asm	/^f010478a:	55                   	push   %ebp$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	89 e5                	mov    %esp,%ebp$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790:	a3 58 24 12 f0       	mov    %eax,0xf0122458$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	5d                   	pop    %ebp$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	c3                   	ret    $/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797 <lottery_sched_init>:$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	55                   	push   %ebp$/;"	l
f0104798	obj/kern/kernel.asm	/^f0104798:	89 e5                	mov    %esp,%ebp$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	c6 05 64 4a 22 f0 01 	movb   $0x1,0xf0224a64$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	c7 05 58 24 12 f0 bb 	movl   $0x6eb69abb,0xf0122458$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8:	9a b6 6e $/;"	l
f01047ab	obj/kern/kernel.asm	/^f01047ab:	5d                   	pop    %ebp$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	c3                   	ret    $/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad <sched_halt>:$/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad:	55                   	push   %ebp$/;"	l
f01047ae	obj/kern/kernel.asm	/^f01047ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	a1 48 42 22 f0       	mov    0xf0224248,%eax$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	8b 02                	mov    (%edx),%eax$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	76 13                	jbe    f01047dd <sched_halt+0x30>$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	81 c2 90 02 00 00    	add    $0x290,%edx$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	75 e5                	jne    f01047c0 <sched_halt+0x13>$/;"	l
f01047db	obj/kern/kernel.asm	/^f01047db:	eb 08                	jmp    f01047e5 <sched_halt+0x38>$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	75 1f                	jne    f0104804 <sched_halt+0x57>$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	68 f0 84 10 f0       	push   $0xf01084f0$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	e8 4a f6 ff ff       	call   f0103e3c <cprintf>$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	6a 00                	push   $0x0$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	e8 9a c7 ff ff       	call   f0100f99 <monitor>$/;"	l
f01047ff	obj/kern/kernel.asm	/^f01047ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	eb f1                	jmp    f01047f5 <sched_halt+0x48>$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	e8 f1 1b 00 00       	call   f01063fa <cpunum>$/;"	l
f0104809	obj/kern/kernel.asm	/^f0104809:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	c7 80 28 50 22 f0 00 	movl   $0x0,-0xfddafd8(%eax)$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	00 00 00 $/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	77 12                	ja     f0104834 <sched_halt+0x87>$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	50                   	push   %eax$/;"	l
f0104823	obj/kern/kernel.asm	/^f0104823:	68 e8 6a 10 f0       	push   $0xf0106ae8$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	6a 77                	push   $0x77$/;"	l
f010482a	obj/kern/kernel.asm	/^f010482a:	68 19 85 10 f0       	push   $0xf0108519$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	e8 0c b8 ff ff       	call   f0100040 <_panic>$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104839	obj/kern/kernel.asm	/^f0104839:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	e8 b9 1b 00 00       	call   f01063fa <cpunum>$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	81 c2 20 50 22 f0    	add    $0xf0225020,%edx$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104853	obj/kern/kernel.asm	/^f0104853:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	e8 a5 1e 00 00       	call   f0106705 <spin_unlock>$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	f3 90                	pause  $/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	e8 93 1b 00 00       	call   f01063fa <cpunum>$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	8b 80 30 50 22 f0    	mov    -0xfddafd0(%eax),%eax$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	89 c4                	mov    %eax,%esp$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	6a 00                	push   $0x0$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	6a 00                	push   $0x0$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	fb                   	sti    $/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	f4                   	hlt    $/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	eb fd                	jmp    f010487c <sched_halt+0xcf>$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	c9                   	leave  $/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	c3                   	ret    $/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884 <sched_yield>:$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	55                   	push   %ebp$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	89 e5                	mov    %esp,%ebp$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	57                   	push   %edi$/;"	l
f0104888	obj/kern/kernel.asm	/^f0104888:	56                   	push   %esi$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	53                   	push   %ebx$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010488d	obj/kern/kernel.asm	/^f010488d:	e8 68 1b 00 00       	call   f01063fa <cpunum>$/;"	l
f0104892	obj/kern/kernel.asm	/^f0104892:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f01048a1	obj/kern/kernel.asm	/^f01048a1:	74 17                	je     f01048ba <sched_yield+0x36>$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	e8 52 1b 00 00       	call   f01063fa <cpunum>$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	80 3d 64 4a 22 f0 00 	cmpb   $0x0,0xf0224a64$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	0f 84 b5 00 00 00    	je     f010497c <sched_yield+0xf8>$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	a1 48 42 22 f0       	mov    0xf0224248,%eax$/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	83 c0 54             	add    $0x54,%eax$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	89 c7                	mov    %eax,%edi$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	8b 08                	mov    (%eax),%ecx$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	74 09                	je     f01048eb <sched_yield+0x67>$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	39 d3                	cmp    %edx,%ebx$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	75 0b                	jne    f01048f1 <sched_yield+0x6d>$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	83 f9 03             	cmp    $0x3,%ecx$/;"	l
f01048e9	obj/kern/kernel.asm	/^f01048e9:	75 06                	jne    f01048f1 <sched_yield+0x6d>$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	03 b7 38 02 00 00    	add    0x238(%edi),%esi$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	83 c2 01             	add    $0x1,%edx$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	75 d8                	jne    f01048d9 <sched_yield+0x55>$/;"	l
f0104901	obj/kern/kernel.asm	/^f0104901:	85 f6                	test   %esi,%esi$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	75 05                	jne    f010490a <sched_yield+0x86>$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	e8 a3 fe ff ff       	call   f01047ad <sched_halt>$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	69 05 58 24 12 f0 6d 	imul   $0x41c64e6d,0xf0122458,%eax$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	4e c6 41 $/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	05 39 30 00 00       	add    $0x3039,%eax$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	a3 58 24 12 f0       	mov    %eax,0xf0122458$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104923	obj/kern/kernel.asm	/^f0104923:	f7 f6                	div    %esi$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	a1 48 42 22 f0       	mov    0xf0224248,%eax$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104937	obj/kern/kernel.asm	/^f0104937:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	89 c6                	mov    %eax,%esi$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	8b 48 54             	mov    0x54(%eax),%ecx$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	74 0a                	je     f0104951 <sched_yield+0xcd>$/;"	l
f0104947	obj/kern/kernel.asm	/^f0104947:	39 55 e0             	cmp    %edx,-0x20(%ebp)$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	75 18                	jne    f0104964 <sched_yield+0xe0>$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c:	83 f9 03             	cmp    $0x3,%ecx$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	75 13                	jne    f0104964 <sched_yield+0xe0>$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	03 be 8c 02 00 00    	add    0x28c(%esi),%edi$/;"	l
f0104957	obj/kern/kernel.asm	/^f0104957:	39 fb                	cmp    %edi,%ebx$/;"	l
f0104959	obj/kern/kernel.asm	/^f0104959:	7f 09                	jg     f0104964 <sched_yield+0xe0>$/;"	l
f010495b	obj/kern/kernel.asm	/^f010495b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	56                   	push   %esi$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	e8 84 f2 ff ff       	call   f0103be8 <env_run>$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104972	obj/kern/kernel.asm	/^f0104972:	75 c9                	jne    f010493d <sched_yield+0xb9>$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	e8 31 fe ff ff       	call   f01047ad <sched_halt>$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	8b 0d 48 42 22 f0    	mov    0xf0224248,%ecx$/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	69 f2 90 02 00 00    	imul   $0x290,%edx,%esi$/;"	l
f010498b	obj/kern/kernel.asm	/^f010498b:	8d 04 31             	lea    (%ecx,%esi,1),%eax$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	eb 1c                	jmp    f01049ac <sched_yield+0x128>$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	89 c7                	mov    %eax,%edi$/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f0104997	obj/kern/kernel.asm	/^f0104997:	83 b8 c4 fd ff ff 02 	cmpl   $0x2,-0x23c(%eax)$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	75 09                	jne    f01049a9 <sched_yield+0x125>$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	57                   	push   %edi$/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	e8 3f f2 ff ff       	call   f0103be8 <env_run>$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	83 c2 01             	add    $0x1,%edx$/;"	l
f01049ac	obj/kern/kernel.asm	/^f01049ac:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	7e dc                	jle    f0104990 <sched_yield+0x10c>$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	89 c8                	mov    %ecx,%eax$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	eb 1c                	jmp    f01049d9 <sched_yield+0x155>$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	89 c7                	mov    %eax,%edi$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f01049c4	obj/kern/kernel.asm	/^f01049c4:	83 b8 c4 fd ff ff 02 	cmpl   $0x2,-0x23c(%eax)$/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	75 09                	jne    f01049d6 <sched_yield+0x152>$/;"	l
f01049cd	obj/kern/kernel.asm	/^f01049cd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	57                   	push   %edi$/;"	l
f01049d1	obj/kern/kernel.asm	/^f01049d1:	e8 12 f2 ff ff       	call   f0103be8 <env_run>$/;"	l
f01049d6	obj/kern/kernel.asm	/^f01049d6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	39 d3                	cmp    %edx,%ebx$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	7f e0                	jg     f01049bd <sched_yield+0x139>$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	85 db                	test   %ebx,%ebx$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	78 16                	js     f01049f7 <sched_yield+0x173>$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	8d 84 31 70 fd ff ff 	lea    -0x290(%ecx,%esi,1),%eax$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	75 09                	jne    f01049f7 <sched_yield+0x173>$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01049f1	obj/kern/kernel.asm	/^f01049f1:	50                   	push   %eax$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	e8 f1 f1 ff ff       	call   f0103be8 <env_run>$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	e8 b1 fd ff ff       	call   f01047ad <sched_halt>$/;"	l
f01049fc	obj/kern/kernel.asm	/^f01049fc:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01049ff	obj/kern/kernel.asm	/^f01049ff:	5b                   	pop    %ebx$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	5e                   	pop    %esi$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	5f                   	pop    %edi$/;"	l
f0104a02	obj/kern/kernel.asm	/^f0104a02:	5d                   	pop    %ebp$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	c3                   	ret    $/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04 <ipc_try_recv>:$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	55                   	push   %ebp$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	57                   	push   %edi$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	56                   	push   %esi$/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	53                   	push   %ebx$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104a0d	obj/kern/kernel.asm	/^f0104a0d:	8b b0 84 02 00 00    	mov    0x284(%eax),%esi$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	80 b8 70 02 00 00 00 	cmpb   $0x0,0x270(%eax)$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	0f 84 63 01 00 00    	je     f0104b83 <ipc_try_recv+0x17f>$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	85 f6                	test   %esi,%esi$/;"	l
f0104a22	obj/kern/kernel.asm	/^f0104a22:	0f 84 62 01 00 00    	je     f0104b8a <ipc_try_recv+0x186>$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	89 c3                	mov    %eax,%ebx$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	8b be 74 02 00 00    	mov    0x274(%esi),%edi$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	0f 87 f8 00 00 00    	ja     f0104b34 <ipc_try_recv+0x130>$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	8b 80 74 02 00 00    	mov    0x274(%eax),%eax$/;"	l
f0104a42	obj/kern/kernel.asm	/^f0104a42:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	0f 87 e4 00 00 00    	ja     f0104b34 <ipc_try_recv+0x130>$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	8b 86 80 02 00 00    	mov    0x280(%esi),%eax$/;"	l
f0104a56	obj/kern/kernel.asm	/^f0104a56:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	8b 53 48             	mov    0x48(%ebx),%edx$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	6a 00                	push   $0x0$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	50                   	push   %eax$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	ff 76 48             	pushl  0x48(%esi)$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	e8 57 eb ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104a76	obj/kern/kernel.asm	/^f0104a76:	0f 84 96 00 00 00    	je     f0104b12 <ipc_try_recv+0x10e>$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104a7f	obj/kern/kernel.asm	/^f0104a7f:	6a 00                	push   $0x0$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	50                   	push   %eax$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	e8 3a eb ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104a93	obj/kern/kernel.asm	/^f0104a93:	74 7d                	je     f0104b12 <ipc_try_recv+0x10e>$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	0f 85 f0 00 00 00    	jne    f0104b91 <ipc_try_recv+0x18d>$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	f7 45 d4 ff 0f 00 00 	testl  $0xfff,-0x2c(%ebp)$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	0f 85 ed 00 00 00    	jne    f0104b9b <ipc_try_recv+0x197>$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	0f 85 e6 00 00 00    	jne    f0104ba5 <ipc_try_recv+0x1a1>$/;"	l
f0104abf	obj/kern/kernel.asm	/^f0104abf:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104ac2	obj/kern/kernel.asm	/^f0104ac2:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	50                   	push   %eax$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	57                   	push   %edi$/;"	l
f0104ac7	obj/kern/kernel.asm	/^f0104ac7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	e8 d4 cd ff ff       	call   f01018a6 <page_lookup>$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	85 c0                	test   %eax,%eax$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	0f 84 d2 00 00 00    	je     f0104baf <ipc_try_recv+0x1ab>$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104ae0	obj/kern/kernel.asm	/^f0104ae0:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104ae3	obj/kern/kernel.asm	/^f0104ae3:	75 0a                	jne    f0104aef <ipc_try_recv+0xeb>$/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	f6 45 d0 02          	testb  $0x2,-0x30(%ebp)$/;"	l
f0104ae9	obj/kern/kernel.asm	/^f0104ae9:	0f 85 ca 00 00 00    	jne    f0104bb9 <ipc_try_recv+0x1b5>$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	50                   	push   %eax$/;"	l
f0104af6	obj/kern/kernel.asm	/^f0104af6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104afc	obj/kern/kernel.asm	/^f0104afc:	e8 86 ce ff ff       	call   f0101987 <page_insert>$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b04	obj/kern/kernel.asm	/^f0104b04:	85 c0                	test   %eax,%eax$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	85 c0                	test   %eax,%eax$/;"	l
f0104b10	obj/kern/kernel.asm	/^f0104b10:	79 16                	jns    f0104b28 <ipc_try_recv+0x124>$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	c6 86 71 02 00 00 00 	movb   $0x0,0x271(%esi)$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	c7 46 54 02 00 00 00 	movl   $0x2,0x54(%esi)$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104b23	obj/kern/kernel.asm	/^f0104b23:	e9 9b 00 00 00       	jmp    f0104bc3 <ipc_try_recv+0x1bf>$/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	8b 86 80 02 00 00    	mov    0x280(%esi),%eax$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	89 83 80 02 00 00    	mov    %eax,0x280(%ebx)$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	c6 86 71 02 00 00 00 	movb   $0x0,0x271(%esi)$/;"	l
f0104b3b	obj/kern/kernel.asm	/^f0104b3b:	c7 46 54 02 00 00 00 	movl   $0x2,0x54(%esi)$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	c7 46 1c 00 00 00 00 	movl   $0x0,0x1c(%esi)$/;"	l
f0104b49	obj/kern/kernel.asm	/^f0104b49:	c6 83 70 02 00 00 00 	movb   $0x0,0x270(%ebx)$/;"	l
f0104b50	obj/kern/kernel.asm	/^f0104b50:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	8b 46 48             	mov    0x48(%esi),%eax$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	89 83 7c 02 00 00    	mov    %eax,0x27c(%ebx)$/;"	l
f0104b60	obj/kern/kernel.asm	/^f0104b60:	8b 86 78 02 00 00    	mov    0x278(%esi),%eax$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	89 83 78 02 00 00    	mov    %eax,0x278(%ebx)$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)$/;"	l
f0104b73	obj/kern/kernel.asm	/^f0104b73:	8b 46 44             	mov    0x44(%esi),%eax$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	89 83 84 02 00 00    	mov    %eax,0x284(%ebx)$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	eb 40                	jmp    f0104bc3 <ipc_try_recv+0x1bf>$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	eb 39                	jmp    f0104bc3 <ipc_try_recv+0x1bf>$/;"	l
f0104b8a	obj/kern/kernel.asm	/^f0104b8a:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	eb 32                	jmp    f0104bc3 <ipc_try_recv+0x1bf>$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	e9 77 ff ff ff       	jmp    f0104b12 <ipc_try_recv+0x10e>$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	e9 6d ff ff ff       	jmp    f0104b12 <ipc_try_recv+0x10e>$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	e9 63 ff ff ff       	jmp    f0104b12 <ipc_try_recv+0x10e>$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	e9 59 ff ff ff       	jmp    f0104b12 <ipc_try_recv+0x10e>$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	e9 4f ff ff ff       	jmp    f0104b12 <ipc_try_recv+0x10e>$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	5b                   	pop    %ebx$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	5e                   	pop    %esi$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	5f                   	pop    %edi$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	5d                   	pop    %ebp$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	c3                   	ret    $/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb <syscall>:$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	55                   	push   %ebp$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	57                   	push   %edi$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	56                   	push   %esi$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	53                   	push   %ebx$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	0f 87 80 05 00 00    	ja     f0105160 <syscall+0x595>$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	ff 24 85 2c 85 10 f0 	jmp    *-0xfef7ad4(,%eax,4)$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	e8 0e 18 00 00       	call   f01063fa <cpunum>$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	6a 04                	push   $0x4$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	e8 f7 e8 ff ff       	call   f01034f9 <user_mem_assert>$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	68 26 85 10 f0       	push   $0xf0108526$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	e8 27 f2 ff ff       	call   f0103e3c <cprintf>$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c1b	obj/kern/kernel.asm	/^f0104c1b:	e9 4c 05 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	e8 cf b9 ff ff       	call   f01005f4 <cons_getc>$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	e9 42 05 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	e8 cb 17 00 00       	call   f01063fa <cpunum>$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	e9 2c 05 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104c43	obj/kern/kernel.asm	/^f0104c43:	6a 01                	push   $0x1$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	50                   	push   %eax$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	e8 76 e9 ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	85 c0                	test   %eax,%eax$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	0f 88 10 05 00 00    	js     f010516c <syscall+0x5a1>$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	e8 d3 ee ff ff       	call   f0103b3a <env_destroy>$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	e9 f8 04 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	6a 01                	push   $0x1$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	50                   	push   %eax$/;"	l
f0104c7d	obj/kern/kernel.asm	/^f0104c7d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	e8 42 e9 ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	0f 84 db 04 00 00    	je     f010516c <syscall+0x5a1>$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	6a 01                	push   $0x1$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	e8 2d c9 ff ff       	call   f01015c8 <page_alloc>$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	89 c3                	mov    %eax,%ebx$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	85 c0                	test   %eax,%eax$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	74 4e                	je     f0104cf2 <syscall+0x127>$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	77 4f                	ja     f0104cfc <syscall+0x131>$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	75 50                	jne    f0104d06 <syscall+0x13b>$/;"	l
f0104cb6	obj/kern/kernel.asm	/^f0104cb6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	75 4d                	jne    f0104d10 <syscall+0x145>$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	53                   	push   %ebx$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ccd	obj/kern/kernel.asm	/^f0104ccd:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	e8 b2 cc ff ff       	call   f0101987 <page_insert>$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	85 c0                	test   %eax,%eax$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	79 3e                	jns    f0104d1a <syscall+0x14f>$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	53                   	push   %ebx$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	e8 53 c9 ff ff       	call   f0101638 <page_free>$/;"	l
f0104ce5	obj/kern/kernel.asm	/^f0104ce5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	e9 7a 04 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	e9 70 04 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	e9 66 04 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	e9 5c 04 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104d15	obj/kern/kernel.asm	/^f0104d15:	e9 52 04 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	e9 48 04 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	6a 01                	push   $0x1$/;"	l
f0104d29	obj/kern/kernel.asm	/^f0104d29:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	50                   	push   %eax$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	e8 92 e8 ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104d35	obj/kern/kernel.asm	/^f0104d35:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d38	obj/kern/kernel.asm	/^f0104d38:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	0f 84 2b 04 00 00    	je     f010516c <syscall+0x5a1>$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	6a 01                	push   $0x1$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104d49	obj/kern/kernel.asm	/^f0104d49:	50                   	push   %eax$/;"	l
f0104d4a	obj/kern/kernel.asm	/^f0104d4a:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	e8 75 e8 ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	0f 84 0e 04 00 00    	je     f010516c <syscall+0x5a1>$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	77 76                	ja     f0104ddd <syscall+0x212>$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	75 77                	jne    f0104de7 <syscall+0x21c>$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	77 6e                	ja     f0104de7 <syscall+0x21c>$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	75 6f                	jne    f0104df1 <syscall+0x226>$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	75 6c                	jne    f0104dfb <syscall+0x230>$/;"	l
f0104d8f	obj/kern/kernel.asm	/^f0104d8f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	50                   	push   %eax$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	e8 02 cb ff ff       	call   f01018a6 <page_lookup>$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	85 c0                	test   %eax,%eax$/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	74 5a                	je     f0104e05 <syscall+0x23a>$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	75 06                	jne    f0104db9 <syscall+0x1ee>$/;"	l
f0104db3	obj/kern/kernel.asm	/^f0104db3:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	75 56                	jne    f0104e0f <syscall+0x244>$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	50                   	push   %eax$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	e8 bc cb ff ff       	call   f0101987 <page_insert>$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	85 c0                	test   %eax,%eax$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104dd5	obj/kern/kernel.asm	/^f0104dd5:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	e9 8f 03 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104de2	obj/kern/kernel.asm	/^f0104de2:	e9 85 03 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104de7	obj/kern/kernel.asm	/^f0104de7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	e9 7b 03 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104df6	obj/kern/kernel.asm	/^f0104df6:	e9 71 03 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	e9 67 03 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104e05	obj/kern/kernel.asm	/^f0104e05:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	e9 5d 03 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104e0f	obj/kern/kernel.asm	/^f0104e0f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	e9 53 03 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	6a 01                	push   $0x1$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	50                   	push   %eax$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	e8 9d e7 ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	0f 84 36 03 00 00    	je     f010516c <syscall+0x5a1>$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	77 27                	ja     f0104e66 <syscall+0x29b>$/;"	l
f0104e3f	obj/kern/kernel.asm	/^f0104e3f:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	75 28                	jne    f0104e70 <syscall+0x2a5>$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104e4b	obj/kern/kernel.asm	/^f0104e4b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	e8 e8 ca ff ff       	call   f0101941 <page_remove>$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	e9 06 03 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e6b	obj/kern/kernel.asm	/^f0104e6b:	e9 fc 02 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e75	obj/kern/kernel.asm	/^f0104e75:	e9 f2 02 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	e8 7b 15 00 00       	call   f01063fa <cpunum>$/;"	l
f0104e7f	obj/kern/kernel.asm	/^f0104e7f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e85	obj/kern/kernel.asm	/^f0104e85:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	50                   	push   %eax$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	e8 5f e8 ff ff       	call   f01036f6 <env_alloc>$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	85 c0                	test   %eax,%eax$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	0f 88 ca 02 00 00    	js     f010516c <syscall+0x5a1>$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	e8 49 15 00 00       	call   f01063fa <cpunum>$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	8b b0 28 50 22 f0    	mov    -0xfddafd8(%eax),%esi$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	89 df                	mov    %ebx,%edi$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104ecd	obj/kern/kernel.asm	/^f0104ecd:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0:	e9 97 02 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	6a 01                	push   $0x1$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	50                   	push   %eax$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	e8 e1 e6 ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104ee6	obj/kern/kernel.asm	/^f0104ee6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	0f 84 7a 02 00 00    	je     f010516c <syscall+0x5a1>$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	a9 fd ff ff ff       	test   $0xfffffffd,%eax$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	75 13                	jne    f0104f12 <syscall+0x347>$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104f05	obj/kern/kernel.asm	/^f0104f05:	89 70 54             	mov    %esi,0x54(%eax)$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	e9 5a 02 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104f17	obj/kern/kernel.asm	/^f0104f17:	e9 50 02 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	6a 01                	push   $0x1$/;"	l
f0104f21	obj/kern/kernel.asm	/^f0104f21:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	50                   	push   %eax$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	e8 9a e6 ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	0f 84 33 02 00 00    	je     f010516c <syscall+0x5a1>$/;"	l
f0104f39	obj/kern/kernel.asm	/^f0104f39:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104f3f	obj/kern/kernel.asm	/^f0104f3f:	89 48 64             	mov    %ecx,0x64(%eax)$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	e9 20 02 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104f4f	obj/kern/kernel.asm	/^f0104f4f:	6a 01                	push   $0x1$/;"	l
f0104f51	obj/kern/kernel.asm	/^f0104f51:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104f54	obj/kern/kernel.asm	/^f0104f54:	50                   	push   %eax$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	e8 6a e6 ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	0f 84 03 02 00 00    	je     f010516c <syscall+0x5a1>$/;"	l
f0104f69	obj/kern/kernel.asm	/^f0104f69:	0f b6 45 10          	movzbl 0x10(%ebp),%eax$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	85 c0                	test   %eax,%eax$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	ba 05 00 00 00       	mov    $0x5,%edx$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	89 82 8c 02 00 00    	mov    %eax,0x28c(%edx)$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	e9 e2 01 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	e8 f5 f8 ff ff       	call   f0104884 <sched_yield>$/;"	l
f0104f8f	obj/kern/kernel.asm	/^f0104f8f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	6a 00                	push   $0x0$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	50                   	push   %eax$/;"	l
f0104f98	obj/kern/kernel.asm	/^f0104f98:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104f9b	obj/kern/kernel.asm	/^f0104f9b:	e8 27 e6 ff ff       	call   f01035c7 <envid2env>$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	0f 84 c0 01 00 00    	je     f010516c <syscall+0x5a1>$/;"	l
f0104fac	obj/kern/kernel.asm	/^f0104fac:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f0104fb3	obj/kern/kernel.asm	/^f0104fb3:	77 55                	ja     f010500a <syscall+0x43f>$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	75 42                	jne    f0105000 <syscall+0x435>$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	75 35                	jne    f0105000 <syscall+0x435>$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	e8 2a 14 00 00       	call   f01063fa <cpunum>$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	52                   	push   %edx$/;"	l
f0104fd7	obj/kern/kernel.asm	/^f0104fd7:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	e8 bb c8 ff ff       	call   f01018a6 <page_lookup>$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	85 c0                	test   %eax,%eax$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	74 0e                	je     f0105000 <syscall+0x435>$/;"	l
f0104ff2	obj/kern/kernel.asm	/^f0104ff2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	75 10                	jne    f010500a <syscall+0x43f>$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	74 0a                	je     f010500a <syscall+0x43f>$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	e9 62 01 00 00       	jmp    f010516c <syscall+0x5a1>$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	e8 eb 13 00 00       	call   f01063fa <cpunum>$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	c6 80 71 02 00 00 01 	movb   $0x1,0x271(%eax)$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	e8 d6 13 00 00       	call   f01063fa <cpunum>$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	e8 c1 13 00 00       	call   f01063fa <cpunum>$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105045	obj/kern/kernel.asm	/^f0105045:	89 b8 78 02 00 00    	mov    %edi,0x278(%eax)$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	e8 aa 13 00 00       	call   f01063fa <cpunum>$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	89 88 74 02 00 00    	mov    %ecx,0x274(%eax)$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	e8 93 13 00 00       	call   f01063fa <cpunum>$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010506a	obj/kern/kernel.asm	/^f010506a:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	89 b8 80 02 00 00    	mov    %edi,0x280(%eax)$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	e8 7c 13 00 00       	call   f01063fa <cpunum>$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105081	obj/kern/kernel.asm	/^f0105081:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	83 bb 84 02 00 00 00 	cmpl   $0x0,0x284(%ebx)$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	75 1c                	jne    f01050b6 <syscall+0x4eb>$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	e8 5b 13 00 00       	call   f01063fa <cpunum>$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	89 83 88 02 00 00    	mov    %eax,0x288(%ebx)$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	89 83 84 02 00 00    	mov    %eax,0x284(%ebx)$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	eb 2e                	jmp    f01050e4 <syscall+0x519>$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	8b 9b 88 02 00 00    	mov    0x288(%ebx),%ebx$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	e8 39 13 00 00       	call   f01063fa <cpunum>$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01050ca	obj/kern/kernel.asm	/^f01050ca:	89 43 44             	mov    %eax,0x44(%ebx)$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	e8 25 13 00 00       	call   f01063fa <cpunum>$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de:	89 83 88 02 00 00    	mov    %eax,0x288(%ebx)$/;"	l
f01050e4	obj/kern/kernel.asm	/^f01050e4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	e8 18 f9 ff ff       	call   f0104a04 <ipc_try_recv>$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	e8 93 f7 ff ff       	call   f0104884 <sched_yield>$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f01050f8	obj/kern/kernel.asm	/^f01050f8:	77 09                	ja     f0105103 <syscall+0x538>$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	75 64                	jne    f0105167 <syscall+0x59c>$/;"	l
f0105103	obj/kern/kernel.asm	/^f0105103:	e8 f2 12 00 00       	call   f01063fa <cpunum>$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010510b	obj/kern/kernel.asm	/^f010510b:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	c6 80 70 02 00 00 01 	movb   $0x1,0x270(%eax)$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	e8 dd 12 00 00       	call   f01063fa <cpunum>$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105120	obj/kern/kernel.asm	/^f0105120:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	89 b8 74 02 00 00    	mov    %edi,0x274(%eax)$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	e8 c6 12 00 00       	call   f01063fa <cpunum>$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105137	obj/kern/kernel.asm	/^f0105137:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144:	e8 b1 12 00 00       	call   f01063fa <cpunum>$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	e8 ad f8 ff ff       	call   f0104a04 <ipc_try_recv>$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	85 c0                	test   %eax,%eax$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	74 11                	je     f010516c <syscall+0x5a1>$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	e8 24 f7 ff ff       	call   f0104884 <sched_yield>$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	eb 05                	jmp    f010516c <syscall+0x5a1>$/;"	l
f0105167	obj/kern/kernel.asm	/^f0105167:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	5b                   	pop    %ebx$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	5e                   	pop    %esi$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	5f                   	pop    %edi$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	5d                   	pop    %ebp$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	c3                   	ret    $/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174 <stab_binsearch>:$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	55                   	push   %ebp$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	89 e5                	mov    %esp,%ebp$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	57                   	push   %edi$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	56                   	push   %esi$/;"	l
f0105179	obj/kern/kernel.asm	/^f0105179:	53                   	push   %ebx$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010517d	obj/kern/kernel.asm	/^f010517d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	8b 1a                	mov    (%edx),%ebx$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	8b 01                	mov    (%ecx),%eax$/;"	l
f010518d	obj/kern/kernel.asm	/^f010518d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	eb 7f                	jmp    f0105218 <stab_binsearch+0xa4>$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	01 d8                	add    %ebx,%eax$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	89 c6                	mov    %eax,%esi$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	01 c6                	add    %eax,%esi$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	d1 fe                	sar    %esi$/;"	d
f01051a7	obj/kern/kernel.asm	/^f01051a7:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01051ad	obj/kern/kernel.asm	/^f01051ad:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f01051b0	obj/kern/kernel.asm	/^f01051b0:	89 f0                	mov    %esi,%eax$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	eb 03                	jmp    f01051b7 <stab_binsearch+0x43>$/;"	l
f01051b4	obj/kern/kernel.asm	/^f01051b4:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	39 c3                	cmp    %eax,%ebx$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	7f 0d                	jg     f01051c8 <stab_binsearch+0x54>$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01051bf	obj/kern/kernel.asm	/^f01051bf:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	39 f9                	cmp    %edi,%ecx$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	75 ee                	jne    f01051b4 <stab_binsearch+0x40>$/;"	l
f01051c6	obj/kern/kernel.asm	/^f01051c6:	eb 05                	jmp    f01051cd <stab_binsearch+0x59>$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01051cb	obj/kern/kernel.asm	/^f01051cb:	eb 4b                	jmp    f0105218 <stab_binsearch+0xa4>$/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01051d7	obj/kern/kernel.asm	/^f01051d7:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	76 11                	jbe    f01051ed <stab_binsearch+0x79>$/;"	l
f01051dc	obj/kern/kernel.asm	/^f01051dc:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	89 03                	mov    %eax,(%ebx)$/;"	l
f01051e1	obj/kern/kernel.asm	/^f01051e1:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01051eb	obj/kern/kernel.asm	/^f01051eb:	eb 2b                	jmp    f0105218 <stab_binsearch+0xa4>$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	73 14                	jae    f0105206 <stab_binsearch+0x92>$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01051f5	obj/kern/kernel.asm	/^f01051f5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	89 06                	mov    %eax,(%esi)$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	eb 12                	jmp    f0105218 <stab_binsearch+0xa4>$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0105209	obj/kern/kernel.asm	/^f0105209:	89 06                	mov    %eax,(%esi)$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f010520f	obj/kern/kernel.asm	/^f010520f:	89 c3                	mov    %eax,%ebx$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105218	obj/kern/kernel.asm	/^f0105218:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	0f 8e 78 ff ff ff    	jle    f0105199 <stab_binsearch+0x25>$/;"	l
f0105221	obj/kern/kernel.asm	/^f0105221:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0105225	obj/kern/kernel.asm	/^f0105225:	75 0f                	jne    f0105236 <stab_binsearch+0xc2>$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	8b 00                	mov    (%eax),%eax$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	89 06                	mov    %eax,(%esi)$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	eb 2c                	jmp    f0105262 <stab_binsearch+0xee>$/;"	l
f0105236	obj/kern/kernel.asm	/^f0105236:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	8b 00                	mov    (%eax),%eax$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	eb 03                	jmp    f010524e <stab_binsearch+0xda>$/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105250	obj/kern/kernel.asm	/^f0105250:	7e 0b                	jle    f010525d <stab_binsearch+0xe9>$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0105256	obj/kern/kernel.asm	/^f0105256:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	39 df                	cmp    %ebx,%edi$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	75 ee                	jne    f010524b <stab_binsearch+0xd7>$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	89 06                	mov    %eax,(%esi)$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105265	obj/kern/kernel.asm	/^f0105265:	5b                   	pop    %ebx$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266:	5e                   	pop    %esi$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	5f                   	pop    %edi$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	5d                   	pop    %ebp$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	c3                   	ret    $/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a <debuginfo_eip>:$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	55                   	push   %ebp$/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	89 e5                	mov    %esp,%ebp$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	57                   	push   %edi$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	56                   	push   %esi$/;"	l
f010526f	obj/kern/kernel.asm	/^f010526f:	53                   	push   %ebx$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105279	obj/kern/kernel.asm	/^f0105279:	c7 03 68 85 10 f0    	movl   $0xf0108568,(%ebx)$/;"	l
f010527f	obj/kern/kernel.asm	/^f010527f:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105286	obj/kern/kernel.asm	/^f0105286:	c7 43 08 68 85 10 f0 	movl   $0xf0108568,0x8(%ebx)$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0105294	obj/kern/kernel.asm	/^f0105294:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	0f 87 a4 00 00 00    	ja     f010534e <debuginfo_eip+0xe4>$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	e8 4b 11 00 00       	call   f01063fa <cpunum>$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	6a 04                	push   $0x4$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	6a 10                	push   $0x10$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	68 00 00 20 00       	push   $0x200000$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	e8 8b e1 ff ff       	call   f0103451 <user_mem_check>$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052c9	obj/kern/kernel.asm	/^f01052c9:	85 c0                	test   %eax,%eax$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	0f 88 39 02 00 00    	js     f010550a <debuginfo_eip+0x2a0>$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f01052dc	obj/kern/kernel.asm	/^f01052dc:	8b 0d 08 00 20 00    	mov    0x200008,%ecx$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f01052e5	obj/kern/kernel.asm	/^f01052e5:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f01052ee	obj/kern/kernel.asm	/^f01052ee:	89 f9                	mov    %edi,%ecx$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	29 c1                	sub    %eax,%ecx$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f01052f8	obj/kern/kernel.asm	/^f01052f8:	e8 fd 10 00 00       	call   f01063fa <cpunum>$/;"	l
f01052fd	obj/kern/kernel.asm	/^f01052fd:	6a 04                	push   $0x4$/;"	l
f01052ff	obj/kern/kernel.asm	/^f01052ff:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
f0105305	obj/kern/kernel.asm	/^f0105305:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105308	obj/kern/kernel.asm	/^f0105308:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f010530e	obj/kern/kernel.asm	/^f010530e:	e8 3e e1 ff ff       	call   f0103451 <user_mem_check>$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	85 c0                	test   %eax,%eax$/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318:	0f 88 f3 01 00 00    	js     f0105511 <debuginfo_eip+0x2a7>$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	e8 ce 10 00 00       	call   f01063fa <cpunum>$/;"	l
f010532c	obj/kern/kernel.asm	/^f010532c:	6a 04                	push   $0x4$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f0105331	obj/kern/kernel.asm	/^f0105331:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	ff b0 28 50 22 f0    	pushl  -0xfddafd8(%eax)$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	e8 0f e1 ff ff       	call   f0103451 <user_mem_check>$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	85 c0                	test   %eax,%eax$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	79 1f                	jns    f0105368 <debuginfo_eip+0xfe>$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	e9 ca 01 00 00       	jmp    f0105518 <debuginfo_eip+0x2ae>$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	c7 45 c0 f1 7d 11 f0 	movl   $0xf0117df1,-0x40(%ebp)$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	c7 45 b8 79 3e 11 f0 	movl   $0xf0113e79,-0x48(%ebp)$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	bf 78 3e 11 f0       	mov    $0xf0113e78,%edi$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	c7 45 bc 38 8b 10 f0 	movl   $0xf0108b38,-0x44(%ebp)$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	0f 83 ab 01 00 00    	jae    f010551f <debuginfo_eip+0x2b5>$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0105378	obj/kern/kernel.asm	/^f0105378:	0f 85 a8 01 00 00    	jne    f0105526 <debuginfo_eip+0x2bc>$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	89 fa                	mov    %edi,%edx$/;"	l
f0105387	obj/kern/kernel.asm	/^f0105387:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a:	29 fa                	sub    %edi,%edx$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	89 d0                	mov    %edx,%eax$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	56                   	push   %esi$/;"	l
f01053a1	obj/kern/kernel.asm	/^f01053a1:	6a 64                	push   $0x64$/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	89 d1                	mov    %edx,%ecx$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	89 f8                	mov    %edi,%eax$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	e8 c2 fd ff ff       	call   f0105174 <stab_binsearch>$/;"	l
f01053b2	obj/kern/kernel.asm	/^f01053b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053b8	obj/kern/kernel.asm	/^f01053b8:	85 c0                	test   %eax,%eax$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba:	0f 84 6d 01 00 00    	je     f010552d <debuginfo_eip+0x2c3>$/;"	l
f01053c0	obj/kern/kernel.asm	/^f01053c0:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01053c3	obj/kern/kernel.asm	/^f01053c3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	56                   	push   %esi$/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	6a 24                	push   $0x24$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	89 d1                	mov    %edx,%ecx$/;"	l
f01053d4	obj/kern/kernel.asm	/^f01053d4:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01053d7	obj/kern/kernel.asm	/^f01053d7:	89 f8                	mov    %edi,%eax$/;"	l
f01053d9	obj/kern/kernel.asm	/^f01053d9:	e8 96 fd ff ff       	call   f0105174 <stab_binsearch>$/;"	l
f01053de	obj/kern/kernel.asm	/^f01053de:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01053e4	obj/kern/kernel.asm	/^f01053e4:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053ea	obj/kern/kernel.asm	/^f01053ea:	39 d0                	cmp    %edx,%eax$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	7f 2b                	jg     f0105419 <debuginfo_eip+0x1af>$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	8d 0c 97             	lea    (%edi,%edx,4),%ecx$/;"	l
f01053f4	obj/kern/kernel.asm	/^f01053f4:	8b 11                	mov    (%ecx),%edx$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	2b 7d b8             	sub    -0x48(%ebp),%edi$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	39 fa                	cmp    %edi,%edx$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	73 06                	jae    f0105406 <debuginfo_eip+0x19c>$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	03 55 b8             	add    -0x48(%ebp),%edx$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	89 53 08             	mov    %edx,0x8(%ebx)$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	8b 51 08             	mov    0x8(%ecx),%edx$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	89 53 10             	mov    %edx,0x10(%ebx)$/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	29 d6                	sub    %edx,%esi$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105411	obj/kern/kernel.asm	/^f0105411:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105414	obj/kern/kernel.asm	/^f0105414:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105417	obj/kern/kernel.asm	/^f0105417:	eb 0f                	jmp    f0105428 <debuginfo_eip+0x1be>$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f010541c	obj/kern/kernel.asm	/^f010541c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	6a 3a                	push   $0x3a$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	e8 88 09 00 00       	call   f0105dbd <strfind>$/;"	l
f0105435	obj/kern/kernel.asm	/^f0105435:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	83 c4 08             	add    $0x8,%esp$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	56                   	push   %esi$/;"	l
f010543f	obj/kern/kernel.asm	/^f010543f:	6a 44                	push   $0x44$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105447	obj/kern/kernel.asm	/^f0105447:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	89 f8                	mov    %edi,%eax$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	e8 23 fd ff ff       	call   f0105174 <stab_binsearch>$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105457	obj/kern/kernel.asm	/^f0105457:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	0f b7 4a 06          	movzwl 0x6(%edx),%ecx$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105467	obj/kern/kernel.asm	/^f0105467:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f010546b	obj/kern/kernel.asm	/^f010546b:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f010546e	obj/kern/kernel.asm	/^f010546e:	eb 0a                	jmp    f010547a <debuginfo_eip+0x210>$/;"	l
f0105470	obj/kern/kernel.asm	/^f0105470:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105473	obj/kern/kernel.asm	/^f0105473:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f010547a	obj/kern/kernel.asm	/^f010547a:	39 c7                	cmp    %eax,%edi$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	7e 05                	jle    f0105483 <debuginfo_eip+0x219>$/;"	l
f010547e	obj/kern/kernel.asm	/^f010547e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	eb 47                	jmp    f01054ca <debuginfo_eip+0x260>$/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105487	obj/kern/kernel.asm	/^f0105487:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f010548a	obj/kern/kernel.asm	/^f010548a:	75 0e                	jne    f010549a <debuginfo_eip+0x230>$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	74 1c                	je     f01054b1 <debuginfo_eip+0x247>$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105498	obj/kern/kernel.asm	/^f0105498:	eb 17                	jmp    f01054b1 <debuginfo_eip+0x247>$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	75 d1                	jne    f0105470 <debuginfo_eip+0x206>$/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	74 cb                	je     f0105470 <debuginfo_eip+0x206>$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	74 03                	je     f01054b1 <debuginfo_eip+0x247>$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01054b4	obj/kern/kernel.asm	/^f01054b4:	8b 75 bc             	mov    -0x44(%ebp),%esi$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	8b 7d b8             	mov    -0x48(%ebp),%edi$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	29 f8                	sub    %edi,%eax$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	39 c2                	cmp    %eax,%edx$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	73 04                	jae    f01054ca <debuginfo_eip+0x260>$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	01 fa                	add    %edi,%edx$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	89 13                	mov    %edx,(%ebx)$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01054cd	obj/kern/kernel.asm	/^f01054cd:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5:	39 f2                	cmp    %esi,%edx$/;"	l
f01054d7	obj/kern/kernel.asm	/^f01054d7:	7d 60                	jge    f0105539 <debuginfo_eip+0x2cf>$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	83 c2 01             	add    $0x1,%edx$/;"	l
f01054dc	obj/kern/kernel.asm	/^f01054dc:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01054df	obj/kern/kernel.asm	/^f01054df:	89 d0                	mov    %edx,%eax$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f01054ea	obj/kern/kernel.asm	/^f01054ea:	eb 04                	jmp    f01054f0 <debuginfo_eip+0x286>$/;"	l
f01054ec	obj/kern/kernel.asm	/^f01054ec:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f01054f0	obj/kern/kernel.asm	/^f01054f0:	39 c6                	cmp    %eax,%esi$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	7e 40                	jle    f0105534 <debuginfo_eip+0x2ca>$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01054fb	obj/kern/kernel.asm	/^f01054fb:	83 c2 0c             	add    $0xc,%edx$/;"	l
f01054fe	obj/kern/kernel.asm	/^f01054fe:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	74 e9                	je     f01054ec <debuginfo_eip+0x282>$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	eb 2f                	jmp    f0105539 <debuginfo_eip+0x2cf>$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010550f	obj/kern/kernel.asm	/^f010550f:	eb 28                	jmp    f0105539 <debuginfo_eip+0x2cf>$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	eb 21                	jmp    f0105539 <debuginfo_eip+0x2cf>$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	eb 1a                	jmp    f0105539 <debuginfo_eip+0x2cf>$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105524	obj/kern/kernel.asm	/^f0105524:	eb 13                	jmp    f0105539 <debuginfo_eip+0x2cf>$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b:	eb 0c                	jmp    f0105539 <debuginfo_eip+0x2cf>$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	eb 05                	jmp    f0105539 <debuginfo_eip+0x2cf>$/;"	l
f0105534	obj/kern/kernel.asm	/^f0105534:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010553c	obj/kern/kernel.asm	/^f010553c:	5b                   	pop    %ebx$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	5e                   	pop    %esi$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	5f                   	pop    %edi$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	5d                   	pop    %ebp$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	c3                   	ret    $/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541 <printnum>:$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	55                   	push   %ebp$/;"	l
f0105542	obj/kern/kernel.asm	/^f0105542:	89 e5                	mov    %esp,%ebp$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	57                   	push   %edi$/;"	l
f0105545	obj/kern/kernel.asm	/^f0105545:	56                   	push   %esi$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	53                   	push   %ebx$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	89 c7                	mov    %eax,%edi$/;"	l
f010554c	obj/kern/kernel.asm	/^f010554c:	89 d6                	mov    %edx,%esi$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010555d	obj/kern/kernel.asm	/^f010555d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0105568	obj/kern/kernel.asm	/^f0105568:	39 d3                	cmp    %edx,%ebx$/;"	l
f010556a	obj/kern/kernel.asm	/^f010556a:	72 05                	jb     f0105571 <printnum+0x30>$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f010556f	obj/kern/kernel.asm	/^f010556f:	77 45                	ja     f01055b6 <printnum+0x75>$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	53                   	push   %ebx$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105584	obj/kern/kernel.asm	/^f0105584:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010558a	obj/kern/kernel.asm	/^f010558a:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	e8 6b 12 00 00       	call   f0106800 <__udivdi3>$/;"	l
f0105595	obj/kern/kernel.asm	/^f0105595:	83 c4 18             	add    $0x18,%esp$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	52                   	push   %edx$/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	50                   	push   %eax$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a:	89 f2                	mov    %esi,%edx$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	89 f8                	mov    %edi,%eax$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	e8 9e ff ff ff       	call   f0105541 <printnum>$/;"	l
f01055a3	obj/kern/kernel.asm	/^f01055a3:	83 c4 20             	add    $0x20,%esp$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	eb 18                	jmp    f01055c0 <printnum+0x7f>$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	56                   	push   %esi$/;"	l
f01055ac	obj/kern/kernel.asm	/^f01055ac:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	ff d7                	call   *%edi$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055b4	obj/kern/kernel.asm	/^f01055b4:	eb 03                	jmp    f01055b9 <printnum+0x78>$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01055bc	obj/kern/kernel.asm	/^f01055bc:	85 db                	test   %ebx,%ebx$/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be:	7f e8                	jg     f01055a8 <printnum+0x67>$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01055c3	obj/kern/kernel.asm	/^f01055c3:	56                   	push   %esi$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01055c7	obj/kern/kernel.asm	/^f01055c7:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01055ca	obj/kern/kernel.asm	/^f01055ca:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01055d0	obj/kern/kernel.asm	/^f01055d0:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	e8 58 13 00 00       	call   f0106930 <__umoddi3>$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	0f be 80 72 85 10 f0 	movsbl -0xfef7a8e(%eax),%eax$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	50                   	push   %eax$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	ff d7                	call   *%edi$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	5b                   	pop    %ebx$/;"	l
f01055ec	obj/kern/kernel.asm	/^f01055ec:	5e                   	pop    %esi$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	5f                   	pop    %edi$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	5d                   	pop    %ebp$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	c3                   	ret    $/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0 <getuint>:$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	55                   	push   %ebp$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	7e 0e                	jle    f0105606 <getuint+0x16>$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	8b 10                	mov    (%eax),%edx$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	89 08                	mov    %ecx,(%eax)$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	8b 02                	mov    (%edx),%eax$/;"	l
f0105601	obj/kern/kernel.asm	/^f0105601:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	eb 22                	jmp    f0105628 <getuint+0x38>$/;"	l
f0105606	obj/kern/kernel.asm	/^f0105606:	85 d2                	test   %edx,%edx$/;"	l
f0105608	obj/kern/kernel.asm	/^f0105608:	74 10                	je     f010561a <getuint+0x2a>$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	8b 10                	mov    (%eax),%edx$/;"	l
f010560c	obj/kern/kernel.asm	/^f010560c:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	8b 02                	mov    (%edx),%eax$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	eb 0e                	jmp    f0105628 <getuint+0x38>$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	8b 10                	mov    (%eax),%edx$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010561f	obj/kern/kernel.asm	/^f010561f:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105621	obj/kern/kernel.asm	/^f0105621:	8b 02                	mov    (%edx),%eax$/;"	l
f0105623	obj/kern/kernel.asm	/^f0105623:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105628	obj/kern/kernel.asm	/^f0105628:	5d                   	pop    %ebp$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	c3                   	ret    $/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a <sprintputch>:$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a:	55                   	push   %ebp$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	89 e5                	mov    %esp,%ebp$/;"	l
f010562d	obj/kern/kernel.asm	/^f010562d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	8b 10                	mov    (%eax),%edx$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	73 0a                	jae    f0105645 <sprintputch+0x1b>$/;"	l
f010563b	obj/kern/kernel.asm	/^f010563b:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	88 02                	mov    %al,(%edx)$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	5d                   	pop    %ebp$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	c3                   	ret    $/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647 <printfmt>:$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	55                   	push   %ebp$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	89 e5                	mov    %esp,%ebp$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	50                   	push   %eax$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a:	e8 05 00 00 00       	call   f0105664 <vprintfmt>$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	c9                   	leave  $/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	c3                   	ret    $/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664 <vprintfmt>:$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	55                   	push   %ebp$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	89 e5                	mov    %esp,%ebp$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	57                   	push   %edi$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	56                   	push   %esi$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	53                   	push   %ebx$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	89 df                	mov    %ebx,%edi$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	e9 16 01 00 00       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	85 c0                	test   %eax,%eax$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	0f 84 78 04 00 00    	je     f0105afa <vprintfmt+0x496>$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	83 f8 1b             	cmp    $0x1b,%eax$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	0f 85 f8 00 00 00    	jne    f0105783 <vprintfmt+0x11f>$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	8d 73 02             	lea    0x2(%ebx),%esi$/;"	l
f010568e	obj/kern/kernel.asm	/^f010568e:	0f b6 5b 01          	movzbl 0x1(%ebx),%ebx$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692:	83 fb 5b             	cmp    $0x5b,%ebx$/;"	l
f0105695	obj/kern/kernel.asm	/^f0105695:	0f 84 d8 00 00 00    	je     f0105773 <vprintfmt+0x10f>$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	57                   	push   %edi$/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f:	6a 1b                	push   $0x1b$/;"	l
f01056a1	obj/kern/kernel.asm	/^f01056a1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	83 c4 08             	add    $0x8,%esp$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	57                   	push   %edi$/;"	l
f01056a8	obj/kern/kernel.asm	/^f01056a8:	53                   	push   %ebx$/;"	l
f01056a9	obj/kern/kernel.asm	/^f01056a9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	89 f3                	mov    %esi,%ebx$/;"	l
f01056b1	obj/kern/kernel.asm	/^f01056b1:	e9 da 00 00 00       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	3c 33                	cmp    $0x33,%al$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	74 39                	je     f01056f3 <vprintfmt+0x8f>$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	3c 33                	cmp    $0x33,%al$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	77 09                	ja     f01056c7 <vprintfmt+0x63>$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	3c 30                	cmp    $0x30,%al$/;"	l
f01056c0	obj/kern/kernel.asm	/^f01056c0:	74 16                	je     f01056d8 <vprintfmt+0x74>$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	e9 c9 00 00 00       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	3c 34                	cmp    $0x34,%al$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	74 67                	je     f0105732 <vprintfmt+0xce>$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	3c 3b                	cmp    $0x3b,%al$/;"	l
f01056cd	obj/kern/kernel.asm	/^f01056cd:	0f 84 9e 00 00 00    	je     f0105771 <vprintfmt+0x10d>$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	e9 b8 00 00 00       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	c7 05 00 23 12 f0 00 	movl   $0x700,0xf0122300$/;"	l
f01056df	obj/kern/kernel.asm	/^f01056df:	07 00 00 $/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	c7 05 00 40 22 f0 00 	movl   $0x0,0xf0224000$/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	00 00 00 $/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	89 de                	mov    %ebx,%esi$/;"	l
f01056ee	obj/kern/kernel.asm	/^f01056ee:	e9 80 00 00 00       	jmp    f0105773 <vprintfmt+0x10f>$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f01056f7	obj/kern/kernel.asm	/^f01056f7:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	83 ea 30             	sub    $0x30,%edx$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	b9 37 00 00 00       	mov    $0x37,%ecx$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	0f 47 c1             	cmova  %ecx,%eax$/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	83 e8 30             	sub    $0x30,%eax$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	89 c2                	mov    %eax,%edx$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	83 e2 04             	and    $0x4,%edx$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0105716	obj/kern/kernel.asm	/^f0105716:	89 c1                	mov    %eax,%ecx$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	83 e1 01             	and    $0x1,%ecx$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	09 ca                	or     %ecx,%edx$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	83 e0 02             	and    $0x2,%eax$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	09 d0                	or     %edx,%eax$/;"	l
f0105725	obj/kern/kernel.asm	/^f0105725:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	a3 00 23 12 f0       	mov    %eax,0xf0122300$/;"	l
f010572d	obj/kern/kernel.asm	/^f010572d:	8d 76 02             	lea    0x2(%esi),%esi$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	eb 41                	jmp    f0105773 <vprintfmt+0x10f>$/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	83 ea 30             	sub    $0x30,%edx$/;"	l
f010573c	obj/kern/kernel.asm	/^f010573c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010573f	obj/kern/kernel.asm	/^f010573f:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	b9 30 00 00 00       	mov    $0x30,%ecx$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	0f 47 c1             	cmova  %ecx,%eax$/;"	l
f010574a	obj/kern/kernel.asm	/^f010574a:	83 e8 30             	sub    $0x30,%eax$/;"	l
f010574d	obj/kern/kernel.asm	/^f010574d:	89 c2                	mov    %eax,%edx$/;"	l
f010574f	obj/kern/kernel.asm	/^f010574f:	83 e2 04             	and    $0x4,%edx$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	89 c1                	mov    %eax,%ecx$/;"	l
f0105757	obj/kern/kernel.asm	/^f0105757:	83 e1 01             	and    $0x1,%ecx$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	09 ca                	or     %ecx,%edx$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	83 e0 02             	and    $0x2,%eax$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	09 d0                	or     %edx,%eax$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	a3 00 40 22 f0       	mov    %eax,0xf0224000$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	8d 76 02             	lea    0x2(%esi),%esi$/;"	l
f010576f	obj/kern/kernel.asm	/^f010576f:	eb 02                	jmp    f0105773 <vprintfmt+0x10f>$/;"	l
f0105771	obj/kern/kernel.asm	/^f0105771:	89 de                	mov    %ebx,%esi$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105776	obj/kern/kernel.asm	/^f0105776:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	3c 6d                	cmp    $0x6d,%al$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	0f 85 35 ff ff ff    	jne    f01056b6 <vprintfmt+0x52>$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	eb 0d                	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	57                   	push   %edi$/;"	l
f0105787	obj/kern/kernel.asm	/^f0105787:	50                   	push   %eax$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010578e	obj/kern/kernel.asm	/^f010578e:	89 f3                	mov    %esi,%ebx$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	0f 85 db fe ff ff    	jne    f010567a <vprintfmt+0x16>$/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01057aa	obj/kern/kernel.asm	/^f01057aa:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f01057b8	obj/kern/kernel.asm	/^f01057b8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	eb 06                	jmp    f01057c5 <vprintfmt+0x161>$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	89 de                	mov    %ebx,%esi$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	83 e8 23             	sub    $0x23,%eax$/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1:	3c 55                	cmp    $0x55,%al$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	0f 87 03 03 00 00    	ja     f0105adc <vprintfmt+0x478>$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	ff 24 85 c0 86 10 f0 	jmp    *-0xfef7940(,%eax,4)$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	89 de                	mov    %ebx,%esi$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f01057e9	obj/kern/kernel.asm	/^f01057e9:	eb da                	jmp    f01057c5 <vprintfmt+0x161>$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	89 de                	mov    %ebx,%esi$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01057f5	obj/kern/kernel.asm	/^f01057f5:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	0f be 0e             	movsbl (%esi),%ecx$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	77 36                	ja     f010583a <vprintfmt+0x1d6>$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	eb e9                	jmp    f01057f2 <vprintfmt+0x18e>$/;"	l
f0105809	obj/kern/kernel.asm	/^f0105809:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0105812	obj/kern/kernel.asm	/^f0105812:	8b 00                	mov    (%eax),%eax$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	89 de                	mov    %ebx,%esi$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	eb 22                	jmp    f010583d <vprintfmt+0x1d9>$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	85 c0                	test   %eax,%eax$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105825	obj/kern/kernel.asm	/^f0105825:	0f 49 c8             	cmovns %eax,%ecx$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010582b	obj/kern/kernel.asm	/^f010582b:	89 de                	mov    %ebx,%esi$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	eb 96                	jmp    f01057c5 <vprintfmt+0x161>$/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f:	89 de                	mov    %ebx,%esi$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838:	eb 8b                	jmp    f01057c5 <vprintfmt+0x161>$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010583d	obj/kern/kernel.asm	/^f010583d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	79 82                	jns    f01057c5 <vprintfmt+0x161>$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	e9 70 ff ff ff       	jmp    f01057c5 <vprintfmt+0x161>$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105858	obj/kern/kernel.asm	/^f0105858:	89 de                	mov    %ebx,%esi$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	e9 66 ff ff ff       	jmp    f01057c5 <vprintfmt+0x161>$/;"	l
f010585f	obj/kern/kernel.asm	/^f010585f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010586b	obj/kern/kernel.asm	/^f010586b:	57                   	push   %edi$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	ff 30                	pushl  (%eax)$/;"	l
f010586e	obj/kern/kernel.asm	/^f010586e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	e9 17 ff ff ff       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010587c	obj/kern/kernel.asm	/^f010587c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010587f	obj/kern/kernel.asm	/^f010587f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	8b 00                	mov    (%eax),%eax$/;"	l
f0105884	obj/kern/kernel.asm	/^f0105884:	99                   	cltd   $/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	31 d0                	xor    %edx,%eax$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	29 d0                	sub    %edx,%eax$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	83 f8 10             	cmp    $0x10,%eax$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	7f 0b                	jg     f0105899 <vprintfmt+0x235>$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	8b 14 85 20 88 10 f0 	mov    -0xfef77e0(,%eax,4),%edx$/;"	l
f0105895	obj/kern/kernel.asm	/^f0105895:	85 d2                	test   %edx,%edx$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	75 17                	jne    f01058b0 <vprintfmt+0x24c>$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	50                   	push   %eax$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	68 8a 85 10 f0       	push   $0xf010858a$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	57                   	push   %edi$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	e8 9f fd ff ff       	call   f0105647 <printfmt>$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01058ab	obj/kern/kernel.asm	/^f01058ab:	e9 e0 fe ff ff       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	52                   	push   %edx$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	68 b7 7d 10 f0       	push   $0xf0107db7$/;"	l
f01058b6	obj/kern/kernel.asm	/^f01058b6:	57                   	push   %edi$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	e8 88 fd ff ff       	call   f0105647 <printfmt>$/;"	l
f01058bf	obj/kern/kernel.asm	/^f01058bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	e9 c9 fe ff ff       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	8b 30                	mov    (%eax),%esi$/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2:	85 f6                	test   %esi,%esi$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	b8 83 85 10 f0       	mov    $0xf0108583,%eax$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01058e0	obj/kern/kernel.asm	/^f01058e0:	0f 8e 92 00 00 00    	jle    f0105978 <vprintfmt+0x314>$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	0f 84 96 00 00 00    	je     f0105986 <vprintfmt+0x322>$/;"	l
f01058f0	obj/kern/kernel.asm	/^f01058f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01058f6	obj/kern/kernel.asm	/^f01058f6:	56                   	push   %esi$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	e8 77 03 00 00       	call   f0105c73 <strnlen>$/;"	l
f01058fc	obj/kern/kernel.asm	/^f01058fc:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	29 c1                	sub    %eax,%ecx$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105904	obj/kern/kernel.asm	/^f0105904:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f010590b	obj/kern/kernel.asm	/^f010590b:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	89 cb                	mov    %ecx,%ebx$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	89 c6                	mov    %eax,%esi$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	eb 0e                	jmp    f0105925 <vprintfmt+0x2c1>$/;"	l
f0105917	obj/kern/kernel.asm	/^f0105917:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010591a	obj/kern/kernel.asm	/^f010591a:	57                   	push   %edi$/;"	l
f010591b	obj/kern/kernel.asm	/^f010591b:	56                   	push   %esi$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105925	obj/kern/kernel.asm	/^f0105925:	85 db                	test   %ebx,%ebx$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	7f ee                	jg     f0105917 <vprintfmt+0x2b3>$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	85 c9                	test   %ecx,%ecx$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105939	obj/kern/kernel.asm	/^f0105939:	29 c1                	sub    %eax,%ecx$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	89 cf                	mov    %ecx,%edi$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	eb 4d                	jmp    f0105992 <vprintfmt+0x32e>$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105949	obj/kern/kernel.asm	/^f0105949:	74 1b                	je     f0105966 <vprintfmt+0x302>$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	0f be c0             	movsbl %al,%eax$/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0105951	obj/kern/kernel.asm	/^f0105951:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	76 10                	jbe    f0105966 <vprintfmt+0x302>$/;"	l
f0105956	obj/kern/kernel.asm	/^f0105956:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	6a 3f                	push   $0x3f$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	eb 0d                	jmp    f0105973 <vprintfmt+0x30f>$/;"	l
f0105966	obj/kern/kernel.asm	/^f0105966:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010596c	obj/kern/kernel.asm	/^f010596c:	52                   	push   %edx$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105970	obj/kern/kernel.asm	/^f0105970:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	eb 1a                	jmp    f0105992 <vprintfmt+0x32e>$/;"	l
f0105978	obj/kern/kernel.asm	/^f0105978:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f010597b	obj/kern/kernel.asm	/^f010597b:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105984	obj/kern/kernel.asm	/^f0105984:	eb 0c                	jmp    f0105992 <vprintfmt+0x32e>$/;"	l
f0105986	obj/kern/kernel.asm	/^f0105986:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f010598f	obj/kern/kernel.asm	/^f010598f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	0f b6 46 ff          	movzbl -0x1(%esi),%eax$/;"	l
f0105999	obj/kern/kernel.asm	/^f0105999:	0f be d0             	movsbl %al,%edx$/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c:	85 d2                	test   %edx,%edx$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	74 25                	je     f01059c5 <vprintfmt+0x361>$/;"	l
f01059a0	obj/kern/kernel.asm	/^f01059a0:	85 db                	test   %ebx,%ebx$/;"	l
f01059a2	obj/kern/kernel.asm	/^f01059a2:	78 a1                	js     f0105945 <vprintfmt+0x2e1>$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	79 9c                	jns    f0105945 <vprintfmt+0x2e1>$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	89 f8                	mov    %edi,%eax$/;"	l
f01059ab	obj/kern/kernel.asm	/^f01059ab:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	89 c3                	mov    %eax,%ebx$/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	eb 18                	jmp    f01059cd <vprintfmt+0x369>$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	57                   	push   %edi$/;"	l
f01059b9	obj/kern/kernel.asm	/^f01059b9:	6a 20                	push   $0x20$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	ff d6                	call   *%esi$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01059c0	obj/kern/kernel.asm	/^f01059c0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	eb 08                	jmp    f01059cd <vprintfmt+0x369>$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	89 fb                	mov    %edi,%ebx$/;"	l
f01059c7	obj/kern/kernel.asm	/^f01059c7:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	85 db                	test   %ebx,%ebx$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	7f e4                	jg     f01059b5 <vprintfmt+0x351>$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	e9 b4 fd ff ff       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	7e 16                	jle    f01059f7 <vprintfmt+0x393>$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01059e4	obj/kern/kernel.asm	/^f01059e4:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	8b 00                	mov    (%eax),%eax$/;"	l
f01059ef	obj/kern/kernel.asm	/^f01059ef:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01059f2	obj/kern/kernel.asm	/^f01059f2:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	eb 32                	jmp    f0105a29 <vprintfmt+0x3c5>$/;"	l
f01059f7	obj/kern/kernel.asm	/^f01059f7:	85 d2                	test   %edx,%edx$/;"	l
f01059f9	obj/kern/kernel.asm	/^f01059f9:	74 18                	je     f0105a13 <vprintfmt+0x3af>$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105a04	obj/kern/kernel.asm	/^f0105a04:	8b 30                	mov    (%eax),%esi$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105a09	obj/kern/kernel.asm	/^f0105a09:	89 f0                	mov    %esi,%eax$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	eb 16                	jmp    f0105a29 <vprintfmt+0x3c5>$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105a19	obj/kern/kernel.asm	/^f0105a19:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	8b 30                	mov    (%eax),%esi$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	89 f0                	mov    %esi,%eax$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105a29	obj/kern/kernel.asm	/^f0105a29:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105a2f	obj/kern/kernel.asm	/^f0105a2f:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105a38	obj/kern/kernel.asm	/^f0105a38:	79 72                	jns    f0105aac <vprintfmt+0x448>$/;"	l
f0105a3a	obj/kern/kernel.asm	/^f0105a3a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	57                   	push   %edi$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	6a 2d                	push   $0x2d$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	f7 d8                	neg    %eax$/;"	l
f0105a4b	obj/kern/kernel.asm	/^f0105a4b:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	f7 da                	neg    %edx$/;"	l
f0105a50	obj/kern/kernel.asm	/^f0105a50:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	eb 57                	jmp    f0105aac <vprintfmt+0x448>$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	e8 93 fb ff ff       	call   f01055f0 <getuint>$/;"	l
f0105a5d	obj/kern/kernel.asm	/^f0105a5d:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	eb 48                	jmp    f0105aac <vprintfmt+0x448>$/;"	l
f0105a64	obj/kern/kernel.asm	/^f0105a64:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105a67	obj/kern/kernel.asm	/^f0105a67:	e8 84 fb ff ff       	call   f01055f0 <getuint>$/;"	l
f0105a6c	obj/kern/kernel.asm	/^f0105a6c:	be 08 00 00 00       	mov    $0x8,%esi$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	eb 39                	jmp    f0105aac <vprintfmt+0x448>$/;"	l
f0105a73	obj/kern/kernel.asm	/^f0105a73:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	57                   	push   %edi$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	6a 30                	push   $0x30$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	57                   	push   %edi$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	6a 78                	push   $0x78$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	8b 00                	mov    (%eax),%eax$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a98	obj/kern/kernel.asm	/^f0105a98:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	eb 0d                	jmp    f0105aac <vprintfmt+0x448>$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105aa2	obj/kern/kernel.asm	/^f0105aa2:	e8 49 fb ff ff       	call   f01055f0 <getuint>$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	0f be 4d d8          	movsbl -0x28(%ebp),%ecx$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	51                   	push   %ecx$/;"	l
f0105ab4	obj/kern/kernel.asm	/^f0105ab4:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105ab7	obj/kern/kernel.asm	/^f0105ab7:	56                   	push   %esi$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	52                   	push   %edx$/;"	l
f0105ab9	obj/kern/kernel.asm	/^f0105ab9:	50                   	push   %eax$/;"	l
f0105aba	obj/kern/kernel.asm	/^f0105aba:	89 fa                	mov    %edi,%edx$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105abf	obj/kern/kernel.asm	/^f0105abf:	e8 7d fa ff ff       	call   f0105541 <printnum>$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105ac7	obj/kern/kernel.asm	/^f0105ac7:	e9 c4 fc ff ff       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105acf	obj/kern/kernel.asm	/^f0105acf:	57                   	push   %edi$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	51                   	push   %ecx$/;"	l
f0105ad1	obj/kern/kernel.asm	/^f0105ad1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ad7	obj/kern/kernel.asm	/^f0105ad7:	e9 b4 fc ff ff       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	57                   	push   %edi$/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0:	6a 25                	push   $0x25$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ae8	obj/kern/kernel.asm	/^f0105ae8:	89 f3                	mov    %esi,%ebx$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	eb 03                	jmp    f0105aef <vprintfmt+0x48b>$/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	75 f7                	jne    f0105aec <vprintfmt+0x488>$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	e9 96 fc ff ff       	jmp    f0105790 <vprintfmt+0x12c>$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	5b                   	pop    %ebx$/;"	l
f0105afe	obj/kern/kernel.asm	/^f0105afe:	5e                   	pop    %esi$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	5f                   	pop    %edi$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	5d                   	pop    %ebp$/;"	l
f0105b01	obj/kern/kernel.asm	/^f0105b01:	c3                   	ret    $/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02 <vsnprintf>:$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	55                   	push   %ebp$/;"	l
f0105b03	obj/kern/kernel.asm	/^f0105b03:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b05	obj/kern/kernel.asm	/^f0105b05:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b0b	obj/kern/kernel.asm	/^f0105b0b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105b1f	obj/kern/kernel.asm	/^f0105b1f:	85 c0                	test   %eax,%eax$/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	74 26                	je     f0105b49 <vsnprintf+0x47>$/;"	l
f0105b23	obj/kern/kernel.asm	/^f0105b23:	85 d2                	test   %edx,%edx$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	7e 22                	jle    f0105b49 <vsnprintf+0x47>$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	50                   	push   %eax$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	68 2a 56 10 f0       	push   $0xf010562a$/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	e8 29 fb ff ff       	call   f0105664 <vprintfmt>$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	eb 05                	jmp    f0105b4e <vsnprintf+0x4c>$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105b4e	obj/kern/kernel.asm	/^f0105b4e:	c9                   	leave  $/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	c3                   	ret    $/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50 <snprintf>:$/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	55                   	push   %ebp$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b53	obj/kern/kernel.asm	/^f0105b53:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	50                   	push   %eax$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105b60	obj/kern/kernel.asm	/^f0105b60:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	e8 9a ff ff ff       	call   f0105b02 <vsnprintf>$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	c9                   	leave  $/;"	l
f0105b69	obj/kern/kernel.asm	/^f0105b69:	c3                   	ret    $/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a <readline>:$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	55                   	push   %ebp$/;"	l
f0105b6b	obj/kern/kernel.asm	/^f0105b6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	57                   	push   %edi$/;"	l
f0105b6e	obj/kern/kernel.asm	/^f0105b6e:	56                   	push   %esi$/;"	l
f0105b6f	obj/kern/kernel.asm	/^f0105b6f:	53                   	push   %ebx$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b76	obj/kern/kernel.asm	/^f0105b76:	85 c0                	test   %eax,%eax$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	74 11                	je     f0105b8b <readline+0x21>$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105b7d	obj/kern/kernel.asm	/^f0105b7d:	50                   	push   %eax$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	68 b7 7d 10 f0       	push   $0xf0107db7$/;"	l
f0105b83	obj/kern/kernel.asm	/^f0105b83:	e8 b4 e2 ff ff       	call   f0103e3c <cprintf>$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b8b	obj/kern/kernel.asm	/^f0105b8b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	6a 00                	push   $0x0$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	e8 10 ac ff ff       	call   f01007a5 <iscons>$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	89 c7                	mov    %eax,%edi$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b9a	obj/kern/kernel.asm	/^f0105b9a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	e8 f0 ab ff ff       	call   f0100794 <getchar>$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	89 c3                	mov    %eax,%ebx$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	85 c0                	test   %eax,%eax$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	79 29                	jns    f0105bd3 <readline+0x69>$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105baf	obj/kern/kernel.asm	/^f0105baf:	83 fb f7             	cmp    $0xfffffff7,%ebx$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	0f 84 9b 00 00 00    	je     f0105c53 <readline+0xe9>$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	53                   	push   %ebx$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	68 a7 88 10 f0       	push   $0xf01088a7$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	e8 76 e2 ff ff       	call   f0103e3c <cprintf>$/;"	l
f0105bc6	obj/kern/kernel.asm	/^f0105bc6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bc9	obj/kern/kernel.asm	/^f0105bc9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	e9 80 00 00 00       	jmp    f0105c53 <readline+0xe9>$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105bd6	obj/kern/kernel.asm	/^f0105bd6:	0f 94 c2             	sete   %dl$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	0f 94 c0             	sete   %al$/;"	l
f0105bdf	obj/kern/kernel.asm	/^f0105bdf:	08 c2                	or     %al,%dl$/;"	l
f0105be1	obj/kern/kernel.asm	/^f0105be1:	74 1a                	je     f0105bfd <readline+0x93>$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	85 f6                	test   %esi,%esi$/;"	l
f0105be5	obj/kern/kernel.asm	/^f0105be5:	7e 16                	jle    f0105bfd <readline+0x93>$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	85 ff                	test   %edi,%edi$/;"	l
f0105be9	obj/kern/kernel.asm	/^f0105be9:	74 0d                	je     f0105bf8 <readline+0x8e>$/;"	l
f0105beb	obj/kern/kernel.asm	/^f0105beb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105bee	obj/kern/kernel.asm	/^f0105bee:	6a 08                	push   $0x8$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	e8 8f ab ff ff       	call   f0100784 <cputchar>$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	eb a2                	jmp    f0105b9f <readline+0x35>$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	7e 26                	jle    f0105c28 <readline+0xbe>$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105c08	obj/kern/kernel.asm	/^f0105c08:	7f 1e                	jg     f0105c28 <readline+0xbe>$/;"	l
f0105c0a	obj/kern/kernel.asm	/^f0105c0a:	85 ff                	test   %edi,%edi$/;"	l
f0105c0c	obj/kern/kernel.asm	/^f0105c0c:	74 0c                	je     f0105c1a <readline+0xb0>$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c11	obj/kern/kernel.asm	/^f0105c11:	53                   	push   %ebx$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	e8 6d ab ff ff       	call   f0100784 <cputchar>$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	88 9e 80 4a 22 f0    	mov    %bl,-0xfddb580(%esi)$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0105c23	obj/kern/kernel.asm	/^f0105c23:	e9 77 ff ff ff       	jmp    f0105b9f <readline+0x35>$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	74 09                	je     f0105c36 <readline+0xcc>$/;"	l
f0105c2d	obj/kern/kernel.asm	/^f0105c2d:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	0f 85 69 ff ff ff    	jne    f0105b9f <readline+0x35>$/;"	l
f0105c36	obj/kern/kernel.asm	/^f0105c36:	85 ff                	test   %edi,%edi$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	74 0d                	je     f0105c47 <readline+0xdd>$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	6a 0a                	push   $0xa$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	e8 40 ab ff ff       	call   f0100784 <cputchar>$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	c6 86 80 4a 22 f0 00 	movb   $0x0,-0xfddb580(%esi)$/;"	l
f0105c4e	obj/kern/kernel.asm	/^f0105c4e:	b8 80 4a 22 f0       	mov    $0xf0224a80,%eax$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105c56	obj/kern/kernel.asm	/^f0105c56:	5b                   	pop    %ebx$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	5e                   	pop    %esi$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	5f                   	pop    %edi$/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59:	5d                   	pop    %ebp$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	c3                   	ret    $/;"	l
f0105c5b	obj/kern/kernel.asm	/^f0105c5b <strlen>:$/;"	l
f0105c5b	obj/kern/kernel.asm	/^f0105c5b:	55                   	push   %ebp$/;"	l
f0105c5c	obj/kern/kernel.asm	/^f0105c5c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	eb 03                	jmp    f0105c6b <strlen+0x10>$/;"	l
f0105c68	obj/kern/kernel.asm	/^f0105c68:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105c6b	obj/kern/kernel.asm	/^f0105c6b:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	75 f7                	jne    f0105c68 <strlen+0xd>$/;"	l
f0105c71	obj/kern/kernel.asm	/^f0105c71:	5d                   	pop    %ebp$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	c3                   	ret    $/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73 <strnlen>:$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	55                   	push   %ebp$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105c79	obj/kern/kernel.asm	/^f0105c79:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c7c	obj/kern/kernel.asm	/^f0105c7c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105c81	obj/kern/kernel.asm	/^f0105c81:	eb 03                	jmp    f0105c86 <strnlen+0x13>$/;"	l
f0105c83	obj/kern/kernel.asm	/^f0105c83:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	39 c2                	cmp    %eax,%edx$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	74 08                	je     f0105c92 <strnlen+0x1f>$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0105c8e	obj/kern/kernel.asm	/^f0105c8e:	75 f3                	jne    f0105c83 <strnlen+0x10>$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	89 d0                	mov    %edx,%eax$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	5d                   	pop    %ebp$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	c3                   	ret    $/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94 <strcpy>:$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	55                   	push   %ebp$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	53                   	push   %ebx$/;"	l
f0105c98	obj/kern/kernel.asm	/^f0105c98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c9b	obj/kern/kernel.asm	/^f0105c9b:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	89 c2                	mov    %eax,%edx$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0105caa	obj/kern/kernel.asm	/^f0105caa:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	84 db                	test   %bl,%bl$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	75 ef                	jne    f0105ca0 <strcpy+0xc>$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	5b                   	pop    %ebx$/;"	l
f0105cb2	obj/kern/kernel.asm	/^f0105cb2:	5d                   	pop    %ebp$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	c3                   	ret    $/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4 <strcat>:$/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	55                   	push   %ebp$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	89 e5                	mov    %esp,%ebp$/;"	l
f0105cb7	obj/kern/kernel.asm	/^f0105cb7:	53                   	push   %ebx$/;"	l
f0105cb8	obj/kern/kernel.asm	/^f0105cb8:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	53                   	push   %ebx$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	e8 9a ff ff ff       	call   f0105c5b <strlen>$/;"	l
f0105cc1	obj/kern/kernel.asm	/^f0105cc1:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105cc7	obj/kern/kernel.asm	/^f0105cc7:	01 d8                	add    %ebx,%eax$/;"	l
f0105cc9	obj/kern/kernel.asm	/^f0105cc9:	50                   	push   %eax$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	e8 c5 ff ff ff       	call   f0105c94 <strcpy>$/;"	l
f0105ccf	obj/kern/kernel.asm	/^f0105ccf:	89 d8                	mov    %ebx,%eax$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	c9                   	leave  $/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	c3                   	ret    $/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6 <strncpy>:$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	55                   	push   %ebp$/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7:	89 e5                	mov    %esp,%ebp$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	56                   	push   %esi$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	53                   	push   %ebx$/;"	l
f0105cdb	obj/kern/kernel.asm	/^f0105cdb:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1:	89 f3                	mov    %esi,%ebx$/;"	l
f0105ce3	obj/kern/kernel.asm	/^f0105ce3:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	89 f2                	mov    %esi,%edx$/;"	l
f0105ce8	obj/kern/kernel.asm	/^f0105ce8:	eb 0f                	jmp    f0105cf9 <strncpy+0x23>$/;"	l
f0105cea	obj/kern/kernel.asm	/^f0105cea:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105ced	obj/kern/kernel.asm	/^f0105ced:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f0105cf3	obj/kern/kernel.asm	/^f0105cf3:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0105cf6	obj/kern/kernel.asm	/^f0105cf6:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0105cf9	obj/kern/kernel.asm	/^f0105cf9:	39 da                	cmp    %ebx,%edx$/;"	l
f0105cfb	obj/kern/kernel.asm	/^f0105cfb:	75 ed                	jne    f0105cea <strncpy+0x14>$/;"	l
f0105cfd	obj/kern/kernel.asm	/^f0105cfd:	89 f0                	mov    %esi,%eax$/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff:	5b                   	pop    %ebx$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	5e                   	pop    %esi$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	5d                   	pop    %ebp$/;"	l
f0105d02	obj/kern/kernel.asm	/^f0105d02:	c3                   	ret    $/;"	l
f0105d03	obj/kern/kernel.asm	/^f0105d03 <strlcpy>:$/;"	l
f0105d03	obj/kern/kernel.asm	/^f0105d03:	55                   	push   %ebp$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	56                   	push   %esi$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	53                   	push   %ebx$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	89 f0                	mov    %esi,%eax$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	85 d2                	test   %edx,%edx$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	74 21                	je     f0105d38 <strlcpy+0x35>$/;"	l
f0105d17	obj/kern/kernel.asm	/^f0105d17:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	89 f2                	mov    %esi,%edx$/;"	l
f0105d1d	obj/kern/kernel.asm	/^f0105d1d:	eb 09                	jmp    f0105d28 <strlcpy+0x25>$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28:	39 c2                	cmp    %eax,%edx$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	74 09                	je     f0105d35 <strlcpy+0x32>$/;"	l
f0105d2c	obj/kern/kernel.asm	/^f0105d2c:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0105d2f	obj/kern/kernel.asm	/^f0105d2f:	84 db                	test   %bl,%bl$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	75 ec                	jne    f0105d1f <strlcpy+0x1c>$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	89 d0                	mov    %edx,%eax$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	29 f0                	sub    %esi,%eax$/;"	l
f0105d3a	obj/kern/kernel.asm	/^f0105d3a:	5b                   	pop    %ebx$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	5e                   	pop    %esi$/;"	l
f0105d3c	obj/kern/kernel.asm	/^f0105d3c:	5d                   	pop    %ebp$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	c3                   	ret    $/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e <strcmp>:$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	55                   	push   %ebp$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d41	obj/kern/kernel.asm	/^f0105d41:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105d44	obj/kern/kernel.asm	/^f0105d44:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	eb 06                	jmp    f0105d4f <strcmp+0x11>$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105d52	obj/kern/kernel.asm	/^f0105d52:	84 c0                	test   %al,%al$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	74 04                	je     f0105d5a <strcmp+0x1c>$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	3a 02                	cmp    (%edx),%al$/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	74 ef                	je     f0105d49 <strcmp+0xb>$/;"	l
f0105d5a	obj/kern/kernel.asm	/^f0105d5a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	29 d0                	sub    %edx,%eax$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	5d                   	pop    %ebp$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	c3                   	ret    $/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64 <strncmp>:$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	55                   	push   %ebp$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	53                   	push   %ebx$/;"	l
f0105d68	obj/kern/kernel.asm	/^f0105d68:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	89 c3                	mov    %eax,%ebx$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	eb 06                	jmp    f0105d7b <strncmp+0x17>$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	74 15                	je     f0105d94 <strncmp+0x30>$/;"	l
f0105d7f	obj/kern/kernel.asm	/^f0105d7f:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	84 c9                	test   %cl,%cl$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	74 04                	je     f0105d8a <strncmp+0x26>$/;"	l
f0105d86	obj/kern/kernel.asm	/^f0105d86:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	74 eb                	je     f0105d75 <strncmp+0x11>$/;"	l
f0105d8a	obj/kern/kernel.asm	/^f0105d8a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105d90	obj/kern/kernel.asm	/^f0105d90:	29 d0                	sub    %edx,%eax$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	eb 05                	jmp    f0105d99 <strncmp+0x35>$/;"	l
f0105d94	obj/kern/kernel.asm	/^f0105d94:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	5b                   	pop    %ebx$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	5d                   	pop    %ebp$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	c3                   	ret    $/;"	l
f0105d9c	obj/kern/kernel.asm	/^f0105d9c <strchr>:$/;"	l
f0105d9c	obj/kern/kernel.asm	/^f0105d9c:	55                   	push   %ebp$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105da2	obj/kern/kernel.asm	/^f0105da2:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	eb 07                	jmp    f0105daf <strchr+0x13>$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	38 ca                	cmp    %cl,%dl$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	74 0f                	je     f0105dbb <strchr+0x1f>$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	84 d2                	test   %dl,%dl$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	75 f2                	jne    f0105da8 <strchr+0xc>$/;"	l
f0105db6	obj/kern/kernel.asm	/^f0105db6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	5d                   	pop    %ebp$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	c3                   	ret    $/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd <strfind>:$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	55                   	push   %ebp$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	89 e5                	mov    %esp,%ebp$/;"	l
f0105dc0	obj/kern/kernel.asm	/^f0105dc0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105dc7	obj/kern/kernel.asm	/^f0105dc7:	eb 03                	jmp    f0105dcc <strfind+0xf>$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105dcc	obj/kern/kernel.asm	/^f0105dcc:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	38 ca                	cmp    %cl,%dl$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	74 04                	je     f0105dd7 <strfind+0x1a>$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	84 d2                	test   %dl,%dl$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	75 f2                	jne    f0105dc9 <strfind+0xc>$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	5d                   	pop    %ebp$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	c3                   	ret    $/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9 <memset>:$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	55                   	push   %ebp$/;"	l
f0105dda	obj/kern/kernel.asm	/^f0105dda:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ddc	obj/kern/kernel.asm	/^f0105ddc:	57                   	push   %edi$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	56                   	push   %esi$/;"	l
f0105dde	obj/kern/kernel.asm	/^f0105dde:	53                   	push   %ebx$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105de5	obj/kern/kernel.asm	/^f0105de5:	85 c9                	test   %ecx,%ecx$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	74 36                	je     f0105e1f <memset+0x46>$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	75 28                	jne    f0105e19 <memset+0x40>$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	75 23                	jne    f0105e19 <memset+0x40>$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0105dfa	obj/kern/kernel.asm	/^f0105dfa:	89 d3                	mov    %edx,%ebx$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	89 d6                	mov    %edx,%esi$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	89 d0                	mov    %edx,%eax$/;"	l
f0105e06	obj/kern/kernel.asm	/^f0105e06:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0105e09	obj/kern/kernel.asm	/^f0105e09:	09 f0                	or     %esi,%eax$/;"	l
f0105e0b	obj/kern/kernel.asm	/^f0105e0b:	09 c2                	or     %eax,%edx$/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	89 d8                	mov    %ebx,%eax$/;"	l
f0105e0f	obj/kern/kernel.asm	/^f0105e0f:	09 d0                	or     %edx,%eax$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	fc                   	cld    $/;"	l
f0105e15	obj/kern/kernel.asm	/^f0105e15:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0105e17	obj/kern/kernel.asm	/^f0105e17:	eb 06                	jmp    f0105e1f <memset+0x46>$/;"	l
f0105e19	obj/kern/kernel.asm	/^f0105e19:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	fc                   	cld    $/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105e1f	obj/kern/kernel.asm	/^f0105e1f:	89 f8                	mov    %edi,%eax$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	5b                   	pop    %ebx$/;"	l
f0105e22	obj/kern/kernel.asm	/^f0105e22:	5e                   	pop    %esi$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	5f                   	pop    %edi$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	5d                   	pop    %ebp$/;"	l
f0105e25	obj/kern/kernel.asm	/^f0105e25:	c3                   	ret    $/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26 <memmove>:$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	55                   	push   %ebp$/;"	l
f0105e27	obj/kern/kernel.asm	/^f0105e27:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	57                   	push   %edi$/;"	l
f0105e2a	obj/kern/kernel.asm	/^f0105e2a:	56                   	push   %esi$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105e31	obj/kern/kernel.asm	/^f0105e31:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	39 c6                	cmp    %eax,%esi$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	73 35                	jae    f0105e6d <memmove+0x47>$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105e3b	obj/kern/kernel.asm	/^f0105e3b:	39 d0                	cmp    %edx,%eax$/;"	l
f0105e3d	obj/kern/kernel.asm	/^f0105e3d:	73 2e                	jae    f0105e6d <memmove+0x47>$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0105e42	obj/kern/kernel.asm	/^f0105e42:	89 d6                	mov    %edx,%esi$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	09 fe                	or     %edi,%esi$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105e4c	obj/kern/kernel.asm	/^f0105e4c:	75 13                	jne    f0105e61 <memmove+0x3b>$/;"	l
f0105e4e	obj/kern/kernel.asm	/^f0105e4e:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	75 0e                	jne    f0105e61 <memmove+0x3b>$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	fd                   	std    $/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	eb 09                	jmp    f0105e6a <memmove+0x44>$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	fd                   	std    $/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	fc                   	cld    $/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	eb 1d                	jmp    f0105e8a <memmove+0x64>$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	89 f2                	mov    %esi,%edx$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	09 c2                	or     %eax,%edx$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	75 0f                	jne    f0105e85 <memmove+0x5f>$/;"	l
f0105e76	obj/kern/kernel.asm	/^f0105e76:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	75 0a                	jne    f0105e85 <memmove+0x5f>$/;"	l
f0105e7b	obj/kern/kernel.asm	/^f0105e7b:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105e7e	obj/kern/kernel.asm	/^f0105e7e:	89 c7                	mov    %eax,%edi$/;"	l
f0105e80	obj/kern/kernel.asm	/^f0105e80:	fc                   	cld    $/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	eb 05                	jmp    f0105e8a <memmove+0x64>$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	89 c7                	mov    %eax,%edi$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	fc                   	cld    $/;"	l
f0105e88	obj/kern/kernel.asm	/^f0105e88:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	5e                   	pop    %esi$/;"	l
f0105e8b	obj/kern/kernel.asm	/^f0105e8b:	5f                   	pop    %edi$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	5d                   	pop    %ebp$/;"	l
f0105e8d	obj/kern/kernel.asm	/^f0105e8d:	c3                   	ret    $/;"	l
f0105e8e	obj/kern/kernel.asm	/^f0105e8e <memcpy>:$/;"	l
f0105e8e	obj/kern/kernel.asm	/^f0105e8e:	55                   	push   %ebp$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	e8 87 ff ff ff       	call   f0105e26 <memmove>$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	c9                   	leave  $/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	c3                   	ret    $/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1 <memcmp>:$/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1:	55                   	push   %ebp$/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ea4	obj/kern/kernel.asm	/^f0105ea4:	56                   	push   %esi$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	53                   	push   %ebx$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	89 c6                	mov    %eax,%esi$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	eb 1a                	jmp    f0105ecd <memcmp+0x2c>$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	38 d9                	cmp    %bl,%cl$/;"	l
f0105ebb	obj/kern/kernel.asm	/^f0105ebb:	74 0a                	je     f0105ec7 <memcmp+0x26>$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	29 d8                	sub    %ebx,%eax$/;"	l
f0105ec5	obj/kern/kernel.asm	/^f0105ec5:	eb 0f                	jmp    f0105ed6 <memcmp+0x35>$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	39 f0                	cmp    %esi,%eax$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	75 e2                	jne    f0105eb3 <memcmp+0x12>$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ed6	obj/kern/kernel.asm	/^f0105ed6:	5b                   	pop    %ebx$/;"	l
f0105ed7	obj/kern/kernel.asm	/^f0105ed7:	5e                   	pop    %esi$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	5d                   	pop    %ebp$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	c3                   	ret    $/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda <memfind>:$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	55                   	push   %ebp$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	89 e5                	mov    %esp,%ebp$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	53                   	push   %ebx$/;"	l
f0105ede	obj/kern/kernel.asm	/^f0105ede:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	89 c1                	mov    %eax,%ecx$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f0105eea	obj/kern/kernel.asm	/^f0105eea:	eb 0a                	jmp    f0105ef6 <memfind+0x1c>$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	39 da                	cmp    %ebx,%edx$/;"	l
f0105ef1	obj/kern/kernel.asm	/^f0105ef1:	74 07                	je     f0105efa <memfind+0x20>$/;"	l
f0105ef3	obj/kern/kernel.asm	/^f0105ef3:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ef6	obj/kern/kernel.asm	/^f0105ef6:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8:	72 f2                	jb     f0105eec <memfind+0x12>$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	5b                   	pop    %ebx$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	5d                   	pop    %ebp$/;"	l
f0105efc	obj/kern/kernel.asm	/^f0105efc:	c3                   	ret    $/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd <strtol>:$/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd:	55                   	push   %ebp$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	57                   	push   %edi$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	56                   	push   %esi$/;"	l
f0105f02	obj/kern/kernel.asm	/^f0105f02:	53                   	push   %ebx$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105f06	obj/kern/kernel.asm	/^f0105f06:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105f09	obj/kern/kernel.asm	/^f0105f09:	eb 03                	jmp    f0105f0e <strtol+0x11>$/;"	l
f0105f0b	obj/kern/kernel.asm	/^f0105f0b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105f0e	obj/kern/kernel.asm	/^f0105f0e:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105f11	obj/kern/kernel.asm	/^f0105f11:	3c 20                	cmp    $0x20,%al$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	74 f6                	je     f0105f0b <strtol+0xe>$/;"	l
f0105f15	obj/kern/kernel.asm	/^f0105f15:	3c 09                	cmp    $0x9,%al$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	74 f2                	je     f0105f0b <strtol+0xe>$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	75 0a                	jne    f0105f27 <strtol+0x2a>$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105f20	obj/kern/kernel.asm	/^f0105f20:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105f25	obj/kern/kernel.asm	/^f0105f25:	eb 11                	jmp    f0105f38 <strtol+0x3b>$/;"	l
f0105f27	obj/kern/kernel.asm	/^f0105f27:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	75 08                	jne    f0105f38 <strtol+0x3b>$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105f33	obj/kern/kernel.asm	/^f0105f33:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	75 15                	jne    f0105f55 <strtol+0x58>$/;"	l
f0105f40	obj/kern/kernel.asm	/^f0105f40:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	75 10                	jne    f0105f55 <strtol+0x58>$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0105f49	obj/kern/kernel.asm	/^f0105f49:	75 7c                	jne    f0105fc7 <strtol+0xca>$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	eb 16                	jmp    f0105f6b <strtol+0x6e>$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	85 db                	test   %ebx,%ebx$/;"	l
f0105f57	obj/kern/kernel.asm	/^f0105f57:	75 12                	jne    f0105f6b <strtol+0x6e>$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105f61	obj/kern/kernel.asm	/^f0105f61:	75 08                	jne    f0105f6b <strtol+0x6e>$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105f73	obj/kern/kernel.asm	/^f0105f73:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	89 f3                	mov    %esi,%ebx$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105f7e	obj/kern/kernel.asm	/^f0105f7e:	77 08                	ja     f0105f88 <strtol+0x8b>$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105f83	obj/kern/kernel.asm	/^f0105f83:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	eb 22                	jmp    f0105faa <strtol+0xad>$/;"	l
f0105f88	obj/kern/kernel.asm	/^f0105f88:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	89 f3                	mov    %esi,%ebx$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	77 08                	ja     f0105f9a <strtol+0x9d>$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105f95	obj/kern/kernel.asm	/^f0105f95:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0105f98	obj/kern/kernel.asm	/^f0105f98:	eb 10                	jmp    f0105faa <strtol+0xad>$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	89 f3                	mov    %esi,%ebx$/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	77 16                	ja     f0105fba <strtol+0xbd>$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	7d 0b                	jge    f0105fba <strtol+0xbd>$/;"	l
f0105faf	obj/kern/kernel.asm	/^f0105faf:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105fb2	obj/kern/kernel.asm	/^f0105fb2:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	01 d0                	add    %edx,%eax$/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	eb b9                	jmp    f0105f73 <strtol+0x76>$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	74 0d                	je     f0105fcd <strtol+0xd0>$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0105fc5	obj/kern/kernel.asm	/^f0105fc5:	eb 06                	jmp    f0105fcd <strtol+0xd0>$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	85 db                	test   %ebx,%ebx$/;"	l
f0105fc9	obj/kern/kernel.asm	/^f0105fc9:	74 98                	je     f0105f63 <strtol+0x66>$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	eb 9e                	jmp    f0105f6b <strtol+0x6e>$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	89 c2                	mov    %eax,%edx$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	f7 da                	neg    %edx$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	85 ff                	test   %edi,%edi$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	5b                   	pop    %ebx$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	5e                   	pop    %esi$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	5f                   	pop    %edi$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	5d                   	pop    %ebp$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	c3                   	ret    $/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	90                   	nop$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc <mpentry_start>:$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	fa                   	cli    $/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	31 c0                	xor    %eax,%eax$/;"	l
f0105fdf	obj/kern/kernel.asm	/^f0105fdf:	8e d8                	mov    %eax,%ds$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	8e c0                	mov    %eax,%es$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	8e d0                	mov    %eax,%ss$/;"	l
f0105fe5	obj/kern/kernel.asm	/^f0105fe5:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	74 70                	je     f010605a <mpsearch1+0x3>$/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0105ff1	obj/kern/kernel.asm	/^f0105ff1:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105ff4	obj/kern/kernel.asm	/^f0105ff4:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	08 00                	or     %al,(%eax)$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc <start32>:$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	8e d8                	mov    %eax,%ds$/;"	l
f0106002	obj/kern/kernel.asm	/^f0106002:	8e c0                	mov    %eax,%es$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	8e d0                	mov    %eax,%ss$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	8e e0                	mov    %eax,%fs$/;"	l
f010600c	obj/kern/kernel.asm	/^f010600c:	8e e8                	mov    %eax,%gs$/;"	l
f010600e	obj/kern/kernel.asm	/^f010600e:	b8 00 00 12 00       	mov    $0x120000,%eax$/;"	l
f0106013	obj/kern/kernel.asm	/^f0106013:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	8b 25 84 4e 22 f0    	mov    0xf0224e84,%esp$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f010602c	obj/kern/kernel.asm	/^f010602c:	b8 b5 01 10 f0       	mov    $0xf01001b5,%eax$/;"	l
f0106031	obj/kern/kernel.asm	/^f0106031:	ff d0                	call   *%eax$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033 <spin>:$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	eb fe                	jmp    f0106033 <spin>$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038 <gdt>:$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	ff                   	(bad)  $/;"	l
f0106041	obj/kern/kernel.asm	/^f0106041:	ff 00                	incl   (%eax)$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	00 00                	add    %al,(%eax)$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	00                   	.byte 0x0$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	92                   	xchg   %eax,%edx$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	cf                   	iret   $/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050 <gdtdesc>:$/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050:	17                   	pop    %ss$/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056 <mpentry_end>:$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	90                   	nop$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057 <mpsearch1>:$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	55                   	push   %ebp$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	89 e5                	mov    %esp,%ebp$/;"	l
f010605a	obj/kern/kernel.asm	/^f010605a:	57                   	push   %edi$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	56                   	push   %esi$/;"	l
f010605c	obj/kern/kernel.asm	/^f010605c:	53                   	push   %ebx$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	8b 0d 8c 4e 22 f0    	mov    0xf0224e8c,%ecx$/;"	l
f0106066	obj/kern/kernel.asm	/^f0106066:	89 c3                	mov    %eax,%ebx$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	39 cb                	cmp    %ecx,%ebx$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	72 12                	jb     f0106081 <mpsearch1+0x2a>$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	50                   	push   %eax$/;"	l
f0106070	obj/kern/kernel.asm	/^f0106070:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	6a 57                	push   $0x57$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	68 45 8a 10 f0       	push   $0xf0108a45$/;"	l
f010607c	obj/kern/kernel.asm	/^f010607c:	e8 bf 9f ff ff       	call   f0100040 <_panic>$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	01 d0                	add    %edx,%eax$/;"	l
f0106089	obj/kern/kernel.asm	/^f0106089:	89 c2                	mov    %eax,%edx$/;"	l
f010608b	obj/kern/kernel.asm	/^f010608b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	39 ca                	cmp    %ecx,%edx$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	72 12                	jb     f01060a4 <mpsearch1+0x4d>$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	50                   	push   %eax$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	6a 57                	push   $0x57$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	68 45 8a 10 f0       	push   $0xf0108a45$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	e8 9c 9f ff ff       	call   f0100040 <_panic>$/;"	l
f01060a4	obj/kern/kernel.asm	/^f01060a4:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f01060aa	obj/kern/kernel.asm	/^f01060aa:	eb 2f                	jmp    f01060db <mpsearch1+0x84>$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01060af	obj/kern/kernel.asm	/^f01060af:	6a 04                	push   $0x4$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	68 55 8a 10 f0       	push   $0xf0108a55$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	53                   	push   %ebx$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	e8 e5 fd ff ff       	call   f0105ea1 <memcmp>$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01060bf	obj/kern/kernel.asm	/^f01060bf:	85 c0                	test   %eax,%eax$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	75 15                	jne    f01060d8 <mpsearch1+0x81>$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	89 da                	mov    %ebx,%edx$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	01 c8                	add    %ecx,%eax$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	83 c2 01             	add    $0x1,%edx$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	39 d7                	cmp    %edx,%edi$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	75 f4                	jne    f01060c8 <mpsearch1+0x71>$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	84 c0                	test   %al,%al$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	74 0e                	je     f01060e6 <mpsearch1+0x8f>$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	83 c3 10             	add    $0x10,%ebx$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	39 f3                	cmp    %esi,%ebx$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	72 cd                	jb     f01060ac <mpsearch1+0x55>$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	eb 02                	jmp    f01060e8 <mpsearch1+0x91>$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	89 d8                	mov    %ebx,%eax$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	5b                   	pop    %ebx$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	5e                   	pop    %esi$/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	5f                   	pop    %edi$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	5d                   	pop    %ebp$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	c3                   	ret    $/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0 <mp_init>:$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	55                   	push   %ebp$/;"	l
f01060f1	obj/kern/kernel.asm	/^f01060f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	57                   	push   %edi$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	56                   	push   %esi$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	53                   	push   %ebx$/;"	l
f01060f6	obj/kern/kernel.asm	/^f01060f6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01060f9	obj/kern/kernel.asm	/^f01060f9:	c7 05 c0 53 22 f0 20 	movl   $0xf0225020,0xf02253c0$/;"	l
f0106100	obj/kern/kernel.asm	/^f0106100:	50 22 f0 $/;"	l
f0106103	obj/kern/kernel.asm	/^f0106103:	83 3d 8c 4e 22 f0 00 	cmpl   $0x0,0xf0224e8c$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	75 16                	jne    f0106122 <mp_init+0x32>$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	68 00 04 00 00       	push   $0x400$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	6a 6f                	push   $0x6f$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	68 45 8a 10 f0       	push   $0xf0108a45$/;"	l
f010611d	obj/kern/kernel.asm	/^f010611d:	e8 1e 9f ff ff       	call   f0100040 <_panic>$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106129	obj/kern/kernel.asm	/^f0106129:	85 c0                	test   %eax,%eax$/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b:	74 16                	je     f0106143 <mp_init+0x53>$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	e8 1d ff ff ff       	call   f0106057 <mpsearch1>$/;"	l
f010613a	obj/kern/kernel.asm	/^f010613a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	85 c0                	test   %eax,%eax$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	75 3c                	jne    f010617d <mp_init+0x8d>$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	eb 20                	jmp    f0106163 <mp_init+0x73>$/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010614d	obj/kern/kernel.asm	/^f010614d:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0106152	obj/kern/kernel.asm	/^f0106152:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	e8 fb fe ff ff       	call   f0106057 <mpsearch1>$/;"	l
f010615c	obj/kern/kernel.asm	/^f010615c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	85 c0                	test   %eax,%eax$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	75 1a                	jne    f010617d <mp_init+0x8d>$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d:	e8 e5 fe ff ff       	call   f0106057 <mpsearch1>$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	85 c0                	test   %eax,%eax$/;"	l
f0106177	obj/kern/kernel.asm	/^f0106177:	0f 84 5d 02 00 00    	je     f01063da <mp_init+0x2ea>$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106180	obj/kern/kernel.asm	/^f0106180:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	85 f6                	test   %esi,%esi$/;"	l
f0106185	obj/kern/kernel.asm	/^f0106185:	74 06                	je     f010618d <mp_init+0x9d>$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b:	74 15                	je     f01061a2 <mp_init+0xb2>$/;"	l
f010618d	obj/kern/kernel.asm	/^f010618d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	68 b8 88 10 f0       	push   $0xf01088b8$/;"	l
f0106195	obj/kern/kernel.asm	/^f0106195:	e8 a2 dc ff ff       	call   f0103e3c <cprintf>$/;"	l
f010619a	obj/kern/kernel.asm	/^f010619a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	e9 38 02 00 00       	jmp    f01063da <mp_init+0x2ea>$/;"	l
f01061a2	obj/kern/kernel.asm	/^f01061a2:	89 f0                	mov    %esi,%eax$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	3b 05 8c 4e 22 f0    	cmp    0xf0224e8c,%eax$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	72 15                	jb     f01061c4 <mp_init+0xd4>$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	56                   	push   %esi$/;"	l
f01061b0	obj/kern/kernel.asm	/^f01061b0:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f01061b5	obj/kern/kernel.asm	/^f01061b5:	68 90 00 00 00       	push   $0x90$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	68 45 8a 10 f0       	push   $0xf0108a45$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	e8 7c 9e ff ff       	call   f0100040 <_panic>$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f01061ca	obj/kern/kernel.asm	/^f01061ca:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01061cd	obj/kern/kernel.asm	/^f01061cd:	6a 04                	push   $0x4$/;"	l
f01061cf	obj/kern/kernel.asm	/^f01061cf:	68 5a 8a 10 f0       	push   $0xf0108a5a$/;"	l
f01061d4	obj/kern/kernel.asm	/^f01061d4:	53                   	push   %ebx$/;"	l
f01061d5	obj/kern/kernel.asm	/^f01061d5:	e8 c7 fc ff ff       	call   f0105ea1 <memcmp>$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	83 c4 10             	add    $0x10,%esp$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	85 c0                	test   %eax,%eax$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	74 15                	je     f01061f6 <mp_init+0x106>$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	68 e8 88 10 f0       	push   $0xf01088e8$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	e8 4e dc ff ff       	call   f0103e3c <cprintf>$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	83 c4 10             	add    $0x10,%esp$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	e9 e4 01 00 00       	jmp    f01063da <mp_init+0x2ea>$/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106201	obj/kern/kernel.asm	/^f0106201:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106206	obj/kern/kernel.asm	/^f0106206:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010620b	obj/kern/kernel.asm	/^f010620b:	eb 0d                	jmp    f010621a <mp_init+0x12a>$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	f0 $/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	01 ca                	add    %ecx,%edx$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	83 c0 01             	add    $0x1,%eax$/;"	l
f010621a	obj/kern/kernel.asm	/^f010621a:	39 c7                	cmp    %eax,%edi$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	75 ef                	jne    f010620d <mp_init+0x11d>$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	84 d2                	test   %dl,%dl$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	74 15                	je     f0106237 <mp_init+0x147>$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	68 1c 89 10 f0       	push   $0xf010891c$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	e8 0d dc ff ff       	call   f0103e3c <cprintf>$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	e9 a3 01 00 00       	jmp    f01063da <mp_init+0x2ea>$/;"	l
f0106237	obj/kern/kernel.asm	/^f0106237:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	3c 01                	cmp    $0x1,%al$/;"	l
f010623d	obj/kern/kernel.asm	/^f010623d:	74 1d                	je     f010625c <mp_init+0x16c>$/;"	l
f010623f	obj/kern/kernel.asm	/^f010623f:	3c 04                	cmp    $0x4,%al$/;"	l
f0106241	obj/kern/kernel.asm	/^f0106241:	74 19                	je     f010625c <mp_init+0x16c>$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106246	obj/kern/kernel.asm	/^f0106246:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	50                   	push   %eax$/;"	l
f010624a	obj/kern/kernel.asm	/^f010624a:	68 40 89 10 f0       	push   $0xf0108940$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	e8 e8 db ff ff       	call   f0103e3c <cprintf>$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	e9 7e 01 00 00       	jmp    f01063da <mp_init+0x2ea>$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f0106264	obj/kern/kernel.asm	/^f0106264:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106269	obj/kern/kernel.asm	/^f0106269:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010626e	obj/kern/kernel.asm	/^f010626e:	01 ce                	add    %ecx,%esi$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	eb 0d                	jmp    f010627f <mp_init+0x18f>$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	f0 $/;"	l
f010627a	obj/kern/kernel.asm	/^f010627a:	01 ca                	add    %ecx,%edx$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	39 c7                	cmp    %eax,%edi$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	75 ef                	jne    f0106272 <mp_init+0x182>$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	89 d0                	mov    %edx,%eax$/;"	l
f0106285	obj/kern/kernel.asm	/^f0106285:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f0106288	obj/kern/kernel.asm	/^f0106288:	74 15                	je     f010629f <mp_init+0x1af>$/;"	l
f010628a	obj/kern/kernel.asm	/^f010628a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	68 60 89 10 f0       	push   $0xf0108960$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	e8 a5 db ff ff       	call   f0103e3c <cprintf>$/;"	l
f0106297	obj/kern/kernel.asm	/^f0106297:	83 c4 10             	add    $0x10,%esp$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	e9 3b 01 00 00       	jmp    f01063da <mp_init+0x2ea>$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	85 db                	test   %ebx,%ebx$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	0f 84 33 01 00 00    	je     f01063da <mp_init+0x2ea>$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	c7 05 00 50 22 f0 01 	movl   $0x1,0xf0225000$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	00 00 00 $/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	a3 00 60 26 f0       	mov    %eax,0xf0266000$/;"	l
f01062b9	obj/kern/kernel.asm	/^f01062b9:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f01062bc	obj/kern/kernel.asm	/^f01062bc:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	e9 85 00 00 00       	jmp    f010634b <mp_init+0x25b>$/;"	l
f01062c6	obj/kern/kernel.asm	/^f01062c6:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	84 c0                	test   %al,%al$/;"	l
f01062cb	obj/kern/kernel.asm	/^f01062cb:	74 06                	je     f01062d3 <mp_init+0x1e3>$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	3c 04                	cmp    $0x4,%al$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	77 55                	ja     f0106326 <mp_init+0x236>$/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	eb 4e                	jmp    f0106321 <mp_init+0x231>$/;"	l
f01062d3	obj/kern/kernel.asm	/^f01062d3:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	74 11                	je     f01062ea <mp_init+0x1fa>$/;"	l
f01062d9	obj/kern/kernel.asm	/^f01062d9:	6b 05 c4 53 22 f0 74 	imul   $0x74,0xf02253c4,%eax$/;"	l
f01062e0	obj/kern/kernel.asm	/^f01062e0:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f01062e5	obj/kern/kernel.asm	/^f01062e5:	a3 c0 53 22 f0       	mov    %eax,0xf02253c0$/;"	l
f01062ea	obj/kern/kernel.asm	/^f01062ea:	a1 c4 53 22 f0       	mov    0xf02253c4,%eax$/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f01062f2	obj/kern/kernel.asm	/^f01062f2:	7f 13                	jg     f0106307 <mp_init+0x217>$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	88 82 20 50 22 f0    	mov    %al,-0xfddafe0(%edx)$/;"	l
f01062fd	obj/kern/kernel.asm	/^f01062fd:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300:	a3 c4 53 22 f0       	mov    %eax,0xf02253c4$/;"	l
f0106305	obj/kern/kernel.asm	/^f0106305:	eb 15                	jmp    f010631c <mp_init+0x22c>$/;"	l
f0106307	obj/kern/kernel.asm	/^f0106307:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f010630e	obj/kern/kernel.asm	/^f010630e:	50                   	push   %eax$/;"	l
f010630f	obj/kern/kernel.asm	/^f010630f:	68 90 89 10 f0       	push   $0xf0108990$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	e8 23 db ff ff       	call   f0103e3c <cprintf>$/;"	l
f0106319	obj/kern/kernel.asm	/^f0106319:	83 c4 10             	add    $0x10,%esp$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	83 c7 14             	add    $0x14,%edi$/;"	l
f010631f	obj/kern/kernel.asm	/^f010631f:	eb 27                	jmp    f0106348 <mp_init+0x258>$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	83 c7 08             	add    $0x8,%edi$/;"	l
f0106324	obj/kern/kernel.asm	/^f0106324:	eb 22                	jmp    f0106348 <mp_init+0x258>$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106329	obj/kern/kernel.asm	/^f0106329:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010632c	obj/kern/kernel.asm	/^f010632c:	50                   	push   %eax$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	68 b8 89 10 f0       	push   $0xf01089b8$/;"	l
f0106332	obj/kern/kernel.asm	/^f0106332:	e8 05 db ff ff       	call   f0103e3c <cprintf>$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	c7 05 00 50 22 f0 00 	movl   $0x0,0xf0225000$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	00 00 00 $/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0106345	obj/kern/kernel.asm	/^f0106345:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106348	obj/kern/kernel.asm	/^f0106348:	83 c6 01             	add    $0x1,%esi$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f010634f	obj/kern/kernel.asm	/^f010634f:	39 c6                	cmp    %eax,%esi$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	0f 82 6f ff ff ff    	jb     f01062c6 <mp_init+0x1d6>$/;"	l
f0106357	obj/kern/kernel.asm	/^f0106357:	a1 c0 53 22 f0       	mov    0xf02253c0,%eax$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	83 3d 00 50 22 f0 00 	cmpl   $0x0,0xf0225000$/;"	l
f010636a	obj/kern/kernel.asm	/^f010636a:	75 26                	jne    f0106392 <mp_init+0x2a2>$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	c7 05 c4 53 22 f0 01 	movl   $0x1,0xf02253c4$/;"	l
f0106373	obj/kern/kernel.asm	/^f0106373:	00 00 00 $/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	c7 05 00 60 26 f0 00 	movl   $0x0,0xf0266000$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	00 00 00 $/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	68 d8 89 10 f0       	push   $0xf01089d8$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	e8 af da ff ff       	call   f0103e3c <cprintf>$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106390	obj/kern/kernel.asm	/^f0106390:	eb 48                	jmp    f01063da <mp_init+0x2ea>$/;"	l
f0106392	obj/kern/kernel.asm	/^f0106392:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	ff 35 c4 53 22 f0    	pushl  0xf02253c4$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010639e	obj/kern/kernel.asm	/^f010639e:	50                   	push   %eax$/;"	l
f010639f	obj/kern/kernel.asm	/^f010639f:	68 5f 8a 10 f0       	push   $0xf0108a5f$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	e8 93 da ff ff       	call   f0103e3c <cprintf>$/;"	l
f01063a9	obj/kern/kernel.asm	/^f01063a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01063ac	obj/kern/kernel.asm	/^f01063ac:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01063af	obj/kern/kernel.asm	/^f01063af:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	74 25                	je     f01063da <mp_init+0x2ea>$/;"	l
f01063b5	obj/kern/kernel.asm	/^f01063b5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01063b8	obj/kern/kernel.asm	/^f01063b8:	68 04 8a 10 f0       	push   $0xf0108a04$/;"	l
f01063bd	obj/kern/kernel.asm	/^f01063bd:	e8 7a da ff ff       	call   f0103e3c <cprintf>$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f01063c7	obj/kern/kernel.asm	/^f01063c7:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f01063cc	obj/kern/kernel.asm	/^f01063cc:	ee                   	out    %al,(%dx)$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	ec                   	in     (%dx),%al$/;"	l
f01063d3	obj/kern/kernel.asm	/^f01063d3:	83 c8 01             	or     $0x1,%eax$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	ee                   	out    %al,(%dx)$/;"	l
f01063d7	obj/kern/kernel.asm	/^f01063d7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01063da	obj/kern/kernel.asm	/^f01063da:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01063dd	obj/kern/kernel.asm	/^f01063dd:	5b                   	pop    %ebx$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	5e                   	pop    %esi$/;"	l
f01063df	obj/kern/kernel.asm	/^f01063df:	5f                   	pop    %edi$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	5d                   	pop    %ebp$/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	c3                   	ret    $/;"	l
f01063e2	obj/kern/kernel.asm	/^f01063e2 <lapicw>:$/;"	l
f01063e2	obj/kern/kernel.asm	/^f01063e2:	55                   	push   %ebp$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	8b 0d 04 60 26 f0    	mov    0xf0266004,%ecx$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f01063ee	obj/kern/kernel.asm	/^f01063ee:	89 10                	mov    %edx,(%eax)$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	a1 04 60 26 f0       	mov    0xf0266004,%eax$/;"	l
f01063f5	obj/kern/kernel.asm	/^f01063f5:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01063f8	obj/kern/kernel.asm	/^f01063f8:	5d                   	pop    %ebp$/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	c3                   	ret    $/;"	l
f01063fa	obj/kern/kernel.asm	/^f01063fa <cpunum>:$/;"	l
f01063fa	obj/kern/kernel.asm	/^f01063fa:	55                   	push   %ebp$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01063fd	obj/kern/kernel.asm	/^f01063fd:	a1 04 60 26 f0       	mov    0xf0266004,%eax$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	85 c0                	test   %eax,%eax$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	74 08                	je     f010640e <cpunum+0x14>$/;"	l
f0106406	obj/kern/kernel.asm	/^f0106406:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	eb 05                	jmp    f0106413 <cpunum+0x19>$/;"	l
f010640e	obj/kern/kernel.asm	/^f010640e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106413	obj/kern/kernel.asm	/^f0106413:	5d                   	pop    %ebp$/;"	l
f0106414	obj/kern/kernel.asm	/^f0106414:	c3                   	ret    $/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415 <lapic_init>:$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	a1 00 60 26 f0       	mov    0xf0266000,%eax$/;"	l
f010641a	obj/kern/kernel.asm	/^f010641a:	85 c0                	test   %eax,%eax$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	0f 84 21 01 00 00    	je     f0106543 <lapic_init+0x12e>$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	55                   	push   %ebp$/;"	l
f0106423	obj/kern/kernel.asm	/^f0106423:	89 e5                	mov    %esp,%ebp$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106428	obj/kern/kernel.asm	/^f0106428:	68 00 10 00 00       	push   $0x1000$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	50                   	push   %eax$/;"	l
f010642e	obj/kern/kernel.asm	/^f010642e:	e8 b5 b5 ff ff       	call   f01019e8 <mmio_map_region>$/;"	l
f0106433	obj/kern/kernel.asm	/^f0106433:	a3 04 60 26 f0       	mov    %eax,0xf0266004$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f010643d	obj/kern/kernel.asm	/^f010643d:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106442	obj/kern/kernel.asm	/^f0106442:	e8 9b ff ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f010644c	obj/kern/kernel.asm	/^f010644c:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106451	obj/kern/kernel.asm	/^f0106451:	e8 8c ff ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106456	obj/kern/kernel.asm	/^f0106456:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f010645b	obj/kern/kernel.asm	/^f010645b:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	e8 7d ff ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	e8 6e ff ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	e8 81 ff ff ff       	call   f01063fa <cpunum>$/;"	l
f0106479	obj/kern/kernel.asm	/^f0106479:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010647c	obj/kern/kernel.asm	/^f010647c:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f0106481	obj/kern/kernel.asm	/^f0106481:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106484	obj/kern/kernel.asm	/^f0106484:	39 05 c0 53 22 f0    	cmp    %eax,0xf02253c0$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	74 0f                	je     f010649b <lapic_init+0x86>$/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	e8 47 ff ff ff       	call   f01063e2 <lapicw>$/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01064a0	obj/kern/kernel.asm	/^f01064a0:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f01064a5	obj/kern/kernel.asm	/^f01064a5:	e8 38 ff ff ff       	call   f01063e2 <lapicw>$/;"	l
f01064aa	obj/kern/kernel.asm	/^f01064aa:	a1 04 60 26 f0       	mov    0xf0266004,%eax$/;"	l
f01064af	obj/kern/kernel.asm	/^f01064af:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01064b5	obj/kern/kernel.asm	/^f01064b5:	3c 03                	cmp    $0x3,%al$/;"	l
f01064b7	obj/kern/kernel.asm	/^f01064b7:	76 0f                	jbe    f01064c8 <lapic_init+0xb3>$/;"	l
f01064b9	obj/kern/kernel.asm	/^f01064b9:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01064be	obj/kern/kernel.asm	/^f01064be:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f01064c3	obj/kern/kernel.asm	/^f01064c3:	e8 1a ff ff ff       	call   f01063e2 <lapicw>$/;"	l
f01064c8	obj/kern/kernel.asm	/^f01064c8:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f01064d2	obj/kern/kernel.asm	/^f01064d2:	e8 0b ff ff ff       	call   f01063e2 <lapicw>$/;"	l
f01064d7	obj/kern/kernel.asm	/^f01064d7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01064e1	obj/kern/kernel.asm	/^f01064e1:	e8 fc fe ff ff       	call   f01063e2 <lapicw>$/;"	l
f01064e6	obj/kern/kernel.asm	/^f01064e6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01064f0	obj/kern/kernel.asm	/^f01064f0:	e8 ed fe ff ff       	call   f01063e2 <lapicw>$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01064ff	obj/kern/kernel.asm	/^f01064ff:	e8 de fe ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106504	obj/kern/kernel.asm	/^f0106504:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106509	obj/kern/kernel.asm	/^f0106509:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f010650e	obj/kern/kernel.asm	/^f010650e:	e8 cf fe ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106513	obj/kern/kernel.asm	/^f0106513:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106518	obj/kern/kernel.asm	/^f0106518:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010651d	obj/kern/kernel.asm	/^f010651d:	e8 c0 fe ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	8b 15 04 60 26 f0    	mov    0xf0266004,%edx$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106531	obj/kern/kernel.asm	/^f0106531:	75 f5                	jne    f0106528 <lapic_init+0x113>$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106538	obj/kern/kernel.asm	/^f0106538:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	e8 a0 fe ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	c9                   	leave  $/;"	l
f0106543	obj/kern/kernel.asm	/^f0106543:	f3 c3                	repz ret $/;"	l
f0106545	obj/kern/kernel.asm	/^f0106545 <lapic_eoi>:$/;"	l
f0106545	obj/kern/kernel.asm	/^f0106545:	83 3d 04 60 26 f0 00 	cmpl   $0x0,0xf0266004$/;"	l
f010654c	obj/kern/kernel.asm	/^f010654c:	74 13                	je     f0106561 <lapic_eoi+0x1c>$/;"	l
f010654e	obj/kern/kernel.asm	/^f010654e:	55                   	push   %ebp$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f010655b	obj/kern/kernel.asm	/^f010655b:	e8 82 fe ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106560	obj/kern/kernel.asm	/^f0106560:	5d                   	pop    %ebp$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	f3 c3                	repz ret $/;"	l
f0106563	obj/kern/kernel.asm	/^f0106563 <lapic_startap>:$/;"	l
f0106563	obj/kern/kernel.asm	/^f0106563:	55                   	push   %ebp$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	89 e5                	mov    %esp,%ebp$/;"	l
f0106566	obj/kern/kernel.asm	/^f0106566:	56                   	push   %esi$/;"	l
f0106567	obj/kern/kernel.asm	/^f0106567:	53                   	push   %ebx$/;"	l
f0106568	obj/kern/kernel.asm	/^f0106568:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010656b	obj/kern/kernel.asm	/^f010656b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010656e	obj/kern/kernel.asm	/^f010656e:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106573	obj/kern/kernel.asm	/^f0106573:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106578	obj/kern/kernel.asm	/^f0106578:	ee                   	out    %al,(%dx)$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010657e	obj/kern/kernel.asm	/^f010657e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106583	obj/kern/kernel.asm	/^f0106583:	ee                   	out    %al,(%dx)$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584:	83 3d 8c 4e 22 f0 00 	cmpl   $0x0,0xf0224e8c$/;"	l
f010658b	obj/kern/kernel.asm	/^f010658b:	75 19                	jne    f01065a6 <lapic_startap+0x43>$/;"	l
f010658d	obj/kern/kernel.asm	/^f010658d:	68 67 04 00 00       	push   $0x467$/;"	l
f0106592	obj/kern/kernel.asm	/^f0106592:	68 c4 6a 10 f0       	push   $0xf0106ac4$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	68 98 00 00 00       	push   $0x98$/;"	l
f010659c	obj/kern/kernel.asm	/^f010659c:	68 7c 8a 10 f0       	push   $0xf0108a7c$/;"	l
f01065a1	obj/kern/kernel.asm	/^f01065a1:	e8 9a 9a ff ff       	call   f0100040 <_panic>$/;"	l
f01065a6	obj/kern/kernel.asm	/^f01065a6:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	00 00 $/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	89 d8                	mov    %ebx,%eax$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f01065b4	obj/kern/kernel.asm	/^f01065b4:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f01065ba	obj/kern/kernel.asm	/^f01065ba:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	89 f2                	mov    %esi,%edx$/;"	l
f01065bf	obj/kern/kernel.asm	/^f01065bf:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01065c4	obj/kern/kernel.asm	/^f01065c4:	e8 19 fe ff ff       	call   f01063e2 <lapicw>$/;"	l
f01065c9	obj/kern/kernel.asm	/^f01065c9:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f01065ce	obj/kern/kernel.asm	/^f01065ce:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	e8 0a fe ff ff       	call   f01063e2 <lapicw>$/;"	l
f01065d8	obj/kern/kernel.asm	/^f01065d8:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	e8 fb fd ff ff       	call   f01063e2 <lapicw>$/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	80 cf 06             	or     $0x6,%bh$/;"	l
f01065ed	obj/kern/kernel.asm	/^f01065ed:	89 f2                	mov    %esi,%edx$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	e8 e9 fd ff ff       	call   f01063e2 <lapicw>$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	89 da                	mov    %ebx,%edx$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	e8 dd fd ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106605	obj/kern/kernel.asm	/^f0106605:	89 f2                	mov    %esi,%edx$/;"	l
f0106607	obj/kern/kernel.asm	/^f0106607:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f010660c	obj/kern/kernel.asm	/^f010660c:	e8 d1 fd ff ff       	call   f01063e2 <lapicw>$/;"	l
f0106611	obj/kern/kernel.asm	/^f0106611:	89 da                	mov    %ebx,%edx$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106618	obj/kern/kernel.asm	/^f0106618:	e8 c5 fd ff ff       	call   f01063e2 <lapicw>$/;"	l
f010661d	obj/kern/kernel.asm	/^f010661d:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0106620	obj/kern/kernel.asm	/^f0106620:	5b                   	pop    %ebx$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	5e                   	pop    %esi$/;"	l
f0106622	obj/kern/kernel.asm	/^f0106622:	5d                   	pop    %ebp$/;"	l
f0106623	obj/kern/kernel.asm	/^f0106623:	c3                   	ret    $/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624 <lapic_ipi>:$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	55                   	push   %ebp$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	89 e5                	mov    %esp,%ebp$/;"	l
f0106627	obj/kern/kernel.asm	/^f0106627:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106630	obj/kern/kernel.asm	/^f0106630:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106635	obj/kern/kernel.asm	/^f0106635:	e8 a8 fd ff ff       	call   f01063e2 <lapicw>$/;"	l
f010663a	obj/kern/kernel.asm	/^f010663a:	8b 15 04 60 26 f0    	mov    0xf0266004,%edx$/;"	l
f0106640	obj/kern/kernel.asm	/^f0106640:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106646	obj/kern/kernel.asm	/^f0106646:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106649	obj/kern/kernel.asm	/^f0106649:	75 f5                	jne    f0106640 <lapic_ipi+0x1c>$/;"	l
f010664b	obj/kern/kernel.asm	/^f010664b:	5d                   	pop    %ebp$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	c3                   	ret    $/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d <__spin_initlock>:$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	55                   	push   %ebp$/;"	l
f010664e	obj/kern/kernel.asm	/^f010664e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106650	obj/kern/kernel.asm	/^f0106650:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106666	obj/kern/kernel.asm	/^f0106666:	5d                   	pop    %ebp$/;"	l
f0106667	obj/kern/kernel.asm	/^f0106667:	c3                   	ret    $/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668 <spin_lock>:$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	55                   	push   %ebp$/;"	l
f0106669	obj/kern/kernel.asm	/^f0106669:	89 e5                	mov    %esp,%ebp$/;"	l
f010666b	obj/kern/kernel.asm	/^f010666b:	56                   	push   %esi$/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	53                   	push   %ebx$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106670	obj/kern/kernel.asm	/^f0106670:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	74 14                	je     f0106689 <spin_lock+0x21>$/;"	l
f0106675	obj/kern/kernel.asm	/^f0106675:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106678	obj/kern/kernel.asm	/^f0106678:	e8 7d fd ff ff       	call   f01063fa <cpunum>$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f0106685	obj/kern/kernel.asm	/^f0106685:	39 c6                	cmp    %eax,%esi$/;"	l
f0106687	obj/kern/kernel.asm	/^f0106687:	74 07                	je     f0106690 <spin_lock+0x28>$/;"	l
f0106689	obj/kern/kernel.asm	/^f0106689:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010668e	obj/kern/kernel.asm	/^f010668e:	eb 20                	jmp    f01066b0 <spin_lock+0x48>$/;"	l
f0106690	obj/kern/kernel.asm	/^f0106690:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	e8 62 fd ff ff       	call   f01063fa <cpunum>$/;"	l
f0106698	obj/kern/kernel.asm	/^f0106698:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	53                   	push   %ebx$/;"	l
f010669c	obj/kern/kernel.asm	/^f010669c:	50                   	push   %eax$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	68 8c 8a 10 f0       	push   $0xf0108a8c$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	6a 41                	push   $0x41$/;"	l
f01066a4	obj/kern/kernel.asm	/^f01066a4:	68 f0 8a 10 f0       	push   $0xf0108af0$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	e8 92 99 ff ff       	call   f0100040 <_panic>$/;"	l
f01066ae	obj/kern/kernel.asm	/^f01066ae:	f3 90                	pause  $/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	89 d0                	mov    %edx,%eax$/;"	l
f01066b2	obj/kern/kernel.asm	/^f01066b2:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	85 c0                	test   %eax,%eax$/;"	l
f01066b7	obj/kern/kernel.asm	/^f01066b7:	75 f5                	jne    f01066ae <spin_lock+0x46>$/;"	l
f01066b9	obj/kern/kernel.asm	/^f01066b9:	e8 3c fd ff ff       	call   f01063fa <cpunum>$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f01066c6	obj/kern/kernel.asm	/^f01066c6:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f01066c9	obj/kern/kernel.asm	/^f01066c9:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01066cc	obj/kern/kernel.asm	/^f01066cc:	89 ea                	mov    %ebp,%edx$/;"	l
f01066ce	obj/kern/kernel.asm	/^f01066ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01066d3	obj/kern/kernel.asm	/^f01066d3:	eb 0b                	jmp    f01066e0 <spin_lock+0x78>$/;"	l
f01066d5	obj/kern/kernel.asm	/^f01066d5:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f01066d8	obj/kern/kernel.asm	/^f01066d8:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f01066db	obj/kern/kernel.asm	/^f01066db:	8b 12                	mov    (%edx),%edx$/;"	l
f01066dd	obj/kern/kernel.asm	/^f01066dd:	83 c0 01             	add    $0x1,%eax$/;"	l
f01066e0	obj/kern/kernel.asm	/^f01066e0:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f01066e6	obj/kern/kernel.asm	/^f01066e6:	76 11                	jbe    f01066f9 <spin_lock+0x91>$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	7e e8                	jle    f01066d5 <spin_lock+0x6d>$/;"	l
f01066ed	obj/kern/kernel.asm	/^f01066ed:	eb 0a                	jmp    f01066f9 <spin_lock+0x91>$/;"	l
f01066ef	obj/kern/kernel.asm	/^f01066ef:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f01066f6	obj/kern/kernel.asm	/^f01066f6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01066f9	obj/kern/kernel.asm	/^f01066f9:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01066fc	obj/kern/kernel.asm	/^f01066fc:	7e f1                	jle    f01066ef <spin_lock+0x87>$/;"	l
f01066fe	obj/kern/kernel.asm	/^f01066fe:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0106701	obj/kern/kernel.asm	/^f0106701:	5b                   	pop    %ebx$/;"	l
f0106702	obj/kern/kernel.asm	/^f0106702:	5e                   	pop    %esi$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	5d                   	pop    %ebp$/;"	l
f0106704	obj/kern/kernel.asm	/^f0106704:	c3                   	ret    $/;"	l
f0106705	obj/kern/kernel.asm	/^f0106705 <spin_unlock>:$/;"	l
f0106705	obj/kern/kernel.asm	/^f0106705:	55                   	push   %ebp$/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	89 e5                	mov    %esp,%ebp$/;"	l
f0106708	obj/kern/kernel.asm	/^f0106708:	57                   	push   %edi$/;"	l
f0106709	obj/kern/kernel.asm	/^f0106709:	56                   	push   %esi$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	53                   	push   %ebx$/;"	l
f010670b	obj/kern/kernel.asm	/^f010670b:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010670e	obj/kern/kernel.asm	/^f010670e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106711	obj/kern/kernel.asm	/^f0106711:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0106714	obj/kern/kernel.asm	/^f0106714:	74 18                	je     f010672e <spin_unlock+0x29>$/;"	l
f0106716	obj/kern/kernel.asm	/^f0106716:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0106719	obj/kern/kernel.asm	/^f0106719:	e8 dc fc ff ff       	call   f01063fa <cpunum>$/;"	l
f010671e	obj/kern/kernel.asm	/^f010671e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106721	obj/kern/kernel.asm	/^f0106721:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	0f 84 a5 00 00 00    	je     f01067d3 <spin_unlock+0xce>$/;"	l
f010672e	obj/kern/kernel.asm	/^f010672e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106731	obj/kern/kernel.asm	/^f0106731:	6a 28                	push   $0x28$/;"	l
f0106733	obj/kern/kernel.asm	/^f0106733:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0106736	obj/kern/kernel.asm	/^f0106736:	50                   	push   %eax$/;"	l
f0106737	obj/kern/kernel.asm	/^f0106737:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f010673a	obj/kern/kernel.asm	/^f010673a:	53                   	push   %ebx$/;"	l
f010673b	obj/kern/kernel.asm	/^f010673b:	e8 e6 f6 ff ff       	call   f0105e26 <memmove>$/;"	l
f0106740	obj/kern/kernel.asm	/^f0106740:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0106743	obj/kern/kernel.asm	/^f0106743:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0106746	obj/kern/kernel.asm	/^f0106746:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0106749	obj/kern/kernel.asm	/^f0106749:	e8 ac fc ff ff       	call   f01063fa <cpunum>$/;"	l
f010674e	obj/kern/kernel.asm	/^f010674e:	57                   	push   %edi$/;"	l
f010674f	obj/kern/kernel.asm	/^f010674f:	56                   	push   %esi$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	50                   	push   %eax$/;"	l
f0106751	obj/kern/kernel.asm	/^f0106751:	68 b8 8a 10 f0       	push   $0xf0108ab8$/;"	l
f0106756	obj/kern/kernel.asm	/^f0106756:	e8 e1 d6 ff ff       	call   f0103e3c <cprintf>$/;"	l
f010675b	obj/kern/kernel.asm	/^f010675b:	83 c4 20             	add    $0x20,%esp$/;"	l
f010675e	obj/kern/kernel.asm	/^f010675e:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	eb 54                	jmp    f01067b7 <spin_unlock+0xb2>$/;"	l
f0106763	obj/kern/kernel.asm	/^f0106763:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	57                   	push   %edi$/;"	l
f0106767	obj/kern/kernel.asm	/^f0106767:	50                   	push   %eax$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	e8 fd ea ff ff       	call   f010526a <debuginfo_eip>$/;"	l
f010676d	obj/kern/kernel.asm	/^f010676d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106770	obj/kern/kernel.asm	/^f0106770:	85 c0                	test   %eax,%eax$/;"	l
f0106772	obj/kern/kernel.asm	/^f0106772:	78 27                	js     f010679b <spin_unlock+0x96>$/;"	l
f0106774	obj/kern/kernel.asm	/^f0106774:	8b 06                	mov    (%esi),%eax$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106779	obj/kern/kernel.asm	/^f0106779:	89 c2                	mov    %eax,%edx$/;"	l
f010677b	obj/kern/kernel.asm	/^f010677b:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f010677e	obj/kern/kernel.asm	/^f010677e:	52                   	push   %edx$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0106785	obj/kern/kernel.asm	/^f0106785:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0106788	obj/kern/kernel.asm	/^f0106788:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010678b	obj/kern/kernel.asm	/^f010678b:	50                   	push   %eax$/;"	l
f010678c	obj/kern/kernel.asm	/^f010678c:	68 00 8b 10 f0       	push   $0xf0108b00$/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	e8 a6 d6 ff ff       	call   f0103e3c <cprintf>$/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106799	obj/kern/kernel.asm	/^f0106799:	eb 12                	jmp    f01067ad <spin_unlock+0xa8>$/;"	l
f010679b	obj/kern/kernel.asm	/^f010679b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010679e	obj/kern/kernel.asm	/^f010679e:	ff 36                	pushl  (%esi)$/;"	l
f01067a0	obj/kern/kernel.asm	/^f01067a0:	68 17 8b 10 f0       	push   $0xf0108b17$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	e8 92 d6 ff ff       	call   f0103e3c <cprintf>$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01067ad	obj/kern/kernel.asm	/^f01067ad:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01067b0	obj/kern/kernel.asm	/^f01067b0:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f01067b3	obj/kern/kernel.asm	/^f01067b3:	39 c3                	cmp    %eax,%ebx$/;"	l
f01067b5	obj/kern/kernel.asm	/^f01067b5:	74 08                	je     f01067bf <spin_unlock+0xba>$/;"	l
f01067b7	obj/kern/kernel.asm	/^f01067b7:	89 de                	mov    %ebx,%esi$/;"	l
f01067b9	obj/kern/kernel.asm	/^f01067b9:	8b 03                	mov    (%ebx),%eax$/;"	l
f01067bb	obj/kern/kernel.asm	/^f01067bb:	85 c0                	test   %eax,%eax$/;"	l
f01067bd	obj/kern/kernel.asm	/^f01067bd:	75 a4                	jne    f0106763 <spin_unlock+0x5e>$/;"	l
f01067bf	obj/kern/kernel.asm	/^f01067bf:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	68 1f 8b 10 f0       	push   $0xf0108b1f$/;"	l
f01067c7	obj/kern/kernel.asm	/^f01067c7:	6a 67                	push   $0x67$/;"	l
f01067c9	obj/kern/kernel.asm	/^f01067c9:	68 f0 8a 10 f0       	push   $0xf0108af0$/;"	l
f01067ce	obj/kern/kernel.asm	/^f01067ce:	e8 6d 98 ff ff       	call   f0100040 <_panic>$/;"	l
f01067d3	obj/kern/kernel.asm	/^f01067d3:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f01067e1	obj/kern/kernel.asm	/^f01067e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067e6	obj/kern/kernel.asm	/^f01067e6:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f01067e9	obj/kern/kernel.asm	/^f01067e9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01067ec	obj/kern/kernel.asm	/^f01067ec:	5b                   	pop    %ebx$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	5e                   	pop    %esi$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	5f                   	pop    %edi$/;"	l
f01067ef	obj/kern/kernel.asm	/^f01067ef:	5d                   	pop    %ebp$/;"	l
f01067f0	obj/kern/kernel.asm	/^f01067f0:	c3                   	ret    $/;"	l
f01067f1	obj/kern/kernel.asm	/^f01067f1:	66 90                	xchg   %ax,%ax$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	66 90                	xchg   %ax,%ax$/;"	l
f01067f5	obj/kern/kernel.asm	/^f01067f5:	66 90                	xchg   %ax,%ax$/;"	l
f01067f7	obj/kern/kernel.asm	/^f01067f7:	66 90                	xchg   %ax,%ax$/;"	l
f01067f9	obj/kern/kernel.asm	/^f01067f9:	66 90                	xchg   %ax,%ax$/;"	l
f01067fb	obj/kern/kernel.asm	/^f01067fb:	66 90                	xchg   %ax,%ax$/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	66 90                	xchg   %ax,%ax$/;"	l
f01067ff	obj/kern/kernel.asm	/^f01067ff:	90                   	nop$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800 <__udivdi3>:$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	55                   	push   %ebp$/;"	l
f0106801	obj/kern/kernel.asm	/^f0106801:	57                   	push   %edi$/;"	l
f0106802	obj/kern/kernel.asm	/^f0106802:	56                   	push   %esi$/;"	l
f0106803	obj/kern/kernel.asm	/^f0106803:	53                   	push   %ebx$/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f010680b	obj/kern/kernel.asm	/^f010680b:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106817	obj/kern/kernel.asm	/^f0106817:	85 f6                	test   %esi,%esi$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010681d	obj/kern/kernel.asm	/^f010681d:	89 ca                	mov    %ecx,%edx$/;"	l
f010681f	obj/kern/kernel.asm	/^f010681f:	89 f8                	mov    %edi,%eax$/;"	l
f0106821	obj/kern/kernel.asm	/^f0106821:	75 3d                	jne    f0106860 <__udivdi3+0x60>$/;"	l
f0106823	obj/kern/kernel.asm	/^f0106823:	39 cf                	cmp    %ecx,%edi$/;"	l
f0106825	obj/kern/kernel.asm	/^f0106825:	0f 87 c5 00 00 00    	ja     f01068f0 <__udivdi3+0xf0>$/;"	l
f010682b	obj/kern/kernel.asm	/^f010682b:	85 ff                	test   %edi,%edi$/;"	l
f010682d	obj/kern/kernel.asm	/^f010682d:	89 fd                	mov    %edi,%ebp$/;"	l
f010682f	obj/kern/kernel.asm	/^f010682f:	75 0b                	jne    f010683c <__udivdi3+0x3c>$/;"	l
f0106831	obj/kern/kernel.asm	/^f0106831:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106836	obj/kern/kernel.asm	/^f0106836:	31 d2                	xor    %edx,%edx$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	f7 f7                	div    %edi$/;"	l
f010683a	obj/kern/kernel.asm	/^f010683a:	89 c5                	mov    %eax,%ebp$/;"	l
f010683c	obj/kern/kernel.asm	/^f010683c:	89 c8                	mov    %ecx,%eax$/;"	l
f010683e	obj/kern/kernel.asm	/^f010683e:	31 d2                	xor    %edx,%edx$/;"	l
f0106840	obj/kern/kernel.asm	/^f0106840:	f7 f5                	div    %ebp$/;"	l
f0106842	obj/kern/kernel.asm	/^f0106842:	89 c1                	mov    %eax,%ecx$/;"	l
f0106844	obj/kern/kernel.asm	/^f0106844:	89 d8                	mov    %ebx,%eax$/;"	l
f0106846	obj/kern/kernel.asm	/^f0106846:	89 cf                	mov    %ecx,%edi$/;"	l
f0106848	obj/kern/kernel.asm	/^f0106848:	f7 f5                	div    %ebp$/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a:	89 c3                	mov    %eax,%ebx$/;"	l
f010684c	obj/kern/kernel.asm	/^f010684c:	89 d8                	mov    %ebx,%eax$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	89 fa                	mov    %edi,%edx$/;"	l
f0106850	obj/kern/kernel.asm	/^f0106850:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	5b                   	pop    %ebx$/;"	l
f0106854	obj/kern/kernel.asm	/^f0106854:	5e                   	pop    %esi$/;"	l
f0106855	obj/kern/kernel.asm	/^f0106855:	5f                   	pop    %edi$/;"	l
f0106856	obj/kern/kernel.asm	/^f0106856:	5d                   	pop    %ebp$/;"	l
f0106857	obj/kern/kernel.asm	/^f0106857:	c3                   	ret    $/;"	l
f0106858	obj/kern/kernel.asm	/^f0106858:	90                   	nop$/;"	l
f0106859	obj/kern/kernel.asm	/^f0106859:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106860	obj/kern/kernel.asm	/^f0106860:	39 ce                	cmp    %ecx,%esi$/;"	l
f0106862	obj/kern/kernel.asm	/^f0106862:	77 74                	ja     f01068d8 <__udivdi3+0xd8>$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0106867	obj/kern/kernel.asm	/^f0106867:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f010686a	obj/kern/kernel.asm	/^f010686a:	0f 84 98 00 00 00    	je     f0106908 <__udivdi3+0x108>$/;"	l
f0106870	obj/kern/kernel.asm	/^f0106870:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0106875	obj/kern/kernel.asm	/^f0106875:	89 f9                	mov    %edi,%ecx$/;"	l
f0106877	obj/kern/kernel.asm	/^f0106877:	89 c5                	mov    %eax,%ebp$/;"	l
f0106879	obj/kern/kernel.asm	/^f0106879:	29 fb                	sub    %edi,%ebx$/;"	l
f010687b	obj/kern/kernel.asm	/^f010687b:	d3 e6                	shl    %cl,%esi$/;"	d
f010687d	obj/kern/kernel.asm	/^f010687d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010687f	obj/kern/kernel.asm	/^f010687f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106881	obj/kern/kernel.asm	/^f0106881:	89 f9                	mov    %edi,%ecx$/;"	l
f0106883	obj/kern/kernel.asm	/^f0106883:	d3 e0                	shl    %cl,%eax$/;"	d
f0106885	obj/kern/kernel.asm	/^f0106885:	09 ee                	or     %ebp,%esi$/;"	l
f0106887	obj/kern/kernel.asm	/^f0106887:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106889	obj/kern/kernel.asm	/^f0106889:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010688d	obj/kern/kernel.asm	/^f010688d:	89 d5                	mov    %edx,%ebp$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106895	obj/kern/kernel.asm	/^f0106895:	89 f9                	mov    %edi,%ecx$/;"	l
f0106897	obj/kern/kernel.asm	/^f0106897:	d3 e2                	shl    %cl,%edx$/;"	d
f0106899	obj/kern/kernel.asm	/^f0106899:	89 d9                	mov    %ebx,%ecx$/;"	l
f010689b	obj/kern/kernel.asm	/^f010689b:	d3 e8                	shr    %cl,%eax$/;"	d
f010689d	obj/kern/kernel.asm	/^f010689d:	09 c2                	or     %eax,%edx$/;"	l
f010689f	obj/kern/kernel.asm	/^f010689f:	89 d0                	mov    %edx,%eax$/;"	l
f01068a1	obj/kern/kernel.asm	/^f01068a1:	89 ea                	mov    %ebp,%edx$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	f7 f6                	div    %esi$/;"	l
f01068a5	obj/kern/kernel.asm	/^f01068a5:	89 d5                	mov    %edx,%ebp$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	89 c3                	mov    %eax,%ebx$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f01068ad	obj/kern/kernel.asm	/^f01068ad:	39 d5                	cmp    %edx,%ebp$/;"	l
f01068af	obj/kern/kernel.asm	/^f01068af:	72 10                	jb     f01068c1 <__udivdi3+0xc1>$/;"	l
f01068b1	obj/kern/kernel.asm	/^f01068b1:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f01068b5	obj/kern/kernel.asm	/^f01068b5:	89 f9                	mov    %edi,%ecx$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	d3 e6                	shl    %cl,%esi$/;"	d
f01068b9	obj/kern/kernel.asm	/^f01068b9:	39 c6                	cmp    %eax,%esi$/;"	l
f01068bb	obj/kern/kernel.asm	/^f01068bb:	73 07                	jae    f01068c4 <__udivdi3+0xc4>$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	39 d5                	cmp    %edx,%ebp$/;"	l
f01068bf	obj/kern/kernel.asm	/^f01068bf:	75 03                	jne    f01068c4 <__udivdi3+0xc4>$/;"	l
f01068c1	obj/kern/kernel.asm	/^f01068c1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	31 ff                	xor    %edi,%edi$/;"	l
f01068c6	obj/kern/kernel.asm	/^f01068c6:	89 d8                	mov    %ebx,%eax$/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	89 fa                	mov    %edi,%edx$/;"	l
f01068ca	obj/kern/kernel.asm	/^f01068ca:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01068cd	obj/kern/kernel.asm	/^f01068cd:	5b                   	pop    %ebx$/;"	l
f01068ce	obj/kern/kernel.asm	/^f01068ce:	5e                   	pop    %esi$/;"	l
f01068cf	obj/kern/kernel.asm	/^f01068cf:	5f                   	pop    %edi$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	5d                   	pop    %ebp$/;"	l
f01068d1	obj/kern/kernel.asm	/^f01068d1:	c3                   	ret    $/;"	l
f01068d2	obj/kern/kernel.asm	/^f01068d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01068d8	obj/kern/kernel.asm	/^f01068d8:	31 ff                	xor    %edi,%edi$/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da:	31 db                	xor    %ebx,%ebx$/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	89 d8                	mov    %ebx,%eax$/;"	l
f01068de	obj/kern/kernel.asm	/^f01068de:	89 fa                	mov    %edi,%edx$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01068e3	obj/kern/kernel.asm	/^f01068e3:	5b                   	pop    %ebx$/;"	l
f01068e4	obj/kern/kernel.asm	/^f01068e4:	5e                   	pop    %esi$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	5f                   	pop    %edi$/;"	l
f01068e6	obj/kern/kernel.asm	/^f01068e6:	5d                   	pop    %ebp$/;"	l
f01068e7	obj/kern/kernel.asm	/^f01068e7:	c3                   	ret    $/;"	l
f01068e8	obj/kern/kernel.asm	/^f01068e8:	90                   	nop$/;"	l
f01068e9	obj/kern/kernel.asm	/^f01068e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01068f0	obj/kern/kernel.asm	/^f01068f0:	89 d8                	mov    %ebx,%eax$/;"	l
f01068f2	obj/kern/kernel.asm	/^f01068f2:	f7 f7                	div    %edi$/;"	l
f01068f4	obj/kern/kernel.asm	/^f01068f4:	31 ff                	xor    %edi,%edi$/;"	l
f01068f6	obj/kern/kernel.asm	/^f01068f6:	89 c3                	mov    %eax,%ebx$/;"	l
f01068f8	obj/kern/kernel.asm	/^f01068f8:	89 d8                	mov    %ebx,%eax$/;"	l
f01068fa	obj/kern/kernel.asm	/^f01068fa:	89 fa                	mov    %edi,%edx$/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01068ff	obj/kern/kernel.asm	/^f01068ff:	5b                   	pop    %ebx$/;"	l
f0106900	obj/kern/kernel.asm	/^f0106900:	5e                   	pop    %esi$/;"	l
f0106901	obj/kern/kernel.asm	/^f0106901:	5f                   	pop    %edi$/;"	l
f0106902	obj/kern/kernel.asm	/^f0106902:	5d                   	pop    %ebp$/;"	l
f0106903	obj/kern/kernel.asm	/^f0106903:	c3                   	ret    $/;"	l
f0106904	obj/kern/kernel.asm	/^f0106904:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106908	obj/kern/kernel.asm	/^f0106908:	39 ce                	cmp    %ecx,%esi$/;"	l
f010690a	obj/kern/kernel.asm	/^f010690a:	72 0c                	jb     f0106918 <__udivdi3+0x118>$/;"	l
f010690c	obj/kern/kernel.asm	/^f010690c:	31 db                	xor    %ebx,%ebx$/;"	l
f010690e	obj/kern/kernel.asm	/^f010690e:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0106912	obj/kern/kernel.asm	/^f0106912:	0f 87 34 ff ff ff    	ja     f010684c <__udivdi3+0x4c>$/;"	l
f0106918	obj/kern/kernel.asm	/^f0106918:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f010691d	obj/kern/kernel.asm	/^f010691d:	e9 2a ff ff ff       	jmp    f010684c <__udivdi3+0x4c>$/;"	l
f0106922	obj/kern/kernel.asm	/^f0106922:	66 90                	xchg   %ax,%ax$/;"	l
f0106924	obj/kern/kernel.asm	/^f0106924:	66 90                	xchg   %ax,%ax$/;"	l
f0106926	obj/kern/kernel.asm	/^f0106926:	66 90                	xchg   %ax,%ax$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	66 90                	xchg   %ax,%ax$/;"	l
f010692a	obj/kern/kernel.asm	/^f010692a:	66 90                	xchg   %ax,%ax$/;"	l
f010692c	obj/kern/kernel.asm	/^f010692c:	66 90                	xchg   %ax,%ax$/;"	l
f010692e	obj/kern/kernel.asm	/^f010692e:	66 90                	xchg   %ax,%ax$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930 <__umoddi3>:$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	55                   	push   %ebp$/;"	l
f0106931	obj/kern/kernel.asm	/^f0106931:	57                   	push   %edi$/;"	l
f0106932	obj/kern/kernel.asm	/^f0106932:	56                   	push   %esi$/;"	l
f0106933	obj/kern/kernel.asm	/^f0106933:	53                   	push   %ebx$/;"	l
f0106934	obj/kern/kernel.asm	/^f0106934:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106937	obj/kern/kernel.asm	/^f0106937:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f010693b	obj/kern/kernel.asm	/^f010693b:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f010693f	obj/kern/kernel.asm	/^f010693f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0106943	obj/kern/kernel.asm	/^f0106943:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106947	obj/kern/kernel.asm	/^f0106947:	85 d2                	test   %edx,%edx$/;"	l
f0106949	obj/kern/kernel.asm	/^f0106949:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010694d	obj/kern/kernel.asm	/^f010694d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106951	obj/kern/kernel.asm	/^f0106951:	89 f3                	mov    %esi,%ebx$/;"	l
f0106953	obj/kern/kernel.asm	/^f0106953:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106956	obj/kern/kernel.asm	/^f0106956:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010695a	obj/kern/kernel.asm	/^f010695a:	75 1c                	jne    f0106978 <__umoddi3+0x48>$/;"	l
f010695c	obj/kern/kernel.asm	/^f010695c:	39 f7                	cmp    %esi,%edi$/;"	l
f010695e	obj/kern/kernel.asm	/^f010695e:	76 50                	jbe    f01069b0 <__umoddi3+0x80>$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	89 c8                	mov    %ecx,%eax$/;"	l
f0106962	obj/kern/kernel.asm	/^f0106962:	89 f2                	mov    %esi,%edx$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	f7 f7                	div    %edi$/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966:	89 d0                	mov    %edx,%eax$/;"	l
f0106968	obj/kern/kernel.asm	/^f0106968:	31 d2                	xor    %edx,%edx$/;"	l
f010696a	obj/kern/kernel.asm	/^f010696a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010696d	obj/kern/kernel.asm	/^f010696d:	5b                   	pop    %ebx$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e:	5e                   	pop    %esi$/;"	l
f010696f	obj/kern/kernel.asm	/^f010696f:	5f                   	pop    %edi$/;"	l
f0106970	obj/kern/kernel.asm	/^f0106970:	5d                   	pop    %ebp$/;"	l
f0106971	obj/kern/kernel.asm	/^f0106971:	c3                   	ret    $/;"	l
f0106972	obj/kern/kernel.asm	/^f0106972:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106978	obj/kern/kernel.asm	/^f0106978:	39 f2                	cmp    %esi,%edx$/;"	l
f010697a	obj/kern/kernel.asm	/^f010697a:	89 d0                	mov    %edx,%eax$/;"	l
f010697c	obj/kern/kernel.asm	/^f010697c:	77 52                	ja     f01069d0 <__umoddi3+0xa0>$/;"	l
f010697e	obj/kern/kernel.asm	/^f010697e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0106981	obj/kern/kernel.asm	/^f0106981:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0106984	obj/kern/kernel.asm	/^f0106984:	75 5a                	jne    f01069e0 <__umoddi3+0xb0>$/;"	l
f0106986	obj/kern/kernel.asm	/^f0106986:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f010698a	obj/kern/kernel.asm	/^f010698a:	0f 82 e0 00 00 00    	jb     f0106a70 <__umoddi3+0x140>$/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0106993	obj/kern/kernel.asm	/^f0106993:	0f 86 d7 00 00 00    	jbe    f0106a70 <__umoddi3+0x140>$/;"	l
f0106999	obj/kern/kernel.asm	/^f0106999:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010699d	obj/kern/kernel.asm	/^f010699d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f01069a1	obj/kern/kernel.asm	/^f01069a1:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01069a4	obj/kern/kernel.asm	/^f01069a4:	5b                   	pop    %ebx$/;"	l
f01069a5	obj/kern/kernel.asm	/^f01069a5:	5e                   	pop    %esi$/;"	l
f01069a6	obj/kern/kernel.asm	/^f01069a6:	5f                   	pop    %edi$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	5d                   	pop    %ebp$/;"	l
f01069a8	obj/kern/kernel.asm	/^f01069a8:	c3                   	ret    $/;"	l
f01069a9	obj/kern/kernel.asm	/^f01069a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0:	85 ff                	test   %edi,%edi$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	89 fd                	mov    %edi,%ebp$/;"	l
f01069b4	obj/kern/kernel.asm	/^f01069b4:	75 0b                	jne    f01069c1 <__umoddi3+0x91>$/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01069bb	obj/kern/kernel.asm	/^f01069bb:	31 d2                	xor    %edx,%edx$/;"	l
f01069bd	obj/kern/kernel.asm	/^f01069bd:	f7 f7                	div    %edi$/;"	l
f01069bf	obj/kern/kernel.asm	/^f01069bf:	89 c5                	mov    %eax,%ebp$/;"	l
f01069c1	obj/kern/kernel.asm	/^f01069c1:	89 f0                	mov    %esi,%eax$/;"	l
f01069c3	obj/kern/kernel.asm	/^f01069c3:	31 d2                	xor    %edx,%edx$/;"	l
f01069c5	obj/kern/kernel.asm	/^f01069c5:	f7 f5                	div    %ebp$/;"	l
f01069c7	obj/kern/kernel.asm	/^f01069c7:	89 c8                	mov    %ecx,%eax$/;"	l
f01069c9	obj/kern/kernel.asm	/^f01069c9:	f7 f5                	div    %ebp$/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	89 d0                	mov    %edx,%eax$/;"	l
f01069cd	obj/kern/kernel.asm	/^f01069cd:	eb 99                	jmp    f0106968 <__umoddi3+0x38>$/;"	l
f01069cf	obj/kern/kernel.asm	/^f01069cf:	90                   	nop$/;"	l
f01069d0	obj/kern/kernel.asm	/^f01069d0:	89 c8                	mov    %ecx,%eax$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	89 f2                	mov    %esi,%edx$/;"	l
f01069d4	obj/kern/kernel.asm	/^f01069d4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01069d7	obj/kern/kernel.asm	/^f01069d7:	5b                   	pop    %ebx$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	5e                   	pop    %esi$/;"	l
f01069d9	obj/kern/kernel.asm	/^f01069d9:	5f                   	pop    %edi$/;"	l
f01069da	obj/kern/kernel.asm	/^f01069da:	5d                   	pop    %ebp$/;"	l
f01069db	obj/kern/kernel.asm	/^f01069db:	c3                   	ret    $/;"	l
f01069dc	obj/kern/kernel.asm	/^f01069dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	8b 34 24             	mov    (%esp),%esi$/;"	l
f01069e3	obj/kern/kernel.asm	/^f01069e3:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f01069e8	obj/kern/kernel.asm	/^f01069e8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01069ea	obj/kern/kernel.asm	/^f01069ea:	29 ef                	sub    %ebp,%edi$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	d3 e0                	shl    %cl,%eax$/;"	d
f01069ee	obj/kern/kernel.asm	/^f01069ee:	89 f9                	mov    %edi,%ecx$/;"	l
f01069f0	obj/kern/kernel.asm	/^f01069f0:	89 f2                	mov    %esi,%edx$/;"	l
f01069f2	obj/kern/kernel.asm	/^f01069f2:	d3 ea                	shr    %cl,%edx$/;"	d
f01069f4	obj/kern/kernel.asm	/^f01069f4:	89 e9                	mov    %ebp,%ecx$/;"	l
f01069f6	obj/kern/kernel.asm	/^f01069f6:	09 c2                	or     %eax,%edx$/;"	l
f01069f8	obj/kern/kernel.asm	/^f01069f8:	89 d8                	mov    %ebx,%eax$/;"	l
f01069fa	obj/kern/kernel.asm	/^f01069fa:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01069fd	obj/kern/kernel.asm	/^f01069fd:	89 f2                	mov    %esi,%edx$/;"	l
f01069ff	obj/kern/kernel.asm	/^f01069ff:	d3 e2                	shl    %cl,%edx$/;"	d
f0106a01	obj/kern/kernel.asm	/^f0106a01:	89 f9                	mov    %edi,%ecx$/;"	l
f0106a03	obj/kern/kernel.asm	/^f0106a03:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106a07	obj/kern/kernel.asm	/^f0106a07:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0106a0b	obj/kern/kernel.asm	/^f0106a0b:	d3 e8                	shr    %cl,%eax$/;"	d
f0106a0d	obj/kern/kernel.asm	/^f0106a0d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106a0f	obj/kern/kernel.asm	/^f0106a0f:	89 c6                	mov    %eax,%esi$/;"	l
f0106a11	obj/kern/kernel.asm	/^f0106a11:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106a13	obj/kern/kernel.asm	/^f0106a13:	89 f9                	mov    %edi,%ecx$/;"	l
f0106a15	obj/kern/kernel.asm	/^f0106a15:	89 d0                	mov    %edx,%eax$/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	d3 e8                	shr    %cl,%eax$/;"	d
f0106a19	obj/kern/kernel.asm	/^f0106a19:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	09 d8                	or     %ebx,%eax$/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	89 d3                	mov    %edx,%ebx$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	89 f2                	mov    %esi,%edx$/;"	l
f0106a21	obj/kern/kernel.asm	/^f0106a21:	f7 34 24             	divl   (%esp)$/;"	l
f0106a24	obj/kern/kernel.asm	/^f0106a24:	89 d6                	mov    %edx,%esi$/;"	l
f0106a26	obj/kern/kernel.asm	/^f0106a26:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106a28	obj/kern/kernel.asm	/^f0106a28:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f0106a2c	obj/kern/kernel.asm	/^f0106a2c:	39 d6                	cmp    %edx,%esi$/;"	l
f0106a2e	obj/kern/kernel.asm	/^f0106a2e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	89 d1                	mov    %edx,%ecx$/;"	l
f0106a34	obj/kern/kernel.asm	/^f0106a34:	89 c3                	mov    %eax,%ebx$/;"	l
f0106a36	obj/kern/kernel.asm	/^f0106a36:	72 08                	jb     f0106a40 <__umoddi3+0x110>$/;"	l
f0106a38	obj/kern/kernel.asm	/^f0106a38:	75 11                	jne    f0106a4b <__umoddi3+0x11b>$/;"	l
f0106a3a	obj/kern/kernel.asm	/^f0106a3a:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f0106a3e	obj/kern/kernel.asm	/^f0106a3e:	73 0b                	jae    f0106a4b <__umoddi3+0x11b>$/;"	l
f0106a40	obj/kern/kernel.asm	/^f0106a40:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0106a44	obj/kern/kernel.asm	/^f0106a44:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0106a47	obj/kern/kernel.asm	/^f0106a47:	89 d1                	mov    %edx,%ecx$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	89 c3                	mov    %eax,%ebx$/;"	l
f0106a4b	obj/kern/kernel.asm	/^f0106a4b:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f0106a4f	obj/kern/kernel.asm	/^f0106a4f:	29 da                	sub    %ebx,%edx$/;"	l
f0106a51	obj/kern/kernel.asm	/^f0106a51:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106a53	obj/kern/kernel.asm	/^f0106a53:	89 f9                	mov    %edi,%ecx$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	89 f0                	mov    %esi,%eax$/;"	l
f0106a57	obj/kern/kernel.asm	/^f0106a57:	d3 e0                	shl    %cl,%eax$/;"	d
f0106a59	obj/kern/kernel.asm	/^f0106a59:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106a5b	obj/kern/kernel.asm	/^f0106a5b:	d3 ea                	shr    %cl,%edx$/;"	d
f0106a5d	obj/kern/kernel.asm	/^f0106a5d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106a5f	obj/kern/kernel.asm	/^f0106a5f:	d3 ee                	shr    %cl,%esi$/;"	d
f0106a61	obj/kern/kernel.asm	/^f0106a61:	09 d0                	or     %edx,%eax$/;"	l
f0106a63	obj/kern/kernel.asm	/^f0106a63:	89 f2                	mov    %esi,%edx$/;"	l
f0106a65	obj/kern/kernel.asm	/^f0106a65:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106a68	obj/kern/kernel.asm	/^f0106a68:	5b                   	pop    %ebx$/;"	l
f0106a69	obj/kern/kernel.asm	/^f0106a69:	5e                   	pop    %esi$/;"	l
f0106a6a	obj/kern/kernel.asm	/^f0106a6a:	5f                   	pop    %edi$/;"	l
f0106a6b	obj/kern/kernel.asm	/^f0106a6b:	5d                   	pop    %ebp$/;"	l
f0106a6c	obj/kern/kernel.asm	/^f0106a6c:	c3                   	ret    $/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106a70	obj/kern/kernel.asm	/^f0106a70:	29 f9                	sub    %edi,%ecx$/;"	l
f0106a72	obj/kern/kernel.asm	/^f0106a72:	19 d6                	sbb    %edx,%esi$/;"	l
f0106a74	obj/kern/kernel.asm	/^f0106a74:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106a78	obj/kern/kernel.asm	/^f0106a78:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106a7c	obj/kern/kernel.asm	/^f0106a7c:	e9 18 ff ff ff       	jmp    f0106999 <__umoddi3+0x69>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultio.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultio.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fputest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fputest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/lottery.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lottery.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/singlestep.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/singlestep.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnfaultio.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnfaultio.asm	/^	fd = r;$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon2	typeref:struct:Fd::__anon2::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultio.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fputest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lottery.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/singlestep.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnfaultio.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
fxsave	inc/env.h	/^	char fxsave[512] __attribute__((aligned(16)));$/;"	m	struct:Env
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idttable	kern/trapentry.S	/^idttable:$/;"	l
idttable	obj/kern/kernel.asm	/^idttable:$/;"	l
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/fs/fs.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/kern/kernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/badsegment.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/breakpoint.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/buggyhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/buggyhello2.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/cat.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/divzero.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/dumbfork.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/echo.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/evilhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/fairness.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultalloc.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultallocbad.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultbadhandler.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultdie.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultevilhandler.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultio.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultio.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultio.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultnostack.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultread.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultreadkernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultregs.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultwrite.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultwritekernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/forktree.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/fputest.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/fputest.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/fputest.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/hello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/icode.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/idle.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/init.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/lottery.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/lottery.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/lottery.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/ls.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/lsfd.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/num.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/pingpong.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/pingpongs.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/primes.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/primespipe.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/sendpage.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/sh.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/singlestep.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/singlestep.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/singlestep.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/softint.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnfaultio.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/spawnfaultio.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/spawnfaultio.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/spawnhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/spin.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/stresssched.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testbss.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testfdsharing.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testfile.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testkbd.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testpipe.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testpiperace.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testpiperace2.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testpteshare.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testshell.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/yield.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultio.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/fputest.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/lottery.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/singlestep.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnfaultio.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipc_try_recv	kern/syscall.c	/^ipc_try_recv(struct Env *recenv)$/;"	f	file:
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
irqtable	kern/trapentry.S	/^irqtable:$/;"	l
irqtable	obj/kern/kernel.asm	/^irqtable:$/;"	l
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fputest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lottery.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/singlestep.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnfaultio.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	user/num.c	/^int line = 0;$/;"	v
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultio.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/fputest.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/lottery.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/singlestep.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnfaultio.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lottery_sched_init	kern/sched.c	/^void lottery_sched_init()$/;"	f
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultio.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultio.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultio.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fputest.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fputest.asm	/^		m = n - tot;$/;"	d
m	obj/user/fputest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lottery.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lottery.asm	/^		m = n - tot;$/;"	d
m	obj/user/lottery.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/singlestep.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/singlestep.asm	/^		m = n - tot;$/;"	d
m	obj/user/singlestep.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnfaultio.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnfaultio.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_chperm	kern/monitor.c	/^mon_chperm(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_continue	kern/monitor.c	/^mon_continue(int argc, char **argv, struct Trapframe *tf) {$/;"	f
mon_dumpmem	kern/monitor.c	/^mon_dumpmem(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_showmappings	kern/monitor.c	/^mon_showmappings(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_step	kern/monitor.c	/^mon_step(int argc, char **argv, struct Trapframe *tf) {$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon10	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon10	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultio.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fputest.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lottery.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/singlestep.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnfaultio.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultio.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fputest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lottery.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/singlestep.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnfaultio.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
next	kern/sched.c	/^static unsigned next = 1;$/;"	v	file:
next	obj/kern/kernel.asm	/^	next = next * 1103515245 + 12345;$/;"	d
next	obj/kern/kernel.asm	/^	next = seed;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultio.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fputest.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lottery.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/singlestep.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnfaultio.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultio.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultio.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fputest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fputest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fputest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fputest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lottery.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lottery.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lottery.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lottery.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/singlestep.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/singlestep.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/singlestep.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/singlestep.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnfaultio.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnfaultio.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultio.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/fputest.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/lottery.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/singlestep.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnfaultio.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultio.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fputest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lottery.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/singlestep.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnfaultio.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/kern/kernel.asm	/^			offset = PGOFF(i);$/;"	d
offsetof	inc/types.h	73;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultio.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fputest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lottery.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/singlestep.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnfaultio.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultio.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultio.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fputest.asm	/^				p = "(null)";$/;"	d
p	obj/user/fputest.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fputest.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lottery.asm	/^				p = "(null)";$/;"	d
p	obj/user/lottery.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lottery.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/singlestep.asm	/^				p = "(null)";$/;"	d
p	obj/user/singlestep.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/singlestep.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnfaultio.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnfaultio.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/fputest.asm	/^			padc = '-';$/;"	d
padc	obj/user/fputest.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/lottery.asm	/^			padc = '-';$/;"	d
padc	obj/user/lottery.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/singlestep.asm	/^			padc = '-';$/;"	d
padc	obj/user/singlestep.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnfaultio.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnfaultio.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
pg	obj/fs/fs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/user/badsegment.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/breakpoint.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/buggyhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/buggyhello2.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/cat.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/divzero.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/dumbfork.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/echo.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/evilhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/fairness.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultalloc.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultallocbad.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultdie.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultio.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultnostack.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultread.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultregs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultwrite.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/fputest.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/init.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/lottery.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/ls.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/lsfd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/num.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primespipe.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/sendpage.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/sh.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/singlestep.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/softint.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/spawnfaultio.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/spawnhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/spin.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/stresssched.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testbss.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testfdsharing.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testkbd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpipe.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpiperace.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpiperace2.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpteshare.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testshell.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/yield.asm	/^		pg = (void *) UTOP;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgnum	obj/kern/kernel.asm	/^			pgnum = i >> PGSHIFT;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *)((uint8_t *)elfhdr + elfhdr->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnfaultio.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pn	obj/kern/kernel.asm	/^		pn = pn >> PGSHIFT;$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/fputest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fputest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fputest.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/lottery.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lottery.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lottery.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/singlestep.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/singlestep.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/singlestep.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnfaultio.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnfaultio.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnfaultio.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultio.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fputest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lottery.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/singlestep.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnfaultio.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultio.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fputest.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lottery.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/singlestep.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnfaultio.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_p	obj/kern/kernel.asm	/^			pte_p = pgdir_walk(pgdir, (void *) va, true);$/;"	d
pte_p	obj/kern/kernel.asm	/^		pte_p = pgdir_walk(kern_pgdir, (void *) va, 0);$/;"	d
pte_p	obj/kern/kernel.asm	/^		pte_p = pgdir_walk(pgdir, (void *) va, true);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/fs/fs.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^        r = sys_ipc_page_map(sender->env_id, sender->env_ipc_va,$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/badsegment.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultio.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultio.asm	/^			r = 0;$/;"	d
r	obj/user/faultio.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultio.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultio.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/fputest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fputest.asm	/^			r = 0;$/;"	d
r	obj/user/fputest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fputest.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fputest.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/icode.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/lottery.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lottery.asm	/^			r = 0;$/;"	d
r	obj/user/lottery.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lottery.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lottery.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/singlestep.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/singlestep.asm	/^			r = 0;$/;"	d
r	obj/user/singlestep.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/singlestep.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/singlestep.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/softint.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnfaultio.asm	/^			r = 0;$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnfaultio.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testbss.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
rand	kern/sched.c	/^static unsigned rand()$/;"	f	file:
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fputest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lottery.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/singlestep.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnfaultio.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rdmsr	inc/x86.h	6;"	d
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultio.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fputest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lottery.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/singlestep.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnfaultio.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultio.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/fputest.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fputest.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/lottery.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lottery.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/singlestep.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/singlestep.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnfaultio.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnfaultio.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon8	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultio.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/fputest.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/lottery.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/singlestep.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnfaultio.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
sender_list_head	inc/env.h	/^	struct Env *sender_list_head, *sender_list_tail;	\/\/ for non-loop ipc_send challenge$/;"	m	struct:Env	typeref:struct:Env::Env
sender_list_tail	inc/env.h	/^	struct Env *sender_list_head, *sender_list_tail;	\/\/ for non-loop ipc_send challenge$/;"	m	struct:Env	typeref:struct:Env::
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultio.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/fputest.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/lottery.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/singlestep.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnfaultio.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
srand	kern/sched.c	/^void srand(unsigned seed)$/;"	f
srcpp	obj/kern/kernel.asm	/^	srcpp = page_lookup(srcenv->env_pgdir, srcva, &srcpte);$/;"	d
srcpp	obj/kern/kernel.asm	/^        srcpp = page_lookup(curenv->env_pgdir, srcva, &srcpte);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultio.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fputest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lottery.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/singlestep.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnfaultio.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static inline void$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static int32_t$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool use_lottery = false;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static unsigned next = 1;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned rand()$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static int32_t$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static int32_t$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static int32_t$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static int32_t$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static int32_t$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static int32_t$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static int32_t$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultio.asm	/^static inline uint32_t$/;"	l
static	obj/user/faultio.asm	/^static inline void$/;"	l
static	obj/user/faultio.asm	/^static int$/;"	l
static	obj/user/faultio.asm	/^static int32_t$/;"	l
static	obj/user/faultio.asm	/^static long long$/;"	l
static	obj/user/faultio.asm	/^static ssize_t$/;"	l
static	obj/user/faultio.asm	/^static unsigned long long$/;"	l
static	obj/user/faultio.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static int32_t$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static int32_t$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static int32_t$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/fputest.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/fputest.asm	/^static int$/;"	l
static	obj/user/fputest.asm	/^static int32_t$/;"	l
static	obj/user/fputest.asm	/^static long long$/;"	l
static	obj/user/fputest.asm	/^static ssize_t$/;"	l
static	obj/user/fputest.asm	/^static unsigned long long$/;"	l
static	obj/user/fputest.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static int32_t$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static int32_t$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static int32_t$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static int32_t$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/lottery.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/lottery.asm	/^static int$/;"	l
static	obj/user/lottery.asm	/^static int32_t$/;"	l
static	obj/user/lottery.asm	/^static long long$/;"	l
static	obj/user/lottery.asm	/^static ssize_t$/;"	l
static	obj/user/lottery.asm	/^static unsigned long long$/;"	l
static	obj/user/lottery.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static int32_t$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static int32_t$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static int32_t$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static int32_t$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static int32_t$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static int32_t$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static int32_t$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static int32_t$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/singlestep.asm	/^static int$/;"	l
static	obj/user/singlestep.asm	/^static int32_t$/;"	l
static	obj/user/singlestep.asm	/^static long long$/;"	l
static	obj/user/singlestep.asm	/^static ssize_t$/;"	l
static	obj/user/singlestep.asm	/^static unsigned long long$/;"	l
static	obj/user/singlestep.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static int32_t$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnfaultio.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnfaultio.asm	/^static int$/;"	l
static	obj/user/spawnfaultio.asm	/^static int32_t$/;"	l
static	obj/user/spawnfaultio.asm	/^static long long$/;"	l
static	obj/user/spawnfaultio.asm	/^static ssize_t$/;"	l
static	obj/user/spawnfaultio.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnfaultio.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static int32_t$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static int32_t$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static int32_t$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static int32_t$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static int32_t$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static int32_t$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static int32_t$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static int32_t$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static int32_t$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static int32_t$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static int32_t$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static int32_t$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static int32_t$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnfaultio.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnfaultio.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_tickets	kern/syscall.c	/^sys_env_set_tickets(envid_t envid, int tickets)$/;"	f	file:
sys_env_set_tickets	lib/syscall.c	/^sys_env_set_tickets(envid_t envid, int tickets)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_page_map	kern/syscall.c	/^sys_ipc_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
sysenter	lib/syscall.c	/^sysenter(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4)$/;"	f	file:
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultio	grade-lab5	/^def test_faultio():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	inc/lib.h	25;"	d
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fputest.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fputest.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lottery.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lottery.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/singlestep.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnfaultio.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tickets	obj/kern/kernel.asm	/^		tickets = ENV_DEFAULT_TICKETS; \/\/ default$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
total_tickets	obj/kern/kernel.asm	/^		total_tickets = 0;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultio.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fputest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lottery.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/singlestep.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnfaultio.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
use_lottery	kern/sched.c	/^static bool use_lottery = false;$/;"	v	file:
use_lottery	obj/kern/kernel.asm	/^	use_lottery = true;$/;"	d
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = MAX((size_t) va, ULIM);$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = curva;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^		user_mem_check_addr = curva;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(curenv->env_tf.tf_esp$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^			va = (unsigned char *)(page2kva(&pages[pgnum]) + offset);$/;"	d
va	obj/kern/kernel.asm	/^		va = (uintptr_t) page2kva(&pages[pn]);$/;"	d
va	obj/kern/kernel.asm	/^		va = (uintptr_t) pn << PGSHIFT;$/;"	d
va	obj/kern/kernel.asm	/^		va = PDX(va) << PDXSHIFT;$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultio.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fputest.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lottery.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/singlestep.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnfaultio.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void enable_PS_percpu()$/;"	l
void	obj/kern/kernel.asm	/^void lottery_sched_init()$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void srand(unsigned seed)$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultio.asm	/^void *$/;"	l
void	obj/user/faultio.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultio.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/fputest.asm	/^void *$/;"	l
void	obj/user/fputest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fputest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/fputest.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/lottery.asm	/^void *$/;"	l
void	obj/user/lottery.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lottery.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/singlestep.asm	/^void *$/;"	l
void	obj/user/singlestep.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/singlestep.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnfaultio.asm	/^void *$/;"	l
void	obj/user/spawnfaultio.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnfaultio.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultio.asm	/^				width = 0;$/;"	d
width	obj/user/faultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultio.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/fputest.asm	/^				width = 0;$/;"	d
width	obj/user/fputest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fputest.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/lottery.asm	/^				width = 0;$/;"	d
width	obj/user/lottery.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lottery.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/singlestep.asm	/^				width = 0;$/;"	d
width	obj/user/singlestep.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/singlestep.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = 0;$/;"	d
width	obj/user/spawnfaultio.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnfaultio.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon8	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
wrmsr	inc/x86.h	11;"	d
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
