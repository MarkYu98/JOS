!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon5
ALT	kern/console.c	226;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fputest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lottery.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/singlestep.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	293;"	d	file:
CAPSLOCK	kern/console.c	228;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	17;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	396;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon7
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon7
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon7
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	225;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fputest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lottery.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/singlestep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	232;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DEFAULT_TICKETS	inc/env.h	33;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon2
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon2
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon2
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon2
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon2
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon1
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon1
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon1
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon1
E_IPC_NO_SENDER	inc/error.h	/^	E_IPC_NO_SENDER , 	\/\/ No Env is trying to send to this env: Lab4 challenge$/;"	e	enum:__anon1
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IA32_SYSENTER_CS	inc/x86.h	17;"	d
IA32_SYSENTER_EIP	inc/x86.h	19;"	d
IA32_SYSENTER_ESP	inc/x86.h	18;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	39;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	297;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	222;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon4
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	229;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	87;"	d
O_CREAT	inc/lib.h	89;"	d
O_EXCL	inc/lib.h	91;"	d
O_MKDIR	inc/lib.h	92;"	d
O_RDONLY	inc/lib.h	84;"	d
O_RDWR	inc/lib.h	86;"	d
O_TRUNC	inc/lib.h	90;"	d
O_WRONLY	inc/lib.h	85;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Oct 8 21:31:51 PDT 2018$/;"	m
PADDR	kern/pmap.h	27;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PS_enabled	kern/pmap.c	/^bool PS_enabled;$/;"	v
PS_enabled	obj/kern/kernel.asm	/^	PS_enabled = !!(edx & (1 << 3));$/;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	77;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	230;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEED	kern/sched.c	7;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	224;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon4
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon4
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon4
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon4
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon4
SYS_env_set_tickets	inc/syscall.h	/^	SYS_env_set_tickets,$/;"	e	enum:__anon4
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon4
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon4
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon4
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon4
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon4
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon4
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon4
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon4
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	296;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/fputest.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/lottery.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/fputest.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/lottery.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/fputest.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/lottery.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/singlestep.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fputest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fputest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lottery.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lottery.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/singlestep.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/singlestep.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/fputest.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/lottery.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/singlestep.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/fputest.asm	/^			base = 10;$/;"	d
base	obj/user/fputest.asm	/^			base = 16;$/;"	d
base	obj/user/fputest.asm	/^			base = 8;$/;"	d
base	obj/user/fputest.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/lottery.asm	/^			base = 10;$/;"	d
base	obj/user/lottery.asm	/^			base = 16;$/;"	d
base	obj/user/lottery.asm	/^			base = 8;$/;"	d
base	obj/user/lottery.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/singlestep.asm	/^			base = 10;$/;"	d
base	obj/user/singlestep.asm	/^			base = 16;$/;"	d
base	obj/user/singlestep.asm	/^			base = 8;$/;"	d
base	obj/user/singlestep.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fputest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/lottery.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/singlestep.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
broken	obj/kern/kernel.asm	/^					broken = false;$/;"	d
broken	obj/user/badsegment.asm	/^					broken = false;$/;"	d
broken	obj/user/breakpoint.asm	/^					broken = false;$/;"	d
broken	obj/user/buggyhello.asm	/^					broken = false;$/;"	d
broken	obj/user/buggyhello2.asm	/^					broken = false;$/;"	d
broken	obj/user/divzero.asm	/^					broken = false;$/;"	d
broken	obj/user/dumbfork.asm	/^					broken = false;$/;"	d
broken	obj/user/evilhello.asm	/^					broken = false;$/;"	d
broken	obj/user/fairness.asm	/^					broken = false;$/;"	d
broken	obj/user/faultalloc.asm	/^					broken = false;$/;"	d
broken	obj/user/faultallocbad.asm	/^					broken = false;$/;"	d
broken	obj/user/faultbadhandler.asm	/^					broken = false;$/;"	d
broken	obj/user/faultdie.asm	/^					broken = false;$/;"	d
broken	obj/user/faultevilhandler.asm	/^					broken = false;$/;"	d
broken	obj/user/faultnostack.asm	/^					broken = false;$/;"	d
broken	obj/user/faultread.asm	/^					broken = false;$/;"	d
broken	obj/user/faultreadkernel.asm	/^					broken = false;$/;"	d
broken	obj/user/faultregs.asm	/^					broken = false;$/;"	d
broken	obj/user/faultwrite.asm	/^					broken = false;$/;"	d
broken	obj/user/faultwritekernel.asm	/^					broken = false;$/;"	d
broken	obj/user/forktree.asm	/^					broken = false;$/;"	d
broken	obj/user/fputest.asm	/^					broken = false;$/;"	d
broken	obj/user/hello.asm	/^					broken = false;$/;"	d
broken	obj/user/idle.asm	/^					broken = false;$/;"	d
broken	obj/user/lottery.asm	/^					broken = false;$/;"	d
broken	obj/user/pingpong.asm	/^					broken = false;$/;"	d
broken	obj/user/pingpongs.asm	/^					broken = false;$/;"	d
broken	obj/user/primes.asm	/^					broken = false;$/;"	d
broken	obj/user/sendpage.asm	/^					broken = false;$/;"	d
broken	obj/user/singlestep.asm	/^					broken = false;$/;"	d
broken	obj/user/softint.asm	/^					broken = false;$/;"	d
broken	obj/user/spin.asm	/^					broken = false;$/;"	d
broken	obj/user/stresssched.asm	/^					broken = false;$/;"	d
broken	obj/user/testbss.asm	/^					broken = false;$/;"	d
broken	obj/user/yield.asm	/^					broken = false;$/;"	d
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fputest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lottery.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/singlestep.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/kern/kernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/kern/kernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/badsegment.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/badsegment.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/breakpoint.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/breakpoint.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello2.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello2.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/divzero.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/divzero.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/dumbfork.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/dumbfork.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/evilhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/evilhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/fairness.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/fairness.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultalloc.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultalloc.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultallocbad.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultallocbad.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultbadhandler.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultbadhandler.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultdie.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultdie.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultevilhandler.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultevilhandler.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultnostack.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultnostack.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultread.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultread.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultreadkernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultreadkernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultregs.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultregs.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwrite.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwrite.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwritekernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwritekernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/forktree.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/forktree.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fputest.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/fputest.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/fputest.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/fputest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/hello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/hello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/idle.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/idle.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lottery.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/lottery.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/lottery.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/lottery.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpong.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpong.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpongs.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpongs.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/primes.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/primes.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/sendpage.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/sendpage.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/singlestep.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/singlestep.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/singlestep.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/singlestep.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/softint.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/softint.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/spin.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/spin.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/stresssched.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/stresssched.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testbss.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testbss.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/yield.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/yield.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/fputest.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/lottery.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/singlestep.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
clr	obj/kern/kernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/badsegment.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/breakpoint.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/buggyhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/buggyhello2.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/divzero.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/dumbfork.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/evilhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/fairness.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultalloc.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultallocbad.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultbadhandler.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultdie.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultevilhandler.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultnostack.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultread.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultreadkernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultregs.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultwrite.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultwritekernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/forktree.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/fputest.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/hello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/idle.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/lottery.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/pingpong.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/pingpongs.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/primes.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/sendpage.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/singlestep.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/softint.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/spin.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/stresssched.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testbss.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/yield.asm	/^						clr = ch - '0';$/;"	d
clr_b	obj/kern/kernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/badsegment.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/breakpoint.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/buggyhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/buggyhello2.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/divzero.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/dumbfork.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/evilhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/fairness.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultalloc.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultallocbad.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultbadhandler.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultdie.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultevilhandler.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultnostack.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultread.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultreadkernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultregs.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultwrite.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultwritekernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/forktree.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/fputest.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/hello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/idle.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/lottery.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/pingpong.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/pingpongs.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/primes.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/sendpage.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/singlestep.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/softint.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/spin.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/stresssched.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testbss.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/yield.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_g	obj/kern/kernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/badsegment.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/breakpoint.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/buggyhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/buggyhello2.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/divzero.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/dumbfork.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/evilhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/fairness.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultalloc.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultallocbad.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultbadhandler.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultdie.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultevilhandler.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultnostack.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultread.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultreadkernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultregs.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultwrite.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultwritekernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/forktree.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/fputest.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/hello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/idle.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/lottery.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/pingpong.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/pingpongs.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/primes.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/sendpage.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/singlestep.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/softint.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/spin.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/stresssched.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testbss.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/yield.asm	/^						clr_g = clr & 2;$/;"	d
clr_r	obj/kern/kernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/badsegment.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/breakpoint.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/buggyhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/buggyhello2.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/divzero.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/dumbfork.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/evilhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/fairness.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultalloc.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultallocbad.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultbadhandler.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultdie.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultevilhandler.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultnostack.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultread.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultreadkernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultregs.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultwrite.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultwritekernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/forktree.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/fputest.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/hello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/idle.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/lottery.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/pingpong.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/pingpongs.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/primes.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/sendpage.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/singlestep.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/softint.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/spin.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/stresssched.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testbss.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/yield.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fputest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lottery.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/singlestep.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon6	file:
cons_bgclr	kern/console.c	/^int cons_bgclr = 0;$/;"	v
cons_bgclr	lib/printf.c	/^int cons_bgclr = 0;$/;"	v
cons_bgclr	obj/kern/kernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/kern/kernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/badsegment.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/badsegment.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/breakpoint.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/breakpoint.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/buggyhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/buggyhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/buggyhello2.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/buggyhello2.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/divzero.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/divzero.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/dumbfork.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/dumbfork.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/evilhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/evilhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/fairness.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/fairness.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultalloc.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultalloc.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultallocbad.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultallocbad.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultbadhandler.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultbadhandler.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultdie.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultdie.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultevilhandler.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultevilhandler.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultnostack.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultnostack.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultread.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultread.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultreadkernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultreadkernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultregs.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultregs.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultwrite.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultwrite.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultwritekernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultwritekernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/forktree.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/forktree.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/fputest.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/fputest.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/hello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/hello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/idle.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/idle.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/lottery.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/lottery.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/pingpong.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/pingpong.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/pingpongs.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/pingpongs.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/primes.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/primes.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/sendpage.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/sendpage.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/singlestep.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/singlestep.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/softint.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/softint.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/spin.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/spin.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/stresssched.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/stresssched.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testbss.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testbss.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/yield.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/yield.asm	/^						cons_bgclr = 0;$/;"	d
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
cons_textclr	kern/console.c	/^int cons_textclr = 0x0700;$/;"	v
cons_textclr	lib/printf.c	/^int cons_textclr = 0x0700;$/;"	v
cons_textclr	obj/kern/kernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/divzero.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/divzero.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/divzero.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/fairness.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/fairness.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/fairness.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultread.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultread.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultread.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/forktree.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/forktree.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/forktree.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/fputest.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/fputest.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/fputest.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/hello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/hello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/hello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/idle.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/idle.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/idle.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/lottery.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/lottery.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/lottery.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/primes.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/primes.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/primes.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/softint.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/softint.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/softint.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/spin.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/spin.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/spin.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testbss.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testbss.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testbss.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/yield.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/yield.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/yield.asm	/^			cons_textclr = num;$/;"	d
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fputest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lottery.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/singlestep.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr4	obj/kern/kernel.asm	/^		cr4 = rcr4();$/;"	d
cr4	obj/kern/kernel.asm	/^	cr4 = rcr4();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
cur_env_id	obj/kern/kernel.asm	/^		cur_env_id = ENVX(curenv->env_id);$/;"	d
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
curva	obj/kern/kernel.asm	/^		curva = ROUNDDOWN(curva, PGSIZE);$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/fputest.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/lottery.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/singlestep.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/fputest.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/lottery.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/singlestep.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
detect_PS_support	kern/pmap.c	/^detect_PS_support()$/;"	f	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fputest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fputest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fputest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lottery.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lottery.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lottery.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fputest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lottery.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/singlestep.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebp	obj/kern/kernel.asm	/^        ebp = (unsigned int*)(*ebp);$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
enable_PS_percpu	kern/pmap.c	/^void enable_PS_percpu()$/;"	f
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_sending	inc/env.h	/^	bool env_ipc_sending;		\/\/ Env is blocked sending, for non-loop ipc_send challenge$/;"	m	struct:Env
env_ipc_va	inc/env.h	/^	void *env_ipc_va;			\/\/ VA of sended page or at which to map received page$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_tickets	inc/env.h	/^	int env_tickets;$/;"	m	struct:Env
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/fputest.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/lottery.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/singlestep.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fputest.asm	/^				err = -err;$/;"	d
err	obj/user/fputest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lottery.asm	/^				err = -err;$/;"	d
err	obj/user/lottery.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/singlestep.asm	/^				err = -err;$/;"	d
err	obj/user/singlestep.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 00 12 00       	mov    $0x120000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 00 12 f0       	mov    $0xf0120000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 5c 00 00 00       	call   f010009a <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d 80 1e 25 f0 00 	cmpl   $0x0,0xf0251e80$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	75 3a                	jne    f010008b <_panic+0x4b>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	89 35 80 1e 25 f0    	mov    %esi,0xf0251e80$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	fa                   	cli    $/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	fc                   	cld    $/;"	l
f0100059	obj/kern/kernel.asm	/^f0100059:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	e8 0d 64 00 00       	call   f010646e <cpunum>$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	50                   	push   %eax$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	68 00 6b 10 f0       	push   $0xf0106b00$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	e8 06 3e 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	53                   	push   %ebx$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	56                   	push   %esi$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	e8 d6 3d 00 00       	call   f0103e52 <vcprintf>$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	c7 04 24 bf 80 10 f0 	movl   $0xf01080bf,(%esp)$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	e8 f0 3d 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	6a 00                	push   $0x0$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	e8 cf 0e 00 00       	call   f0100f64 <monitor>$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	eb f1                	jmp    f010008b <_panic+0x4b>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a <i386_init>:$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	55                   	push   %ebp$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	89 e5                	mov    %esp,%ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	53                   	push   %ebx$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 84 05 00 00       	call   f010062a <cons_init>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	68 6c 6b 10 f0       	push   $0xf0106b6c$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	e8 c0 3d 00 00       	call   f0103e78 <cprintf>$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	e8 56 19 00 00       	call   f0101a13 <mem_init>$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	e8 a0 35 00 00       	call   f0103662 <env_init>$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	e8 d5 3e 00 00       	call   f0103f9c <trap_init>$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	e8 98 60 00 00       	call   f0106164 <mp_init>$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 b8 63 00 00       	call   f0106489 <lapic_init>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 c9 3c 00 00       	call   f0103d9f <pic_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	e8 f8 46 00 00       	call   f01047d3 <lottery_sched_init>$/;"	l
f01000db	obj/kern/kernel.asm	/^f01000db:	c7 04 24 60 24 12 f0 	movl   $0xf0122460,(%esp)$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	e8 f5 65 00 00       	call   f01066dc <spin_lock>$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	83 3d 8c 1e 25 f0 07 	cmpl   $0x7,0xf0251e8c$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	77 16                	ja     f0100109 <i386_init+0x6f>$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	68 00 70 00 00       	push   $0x7000$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	6a 53                	push   $0x53$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	68 87 6b 10 f0       	push   $0xf0106b87$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	e8 37 ff ff ff       	call   f0100040 <_panic>$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	b8 ca 60 10 f0       	mov    $0xf01060ca,%eax$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	2d 50 60 10 f0       	sub    $0xf0106050,%eax$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	50                   	push   %eax$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	68 50 60 10 f0       	push   $0xf0106050$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	e8 75 5d 00 00       	call   f0105e9b <memmove>$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	bb 20 20 25 f0       	mov    $0xf0252020,%ebx$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	eb 4d                	jmp    f010017d <i386_init+0xe3>$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	e8 39 63 00 00       	call   f010646e <cpunum>$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	05 20 20 25 f0       	add    $0xf0252020,%eax$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	74 39                	je     f010017a <i386_init+0xe0>$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	89 d8                	mov    %ebx,%eax$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	2d 20 20 25 f0       	sub    $0xf0252020,%eax$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	05 00 b0 25 f0       	add    $0xf025b000,%eax$/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	a3 84 1e 25 f0       	mov    %eax,0xf0251e84$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	50                   	push   %eax$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	e8 68 64 00 00       	call   f01065d7 <lapic_startap>$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	75 f8                	jne    f0100172 <i386_init+0xd8>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	6b 05 c4 23 25 f0 74 	imul   $0x74,0xf02523c4,%eax$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	05 20 20 25 f0       	add    $0xf0252020,%eax$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	39 c3                	cmp    %eax,%ebx$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	72 a3                	jb     f0100130 <i386_init+0x96>$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	6a 00                	push   $0x0$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	68 c0 38 23 f0       	push   $0xf02338c0$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	e8 ec 36 00 00       	call   f0103888 <env_create>$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	e8 1f 47 00 00       	call   f01048c0 <sched_yield>$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1 <mp_main>:$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	55                   	push   %ebp$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	e8 10 13 00 00       	call   f01014bc <enable_PS_percpu>$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	77 12                	ja     f01001ca <mp_main+0x29>$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	50                   	push   %eax$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	6a 6c                	push   $0x6c$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	68 87 6b 10 f0       	push   $0xf0106b87$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	e8 76 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	e8 97 62 00 00       	call   f010646e <cpunum>$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	50                   	push   %eax$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	68 93 6b 10 f0       	push   $0xf0106b93$/;"	l
f01001e0	obj/kern/kernel.asm	/^f01001e0:	e8 93 3c 00 00       	call   f0103e78 <cprintf>$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	e8 9f 62 00 00       	call   f0106489 <lapic_init>$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	e8 43 34 00 00       	call   f0103632 <env_init_percpu>$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	e8 98 3c 00 00       	call   f0103e8c <trap_init_percpu>$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	e8 75 62 00 00       	call   f010646e <cpunum>$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	81 c2 20 20 25 f0    	add    $0xf0252020,%edx$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	c7 04 24 60 24 12 f0 	movl   $0xf0122460,(%esp)$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	e8 c5 64 00 00       	call   f01066dc <spin_lock>$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	e8 a4 46 00 00       	call   f01048c0 <sched_yield>$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c <_warn>:$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	55                   	push   %ebp$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	89 e5                	mov    %esp,%ebp$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	53                   	push   %ebx$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	68 a9 6b 10 f0       	push   $0xf0106ba9$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	e8 42 3c 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	53                   	push   %ebx$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	e8 10 3c 00 00       	call   f0103e52 <vcprintf>$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	c7 04 24 bf 80 10 f0 	movl   $0xf01080bf,(%esp)$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	e8 2a 3c 00 00       	call   f0103e78 <cprintf>$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	c9                   	leave  $/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	c3                   	ret    $/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256 <serial_proc_data>:$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	55                   	push   %ebp$/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	89 e5                	mov    %esp,%ebp$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	ec                   	in     (%dx),%al$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	a8 01                	test   $0x1,%al$/;"	l
f0100261	obj/kern/kernel.asm	/^f0100261:	74 0b                	je     f010026e <serial_proc_data+0x18>$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100268	obj/kern/kernel.asm	/^f0100268:	ec                   	in     (%dx),%al$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	eb 05                	jmp    f0100273 <serial_proc_data+0x1d>$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	5d                   	pop    %ebp$/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	c3                   	ret    $/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275 <cons_intr>:$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	55                   	push   %ebp$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	89 e5                	mov    %esp,%ebp$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	53                   	push   %ebx$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010027c	obj/kern/kernel.asm	/^f010027c:	89 c3                	mov    %eax,%ebx$/;"	l
f010027e	obj/kern/kernel.asm	/^f010027e:	eb 2b                	jmp    f01002ab <cons_intr+0x36>$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	85 c0                	test   %eax,%eax$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	74 27                	je     f01002ab <cons_intr+0x36>$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	8b 0d 24 12 25 f0    	mov    0xf0251224,%ecx$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	89 15 24 12 25 f0    	mov    %edx,0xf0251224$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	88 81 20 10 25 f0    	mov    %al,-0xfdaefe0(%ecx)$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	75 0a                	jne    f01002ab <cons_intr+0x36>$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	c7 05 24 12 25 f0 00 	movl   $0x0,0xf0251224$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	00 00 00 $/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	ff d3                	call   *%ebx$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	75 ce                	jne    f0100280 <cons_intr+0xb>$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	83 c4 04             	add    $0x4,%esp$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	5b                   	pop    %ebx$/;"	l
f01002b6	obj/kern/kernel.asm	/^f01002b6:	5d                   	pop    %ebp$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	c3                   	ret    $/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8 <kbd_proc_data>:$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01002bd	obj/kern/kernel.asm	/^f01002bd:	ec                   	in     (%dx),%al$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	a8 01                	test   $0x1,%al$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	0f 84 f8 00 00 00    	je     f01003be <kbd_proc_data+0x106>$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	a8 20                	test   $0x20,%al$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	0f 85 f6 00 00 00    	jne    f01003c4 <kbd_proc_data+0x10c>$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	ec                   	in     (%dx),%al$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	89 c2                	mov    %eax,%edx$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	3c e0                	cmp    $0xe0,%al$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	75 0d                	jne    f01002e7 <kbd_proc_data+0x2f>$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	83 0d 04 10 25 f0 40 	orl    $0x40,0xf0251004$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	c3                   	ret    $/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	55                   	push   %ebp$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	53                   	push   %ebx$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	84 c0                	test   %al,%al$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	79 36                	jns    f0100328 <kbd_proc_data+0x70>$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	8b 0d 04 10 25 f0    	mov    0xf0251004,%ecx$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	89 cb                	mov    %ecx,%ebx$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	83 e3 40             	and    $0x40,%ebx$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	85 db                	test   %ebx,%ebx$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	0f b6 82 20 6d 10 f0 	movzbl -0xfef92e0(%edx),%eax$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	f7 d0                	not    %eax$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	21 c8                	and    %ecx,%eax$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	a3 04 10 25 f0       	mov    %eax,0xf0251004$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	e9 a4 00 00 00       	jmp    f01003cc <kbd_proc_data+0x114>$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	8b 0d 04 10 25 f0    	mov    0xf0251004,%ecx$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	74 0e                	je     f0100341 <kbd_proc_data+0x89>$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	89 c2                	mov    %eax,%edx$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	89 0d 04 10 25 f0    	mov    %ecx,0xf0251004$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	0f b6 82 20 6d 10 f0 	movzbl -0xfef92e0(%edx),%eax$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	0b 05 04 10 25 f0    	or     0xf0251004,%eax$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	0f b6 8a 20 6c 10 f0 	movzbl -0xfef93e0(%edx),%ecx$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	31 c8                	xor    %ecx,%eax$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	a3 04 10 25 f0       	mov    %eax,0xf0251004$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	89 c1                	mov    %eax,%ecx$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	8b 0c 8d 00 6c 10 f0 	mov    -0xfef9400(,%ecx,4),%ecx$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	a8 08                	test   $0x8,%al$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	74 1b                	je     f0100391 <kbd_proc_data+0xd9>$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	89 da                	mov    %ebx,%edx$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	77 05                	ja     f0100385 <kbd_proc_data+0xcd>$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	eb 0c                	jmp    f0100391 <kbd_proc_data+0xd9>$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	f7 d0                	not    %eax$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	a8 06                	test   $0x6,%al$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	75 33                	jne    f01003ca <kbd_proc_data+0x112>$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	75 2b                	jne    f01003ca <kbd_proc_data+0x112>$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	68 c3 6b 10 f0       	push   $0xf0106bc3$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	e8 cc 3a 00 00       	call   f0103e78 <cprintf>$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	ee                   	out    %al,(%dx)$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	89 d8                	mov    %ebx,%eax$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	eb 0e                	jmp    f01003cc <kbd_proc_data+0x114>$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	c3                   	ret    $/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	c3                   	ret    $/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	89 d8                	mov    %ebx,%eax$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	c9                   	leave  $/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	c3                   	ret    $/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1 <cons_putc>:$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	55                   	push   %ebp$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	57                   	push   %edi$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	56                   	push   %esi$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	53                   	push   %ebx$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	89 c6                	mov    %eax,%esi$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	eb 09                	jmp    f01003f6 <cons_putc+0x25>$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	89 ca                	mov    %ecx,%edx$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	ec                   	in     (%dx),%al$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	ec                   	in     (%dx),%al$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	ec                   	in     (%dx),%al$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	ec                   	in     (%dx),%al$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	89 fa                	mov    %edi,%edx$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	ec                   	in     (%dx),%al$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	a8 20                	test   $0x20,%al$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	75 08                	jne    f0100405 <cons_putc+0x34>$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	7e e8                	jle    f01003ed <cons_putc+0x1c>$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	89 f0                	mov    %esi,%eax$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	ee                   	out    %al,(%dx)$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	eb 09                	jmp    f0100427 <cons_putc+0x56>$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	ec                   	in     (%dx),%al$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	ec                   	in     (%dx),%al$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	ec                   	in     (%dx),%al$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	ec                   	in     (%dx),%al$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100427	obj/kern/kernel.asm	/^f0100427:	89 fa                	mov    %edi,%edx$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	ec                   	in     (%dx),%al$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	7f 04                	jg     f0100436 <cons_putc+0x65>$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	84 c0                	test   %al,%al$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	79 e8                	jns    f010041e <cons_putc+0x4d>$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	89 f0                	mov    %esi,%eax$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	ee                   	out    %al,(%dx)$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	ee                   	out    %al,(%dx)$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	ee                   	out    %al,(%dx)$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	a1 00 23 12 f0       	mov    0xf0122300,%eax$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	0b 05 00 10 25 f0    	or     0xf0251000,%eax$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	09 f0                	or     %esi,%eax$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	89 c1                	mov    %eax,%ecx$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	74 76                	je     f01004dc <cons_putc+0x10b>$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	7f 0a                	jg     f0100475 <cons_putc+0xa4>$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	74 14                	je     f0100484 <cons_putc+0xb3>$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	e9 9b 00 00 00       	jmp    f0100510 <cons_putc+0x13f>$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	74 3c                	je     f01004b6 <cons_putc+0xe5>$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	74 3f                	je     f01004be <cons_putc+0xed>$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	e9 8c 00 00 00       	jmp    f0100510 <cons_putc+0x13f>$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	0f b7 05 28 12 25 f0 	movzwl 0xf0251228,%eax$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	66 85 c0             	test   %ax,%ax$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	0f 84 e8 00 00 00    	je     f010057c <cons_putc+0x1ab>$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	66 a3 28 12 25 f0    	mov    %ax,0xf0251228$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	89 ce                	mov    %ecx,%esi$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	66 81 e6 00 ff       	and    $0xff00,%si$/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	83 ce 20             	or     $0x20,%esi$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	8b 15 2c 12 25 f0    	mov    0xf025122c,%edx$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	eb 78                	jmp    f010052e <cons_putc+0x15d>$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	66 83 05 28 12 25 f0 	addw   $0x50,0xf0251228$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	50 $/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	0f b7 05 28 12 25 f0 	movzwl 0xf0251228,%eax$/;"	l
f01004c5	obj/kern/kernel.asm	/^f01004c5:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	66 a3 28 12 25 f0    	mov    %ax,0xf0251228$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	eb 52                	jmp    f010052e <cons_putc+0x15d>$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	e8 eb fe ff ff       	call   f01003d1 <cons_putc>$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	e8 e1 fe ff ff       	call   f01003d1 <cons_putc>$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	e8 d7 fe ff ff       	call   f01003d1 <cons_putc>$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	e8 cd fe ff ff       	call   f01003d1 <cons_putc>$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	e8 c3 fe ff ff       	call   f01003d1 <cons_putc>$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	eb 1e                	jmp    f010052e <cons_putc+0x15d>$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	0f b7 05 28 12 25 f0 	movzwl 0xf0251228,%eax$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	66 89 15 28 12 25 f0 	mov    %dx,0xf0251228$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	8b 15 2c 12 25 f0    	mov    0xf025122c,%edx$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	66 89 0c 42          	mov    %cx,(%edx,%eax,2)$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	66 81 3d 28 12 25 f0 	cmpw   $0x7cf,0xf0251228$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	cf 07 $/;"	l
f0100537	obj/kern/kernel.asm	/^f0100537:	76 43                	jbe    f010057c <cons_putc+0x1ab>$/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	a1 2c 12 25 f0       	mov    0xf025122c,%eax$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	68 00 0f 00 00       	push   $0xf00$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	52                   	push   %edx$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	50                   	push   %eax$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	e8 48 59 00 00       	call   f0105e9b <memmove>$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	8b 15 2c 12 25 f0    	mov    0xf025122c,%edx$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	39 d0                	cmp    %edx,%eax$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	75 f4                	jne    f0100568 <cons_putc+0x197>$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	66 83 2d 28 12 25 f0 	subw   $0x50,0xf0251228$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	50 $/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	8b 0d 30 12 25 f0    	mov    0xf0251230,%ecx$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	89 ca                	mov    %ecx,%edx$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	ee                   	out    %al,(%dx)$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	0f b7 1d 28 12 25 f0 	movzwl 0xf0251228,%ebx$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	89 d8                	mov    %ebx,%eax$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	89 f2                	mov    %esi,%edx$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	ee                   	out    %al,(%dx)$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	89 ca                	mov    %ecx,%edx$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	ee                   	out    %al,(%dx)$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	89 d8                	mov    %ebx,%eax$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	89 f2                	mov    %esi,%edx$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	ee                   	out    %al,(%dx)$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	5b                   	pop    %ebx$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	5e                   	pop    %esi$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	5f                   	pop    %edi$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	5d                   	pop    %ebp$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	c3                   	ret    $/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2 <serial_intr>:$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	80 3d 34 12 25 f0 00 	cmpb   $0x0,0xf0251234$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	74 11                	je     f01005cc <serial_intr+0x1a>$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	55                   	push   %ebp$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	b8 56 02 10 f0       	mov    $0xf0100256,%eax$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	e8 aa fc ff ff       	call   f0100275 <cons_intr>$/;"	l
f01005cb	obj/kern/kernel.asm	/^f01005cb:	c9                   	leave  $/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	f3 c3                	repz ret $/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce <kbd_intr>:$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	55                   	push   %ebp$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	b8 b8 02 10 f0       	mov    $0xf01002b8,%eax$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	e8 97 fc ff ff       	call   f0100275 <cons_intr>$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	c9                   	leave  $/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	c3                   	ret    $/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0 <cons_getc>:$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	55                   	push   %ebp$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	e8 c7 ff ff ff       	call   f01005b2 <serial_intr>$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	e8 de ff ff ff       	call   f01005ce <kbd_intr>$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	a1 20 12 25 f0       	mov    0xf0251220,%eax$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	3b 05 24 12 25 f0    	cmp    0xf0251224,%eax$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	74 26                	je     f0100623 <cons_getc+0x43>$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	89 15 20 12 25 f0    	mov    %edx,0xf0251220$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	0f b6 88 20 10 25 f0 	movzbl -0xfdaefe0(%eax),%ecx$/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d:	89 c8                	mov    %ecx,%eax$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	75 11                	jne    f0100628 <cons_getc+0x48>$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	c7 05 20 12 25 f0 00 	movl   $0x0,0xf0251220$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	00 00 00 $/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	eb 05                	jmp    f0100628 <cons_getc+0x48>$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	c9                   	leave  $/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	c3                   	ret    $/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a <cons_init>:$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	55                   	push   %ebp$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	89 e5                	mov    %esp,%ebp$/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	57                   	push   %edi$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	56                   	push   %esi$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	53                   	push   %ebx$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	5a a5 $/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	74 11                	je     f0100661 <cons_init+0x37>$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	c7 05 30 12 25 f0 b4 	movl   $0x3b4,0xf0251230$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	03 00 00 $/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	eb 16                	jmp    f0100677 <cons_init+0x4d>$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	c7 05 30 12 25 f0 d4 	movl   $0x3d4,0xf0251230$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	03 00 00 $/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	8b 3d 30 12 25 f0    	mov    0xf0251230,%edi$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	89 fa                	mov    %edi,%edx$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	ee                   	out    %al,(%dx)$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	89 da                	mov    %ebx,%edx$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	ec                   	in     (%dx),%al$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	89 fa                	mov    %edi,%edx$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	ee                   	out    %al,(%dx)$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	89 da                	mov    %ebx,%edx$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	ec                   	in     (%dx),%al$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	89 35 2c 12 25 f0    	mov    %esi,0xf025122c$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	09 c8                	or     %ecx,%eax$/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	66 a3 28 12 25 f0    	mov    %ax,0xf0251228$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	e8 1c ff ff ff       	call   f01005ce <kbd_intr>$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	0f b7 05 a8 23 12 f0 	movzwl 0xf01223a8,%eax$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	50                   	push   %eax$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	e8 60 36 00 00       	call   f0103d27 <irq_setmask_8259A>$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	89 f2                	mov    %esi,%edx$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	ee                   	out    %al,(%dx)$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	ee                   	out    %al,(%dx)$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	89 da                	mov    %ebx,%edx$/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	ee                   	out    %al,(%dx)$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	ee                   	out    %al,(%dx)$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	ee                   	out    %al,(%dx)$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	ee                   	out    %al,(%dx)$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	ee                   	out    %al,(%dx)$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	ec                   	in     (%dx),%al$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	89 c1                	mov    %eax,%ecx$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	3c ff                	cmp    $0xff,%al$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	0f 95 05 34 12 25 f0 	setne  0xf0251234$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	89 f2                	mov    %esi,%edx$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	ec                   	in     (%dx),%al$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	89 da                	mov    %ebx,%edx$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	ec                   	in     (%dx),%al$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	75 10                	jne    f0100747 <cons_init+0x11d>$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	68 cf 6b 10 f0       	push   $0xf0106bcf$/;"	l
f010073f	obj/kern/kernel.asm	/^f010073f:	e8 34 37 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	5b                   	pop    %ebx$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	5e                   	pop    %esi$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	5f                   	pop    %edi$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	5d                   	pop    %ebp$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	c3                   	ret    $/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f <cputchar>:$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	55                   	push   %ebp$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	89 e5                	mov    %esp,%ebp$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	e8 74 fc ff ff       	call   f01003d1 <cons_putc>$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	c9                   	leave  $/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	c3                   	ret    $/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f <getchar>:$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	55                   	push   %ebp$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	89 e5                	mov    %esp,%ebp$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	e8 76 fe ff ff       	call   f01005e0 <cons_getc>$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	85 c0                	test   %eax,%eax$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	74 f7                	je     f0100765 <getchar+0x6>$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	c9                   	leave  $/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	c3                   	ret    $/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770 <iscons>:$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	55                   	push   %ebp$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	89 e5                	mov    %esp,%ebp$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	5d                   	pop    %ebp$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	c3                   	ret    $/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a <mon_help>:$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	55                   	push   %ebp$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	89 e5                	mov    %esp,%ebp$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	56                   	push   %esi$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	53                   	push   %ebx$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	bb e4 73 10 f0       	mov    $0xf01073e4,%ebx$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	be 44 74 10 f0       	mov    $0xf0107444,%esi$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	ff 33                	pushl  (%ebx)$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	ff 73 fc             	pushl  -0x4(%ebx)$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	68 20 6e 10 f0       	push   $0xf0106e20$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	e8 dd 36 00 00       	call   f0103e78 <cprintf>$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	39 f3                	cmp    %esi,%ebx$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	75 e4                	jne    f0100789 <mon_help+0xf>$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	5b                   	pop    %ebx$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	5e                   	pop    %esi$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	5d                   	pop    %ebp$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	c3                   	ret    $/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1 <mon_kerninfo>:$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	55                   	push   %ebp$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	68 29 6e 10 f0       	push   $0xf0106e29$/;"	l
f01007bc	obj/kern/kernel.asm	/^f01007bc:	e8 b7 36 00 00       	call   f0103e78 <cprintf>$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	68 04 70 10 f0       	push   $0xf0107004$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	e8 a5 36 00 00       	call   f0103e78 <cprintf>$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	68 2c 70 10 f0       	push   $0xf010702c$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	e8 8e 36 00 00       	call   f0103e78 <cprintf>$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	68 f1 6a 10 00       	push   $0x106af1$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	68 f1 6a 10 f0       	push   $0xf0106af1$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	68 50 70 10 f0       	push   $0xf0107050$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	e8 77 36 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	68 00 10 25 00       	push   $0x251000$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	68 00 10 25 f0       	push   $0xf0251000$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	68 74 70 10 f0       	push   $0xf0107074$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	e8 60 36 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	68 08 30 29 00       	push   $0x293008$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	68 08 30 29 f0       	push   $0xf0293008$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	68 98 70 10 f0       	push   $0xf0107098$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	e8 49 36 00 00       	call   f0103e78 <cprintf>$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	b8 07 34 29 f0       	mov    $0xf0293407,%eax$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	83 c4 08             	add    $0x8,%esp$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	85 c0                	test   %eax,%eax$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f010084c	obj/kern/kernel.asm	/^f010084c:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	50                   	push   %eax$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	68 bc 70 10 f0       	push   $0xf01070bc$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	e8 1e 36 00 00       	call   f0103e78 <cprintf>$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	c9                   	leave  $/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	c3                   	ret    $/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861 <mon_backtrace>:$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	55                   	push   %ebp$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	89 e5                	mov    %esp,%ebp$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	57                   	push   %edi$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	56                   	push   %esi$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	53                   	push   %ebx$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	83 ec 48             	sub    $0x48,%esp$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	89 ee                	mov    %ebp,%esi$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	68 42 6e 10 f0       	push   $0xf0106e42$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	e8 02 36 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	eb 78                	jmp    f01008f3 <mon_backtrace+0x92>$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	89 c7                	mov    %eax,%edi$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	8d 55 d0             	lea    -0x30(%ebp),%edx$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	52                   	push   %edx$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	50                   	push   %eax$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	e8 67 4a 00 00       	call   f01052f7 <debuginfo_eip>$/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	57                   	push   %edi$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	56                   	push   %esi$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	68 54 6e 10 f0       	push   $0xf0106e54$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	e8 d9 35 00 00       	call   f0103e78 <cprintf>$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f01008a5	obj/kern/kernel.asm	/^f01008a5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	ff 33                	pushl  (%ebx)$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	68 6b 6e 10 f0       	push   $0xf0106e6b$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	e8 c1 35 00 00       	call   f0103e78 <cprintf>$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	39 fb                	cmp    %edi,%ebx$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	75 e7                	jne    f01008a8 <mon_backtrace+0x47>$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008c4	obj/kern/kernel.asm	/^f01008c4:	68 bf 80 10 f0       	push   $0xf01080bf$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	e8 aa 35 00 00       	call   f0103e78 <cprintf>$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	83 c4 08             	add    $0x8,%esp$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	50                   	push   %eax$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	68 71 6e 10 f0       	push   $0xf0106e71$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	e8 8a 35 00 00       	call   f0103e78 <cprintf>$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	8b 36                	mov    (%esi),%esi$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	83 c4 20             	add    $0x20,%esp$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	85 f6                	test   %esi,%esi$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	75 84                	jne    f010087b <mon_backtrace+0x1a>$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	5b                   	pop    %ebx$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	5e                   	pop    %esi$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	5f                   	pop    %edi$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	5d                   	pop    %ebp$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	c3                   	ret    $/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904 <mon_showmappings>:$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	55                   	push   %ebp$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	89 e5                	mov    %esp,%ebp$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	57                   	push   %edi$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	56                   	push   %esi$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	53                   	push   %ebx$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	74 26                	je     f0100939 <mon_showmappings+0x35>$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	68 82 6e 10 f0       	push   $0xf0106e82$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	e8 58 35 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	c7 04 24 e8 70 10 f0 	movl   $0xf01070e8,(%esp)$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	e8 4c 35 00 00       	call   f0103e78 <cprintf>$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	e9 8a 01 00 00       	jmp    f0100ac3 <mon_showmappings+0x1bf>$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	6a 00                	push   $0x0$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	6a 00                	push   $0x0$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	e8 27 56 00 00       	call   f0105f72 <strtol>$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	89 c3                	mov    %eax,%ebx$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	6a 00                	push   $0x0$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	6a 00                	push   $0x0$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	e8 13 56 00 00       	call   f0105f72 <strtol>$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	89 c7                	mov    %eax,%edi$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	6a 00                	push   $0x0$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	53                   	push   %ebx$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	e8 10 0d 00 00       	call   f0101682 <pgdir_walk>$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	85 c0                	test   %eax,%eax$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	75 08                	jne    f0100981 <mon_showmappings+0x7d>$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	eb 1a                	jmp    f010099b <mon_showmappings+0x97>$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	8b 00                	mov    (%eax),%eax$/;"	l
f0100983	obj/kern/kernel.asm	/^f0100983:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	89 da                	mov    %ebx,%edx$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	81 e2 00 00 c0 ff    	and    $0xffc00000,%edx$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	85 c0                	test   %eax,%eax$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	0f 45 da             	cmovne %edx,%ebx$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	68 10 71 10 f0       	push   $0xf0107110$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	e8 d0 34 00 00       	call   f0103e78 <cprintf>$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	e9 f1 00 00 00       	jmp    f0100aa1 <mon_showmappings+0x19d>$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	6a 00                	push   $0x0$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	53                   	push   %ebx$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	e8 c1 0c 00 00       	call   f0101682 <pgdir_walk>$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	89 c6                	mov    %eax,%esi$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	83 c4 08             	add    $0x8,%esp$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	53                   	push   %ebx$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	68 9e 6e 10 f0       	push   $0xf0106e9e$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	e8 a7 34 00 00       	call   f0103e78 <cprintf>$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	85 f6                	test   %esi,%esi$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	74 06                	je     f01009de <mon_showmappings+0xda>$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	8b 06                	mov    (%esi),%eax$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	a8 01                	test   $0x1,%al$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	75 29                	jne    f0100a07 <mon_showmappings+0x103>$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	68 a6 6e 10 f0       	push   $0xf0106ea6$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	e8 8d 34 00 00       	call   f0103e78 <cprintf>$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	8d 83 00 00 40 00    	lea    0x400000(%ebx),%eax$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	39 c3                	cmp    %eax,%ebx$/;"	l
f01009f6	obj/kern/kernel.asm	/^f01009f6:	0f 83 b4 00 00 00    	jae    f0100ab0 <mon_showmappings+0x1ac>$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	e9 9a 00 00 00       	jmp    f0100aa1 <mon_showmappings+0x19d>$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	50                   	push   %eax$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	68 9e 6e 10 f0       	push   $0xf0106e9e$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	e8 5e 34 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	8b 06                	mov    (%esi),%eax$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	89 c2                	mov    %eax,%edx$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	83 e2 06             	and    $0x6,%edx$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	b9 2d 00 00 00       	mov    $0x2d,%ecx$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	89 c2                	mov    %eax,%edx$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	19 d2                	sbb    %edx,%edx$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	19 c0                	sbb    %eax,%eax$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	51                   	push   %ecx$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	52                   	push   %edx$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	50                   	push   %eax$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	68 b5 6e 10 f0       	push   $0xf0106eb5$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	e8 19 34 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	f6 06 80             	testb  $0x80,(%esi)$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	74 1e                	je     f0100a85 <mon_showmappings+0x181>$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	68 be 6e 10 f0       	push   $0xf0106ebe$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	e8 04 34 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	8d 83 00 00 40 00    	lea    0x400000(%ebx),%eax$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	73 36                	jae    f0100ab7 <mon_showmappings+0x1b3>$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	eb 1c                	jmp    f0100aa1 <mon_showmappings+0x19d>$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	68 c5 6e 10 f0       	push   $0xf0106ec5$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	e8 e6 33 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	73 1f                	jae    f0100abe <mon_showmappings+0x1ba>$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	89 c3                	mov    %eax,%ebx$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	0f 86 07 ff ff ff    	jbe    f01009b0 <mon_showmappings+0xac>$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	eb 13                	jmp    f0100ac3 <mon_showmappings+0x1bf>$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	eb 0c                	jmp    f0100ac3 <mon_showmappings+0x1bf>$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	eb 05                	jmp    f0100ac3 <mon_showmappings+0x1bf>$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	5b                   	pop    %ebx$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	5e                   	pop    %esi$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	5f                   	pop    %edi$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	5d                   	pop    %ebp$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	c3                   	ret    $/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb <mon_chperm>:$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	55                   	push   %ebp$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	57                   	push   %edi$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	56                   	push   %esi$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	53                   	push   %ebx$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	74 26                	je     f0100b00 <mon_chperm+0x35>$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	68 82 6e 10 f0       	push   $0xf0106e82$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	e8 91 33 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	c7 04 24 3c 71 10 f0 	movl   $0xf010713c,(%esp)$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	e8 85 33 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	e9 40 02 00 00       	jmp    f0100d40 <mon_chperm+0x275>$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	80 38 2d             	cmpb   $0x2d,(%eax)$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	75 0e                	jne    f0100b19 <mon_chperm+0x4e>$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	0f b6 58 01          	movzbl 0x1(%eax),%ebx$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	80 fb 70             	cmp    $0x70,%bl$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	74 2c                	je     f0100b40 <mon_chperm+0x75>$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	80 fb 76             	cmp    $0x76,%bl$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	74 27                	je     f0100b40 <mon_chperm+0x75>$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	50                   	push   %eax$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	68 cc 6e 10 f0       	push   $0xf0106ecc$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	e8 51 33 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	c7 04 24 3c 71 10 f0 	movl   $0xf010713c,(%esp)$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	e8 45 33 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	e9 00 02 00 00       	jmp    f0100d40 <mon_chperm+0x275>$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	0f b6 78 02          	movzbl 0x2(%eax),%edi$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	6a 00                	push   $0x0$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	6a 00                	push   $0x0$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	e8 1c 54 00 00       	call   f0105f72 <strtol>$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	89 c2                	mov    %eax,%edx$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	89 f9                	mov    %edi,%ecx$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	80 f9 70             	cmp    $0x70,%cl$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	89 c6                	mov    %eax,%esi$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	80 fb 70             	cmp    $0x70,%bl$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	75 25                	jne    f0100b95 <mon_chperm+0xca>$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	89 f2                	mov    %esi,%edx$/;"	l
f0100b72	obj/kern/kernel.asm	/^f0100b72:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	3b 15 8c 1e 25 f0    	cmp    0xf0251e8c,%edx$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	72 12                	jb     f0100b8f <mon_chperm+0xc4>$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	56                   	push   %esi$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	6a 5a                	push   $0x5a$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	e8 b1 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	8d b6 00 00 00 f0    	lea    -0x10000000(%esi),%esi$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	6a 00                	push   $0x0$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	56                   	push   %esi$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	e8 dc 0a 00 00       	call   f0101682 <pgdir_walk>$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	89 c7                	mov    %eax,%edi$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	8b 18                	mov    (%eax),%ebx$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	f6 c3 01             	test   $0x1,%bl$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	75 1a                	jne    f0100bcc <mon_chperm+0x101>$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	68 74 71 10 f0       	push   $0xf0107174$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	e8 b9 32 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	e9 74 01 00 00       	jmp    f0100d40 <mon_chperm+0x275>$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	89 da                	mov    %ebx,%edx$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	81 e2 80 00 00 00    	and    $0x80,%edx$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	89 f0                	mov    %esi,%eax$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	85 d2                	test   %edx,%edx$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	0f 45 f0             	cmovne %eax,%esi$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	80 f9 07             	cmp    $0x7,%cl$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	77 36                	ja     f0100c27 <mon_chperm+0x15c>$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	6a 00                	push   $0x0$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	6a 00                	push   $0x0$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	52                   	push   %edx$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	e8 74 53 00 00       	call   f0105f72 <strtol>$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	89 da                	mov    %ebx,%edx$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	83 e2 f8             	and    $0xfffffff8,%edx$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	09 d0                	or     %edx,%eax$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	a8 01                	test   $0x1,%al$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	74 04                	je     f0100c10 <mon_chperm+0x145>$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	eb 65                	jmp    f0100c75 <mon_chperm+0x1aa>$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	83 c8 01             	or     $0x1,%eax$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	68 a8 71 10 f0       	push   $0xf01071a8$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	e8 56 32 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	eb 4e                	jmp    f0100c75 <mon_chperm+0x1aa>$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	3c 55                	cmp    $0x55,%al$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	75 09                	jne    f0100c34 <mon_chperm+0x169>$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	83 c8 04             	or     $0x4,%eax$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	eb 0b                	jmp    f0100c3f <mon_chperm+0x174>$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	75 07                	jne    f0100c3f <mon_chperm+0x174>$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	83 e0 fb             	and    $0xfffffffb,%eax$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	0f b6 40 01          	movzbl 0x1(%eax),%eax$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	3c 57                	cmp    $0x57,%al$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	75 05                	jne    f0100c52 <mon_chperm+0x187>$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	83 0f 02             	orl    $0x2,(%edi)$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	eb 07                	jmp    f0100c59 <mon_chperm+0x18e>$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	75 03                	jne    f0100c59 <mon_chperm+0x18e>$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	83 27 fd             	andl   $0xfffffffd,(%edi)$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	80 78 02 2d          	cmpb   $0x2d,0x2(%eax)$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	75 10                	jne    f0100c75 <mon_chperm+0x1aa>$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	68 a8 71 10 f0       	push   $0xf01071a8$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	e8 06 32 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	56                   	push   %esi$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	68 f1 6e 10 f0       	push   $0xf0106ef1$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	e8 f5 31 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	8b 07                	mov    (%edi),%eax$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	50                   	push   %eax$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	68 02 6f 10 f0       	push   $0xf0106f02$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	e8 e0 31 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	c7 04 24 cc 71 10 f0 	movl   $0xf01071cc,(%esp)$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	e8 d4 31 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	89 d8                	mov    %ebx,%eax$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	83 e0 06             	and    $0x6,%eax$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	b9 57 00 00 00       	mov    $0x57,%ecx$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	0f 45 c8             	cmovne %eax,%ecx$/;"	l
f0100cbc	obj/kern/kernel.asm	/^f0100cbc:	89 d8                	mov    %ebx,%eax$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	83 e0 04             	and    $0x4,%eax$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	19 d2                	sbb    %edx,%edx$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	83 e3 02             	and    $0x2,%ebx$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	19 c0                	sbb    %eax,%eax$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	51                   	push   %ecx$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	52                   	push   %edx$/;"	l
f0100cdc	obj/kern/kernel.asm	/^f0100cdc:	50                   	push   %eax$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	68 13 6f 10 f0       	push   $0xf0106f13$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	e8 91 31 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	c7 04 24 f0 71 10 f0 	movl   $0xf01071f0,(%esp)$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	e8 85 31 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	8b 07                	mov    (%edi),%eax$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	89 c2                	mov    %eax,%edx$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	83 e2 06             	and    $0x6,%edx$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	b9 2d 00 00 00       	mov    $0x2d,%ecx$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	89 c2                	mov    %eax,%edx$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100d15	obj/kern/kernel.asm	/^f0100d15:	19 d2                	sbb    %edx,%edx$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	19 c0                	sbb    %eax,%eax$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	51                   	push   %ecx$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	52                   	push   %edx$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	50                   	push   %eax$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	68 13 6f 10 f0       	push   $0xf0106f13$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	e8 40 31 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	5b                   	pop    %ebx$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	5e                   	pop    %esi$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	5f                   	pop    %edi$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	5d                   	pop    %ebp$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	c3                   	ret    $/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48 <mon_continue>:$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	55                   	push   %ebp$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	85 c0                	test   %eax,%eax$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	74 1d                	je     f0100d72 <mon_continue+0x2a>$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	81 60 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%eax)$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	e8 0d 57 00 00       	call   f010646e <cpunum>$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	e8 b2 2e 00 00       	call   f0103c24 <env_run>$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	68 1d 6f 10 f0       	push   $0xf0106f1d$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	e8 f9 30 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	c9                   	leave  $/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	c3                   	ret    $/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86 <mon_step>:$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	55                   	push   %ebp$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	85 c0                	test   %eax,%eax$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	74 1d                	je     f0100db0 <mon_step+0x2a>$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	81 48 38 00 01 00 00 	orl    $0x100,0x38(%eax)$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	e8 cf 56 00 00       	call   f010646e <cpunum>$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	e8 74 2e 00 00       	call   f0103c24 <env_run>$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	68 1d 6f 10 f0       	push   $0xf0106f1d$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	e8 bb 30 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	c9                   	leave  $/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	c3                   	ret    $/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4 <mon_dumpmem>:$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	55                   	push   %ebp$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	57                   	push   %edi$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	56                   	push   %esi$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	53                   	push   %ebx$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	74 26                	je     f0100dfc <mon_dumpmem+0x38>$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	68 82 6e 10 f0       	push   $0xf0106e82$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	e8 95 30 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	c7 04 24 10 72 10 f0 	movl   $0xf0107210,(%esp)$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	e8 89 30 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	e9 60 01 00 00       	jmp    f0100f5c <mon_dumpmem+0x198>$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	80 38 2d             	cmpb   $0x2d,(%eax)$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	75 0e                	jne    f0100e12 <mon_dumpmem+0x4e>$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	0f b6 50 01          	movzbl 0x1(%eax),%edx$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	80 fa 70             	cmp    $0x70,%dl$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	74 2c                	je     f0100e39 <mon_dumpmem+0x75>$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	80 fa 76             	cmp    $0x76,%dl$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	74 27                	je     f0100e39 <mon_dumpmem+0x75>$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	50                   	push   %eax$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	68 cc 6e 10 f0       	push   $0xf0106ecc$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	e8 58 30 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	c7 04 24 10 72 10 f0 	movl   $0xf0107210,(%esp)$/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	e8 4c 30 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	e9 23 01 00 00       	jmp    f0100f5c <mon_dumpmem+0x198>$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	6a 00                	push   $0x0$/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	6a 00                	push   $0x0$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	e8 2a 51 00 00       	call   f0105f72 <strtol>$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	89 c3                	mov    %eax,%ebx$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	6a 00                	push   $0x0$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	6a 00                	push   $0x0$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	ff 77 0c             	pushl  0xc(%edi)$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	e8 19 51 00 00       	call   f0105f72 <strtol>$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	89 c6                	mov    %eax,%esi$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	80 78 01 70          	cmpb   $0x70,0x1(%eax)$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	0f 85 93 00 00 00    	jne    f0100efe <mon_dumpmem+0x13a>$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	74 73                	je     f0100ee3 <mon_dumpmem+0x11f>$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	53                   	push   %ebx$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	68 3a 6f 10 f0       	push   $0xf0106f3a$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	e8 fa 2f 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	eb 60                	jmp    f0100ee3 <mon_dumpmem+0x11f>$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	75 11                	jne    f0100e99 <mon_dumpmem+0xd5>$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	53                   	push   %ebx$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	68 39 6f 10 f0       	push   $0xf0106f39$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	e8 e2 2f 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	89 da                	mov    %ebx,%edx$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	89 d8                	mov    %ebx,%eax$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	89 c1                	mov    %eax,%ecx$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	3b 0d 8c 1e 25 f0    	cmp    0xf0251e8c,%ecx$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	72 12                	jb     f0100ec7 <mon_dumpmem+0x103>$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	50                   	push   %eax$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	6a 5a                	push   $0x5a$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	e8 79 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	0f b6 84 02 00 00 00 	movzbl -0x10000000(%edx,%eax,1),%eax$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	f0 $/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	50                   	push   %eax$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	68 43 6f 10 f0       	push   $0xf0106f43$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	e8 9b 2f 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	72 9c                	jb     f0100e83 <mon_dumpmem+0xbf>$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	68 bf 80 10 f0       	push   $0xf01080bf$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	e8 84 2f 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	eb 5e                	jmp    f0100f5c <mon_dumpmem+0x198>$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	74 40                	je     f0100f43 <mon_dumpmem+0x17f>$/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	53                   	push   %ebx$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	68 3a 6f 10 f0       	push   $0xf0106f3a$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	e8 67 2f 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	eb 2d                	jmp    f0100f43 <mon_dumpmem+0x17f>$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	75 11                	jne    f0100f2c <mon_dumpmem+0x168>$/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	53                   	push   %ebx$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	68 39 6f 10 f0       	push   $0xf0106f39$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	e8 4f 2f 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	50                   	push   %eax$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	68 43 6f 10 f0       	push   $0xf0106f43$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38:	e8 3b 2f 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	72 cf                	jb     f0100f16 <mon_dumpmem+0x152>$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	68 bf 80 10 f0       	push   $0xf01080bf$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	e8 24 2f 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	5b                   	pop    %ebx$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	5e                   	pop    %esi$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	5f                   	pop    %edi$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	5d                   	pop    %ebp$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	c3                   	ret    $/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64 <monitor>:$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	55                   	push   %ebp$/;"	l
f0100f65	obj/kern/kernel.asm	/^f0100f65:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	57                   	push   %edi$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	56                   	push   %esi$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	53                   	push   %ebx$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	83 ec 58             	sub    $0x58,%esp$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	68 3c 72 10 f0       	push   $0xf010723c$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	e8 01 2f 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	c7 04 24 60 72 10 f0 	movl   $0xf0107260,(%esp)$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	e8 f5 2e 00 00       	call   f0103e78 <cprintf>$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	74 0e                	je     f0100f9a <monitor+0x36>$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	e8 5d 31 00 00       	call   f01040f4 <print_trapframe>$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	68 49 6f 10 f0       	push   $0xf0106f49$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	e8 50 4c 00 00       	call   f0105bf7 <readline>$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	89 c3                	mov    %eax,%ebx$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	85 c0                	test   %eax,%eax$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	74 ea                	je     f0100f9a <monitor+0x36>$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	eb 0a                	jmp    f0100fc8 <monitor+0x64>$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	89 f7                	mov    %esi,%edi$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	89 fe                	mov    %edi,%esi$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	84 c0                	test   %al,%al$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	74 63                	je     f0101032 <monitor+0xce>$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	0f be c0             	movsbl %al,%eax$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	50                   	push   %eax$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	68 4d 6f 10 f0       	push   $0xf0106f4d$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	e8 31 4e 00 00       	call   f0105e11 <strchr>$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	85 c0                	test   %eax,%eax$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	75 d7                	jne    f0100fbe <monitor+0x5a>$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	74 46                	je     f0101032 <monitor+0xce>$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	75 14                	jne    f0101005 <monitor+0xa1>$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	6a 10                	push   $0x10$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	68 52 6f 10 f0       	push   $0xf0106f52$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	e8 78 2e 00 00       	call   f0103e78 <cprintf>$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	eb 95                	jmp    f0100f9a <monitor+0x36>$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	eb 03                	jmp    f0101011 <monitor+0xad>$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	84 c0                	test   %al,%al$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	74 ae                	je     f0100fc6 <monitor+0x62>$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	0f be c0             	movsbl %al,%eax$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	50                   	push   %eax$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	68 4d 6f 10 f0       	push   $0xf0106f4d$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	e8 e8 4d 00 00       	call   f0105e11 <strchr>$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	83 c4 10             	add    $0x10,%esp$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	85 c0                	test   %eax,%eax$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	74 de                	je     f010100e <monitor+0xaa>$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	eb 94                	jmp    f0100fc6 <monitor+0x62>$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	00 $/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	85 f6                	test   %esi,%esi$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	0f 84 58 ff ff ff    	je     f0100f9a <monitor+0x36>$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	ff 34 85 e0 73 10 f0 	pushl  -0xfef8c20(,%eax,4)$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	e8 57 4d 00 00       	call   f0105db3 <strcmp>$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	85 c0                	test   %eax,%eax$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	75 21                	jne    f0101084 <monitor+0x120>$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	52                   	push   %edx$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	56                   	push   %esi$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	ff 14 85 e8 73 10 f0 	call   *-0xfef8c18(,%eax,4)$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	83 c4 10             	add    $0x10,%esp$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	85 c0                	test   %eax,%eax$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	78 25                	js     f01010a4 <monitor+0x140>$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	e9 16 ff ff ff       	jmp    f0100f9a <monitor+0x36>$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	83 fb 08             	cmp    $0x8,%ebx$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	75 bb                	jne    f0101047 <monitor+0xe3>$/;"	l
f010108c	obj/kern/kernel.asm	/^f010108c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	68 6f 6f 10 f0       	push   $0xf0106f6f$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	e8 dc 2d 00 00       	call   f0103e78 <cprintf>$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010109f	obj/kern/kernel.asm	/^f010109f:	e9 f6 fe ff ff       	jmp    f0100f9a <monitor+0x36>$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	5b                   	pop    %ebx$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	5e                   	pop    %esi$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	5f                   	pop    %edi$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	5d                   	pop    %ebp$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	c3                   	ret    $/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac <boot_alloc>:$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	55                   	push   %ebp$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	89 c2                	mov    %eax,%edx$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	83 3d 38 12 25 f0 00 	cmpl   $0x0,0xf0251238$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	75 0f                	jne    f01010c9 <boot_alloc+0x1d>$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	b8 07 40 29 f0       	mov    $0xf0294007,%eax$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	a3 38 12 25 f0       	mov    %eax,0xf0251238$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	a1 38 12 25 f0       	mov    0xf0251238,%eax$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	01 c2                	add    %eax,%edx$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	89 15 38 12 25 f0    	mov    %edx,0xf0251238$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	5d                   	pop    %ebp$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	c3                   	ret    $/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4 <nvram_read>:$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	55                   	push   %ebp$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	56                   	push   %esi$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	53                   	push   %ebx$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	89 c3                	mov    %eax,%ebx$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	50                   	push   %eax$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	e8 05 2c 00 00       	call   f0103cf9 <mc146818_read>$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	89 c6                	mov    %eax,%esi$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	e8 f8 2b 00 00       	call   f0103cf9 <mc146818_read>$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	09 f0                	or     %esi,%eax$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	5b                   	pop    %ebx$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	5e                   	pop    %esi$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	5d                   	pop    %ebp$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	c3                   	ret    $/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d <page2kva>:$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	89 c2                	mov    %eax,%edx$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	39 15 8c 1e 25 f0    	cmp    %edx,0xf0251e8c$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	77 18                	ja     f010113e <page2kva+0x31>$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	55                   	push   %ebp$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	89 e5                	mov    %esp,%ebp$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	50                   	push   %eax$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	6a 5a                	push   $0x5a$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	e8 02 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	c3                   	ret    $/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144 <check_va2pa>:$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	89 d1                	mov    %edx,%ecx$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	a8 01                	test   $0x1,%al$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	74 64                	je     f01011b4 <check_va2pa+0x70>$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	a8 80                	test   $0x80,%al$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	74 0e                	je     f0101162 <check_va2pa+0x1e>$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	81 e2 00 f0 3f 00    	and    $0x3ff000,%edx$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	09 d0                	or     %edx,%eax$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	c3                   	ret    $/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	89 c1                	mov    %eax,%ecx$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	3b 0d 8c 1e 25 f0    	cmp    0xf0251e8c,%ecx$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	72 1b                	jb     f010118f <check_va2pa+0x4b>$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	55                   	push   %ebp$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	89 e5                	mov    %esp,%ebp$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	50                   	push   %eax$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	68 b7 03 00 00       	push   $0x3b7$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	e8 b1 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	89 c2                	mov    %eax,%edx$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	83 e2 01             	and    $0x1,%edx$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	85 d2                	test   %edx,%edx$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	c3                   	ret    $/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	c3                   	ret    $/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba <check_page_free_list>:$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	55                   	push   %ebp$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	57                   	push   %edi$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	56                   	push   %esi$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	53                   	push   %ebx$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	84 c0                	test   %al,%al$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	0f 85 a0 02 00 00    	jne    f010146b <check_page_free_list+0x2b1>$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	e9 ad 02 00 00       	jmp    f010147d <check_page_free_list+0x2c3>$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	68 40 74 10 f0       	push   $0xf0107440$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	68 e6 02 00 00       	push   $0x2e6$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	e8 59 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	89 c2                	mov    %eax,%edx$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	2b 15 94 1e 25 f0    	sub    0xf0251e94,%edx$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	0f 95 c2             	setne  %dl$/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	89 01                	mov    %eax,(%ecx)$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	8b 00                	mov    (%eax),%eax$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	85 c0                	test   %eax,%eax$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	75 dc                	jne    f01011f3 <check_page_free_list+0x39>$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	89 10                	mov    %edx,(%eax)$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	a3 40 12 25 f0       	mov    %eax,0xf0251240$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	8b 1d 40 12 25 f0    	mov    0xf0251240,%ebx$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	eb 53                	jmp    f0101290 <check_page_free_list+0xd6>$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	89 d8                	mov    %ebx,%eax$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	89 c2                	mov    %eax,%edx$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0101250	obj/kern/kernel.asm	/^f0101250:	39 f2                	cmp    %esi,%edx$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	73 3a                	jae    f010128e <check_page_free_list+0xd4>$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	89 c2                	mov    %eax,%edx$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	3b 15 8c 1e 25 f0    	cmp    0xf0251e8c,%edx$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	72 12                	jb     f0101273 <check_page_free_list+0xb9>$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	50                   	push   %eax$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	6a 5a                	push   $0x5a$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	e8 cd ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	68 80 00 00 00       	push   $0x80$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	68 97 00 00 00       	push   $0x97$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	50                   	push   %eax$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	e8 c3 4b 00 00       	call   f0105e4e <memset>$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	85 db                	test   %ebx,%ebx$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	75 a9                	jne    f010123d <check_page_free_list+0x83>$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	e8 0e fe ff ff       	call   f01010ac <boot_alloc>$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	8b 15 40 12 25 f0    	mov    0xf0251240,%edx$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	8b 0d 94 1e 25 f0    	mov    0xf0251e94,%ecx$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	a1 8c 1e 25 f0       	mov    0xf0251e8c,%eax$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	e9 52 01 00 00       	jmp    f010141a <check_page_free_list+0x260>$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	39 ca                	cmp    %ecx,%edx$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	73 19                	jae    f01012e5 <check_page_free_list+0x12b>$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	68 f9 7d 10 f0       	push   $0xf0107df9$/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	68 00 03 00 00       	push   $0x300$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	e8 5b ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	72 19                	jb     f0101303 <check_page_free_list+0x149>$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	68 1a 7e 10 f0       	push   $0xf0107e1a$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	68 01 03 00 00       	push   $0x301$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	e8 3d ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	89 d0                	mov    %edx,%eax$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	a8 07                	test   $0x7,%al$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	74 19                	je     f0101325 <check_page_free_list+0x16b>$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	68 64 74 10 f0       	push   $0xf0107464$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	68 02 03 00 00       	push   $0x302$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	e8 1b ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	85 c0                	test   %eax,%eax$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	75 19                	jne    f0101348 <check_page_free_list+0x18e>$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	68 2e 7e 10 f0       	push   $0xf0107e2e$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	68 05 03 00 00       	push   $0x305$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	e8 f8 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	75 19                	jne    f0101368 <check_page_free_list+0x1ae>$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	68 3f 7e 10 f0       	push   $0xf0107e3f$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	68 06 03 00 00       	push   $0x306$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	e8 d8 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	75 19                	jne    f0101388 <check_page_free_list+0x1ce>$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	68 98 74 10 f0       	push   $0xf0107498$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	68 07 03 00 00       	push   $0x307$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	e8 b8 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	75 19                	jne    f01013a8 <check_page_free_list+0x1ee>$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	68 58 7e 10 f0       	push   $0xf0107e58$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	68 08 03 00 00       	push   $0x308$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	e8 98 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01013ad	obj/kern/kernel.asm	/^f01013ad:	0f 86 f1 00 00 00    	jbe    f01014a4 <check_page_free_list+0x2ea>$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	89 c7                	mov    %eax,%edi$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	77 12                	ja     f01013cf <check_page_free_list+0x215>$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	50                   	push   %eax$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	6a 5a                	push   $0x5a$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	e8 71 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	0f 86 b6 00 00 00    	jbe    f0101494 <check_page_free_list+0x2da>$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	68 bc 74 10 f0       	push   $0xf01074bc$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	68 09 03 00 00       	push   $0x309$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	e8 49 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	68 72 7e 10 f0       	push   $0xf0107e72$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	68 0b 03 00 00       	push   $0x30b$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	e8 30 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	eb 03                	jmp    f0101418 <check_page_free_list+0x25e>$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	8b 12                	mov    (%edx),%edx$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	85 d2                	test   %edx,%edx$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	0f 85 a6 fe ff ff    	jne    f01012c8 <check_page_free_list+0x10e>$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	85 f6                	test   %esi,%esi$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	7f 19                	jg     f010143f <check_page_free_list+0x285>$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	68 8f 7e 10 f0       	push   $0xf0107e8f$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	68 13 03 00 00       	push   $0x313$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	e8 01 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	85 db                	test   %ebx,%ebx$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	7f 19                	jg     f010145c <check_page_free_list+0x2a2>$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	68 a1 7e 10 f0       	push   $0xf0107ea1$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	68 14 03 00 00       	push   $0x314$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	e8 e4 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	68 04 75 10 f0       	push   $0xf0107504$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	e8 0f 2a 00 00       	call   f0103e78 <cprintf>$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	eb 49                	jmp    f01014b4 <check_page_free_list+0x2fa>$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	a1 40 12 25 f0       	mov    0xf0251240,%eax$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	85 c0                	test   %eax,%eax$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	0f 85 6f fd ff ff    	jne    f01011e7 <check_page_free_list+0x2d>$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	e9 53 fd ff ff       	jmp    f01011d0 <check_page_free_list+0x16>$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	83 3d 40 12 25 f0 00 	cmpl   $0x0,0xf0251240$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	0f 84 46 fd ff ff    	je     f01011d0 <check_page_free_list+0x16>$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	e9 a1 fd ff ff       	jmp    f0101235 <check_page_free_list+0x7b>$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	0f 85 76 ff ff ff    	jne    f0101415 <check_page_free_list+0x25b>$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	e9 53 ff ff ff       	jmp    f01013f7 <check_page_free_list+0x23d>$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	0f 85 61 ff ff ff    	jne    f0101410 <check_page_free_list+0x256>$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	e9 43 ff ff ff       	jmp    f01013f7 <check_page_free_list+0x23d>$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	5b                   	pop    %ebx$/;"	l
f01014b8	obj/kern/kernel.asm	/^f01014b8:	5e                   	pop    %esi$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	5f                   	pop    %edi$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	5d                   	pop    %ebp$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	c3                   	ret    $/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc <enable_PS_percpu>:$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	55                   	push   %ebp$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	80 3d 88 1e 25 f0 00 	cmpb   $0x0,0xf0251e88$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	74 0f                	je     f01014d7 <enable_PS_percpu+0x1b>$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	83 c8 10             	or     $0x10,%eax$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	0f 20 d8             	mov    %cr3,%eax$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	5d                   	pop    %ebp$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	c3                   	ret    $/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9 <page_init>:$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	55                   	push   %ebp$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	89 e5                	mov    %esp,%ebp$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	57                   	push   %edi$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	56                   	push   %esi$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	53                   	push   %ebx$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	e8 c0 fb ff ff       	call   f01010ac <boot_alloc>$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	77 15                	ja     f0101508 <page_init+0x2f>$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	50                   	push   %eax$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	68 62 01 00 00       	push   $0x162$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	e8 38 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	c7 05 40 12 25 f0 00 	movl   $0x0,0xf0251240$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	00 00 00 $/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	8b 3d 44 12 25 f0    	mov    0xf0251244,%edi$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	eb 47                	jmp    f0101577 <page_init+0x9e>$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	8d 1c d5 00 00 00 00 	lea    0x0(,%edx,8),%ebx$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	03 0d 94 1e 25 f0    	add    0xf0251e94,%ecx$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	85 d2                	test   %edx,%edx$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	74 25                	je     f010156e <page_init+0x95>$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	74 04                	je     f0101552 <page_init+0x79>$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	39 fa                	cmp    %edi,%edx$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	72 0c                	jb     f010155e <page_init+0x85>$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	81 fa ff 00 00 00    	cmp    $0xff,%edx$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	76 14                	jbe    f010156e <page_init+0x95>$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	39 c2                	cmp    %eax,%edx$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	72 10                	jb     f010156e <page_init+0x95>$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	89 31                	mov    %esi,(%ecx)$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	89 de                	mov    %ebx,%esi$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	03 35 94 1e 25 f0    	add    0xf0251e94,%esi$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	c6 45 e7 01          	movb   $0x1,-0x19(%ebp)$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	eb 06                	jmp    f0101574 <page_init+0x9b>$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	3b 15 8c 1e 25 f0    	cmp    0xf0251e8c,%edx$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	72 b1                	jb     f0101530 <page_init+0x57>$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	74 06                	je     f010158b <page_init+0xb2>$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	89 35 40 12 25 f0    	mov    %esi,0xf0251240$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	5b                   	pop    %ebx$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	5e                   	pop    %esi$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	5f                   	pop    %edi$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	5d                   	pop    %ebp$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	c3                   	ret    $/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593 <page_alloc>:$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	55                   	push   %ebp$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	89 e5                	mov    %esp,%ebp$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	53                   	push   %ebx$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	8b 1d 40 12 25 f0    	mov    0xf0251240,%ebx$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	85 db                	test   %ebx,%ebx$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	74 58                	je     f01015fc <page_alloc+0x69>$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	8b 03                	mov    (%ebx),%eax$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	a3 40 12 25 f0       	mov    %eax,0xf0251240$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	74 45                	je     f01015fc <page_alloc+0x69>$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	89 d8                	mov    %ebx,%eax$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	89 c2                	mov    %eax,%edx$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	3b 15 8c 1e 25 f0    	cmp    0xf0251e8c,%edx$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	72 12                	jb     f01015e4 <page_alloc+0x51>$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	50                   	push   %eax$/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f01015d8	obj/kern/kernel.asm	/^f01015d8:	6a 5a                	push   $0x5a$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	e8 5c ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	68 00 10 00 00       	push   $0x1000$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	6a 00                	push   $0x0$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	50                   	push   %eax$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	e8 55 48 00 00       	call   f0105e4e <memset>$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	89 d8                	mov    %ebx,%eax$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	c9                   	leave  $/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	c3                   	ret    $/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603 <page_free>:$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	55                   	push   %ebp$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	89 e5                	mov    %esp,%ebp$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	74 1a                	je     f010162d <page_free+0x2a>$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	e8 f5 fa ff ff       	call   f010110d <page2kva>$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	50                   	push   %eax$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	68 28 75 10 f0       	push   $0xf0107528$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	68 98 01 00 00       	push   $0x198$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	e8 13 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	74 1a                	je     f010164c <page_free+0x49>$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	e8 d6 fa ff ff       	call   f010110d <page2kva>$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	50                   	push   %eax$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	68 5c 75 10 f0       	push   $0xf010755c$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	68 9b 01 00 00       	push   $0x19b$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	e8 f4 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	8b 15 40 12 25 f0    	mov    0xf0251240,%edx$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	89 10                	mov    %edx,(%eax)$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	a3 40 12 25 f0       	mov    %eax,0xf0251240$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	c9                   	leave  $/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	c3                   	ret    $/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b <page_decref>:$/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b:	55                   	push   %ebp$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	89 e5                	mov    %esp,%ebp$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	66 85 c0             	test   %ax,%ax$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	75 0c                	jne    f0101680 <page_decref+0x25>$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	52                   	push   %edx$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	e8 86 ff ff ff       	call   f0101603 <page_free>$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	c9                   	leave  $/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	c3                   	ret    $/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682 <pgdir_walk>:$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	55                   	push   %ebp$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	89 e5                	mov    %esp,%ebp$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	56                   	push   %esi$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	53                   	push   %ebx$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	89 f3                	mov    %esi,%ebx$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	a8 01                	test   $0x1,%al$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	74 41                	je     f01016dc <pgdir_walk+0x5a>$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	a8 80                	test   $0x80,%al$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	0f 85 b4 00 00 00    	jne    f0101757 <pgdir_walk+0xd5>$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	89 c2                	mov    %eax,%edx$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	39 15 8c 1e 25 f0    	cmp    %edx,0xf0251e8c$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	77 15                	ja     f01016ca <pgdir_walk+0x48>$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	50                   	push   %eax$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	68 c9 01 00 00       	push   $0x1c9$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	e8 76 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	8d 9c 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%ebx$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	eb 7b                	jmp    f0101757 <pgdir_walk+0xd5>$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	74 69                	je     f010174b <pgdir_walk+0xc9>$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	6a 01                	push   $0x1$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	e8 a7 fe ff ff       	call   f0101593 <page_alloc>$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016ef	obj/kern/kernel.asm	/^f01016ef:	85 c0                	test   %eax,%eax$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	74 5f                	je     f0101752 <pgdir_walk+0xd0>$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	89 c2                	mov    %eax,%edx$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	2b 15 94 1e 25 f0    	sub    0xf0251e94,%edx$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	89 13                	mov    %edx,(%ebx)$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	89 c2                	mov    %eax,%edx$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	3b 15 8c 1e 25 f0    	cmp    0xf0251e8c,%edx$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	72 15                	jb     f0101739 <pgdir_walk+0xb7>$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	50                   	push   %eax$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	68 d4 01 00 00       	push   $0x1d4$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	e8 07 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101739	obj/kern/kernel.asm	/^f0101739:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	8d 9c 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%ebx$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	eb 0c                	jmp    f0101757 <pgdir_walk+0xd5>$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101750	obj/kern/kernel.asm	/^f0101750:	eb 05                	jmp    f0101757 <pgdir_walk+0xd5>$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	89 d8                	mov    %ebx,%eax$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	5b                   	pop    %ebx$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	5e                   	pop    %esi$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	5d                   	pop    %ebp$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	c3                   	ret    $/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760 <boot_map_region>:$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	55                   	push   %ebp$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	89 e5                	mov    %esp,%ebp$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	57                   	push   %edi$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	56                   	push   %esi$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	53                   	push   %ebx$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	89 cf                	mov    %ecx,%edi$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	80 3d 88 1e 25 f0 00 	cmpb   $0x0,0xf0251e88$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	0f 84 ad 00 00 00    	je     f010182b <boot_map_region+0xcb>$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	89 d0                	mov    %edx,%eax$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	31 c8                	xor    %ecx,%eax$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	a9 ff ff 3f 00       	test   $0x3fffff,%eax$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	74 29                	je     f01017b2 <boot_map_region+0x52>$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	e9 9d 00 00 00       	jmp    f010182b <boot_map_region+0xcb>$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	6a 01                	push   $0x1$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	53                   	push   %ebx$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	e8 e6 fe ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	89 30                	mov    %esi,(%eax)$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	eb 10                	jmp    f01017c2 <boot_map_region+0x62>$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	89 d3                	mov    %edx,%ebx$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	29 d1                	sub    %edx,%ecx$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	83 c8 01             	or     $0x1,%eax$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	89 c8                	mov    %ecx,%eax$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	8d 34 0b             	lea    (%ebx,%ecx,1),%esi$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	85 ff                	test   %edi,%edi$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	0f 84 97 00 00 00    	je     f0101869 <boot_map_region+0x109>$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	f7 c3 ff ff 3f 00    	test   $0x3fffff,%ebx$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	75 b4                	jne    f010178e <boot_map_region+0x2e>$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	89 fa                	mov    %edi,%edx$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	01 da                	add    %ebx,%edx$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	80 c9 81             	or     $0x81,%cl$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	89 c6                	mov    %eax,%esi$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	eb 11                	jmp    f0101811 <boot_map_region+0xb1>$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	0b 45 e0             	or     -0x20(%ebp),%eax$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	89 04 8f             	mov    %eax,(%edi,%ecx,4)$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	81 c3 00 00 40 00    	add    $0x400000,%ebx$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f0101814	obj/kern/kernel.asm	/^f0101814:	39 d3                	cmp    %edx,%ebx$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	75 e8                	jne    f0101800 <boot_map_region+0xa0>$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	29 c7                	sub    %eax,%edi$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	01 f1                	add    %esi,%ecx$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	89 d3                	mov    %edx,%ebx$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	29 d1                	sub    %edx,%ecx$/;"	l
f010182f	obj/kern/kernel.asm	/^f010182f:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101835	obj/kern/kernel.asm	/^f0101835:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	eb 22                	jmp    f010185f <boot_map_region+0xff>$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	6a 01                	push   $0x1$/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	53                   	push   %ebx$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	e8 37 fe ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	89 30                	mov    %esi,(%eax)$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	8d 34 18             	lea    (%eax,%ebx,1),%esi$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	85 ff                	test   %edi,%edi$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	75 d4                	jne    f010183d <boot_map_region+0xdd>$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	5b                   	pop    %ebx$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	5e                   	pop    %esi$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	5f                   	pop    %edi$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	5d                   	pop    %ebp$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	c3                   	ret    $/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871 <page_lookup>:$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	55                   	push   %ebp$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	89 e5                	mov    %esp,%ebp$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	53                   	push   %ebx$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	6a 00                	push   $0x0$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	e8 fa fd ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	83 c4 10             	add    $0x10,%esp$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	85 c0                	test   %eax,%eax$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	74 37                	je     f01018c6 <page_lookup+0x55>$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	74 39                	je     f01018cd <page_lookup+0x5c>$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	85 db                	test   %ebx,%ebx$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	74 02                	je     f010189a <page_lookup+0x29>$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	89 03                	mov    %eax,(%ebx)$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	8b 00                	mov    (%eax),%eax$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	3b 05 8c 1e 25 f0    	cmp    0xf0251e8c,%eax$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	72 14                	jb     f01018bb <page_lookup+0x4a>$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	68 90 75 10 f0       	push   $0xf0107590$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	6a 53                	push   $0x53$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f01018b6	obj/kern/kernel.asm	/^f01018b6:	e8 85 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	8b 15 94 1e 25 f0    	mov    0xf0251e94,%edx$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	eb 0c                	jmp    f01018d2 <page_lookup+0x61>$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	eb 05                	jmp    f01018d2 <page_lookup+0x61>$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	c9                   	leave  $/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	c3                   	ret    $/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7 <tlb_invalidate>:$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	55                   	push   %ebp$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	e8 8c 4b 00 00       	call   f010646e <cpunum>$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	83 b8 28 20 25 f0 00 	cmpl   $0x0,-0xfdadfd8(%eax)$/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec:	74 16                	je     f0101904 <tlb_invalidate+0x2d>$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	e8 7b 4b 00 00       	call   f010646e <cpunum>$/;"	l
f01018f3	obj/kern/kernel.asm	/^f01018f3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	75 06                	jne    f010190a <tlb_invalidate+0x33>$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	0f 01 38             	invlpg (%eax)$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	c9                   	leave  $/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	c3                   	ret    $/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c <page_remove>:$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	55                   	push   %ebp$/;"	l
f010190d	obj/kern/kernel.asm	/^f010190d:	89 e5                	mov    %esp,%ebp$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	56                   	push   %esi$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	53                   	push   %ebx$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	50                   	push   %eax$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	56                   	push   %esi$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	53                   	push   %ebx$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	e8 4c ff ff ff       	call   f0101871 <page_lookup>$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	85 c0                	test   %eax,%eax$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	74 1f                	je     f010194b <page_remove+0x3f>$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	50                   	push   %eax$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	e8 26 fd ff ff       	call   f010165b <page_decref>$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	56                   	push   %esi$/;"	l
f0101942	obj/kern/kernel.asm	/^f0101942:	53                   	push   %ebx$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	e8 8f ff ff ff       	call   f01018d7 <tlb_invalidate>$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	83 c4 10             	add    $0x10,%esp$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	5b                   	pop    %ebx$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	5e                   	pop    %esi$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	5d                   	pop    %ebp$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	c3                   	ret    $/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952 <page_insert>:$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	55                   	push   %ebp$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	89 e5                	mov    %esp,%ebp$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	57                   	push   %edi$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	56                   	push   %esi$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	53                   	push   %ebx$/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	6a 01                	push   $0x1$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	57                   	push   %edi$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	e8 16 fd ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	85 c0                	test   %eax,%eax$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	74 33                	je     f01019a6 <page_insert+0x54>$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	89 c6                	mov    %eax,%esi$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	57                   	push   %edi$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	e8 86 ff ff ff       	call   f010190c <page_remove>$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	2b 1d 94 1e 25 f0    	sub    0xf0251e94,%ebx$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	09 c3                	or     %eax,%ebx$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	89 1e                	mov    %ebx,(%esi)$/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	eb 05                	jmp    f01019ab <page_insert+0x59>$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	5b                   	pop    %ebx$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	5e                   	pop    %esi$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	5f                   	pop    %edi$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	5d                   	pop    %ebp$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	c3                   	ret    $/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3 <mmio_map_region>:$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	55                   	push   %ebp$/;"	l
f01019b4	obj/kern/kernel.asm	/^f01019b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	56                   	push   %esi$/;"	l
f01019b7	obj/kern/kernel.asm	/^f01019b7:	53                   	push   %ebx$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	8b 35 04 23 12 f0    	mov    0xf0122304,%esi$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	76 17                	jbe    f01019ee <mmio_map_region+0x3b>$/;"	l
f01019d7	obj/kern/kernel.asm	/^f01019d7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	68 b0 75 10 f0       	push   $0xf01075b0$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	68 8f 02 00 00       	push   $0x28f$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	e8 52 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	6a 1a                	push   $0x1a$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	89 d9                	mov    %ebx,%ecx$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	89 f2                	mov    %esi,%edx$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	e8 5c fd ff ff       	call   f0101760 <boot_map_region>$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	01 1d 04 23 12 f0    	add    %ebx,0xf0122304$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	89 f0                	mov    %esi,%eax$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	5b                   	pop    %ebx$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	5e                   	pop    %esi$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	5d                   	pop    %ebp$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	c3                   	ret    $/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13 <mem_init>:$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	55                   	push   %ebp$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	57                   	push   %edi$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	56                   	push   %esi$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	53                   	push   %ebx$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	e8 be f6 ff ff       	call   f01010e4 <nvram_read>$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	89 c3                	mov    %eax,%ebx$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	e8 b2 f6 ff ff       	call   f01010e4 <nvram_read>$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	89 c6                	mov    %eax,%esi$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	e8 a6 f6 ff ff       	call   f01010e4 <nvram_read>$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	85 c0                	test   %eax,%eax$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	74 07                	je     f0101a4c <mem_init+0x39>$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	eb 0b                	jmp    f0101a57 <mem_init+0x44>$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	85 f6                	test   %esi,%esi$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	89 c2                	mov    %eax,%edx$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	89 15 8c 1e 25 f0    	mov    %edx,0xf0251e8c$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	89 da                	mov    %ebx,%edx$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	89 15 44 12 25 f0    	mov    %edx,0xf0251244$/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	89 c2                	mov    %eax,%edx$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	29 da                	sub    %ebx,%edx$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	52                   	push   %edx$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	53                   	push   %ebx$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	50                   	push   %eax$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	68 d4 75 10 f0       	push   $0xf01075d4$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	e8 fa 23 00 00       	call   f0103e78 <cprintf>$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	0f a2                	cpuid  $/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	c1 ea 03             	shr    $0x3,%edx$/;"	l
f0101a88	obj/kern/kernel.asm	/^f0101a88:	83 e2 01             	and    $0x1,%edx$/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	88 15 88 1e 25 f0    	mov    %dl,0xf0251e88$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	e8 26 fa ff ff       	call   f01014bc <enable_PS_percpu>$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	e8 0c f6 ff ff       	call   f01010ac <boot_alloc>$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	a3 90 1e 25 f0       	mov    %eax,0xf0251e90$/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101aad	obj/kern/kernel.asm	/^f0101aad:	6a 00                	push   $0x0$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	50                   	push   %eax$/;"	l
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	e8 99 43 00 00       	call   f0105e4e <memset>$/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	77 15                	ja     f0101ad9 <mem_init+0xc6>$/;"	l
f0101ac4	obj/kern/kernel.asm	/^f0101ac4:	50                   	push   %eax$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	68 b1 00 00 00       	push   $0xb1$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	e8 67 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	a1 8c 1e 25 f0       	mov    0xf0251e8c,%eax$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	e8 b7 f5 ff ff       	call   f01010ac <boot_alloc>$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	a3 94 1e 25 f0       	mov    %eax,0xf0251e94$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	8b 0d 8c 1e 25 f0    	mov    0xf0251e8c,%ecx$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f0101b0a	obj/kern/kernel.asm	/^f0101b0a:	52                   	push   %edx$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	6a 00                	push   $0x0$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	50                   	push   %eax$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	e8 3b 43 00 00       	call   f0105e4e <memset>$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	b8 00 40 0a 00       	mov    $0xa4000,%eax$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	e8 8f f5 ff ff       	call   f01010ac <boot_alloc>$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	a3 48 12 25 f0       	mov    %eax,0xf0251248$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	e8 b2 f9 ff ff       	call   f01014d9 <page_init>$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	e8 89 f6 ff ff       	call   f01011ba <check_page_free_list>$/;"	l
f0101b31	obj/kern/kernel.asm	/^f0101b31:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	83 3d 94 1e 25 f0 00 	cmpl   $0x0,0xf0251e94$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	75 17                	jne    f0101b54 <mem_init+0x141>$/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	68 b2 7e 10 f0       	push   $0xf0107eb2$/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	68 27 03 00 00       	push   $0x327$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	e8 ec e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	a1 40 12 25 f0       	mov    0xf0251240,%eax$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	eb 05                	jmp    f0101b65 <mem_init+0x152>$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	8b 00                	mov    (%eax),%eax$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	85 c0                	test   %eax,%eax$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	75 f7                	jne    f0101b60 <mem_init+0x14d>$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	6a 00                	push   $0x0$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	e8 20 fa ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	89 c7                	mov    %eax,%edi$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b78	obj/kern/kernel.asm	/^f0101b78:	85 c0                	test   %eax,%eax$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	75 19                	jne    f0101b95 <mem_init+0x182>$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	68 cd 7e 10 f0       	push   $0xf0107ecd$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101b86	obj/kern/kernel.asm	/^f0101b86:	68 2f 03 00 00       	push   $0x32f$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	e8 ab e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	6a 00                	push   $0x0$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	e8 f4 f9 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	89 c6                	mov    %eax,%esi$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	85 c0                	test   %eax,%eax$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	75 19                	jne    f0101bc1 <mem_init+0x1ae>$/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	68 e3 7e 10 f0       	push   $0xf0107ee3$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	68 30 03 00 00       	push   $0x330$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	e8 7f e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	6a 00                	push   $0x0$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	e8 c8 f9 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101bcb	obj/kern/kernel.asm	/^f0101bcb:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	85 c0                	test   %eax,%eax$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	75 19                	jne    f0101bee <mem_init+0x1db>$/;"	l
f0101bd5	obj/kern/kernel.asm	/^f0101bd5:	68 f9 7e 10 f0       	push   $0xf0107ef9$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	68 31 03 00 00       	push   $0x331$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	e8 52 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bee	obj/kern/kernel.asm	/^f0101bee:	39 f7                	cmp    %esi,%edi$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	75 19                	jne    f0101c0b <mem_init+0x1f8>$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	68 0f 7f 10 f0       	push   $0xf0107f0f$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	68 34 03 00 00       	push   $0x334$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	e8 35 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	39 c6                	cmp    %eax,%esi$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	74 04                	je     f0101c16 <mem_init+0x203>$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	39 c7                	cmp    %eax,%edi$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	75 19                	jne    f0101c2f <mem_init+0x21c>$/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	68 10 76 10 f0       	push   $0xf0107610$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	68 35 03 00 00       	push   $0x335$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	e8 11 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	8b 0d 94 1e 25 f0    	mov    0xf0251e94,%ecx$/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	8b 15 8c 1e 25 f0    	mov    0xf0251e8c,%edx$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c3e	obj/kern/kernel.asm	/^f0101c3e:	89 f8                	mov    %edi,%eax$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	29 c8                	sub    %ecx,%eax$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101c48	obj/kern/kernel.asm	/^f0101c48:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	72 19                	jb     f0101c65 <mem_init+0x252>$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	68 21 7f 10 f0       	push   $0xf0107f21$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	68 36 03 00 00       	push   $0x336$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	e8 db e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	89 f0                	mov    %esi,%eax$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	29 c8                	sub    %ecx,%eax$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101c6c	obj/kern/kernel.asm	/^f0101c6c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	39 c2                	cmp    %eax,%edx$/;"	l
f0101c71	obj/kern/kernel.asm	/^f0101c71:	77 19                	ja     f0101c8c <mem_init+0x279>$/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	68 3e 7f 10 f0       	push   $0xf0107f3e$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	68 37 03 00 00       	push   $0x337$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101c87	obj/kern/kernel.asm	/^f0101c87:	e8 b4 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	29 c8                	sub    %ecx,%eax$/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	39 c2                	cmp    %eax,%edx$/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	77 19                	ja     f0101cb4 <mem_init+0x2a1>$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	68 5b 7f 10 f0       	push   $0xf0107f5b$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	68 38 03 00 00       	push   $0x338$/;"	l
f0101caa	obj/kern/kernel.asm	/^f0101caa:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	e8 8c e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	a1 40 12 25 f0       	mov    0xf0251240,%eax$/;"	l
f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	c7 05 40 12 25 f0 00 	movl   $0x0,0xf0251240$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	00 00 00 $/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	6a 00                	push   $0x0$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	e8 c3 f8 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	85 c0                	test   %eax,%eax$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	74 19                	je     f0101cf0 <mem_init+0x2dd>$/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	68 78 7f 10 f0       	push   $0xf0107f78$/;"	l
f0101cdc	obj/kern/kernel.asm	/^f0101cdc:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	68 3f 03 00 00       	push   $0x33f$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	e8 50 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	57                   	push   %edi$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	e8 0a f9 ff ff       	call   f0101603 <page_free>$/;"	l
f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101cfc	obj/kern/kernel.asm	/^f0101cfc:	e8 02 f9 ff ff       	call   f0101603 <page_free>$/;"	l
f0101d01	obj/kern/kernel.asm	/^f0101d01:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	e8 f7 f8 ff ff       	call   f0101603 <page_free>$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d13	obj/kern/kernel.asm	/^f0101d13:	e8 7b f8 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	89 c6                	mov    %eax,%esi$/;"	l
f0101d1a	obj/kern/kernel.asm	/^f0101d1a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d1d	obj/kern/kernel.asm	/^f0101d1d:	85 c0                	test   %eax,%eax$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	75 19                	jne    f0101d3a <mem_init+0x327>$/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	68 cd 7e 10 f0       	push   $0xf0107ecd$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	68 46 03 00 00       	push   $0x346$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	e8 06 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	6a 00                	push   $0x0$/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	e8 4f f8 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	89 c7                	mov    %eax,%edi$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	85 c0                	test   %eax,%eax$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	75 19                	jne    f0101d66 <mem_init+0x353>$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	68 e3 7e 10 f0       	push   $0xf0107ee3$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	68 47 03 00 00       	push   $0x347$/;"	l
f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101d61	obj/kern/kernel.asm	/^f0101d61:	e8 da e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	6a 00                	push   $0x0$/;"	l
f0101d6b	obj/kern/kernel.asm	/^f0101d6b:	e8 23 f8 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101d70	obj/kern/kernel.asm	/^f0101d70:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	85 c0                	test   %eax,%eax$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	75 19                	jne    f0101d93 <mem_init+0x380>$/;"	l
f0101d7a	obj/kern/kernel.asm	/^f0101d7a:	68 f9 7e 10 f0       	push   $0xf0107ef9$/;"	l
f0101d7f	obj/kern/kernel.asm	/^f0101d7f:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101d84	obj/kern/kernel.asm	/^f0101d84:	68 48 03 00 00       	push   $0x348$/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	e8 ad e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d93	obj/kern/kernel.asm	/^f0101d93:	39 fe                	cmp    %edi,%esi$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	75 19                	jne    f0101db0 <mem_init+0x39d>$/;"	l
f0101d97	obj/kern/kernel.asm	/^f0101d97:	68 0f 7f 10 f0       	push   $0xf0107f0f$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	68 4a 03 00 00       	push   $0x34a$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101dab	obj/kern/kernel.asm	/^f0101dab:	e8 90 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101db0	obj/kern/kernel.asm	/^f0101db0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101db3	obj/kern/kernel.asm	/^f0101db3:	39 c7                	cmp    %eax,%edi$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	74 04                	je     f0101dbb <mem_init+0x3a8>$/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	39 c6                	cmp    %eax,%esi$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	75 19                	jne    f0101dd4 <mem_init+0x3c1>$/;"	l
f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	68 10 76 10 f0       	push   $0xf0107610$/;"	l
f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	68 4b 03 00 00       	push   $0x34b$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	e8 6c e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101dd7	obj/kern/kernel.asm	/^f0101dd7:	6a 00                	push   $0x0$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	e8 b5 f7 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	85 c0                	test   %eax,%eax$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	74 19                	je     f0101dfe <mem_init+0x3eb>$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	68 78 7f 10 f0       	push   $0xf0107f78$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101def	obj/kern/kernel.asm	/^f0101def:	68 4c 03 00 00       	push   $0x34c$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	e8 42 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dfe	obj/kern/kernel.asm	/^f0101dfe:	89 f0                	mov    %esi,%eax$/;"	l
f0101e00	obj/kern/kernel.asm	/^f0101e00:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	89 c2                	mov    %eax,%edx$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	3b 15 8c 1e 25 f0    	cmp    0xf0251e8c,%edx$/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	72 12                	jb     f0101e2b <mem_init+0x418>$/;"	l
f0101e19	obj/kern/kernel.asm	/^f0101e19:	50                   	push   %eax$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	6a 5a                	push   $0x5a$/;"	l
f0101e21	obj/kern/kernel.asm	/^f0101e21:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0101e26	obj/kern/kernel.asm	/^f0101e26:	e8 15 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e2b	obj/kern/kernel.asm	/^f0101e2b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	6a 01                	push   $0x1$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	50                   	push   %eax$/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	e8 0e 40 00 00       	call   f0105e4e <memset>$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101e43	obj/kern/kernel.asm	/^f0101e43:	e8 bb f7 ff ff       	call   f0101603 <page_free>$/;"	l
f0101e48	obj/kern/kernel.asm	/^f0101e48:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	e8 3f f7 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	85 c0                	test   %eax,%eax$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	75 19                	jne    f0101e74 <mem_init+0x461>$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	68 87 7f 10 f0       	push   $0xf0107f87$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	68 51 03 00 00       	push   $0x351$/;"	l
f0101e6a	obj/kern/kernel.asm	/^f0101e6a:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	e8 cc e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	39 c6                	cmp    %eax,%esi$/;"	l
f0101e76	obj/kern/kernel.asm	/^f0101e76:	74 19                	je     f0101e91 <mem_init+0x47e>$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	68 a5 7f 10 f0       	push   $0xf0107fa5$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	68 52 03 00 00       	push   $0x352$/;"	l
f0101e87	obj/kern/kernel.asm	/^f0101e87:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	e8 af e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e91	obj/kern/kernel.asm	/^f0101e91:	89 f0                	mov    %esi,%eax$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f0101e99	obj/kern/kernel.asm	/^f0101e99:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	89 c2                	mov    %eax,%edx$/;"	l
f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	3b 15 8c 1e 25 f0    	cmp    0xf0251e8c,%edx$/;"	l
f0101eaa	obj/kern/kernel.asm	/^f0101eaa:	72 12                	jb     f0101ebe <mem_init+0x4ab>$/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	50                   	push   %eax$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0101eb2	obj/kern/kernel.asm	/^f0101eb2:	6a 5a                	push   $0x5a$/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	e8 82 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101ec4	obj/kern/kernel.asm	/^f0101ec4:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	74 19                	je     f0101ee8 <mem_init+0x4d5>$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	68 b5 7f 10 f0       	push   $0xf0107fb5$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	68 55 03 00 00       	push   $0x355$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	e8 58 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ee8	obj/kern/kernel.asm	/^f0101ee8:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101eeb	obj/kern/kernel.asm	/^f0101eeb:	39 d0                	cmp    %edx,%eax$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	75 db                	jne    f0101eca <mem_init+0x4b7>$/;"	l
f0101eef	obj/kern/kernel.asm	/^f0101eef:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101ef2	obj/kern/kernel.asm	/^f0101ef2:	a3 40 12 25 f0       	mov    %eax,0xf0251240$/;"	l
f0101ef7	obj/kern/kernel.asm	/^f0101ef7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101efa	obj/kern/kernel.asm	/^f0101efa:	56                   	push   %esi$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	e8 03 f7 ff ff       	call   f0101603 <page_free>$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101f03	obj/kern/kernel.asm	/^f0101f03:	e8 fb f6 ff ff       	call   f0101603 <page_free>$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101f0b	obj/kern/kernel.asm	/^f0101f0b:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	e8 f0 f6 ff ff       	call   f0101603 <page_free>$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	a1 40 12 25 f0       	mov    0xf0251240,%eax$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f1b	obj/kern/kernel.asm	/^f0101f1b:	eb 05                	jmp    f0101f22 <mem_init+0x50f>$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	8b 00                	mov    (%eax),%eax$/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	85 c0                	test   %eax,%eax$/;"	l
f0101f24	obj/kern/kernel.asm	/^f0101f24:	75 f7                	jne    f0101f1d <mem_init+0x50a>$/;"	l
f0101f26	obj/kern/kernel.asm	/^f0101f26:	85 db                	test   %ebx,%ebx$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	74 19                	je     f0101f43 <mem_init+0x530>$/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	68 bf 7f 10 f0       	push   $0xf0107fbf$/;"	l
f0101f2f	obj/kern/kernel.asm	/^f0101f2f:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	68 62 03 00 00       	push   $0x362$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	e8 fd e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	68 30 76 10 f0       	push   $0xf0107630$/;"	l
f0101f4b	obj/kern/kernel.asm	/^f0101f4b:	e8 28 1f 00 00       	call   f0103e78 <cprintf>$/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	e8 37 f6 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101f5c	obj/kern/kernel.asm	/^f0101f5c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	85 c0                	test   %eax,%eax$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	75 19                	jne    f0101f7f <mem_init+0x56c>$/;"	l
f0101f66	obj/kern/kernel.asm	/^f0101f66:	68 cd 7e 10 f0       	push   $0xf0107ecd$/;"	l
f0101f6b	obj/kern/kernel.asm	/^f0101f6b:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101f70	obj/kern/kernel.asm	/^f0101f70:	68 cc 03 00 00       	push   $0x3cc$/;"	l
f0101f75	obj/kern/kernel.asm	/^f0101f75:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	e8 c1 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	6a 00                	push   $0x0$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	e8 0a f6 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101f89	obj/kern/kernel.asm	/^f0101f89:	89 c3                	mov    %eax,%ebx$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f8e	obj/kern/kernel.asm	/^f0101f8e:	85 c0                	test   %eax,%eax$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	75 19                	jne    f0101fab <mem_init+0x598>$/;"	l
f0101f92	obj/kern/kernel.asm	/^f0101f92:	68 e3 7e 10 f0       	push   $0xf0107ee3$/;"	l
f0101f97	obj/kern/kernel.asm	/^f0101f97:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	68 cd 03 00 00       	push   $0x3cd$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	e8 95 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101fae	obj/kern/kernel.asm	/^f0101fae:	6a 00                	push   $0x0$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	e8 de f5 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	89 c6                	mov    %eax,%esi$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fba	obj/kern/kernel.asm	/^f0101fba:	85 c0                	test   %eax,%eax$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	75 19                	jne    f0101fd7 <mem_init+0x5c4>$/;"	l
f0101fbe	obj/kern/kernel.asm	/^f0101fbe:	68 f9 7e 10 f0       	push   $0xf0107ef9$/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	68 ce 03 00 00       	push   $0x3ce$/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	e8 69 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fd7	obj/kern/kernel.asm	/^f0101fd7:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	75 19                	jne    f0101ff5 <mem_init+0x5e2>$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	68 0f 7f 10 f0       	push   $0xf0107f0f$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	68 d1 03 00 00       	push   $0x3d1$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	e8 4b e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	74 05                	je     f0101ffe <mem_init+0x5eb>$/;"	l
f0101ff9	obj/kern/kernel.asm	/^f0101ff9:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	75 19                	jne    f0102017 <mem_init+0x604>$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	68 10 76 10 f0       	push   $0xf0107610$/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102008	obj/kern/kernel.asm	/^f0102008:	68 d2 03 00 00       	push   $0x3d2$/;"	l
f010200d	obj/kern/kernel.asm	/^f010200d:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	e8 29 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	a1 40 12 25 f0       	mov    0xf0251240,%eax$/;"	l
f010201c	obj/kern/kernel.asm	/^f010201c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010201f	obj/kern/kernel.asm	/^f010201f:	c7 05 40 12 25 f0 00 	movl   $0x0,0xf0251240$/;"	l
f0102026	obj/kern/kernel.asm	/^f0102026:	00 00 00 $/;"	l
f0102029	obj/kern/kernel.asm	/^f0102029:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	6a 00                	push   $0x0$/;"	l
f010202e	obj/kern/kernel.asm	/^f010202e:	e8 60 f5 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	85 c0                	test   %eax,%eax$/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	74 19                	je     f0102053 <mem_init+0x640>$/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	68 78 7f 10 f0       	push   $0xf0107f78$/;"	l
f010203f	obj/kern/kernel.asm	/^f010203f:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	68 d9 03 00 00       	push   $0x3d9$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010204e	obj/kern/kernel.asm	/^f010204e:	e8 ed df ff ff       	call   f0100040 <_panic>$/;"	l
f0102053	obj/kern/kernel.asm	/^f0102053:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102056	obj/kern/kernel.asm	/^f0102056:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	50                   	push   %eax$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	6a 00                	push   $0x0$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	e8 0a f8 ff ff       	call   f0101871 <page_lookup>$/;"	l
f0102067	obj/kern/kernel.asm	/^f0102067:	83 c4 10             	add    $0x10,%esp$/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	85 c0                	test   %eax,%eax$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	74 19                	je     f0102087 <mem_init+0x674>$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	68 50 76 10 f0       	push   $0xf0107650$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	68 dc 03 00 00       	push   $0x3dc$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	e8 b9 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	6a 02                	push   $0x2$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	6a 00                	push   $0x0$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	53                   	push   %ebx$/;"	l
f010208c	obj/kern/kernel.asm	/^f010208c:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	e8 bb f8 ff ff       	call   f0101952 <page_insert>$/;"	l
f0102097	obj/kern/kernel.asm	/^f0102097:	83 c4 10             	add    $0x10,%esp$/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	85 c0                	test   %eax,%eax$/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	78 19                	js     f01020b7 <mem_init+0x6a4>$/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	68 88 76 10 f0       	push   $0xf0107688$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01020a8	obj/kern/kernel.asm	/^f01020a8:	68 df 03 00 00       	push   $0x3df$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	e8 89 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	e8 41 f5 ff ff       	call   f0101603 <page_free>$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	6a 02                	push   $0x2$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	6a 00                	push   $0x0$/;"	l
f01020c6	obj/kern/kernel.asm	/^f01020c6:	53                   	push   %ebx$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f01020cd	obj/kern/kernel.asm	/^f01020cd:	e8 80 f8 ff ff       	call   f0101952 <page_insert>$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	83 c4 20             	add    $0x20,%esp$/;"	l
f01020d5	obj/kern/kernel.asm	/^f01020d5:	85 c0                	test   %eax,%eax$/;"	l
f01020d7	obj/kern/kernel.asm	/^f01020d7:	74 19                	je     f01020f2 <mem_init+0x6df>$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	68 b8 76 10 f0       	push   $0xf01076b8$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01020e3	obj/kern/kernel.asm	/^f01020e3:	68 e3 03 00 00       	push   $0x3e3$/;"	l
f01020e8	obj/kern/kernel.asm	/^f01020e8:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	e8 4e df ff ff       	call   f0100040 <_panic>$/;"	l
f01020f2	obj/kern/kernel.asm	/^f01020f2:	8b 3d 90 1e 25 f0    	mov    0xf0251e90,%edi$/;"	l
f01020f8	obj/kern/kernel.asm	/^f01020f8:	a1 94 1e 25 f0       	mov    0xf0251e94,%eax$/;"	l
f01020fd	obj/kern/kernel.asm	/^f01020fd:	89 c1                	mov    %eax,%ecx$/;"	l
f01020ff	obj/kern/kernel.asm	/^f01020ff:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	8b 17                	mov    (%edi),%edx$/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010210d	obj/kern/kernel.asm	/^f010210d:	29 c8                	sub    %ecx,%eax$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	39 c2                	cmp    %eax,%edx$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	74 19                	je     f0102132 <mem_init+0x71f>$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	68 e8 76 10 f0       	push   $0xf01076e8$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	68 e4 03 00 00       	push   $0x3e4$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	e8 0e df ff ff       	call   f0100040 <_panic>$/;"	l
f0102132	obj/kern/kernel.asm	/^f0102132:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	89 f8                	mov    %edi,%eax$/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	e8 06 f0 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e:	89 da                	mov    %ebx,%edx$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102146	obj/kern/kernel.asm	/^f0102146:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102149	obj/kern/kernel.asm	/^f0102149:	39 d0                	cmp    %edx,%eax$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	74 19                	je     f0102166 <mem_init+0x753>$/;"	l
f010214d	obj/kern/kernel.asm	/^f010214d:	68 10 77 10 f0       	push   $0xf0107710$/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	68 e5 03 00 00       	push   $0x3e5$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102161	obj/kern/kernel.asm	/^f0102161:	e8 da de ff ff       	call   f0100040 <_panic>$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	74 19                	je     f0102186 <mem_init+0x773>$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	68 ca 7f 10 f0       	push   $0xf0107fca$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	68 e6 03 00 00       	push   $0x3e6$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	e8 ba de ff ff       	call   f0100040 <_panic>$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102189	obj/kern/kernel.asm	/^f0102189:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	74 19                	je     f01021a9 <mem_init+0x796>$/;"	l
f0102190	obj/kern/kernel.asm	/^f0102190:	68 db 7f 10 f0       	push   $0xf0107fdb$/;"	l
f0102195	obj/kern/kernel.asm	/^f0102195:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	68 e7 03 00 00       	push   $0x3e7$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	e8 97 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021a9	obj/kern/kernel.asm	/^f01021a9:	6a 02                	push   $0x2$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	68 00 10 00 00       	push   $0x1000$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	56                   	push   %esi$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	57                   	push   %edi$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	e8 9b f7 ff ff       	call   f0101952 <page_insert>$/;"	l
f01021b7	obj/kern/kernel.asm	/^f01021b7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	85 c0                	test   %eax,%eax$/;"	l
f01021bc	obj/kern/kernel.asm	/^f01021bc:	74 19                	je     f01021d7 <mem_init+0x7c4>$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	68 40 77 10 f0       	push   $0xf0107740$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	68 ea 03 00 00       	push   $0x3ea$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	e8 69 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01021dc	obj/kern/kernel.asm	/^f01021dc:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	e8 5e ef ff ff       	call   f0101144 <check_va2pa>$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	89 f2                	mov    %esi,%edx$/;"	l
f01021e8	obj/kern/kernel.asm	/^f01021e8:	2b 15 94 1e 25 f0    	sub    0xf0251e94,%edx$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01021f1	obj/kern/kernel.asm	/^f01021f1:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01021f4	obj/kern/kernel.asm	/^f01021f4:	39 d0                	cmp    %edx,%eax$/;"	l
f01021f6	obj/kern/kernel.asm	/^f01021f6:	74 19                	je     f0102211 <mem_init+0x7fe>$/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	68 7c 77 10 f0       	push   $0xf010777c$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102202	obj/kern/kernel.asm	/^f0102202:	68 eb 03 00 00       	push   $0x3eb$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	e8 2f de ff ff       	call   f0100040 <_panic>$/;"	l
f0102211	obj/kern/kernel.asm	/^f0102211:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	74 19                	je     f0102231 <mem_init+0x81e>$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	68 ec 7f 10 f0       	push   $0xf0107fec$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	68 ec 03 00 00       	push   $0x3ec$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010222c	obj/kern/kernel.asm	/^f010222c:	e8 0f de ff ff       	call   f0100040 <_panic>$/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	6a 00                	push   $0x0$/;"	l
f0102236	obj/kern/kernel.asm	/^f0102236:	e8 58 f3 ff ff       	call   f0101593 <page_alloc>$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	85 c0                	test   %eax,%eax$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	74 19                	je     f010225b <mem_init+0x848>$/;"	l
f0102242	obj/kern/kernel.asm	/^f0102242:	68 78 7f 10 f0       	push   $0xf0107f78$/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	e8 e5 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010225b	obj/kern/kernel.asm	/^f010225b:	6a 02                	push   $0x2$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102262	obj/kern/kernel.asm	/^f0102262:	56                   	push   %esi$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	e8 e4 f6 ff ff       	call   f0101952 <page_insert>$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102271	obj/kern/kernel.asm	/^f0102271:	85 c0                	test   %eax,%eax$/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	74 19                	je     f010228e <mem_init+0x87b>$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	68 40 77 10 f0       	push   $0xf0107740$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	68 f2 03 00 00       	push   $0x3f2$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	e8 b2 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	e8 a7 ee ff ff       	call   f0101144 <check_va2pa>$/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	89 f2                	mov    %esi,%edx$/;"	l
f010229f	obj/kern/kernel.asm	/^f010229f:	2b 15 94 1e 25 f0    	sub    0xf0251e94,%edx$/;"	l
f01022a5	obj/kern/kernel.asm	/^f01022a5:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	39 d0                	cmp    %edx,%eax$/;"	l
f01022ad	obj/kern/kernel.asm	/^f01022ad:	74 19                	je     f01022c8 <mem_init+0x8b5>$/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	68 7c 77 10 f0       	push   $0xf010777c$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	68 f3 03 00 00       	push   $0x3f3$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	e8 78 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	74 19                	je     f01022e8 <mem_init+0x8d5>$/;"	l
f01022cf	obj/kern/kernel.asm	/^f01022cf:	68 ec 7f 10 f0       	push   $0xf0107fec$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	68 f4 03 00 00       	push   $0x3f4$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01022e3	obj/kern/kernel.asm	/^f01022e3:	e8 58 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	6a 00                	push   $0x0$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	e8 a1 f2 ff ff       	call   f0101593 <page_alloc>$/;"	l
f01022f2	obj/kern/kernel.asm	/^f01022f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	85 c0                	test   %eax,%eax$/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	74 19                	je     f0102312 <mem_init+0x8ff>$/;"	l
f01022f9	obj/kern/kernel.asm	/^f01022f9:	68 78 7f 10 f0       	push   $0xf0107f78$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	68 f8 03 00 00       	push   $0x3f8$/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	e8 2e dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102312	obj/kern/kernel.asm	/^f0102312:	8b 15 90 1e 25 f0    	mov    0xf0251e90,%edx$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	8b 02                	mov    (%edx),%eax$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	89 c1                	mov    %eax,%ecx$/;"	l
f0102321	obj/kern/kernel.asm	/^f0102321:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102324	obj/kern/kernel.asm	/^f0102324:	3b 0d 8c 1e 25 f0    	cmp    0xf0251e8c,%ecx$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	72 15                	jb     f0102341 <mem_init+0x92e>$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	50                   	push   %eax$/;"	l
f010232d	obj/kern/kernel.asm	/^f010232d:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	68 fb 03 00 00       	push   $0x3fb$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	e8 ff dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010234c	obj/kern/kernel.asm	/^f010234c:	6a 00                	push   $0x0$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102353	obj/kern/kernel.asm	/^f0102353:	52                   	push   %edx$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	e8 29 f3 ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f010235f	obj/kern/kernel.asm	/^f010235f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	39 d0                	cmp    %edx,%eax$/;"	l
f0102364	obj/kern/kernel.asm	/^f0102364:	74 19                	je     f010237f <mem_init+0x96c>$/;"	l
f0102366	obj/kern/kernel.asm	/^f0102366:	68 ac 77 10 f0       	push   $0xf01077ac$/;"	l
f010236b	obj/kern/kernel.asm	/^f010236b:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	68 fc 03 00 00       	push   $0x3fc$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	e8 c1 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	6a 06                	push   $0x6$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	56                   	push   %esi$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	e8 c0 f5 ff ff       	call   f0101952 <page_insert>$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102395	obj/kern/kernel.asm	/^f0102395:	85 c0                	test   %eax,%eax$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	74 19                	je     f01023b2 <mem_init+0x99f>$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	68 ec 77 10 f0       	push   $0xf01077ec$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	68 ff 03 00 00       	push   $0x3ff$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	e8 8e dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	8b 3d 90 1e 25 f0    	mov    0xf0251e90,%edi$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	89 f8                	mov    %edi,%eax$/;"	l
f01023bf	obj/kern/kernel.asm	/^f01023bf:	e8 80 ed ff ff       	call   f0101144 <check_va2pa>$/;"	l
f01023c4	obj/kern/kernel.asm	/^f01023c4:	89 f2                	mov    %esi,%edx$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	2b 15 94 1e 25 f0    	sub    0xf0251e94,%edx$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01023cf	obj/kern/kernel.asm	/^f01023cf:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	39 d0                	cmp    %edx,%eax$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	74 19                	je     f01023ef <mem_init+0x9dc>$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	68 7c 77 10 f0       	push   $0xf010777c$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	68 00 04 00 00       	push   $0x400$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	e8 51 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	74 19                	je     f010240f <mem_init+0x9fc>$/;"	l
f01023f6	obj/kern/kernel.asm	/^f01023f6:	68 ec 7f 10 f0       	push   $0xf0107fec$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102400	obj/kern/kernel.asm	/^f0102400:	68 01 04 00 00       	push   $0x401$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	e8 31 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	6a 00                	push   $0x0$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102419	obj/kern/kernel.asm	/^f0102419:	57                   	push   %edi$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	e8 63 f2 ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102422	obj/kern/kernel.asm	/^f0102422:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102425	obj/kern/kernel.asm	/^f0102425:	75 19                	jne    f0102440 <mem_init+0xa2d>$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	68 2c 78 10 f0       	push   $0xf010782c$/;"	l
f010242c	obj/kern/kernel.asm	/^f010242c:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102431	obj/kern/kernel.asm	/^f0102431:	68 02 04 00 00       	push   $0x402$/;"	l
f0102436	obj/kern/kernel.asm	/^f0102436:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	e8 00 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0102445	obj/kern/kernel.asm	/^f0102445:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	75 19                	jne    f0102463 <mem_init+0xa50>$/;"	l
f010244a	obj/kern/kernel.asm	/^f010244a:	68 fd 7f 10 f0       	push   $0xf0107ffd$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	68 03 04 00 00       	push   $0x403$/;"	l
f0102459	obj/kern/kernel.asm	/^f0102459:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010245e	obj/kern/kernel.asm	/^f010245e:	e8 dd db ff ff       	call   f0100040 <_panic>$/;"	l
f0102463	obj/kern/kernel.asm	/^f0102463:	6a 02                	push   $0x2$/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	68 00 10 00 00       	push   $0x1000$/;"	l
f010246a	obj/kern/kernel.asm	/^f010246a:	56                   	push   %esi$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	50                   	push   %eax$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	e8 e1 f4 ff ff       	call   f0101952 <page_insert>$/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	85 c0                	test   %eax,%eax$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	74 19                	je     f0102491 <mem_init+0xa7e>$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	68 40 77 10 f0       	push   $0xf0107740$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	68 06 04 00 00       	push   $0x406$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	e8 af db ff ff       	call   f0100040 <_panic>$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	6a 00                	push   $0x0$/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	68 00 10 00 00       	push   $0x1000$/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	e8 dc f1 ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f01024ac	obj/kern/kernel.asm	/^f01024ac:	75 19                	jne    f01024c7 <mem_init+0xab4>$/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	68 60 78 10 f0       	push   $0xf0107860$/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	68 07 04 00 00       	push   $0x407$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	e8 79 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	6a 00                	push   $0x0$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	68 00 10 00 00       	push   $0x1000$/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	e8 a6 f1 ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01024e2	obj/kern/kernel.asm	/^f01024e2:	74 19                	je     f01024fd <mem_init+0xaea>$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	68 94 78 10 f0       	push   $0xf0107894$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	68 08 04 00 00       	push   $0x408$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	e8 43 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024fd	obj/kern/kernel.asm	/^f01024fd:	6a 02                	push   $0x2$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	68 00 00 40 00       	push   $0x400000$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	e8 40 f4 ff ff       	call   f0101952 <page_insert>$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	85 c0                	test   %eax,%eax$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	78 19                	js     f0102532 <mem_init+0xb1f>$/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	68 cc 78 10 f0       	push   $0xf01078cc$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102523	obj/kern/kernel.asm	/^f0102523:	68 0b 04 00 00       	push   $0x40b$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010252d	obj/kern/kernel.asm	/^f010252d:	e8 0e db ff ff       	call   f0100040 <_panic>$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	6a 02                	push   $0x2$/;"	l
f0102534	obj/kern/kernel.asm	/^f0102534:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102539	obj/kern/kernel.asm	/^f0102539:	53                   	push   %ebx$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102540	obj/kern/kernel.asm	/^f0102540:	e8 0d f4 ff ff       	call   f0101952 <page_insert>$/;"	l
f0102545	obj/kern/kernel.asm	/^f0102545:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102548	obj/kern/kernel.asm	/^f0102548:	85 c0                	test   %eax,%eax$/;"	l
f010254a	obj/kern/kernel.asm	/^f010254a:	74 19                	je     f0102565 <mem_init+0xb52>$/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	68 04 79 10 f0       	push   $0xf0107904$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102556	obj/kern/kernel.asm	/^f0102556:	68 0e 04 00 00       	push   $0x40e$/;"	l
f010255b	obj/kern/kernel.asm	/^f010255b:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	e8 db da ff ff       	call   f0100040 <_panic>$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102568	obj/kern/kernel.asm	/^f0102568:	6a 00                	push   $0x0$/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	68 00 10 00 00       	push   $0x1000$/;"	l
f010256f	obj/kern/kernel.asm	/^f010256f:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	e8 08 f1 ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102580	obj/kern/kernel.asm	/^f0102580:	74 19                	je     f010259b <mem_init+0xb88>$/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	68 94 78 10 f0       	push   $0xf0107894$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	68 0f 04 00 00       	push   $0x40f$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102596	obj/kern/kernel.asm	/^f0102596:	e8 a5 da ff ff       	call   f0100040 <_panic>$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	8b 3d 90 1e 25 f0    	mov    0xf0251e90,%edi$/;"	l
f01025a1	obj/kern/kernel.asm	/^f01025a1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01025a6	obj/kern/kernel.asm	/^f01025a6:	89 f8                	mov    %edi,%eax$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	e8 97 eb ff ff       	call   f0101144 <check_va2pa>$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	89 c1                	mov    %eax,%ecx$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	89 d8                	mov    %ebx,%eax$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01025bd	obj/kern/kernel.asm	/^f01025bd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	39 c1                	cmp    %eax,%ecx$/;"	l
f01025c2	obj/kern/kernel.asm	/^f01025c2:	74 19                	je     f01025dd <mem_init+0xbca>$/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	68 40 79 10 f0       	push   $0xf0107940$/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01025ce	obj/kern/kernel.asm	/^f01025ce:	68 12 04 00 00       	push   $0x412$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	e8 63 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	89 f8                	mov    %edi,%eax$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	e8 5b eb ff ff       	call   f0101144 <check_va2pa>$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	74 19                	je     f0102607 <mem_init+0xbf4>$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	68 6c 79 10 f0       	push   $0xf010796c$/;"	l
f01025f3	obj/kern/kernel.asm	/^f01025f3:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	68 13 04 00 00       	push   $0x413$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102602	obj/kern/kernel.asm	/^f0102602:	e8 39 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102607	obj/kern/kernel.asm	/^f0102607:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	74 19                	je     f0102627 <mem_init+0xc14>$/;"	l
f010260e	obj/kern/kernel.asm	/^f010260e:	68 13 80 10 f0       	push   $0xf0108013$/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	68 15 04 00 00       	push   $0x415$/;"	l
f010261d	obj/kern/kernel.asm	/^f010261d:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102622	obj/kern/kernel.asm	/^f0102622:	e8 19 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	74 19                	je     f0102647 <mem_init+0xc34>$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	68 24 80 10 f0       	push   $0xf0108024$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	68 16 04 00 00       	push   $0x416$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	e8 f9 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	6a 00                	push   $0x0$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	e8 42 ef ff ff       	call   f0101593 <page_alloc>$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	85 c0                	test   %eax,%eax$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	74 04                	je     f010265c <mem_init+0xc49>$/;"	l
f0102658	obj/kern/kernel.asm	/^f0102658:	39 c6                	cmp    %eax,%esi$/;"	l
f010265a	obj/kern/kernel.asm	/^f010265a:	74 19                	je     f0102675 <mem_init+0xc62>$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	68 9c 79 10 f0       	push   $0xf010799c$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	68 19 04 00 00       	push   $0x419$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	e8 cb d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102678	obj/kern/kernel.asm	/^f0102678:	6a 00                	push   $0x0$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	e8 87 f2 ff ff       	call   f010190c <page_remove>$/;"	l
f0102685	obj/kern/kernel.asm	/^f0102685:	8b 3d 90 1e 25 f0    	mov    0xf0251e90,%edi$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102690	obj/kern/kernel.asm	/^f0102690:	89 f8                	mov    %edi,%eax$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	e8 ad ea ff ff       	call   f0101144 <check_va2pa>$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	83 c4 10             	add    $0x10,%esp$/;"	l
f010269a	obj/kern/kernel.asm	/^f010269a:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	74 19                	je     f01026b8 <mem_init+0xca5>$/;"	l
f010269f	obj/kern/kernel.asm	/^f010269f:	68 c0 79 10 f0       	push   $0xf01079c0$/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	68 1d 04 00 00       	push   $0x41d$/;"	l
f01026ae	obj/kern/kernel.asm	/^f01026ae:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	e8 88 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01026bd	obj/kern/kernel.asm	/^f01026bd:	89 f8                	mov    %edi,%eax$/;"	l
f01026bf	obj/kern/kernel.asm	/^f01026bf:	e8 80 ea ff ff       	call   f0101144 <check_va2pa>$/;"	l
f01026c4	obj/kern/kernel.asm	/^f01026c4:	89 da                	mov    %ebx,%edx$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	2b 15 94 1e 25 f0    	sub    0xf0251e94,%edx$/;"	l
f01026cc	obj/kern/kernel.asm	/^f01026cc:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	39 d0                	cmp    %edx,%eax$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	74 19                	je     f01026ef <mem_init+0xcdc>$/;"	l
f01026d6	obj/kern/kernel.asm	/^f01026d6:	68 6c 79 10 f0       	push   $0xf010796c$/;"	l
f01026db	obj/kern/kernel.asm	/^f01026db:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01026e0	obj/kern/kernel.asm	/^f01026e0:	68 1e 04 00 00       	push   $0x41e$/;"	l
f01026e5	obj/kern/kernel.asm	/^f01026e5:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01026ea	obj/kern/kernel.asm	/^f01026ea:	e8 51 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	74 19                	je     f010270f <mem_init+0xcfc>$/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	68 ca 7f 10 f0       	push   $0xf0107fca$/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102700	obj/kern/kernel.asm	/^f0102700:	68 1f 04 00 00       	push   $0x41f$/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	e8 31 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	74 19                	je     f010272f <mem_init+0xd1c>$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	68 24 80 10 f0       	push   $0xf0108024$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	68 20 04 00 00       	push   $0x420$/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	e8 11 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	6a 00                	push   $0x0$/;"	l
f0102731	obj/kern/kernel.asm	/^f0102731:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	53                   	push   %ebx$/;"	l
f0102737	obj/kern/kernel.asm	/^f0102737:	57                   	push   %edi$/;"	l
f0102738	obj/kern/kernel.asm	/^f0102738:	e8 15 f2 ff ff       	call   f0101952 <page_insert>$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	85 c0                	test   %eax,%eax$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	74 19                	je     f010275d <mem_init+0xd4a>$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	68 e4 79 10 f0       	push   $0xf01079e4$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	68 23 04 00 00       	push   $0x423$/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	e8 e3 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102762	obj/kern/kernel.asm	/^f0102762:	75 19                	jne    f010277d <mem_init+0xd6a>$/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	68 35 80 10 f0       	push   $0xf0108035$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	68 24 04 00 00       	push   $0x424$/;"	l
f0102773	obj/kern/kernel.asm	/^f0102773:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	e8 c3 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010277d	obj/kern/kernel.asm	/^f010277d:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	74 19                	je     f010279b <mem_init+0xd88>$/;"	l
f0102782	obj/kern/kernel.asm	/^f0102782:	68 41 80 10 f0       	push   $0xf0108041$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010278c	obj/kern/kernel.asm	/^f010278c:	68 25 04 00 00       	push   $0x425$/;"	l
f0102791	obj/kern/kernel.asm	/^f0102791:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102796	obj/kern/kernel.asm	/^f0102796:	e8 a5 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	68 00 10 00 00       	push   $0x1000$/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	e8 5e f1 ff ff       	call   f010190c <page_remove>$/;"	l
f01027ae	obj/kern/kernel.asm	/^f01027ae:	8b 3d 90 1e 25 f0    	mov    0xf0251e90,%edi$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	89 f8                	mov    %edi,%eax$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	e8 84 e9 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f01027c0	obj/kern/kernel.asm	/^f01027c0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01027c6	obj/kern/kernel.asm	/^f01027c6:	74 19                	je     f01027e1 <mem_init+0xdce>$/;"	l
f01027c8	obj/kern/kernel.asm	/^f01027c8:	68 c0 79 10 f0       	push   $0xf01079c0$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	68 29 04 00 00       	push   $0x429$/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01027dc	obj/kern/kernel.asm	/^f01027dc:	e8 5f d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027e1	obj/kern/kernel.asm	/^f01027e1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	89 f8                	mov    %edi,%eax$/;"	l
f01027e8	obj/kern/kernel.asm	/^f01027e8:	e8 57 e9 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f01027ed	obj/kern/kernel.asm	/^f01027ed:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	74 19                	je     f010280b <mem_init+0xdf8>$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	68 1c 7a 10 f0       	push   $0xf0107a1c$/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01027fc	obj/kern/kernel.asm	/^f01027fc:	68 2a 04 00 00       	push   $0x42a$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	e8 35 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	74 19                	je     f010282b <mem_init+0xe18>$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	68 56 80 10 f0       	push   $0xf0108056$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	68 2b 04 00 00       	push   $0x42b$/;"	l
f0102821	obj/kern/kernel.asm	/^f0102821:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102826	obj/kern/kernel.asm	/^f0102826:	e8 15 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	74 19                	je     f010284b <mem_init+0xe38>$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	68 24 80 10 f0       	push   $0xf0108024$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	68 2c 04 00 00       	push   $0x42c$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	e8 f5 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	6a 00                	push   $0x0$/;"	l
f0102850	obj/kern/kernel.asm	/^f0102850:	e8 3e ed ff ff       	call   f0101593 <page_alloc>$/;"	l
f0102855	obj/kern/kernel.asm	/^f0102855:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	39 c3                	cmp    %eax,%ebx$/;"	l
f010285a	obj/kern/kernel.asm	/^f010285a:	75 04                	jne    f0102860 <mem_init+0xe4d>$/;"	l
f010285c	obj/kern/kernel.asm	/^f010285c:	85 c0                	test   %eax,%eax$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	75 19                	jne    f0102879 <mem_init+0xe66>$/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	68 44 7a 10 f0       	push   $0xf0107a44$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	68 2f 04 00 00       	push   $0x42f$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874:	e8 c7 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010287c	obj/kern/kernel.asm	/^f010287c:	6a 00                	push   $0x0$/;"	l
f010287e	obj/kern/kernel.asm	/^f010287e:	e8 10 ed ff ff       	call   f0101593 <page_alloc>$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	85 c0                	test   %eax,%eax$/;"	l
f0102888	obj/kern/kernel.asm	/^f0102888:	74 19                	je     f01028a3 <mem_init+0xe90>$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	68 78 7f 10 f0       	push   $0xf0107f78$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102894	obj/kern/kernel.asm	/^f0102894:	68 32 04 00 00       	push   $0x432$/;"	l
f0102899	obj/kern/kernel.asm	/^f0102899:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	e8 9d d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	8b 0d 90 1e 25 f0    	mov    0xf0251e90,%ecx$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	8b 11                	mov    (%ecx),%edx$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	39 c2                	cmp    %eax,%edx$/;"	l
f01028c2	obj/kern/kernel.asm	/^f01028c2:	74 19                	je     f01028dd <mem_init+0xeca>$/;"	l
f01028c4	obj/kern/kernel.asm	/^f01028c4:	68 e8 76 10 f0       	push   $0xf01076e8$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	68 35 04 00 00       	push   $0x435$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01028d8	obj/kern/kernel.asm	/^f01028d8:	e8 63 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028dd	obj/kern/kernel.asm	/^f01028dd:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01028e6	obj/kern/kernel.asm	/^f01028e6:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	74 19                	je     f0102906 <mem_init+0xef3>$/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	68 db 7f 10 f0       	push   $0xf0107fdb$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01028f7	obj/kern/kernel.asm	/^f01028f7:	68 37 04 00 00       	push   $0x437$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	e8 3a d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102912	obj/kern/kernel.asm	/^f0102912:	50                   	push   %eax$/;"	l
f0102913	obj/kern/kernel.asm	/^f0102913:	e8 eb ec ff ff       	call   f0101603 <page_free>$/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010291b	obj/kern/kernel.asm	/^f010291b:	6a 01                	push   $0x1$/;"	l
f010291d	obj/kern/kernel.asm	/^f010291d:	68 00 10 40 00       	push   $0x401000$/;"	l
f0102922	obj/kern/kernel.asm	/^f0102922:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	e8 55 ed ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f010292d	obj/kern/kernel.asm	/^f010292d:	89 c7                	mov    %eax,%edi$/;"	l
f010292f	obj/kern/kernel.asm	/^f010292f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010293d	obj/kern/kernel.asm	/^f010293d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	8b 0d 8c 1e 25 f0    	mov    0xf0251e8c,%ecx$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	89 c2                	mov    %eax,%edx$/;"	l
f010294a	obj/kern/kernel.asm	/^f010294a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	39 ca                	cmp    %ecx,%edx$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	72 15                	jb     f0102969 <mem_init+0xf56>$/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	50                   	push   %eax$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	68 3e 04 00 00       	push   $0x43e$/;"	l
f010295f	obj/kern/kernel.asm	/^f010295f:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	e8 d7 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f010296e	obj/kern/kernel.asm	/^f010296e:	39 c7                	cmp    %eax,%edi$/;"	l
f0102970	obj/kern/kernel.asm	/^f0102970:	74 19                	je     f010298b <mem_init+0xf78>$/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	68 67 80 10 f0       	push   $0xf0108067$/;"	l
f0102977	obj/kern/kernel.asm	/^f0102977:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	68 3f 04 00 00       	push   $0x43f$/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	e8 b5 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010298e	obj/kern/kernel.asm	/^f010298e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102995	obj/kern/kernel.asm	/^f0102995:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102998	obj/kern/kernel.asm	/^f0102998:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f01029a4	obj/kern/kernel.asm	/^f01029a4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01029a7	obj/kern/kernel.asm	/^f01029a7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	89 c2                	mov    %eax,%edx$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	39 d1                	cmp    %edx,%ecx$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	77 12                	ja     f01029c5 <mem_init+0xfb2>$/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	50                   	push   %eax$/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	6a 5a                	push   $0x5a$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	e8 7b d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029c5	obj/kern/kernel.asm	/^f01029c5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01029c8	obj/kern/kernel.asm	/^f01029c8:	68 00 10 00 00       	push   $0x1000$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	68 ff 00 00 00       	push   $0xff$/;"	l
f01029d2	obj/kern/kernel.asm	/^f01029d2:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	50                   	push   %eax$/;"	l
f01029d8	obj/kern/kernel.asm	/^f01029d8:	e8 71 34 00 00       	call   f0105e4e <memset>$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01029e0	obj/kern/kernel.asm	/^f01029e0:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01029e3	obj/kern/kernel.asm	/^f01029e3:	e8 1b ec ff ff       	call   f0101603 <page_free>$/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01029eb	obj/kern/kernel.asm	/^f01029eb:	6a 01                	push   $0x1$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	6a 00                	push   $0x0$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	e8 88 ec ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	89 fa                	mov    %edi,%edx$/;"	l
f01029fc	obj/kern/kernel.asm	/^f01029fc:	2b 15 94 1e 25 f0    	sub    0xf0251e94,%edx$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	89 d0                	mov    %edx,%eax$/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102a0d	obj/kern/kernel.asm	/^f0102a0d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a10	obj/kern/kernel.asm	/^f0102a10:	3b 05 8c 1e 25 f0    	cmp    0xf0251e8c,%eax$/;"	l
f0102a16	obj/kern/kernel.asm	/^f0102a16:	72 12                	jb     f0102a2a <mem_init+0x1017>$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	52                   	push   %edx$/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0102a1e	obj/kern/kernel.asm	/^f0102a1e:	6a 5a                	push   $0x5a$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	e8 16 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102a39	obj/kern/kernel.asm	/^f0102a39:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102a3c	obj/kern/kernel.asm	/^f0102a3c:	74 19                	je     f0102a57 <mem_init+0x1044>$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	68 7f 80 10 f0       	push   $0xf010807f$/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102a48	obj/kern/kernel.asm	/^f0102a48:	68 49 04 00 00       	push   $0x449$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102a52	obj/kern/kernel.asm	/^f0102a52:	e8 e9 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	75 db                	jne    f0102a39 <mem_init+0x1026>$/;"	l
f0102a5e	obj/kern/kernel.asm	/^f0102a5e:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102a72	obj/kern/kernel.asm	/^f0102a72:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	89 0d 40 12 25 f0    	mov    %ecx,0xf0251240$/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	50                   	push   %eax$/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	e8 7f eb ff ff       	call   f0101603 <page_free>$/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	e8 77 eb ff ff       	call   f0101603 <page_free>$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	e8 6f eb ff ff       	call   f0101603 <page_free>$/;"	l
f0102a94	obj/kern/kernel.asm	/^f0102a94:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	68 01 10 00 00       	push   $0x1001$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	6a 00                	push   $0x0$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	e8 10 ef ff ff       	call   f01019b3 <mmio_map_region>$/;"	l
f0102aa3	obj/kern/kernel.asm	/^f0102aa3:	89 c3                	mov    %eax,%ebx$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	6a 00                	push   $0x0$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	e8 ff ee ff ff       	call   f01019b3 <mmio_map_region>$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	89 c6                	mov    %eax,%esi$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	8d 83 00 20 00 00    	lea    0x2000(%ebx),%eax$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102abf	obj/kern/kernel.asm	/^f0102abf:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	76 07                	jbe    f0102ace <mem_init+0x10bb>$/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102acc	obj/kern/kernel.asm	/^f0102acc:	76 19                	jbe    f0102ae7 <mem_init+0x10d4>$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	68 68 7a 10 f0       	push   $0xf0107a68$/;"	l
f0102ad3	obj/kern/kernel.asm	/^f0102ad3:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	68 59 04 00 00       	push   $0x459$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	e8 59 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ae7	obj/kern/kernel.asm	/^f0102ae7:	8d 96 00 20 00 00    	lea    0x2000(%esi),%edx$/;"	l
f0102aed	obj/kern/kernel.asm	/^f0102aed:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102af3	obj/kern/kernel.asm	/^f0102af3:	77 08                	ja     f0102afd <mem_init+0x10ea>$/;"	l
f0102af5	obj/kern/kernel.asm	/^f0102af5:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	77 19                	ja     f0102b16 <mem_init+0x1103>$/;"	l
f0102afd	obj/kern/kernel.asm	/^f0102afd:	68 90 7a 10 f0       	push   $0xf0107a90$/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102b07	obj/kern/kernel.asm	/^f0102b07:	68 5a 04 00 00       	push   $0x45a$/;"	l
f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	e8 2a d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	89 da                	mov    %ebx,%edx$/;"	l
f0102b18	obj/kern/kernel.asm	/^f0102b18:	09 f2                	or     %esi,%edx$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	74 19                	je     f0102b3b <mem_init+0x1128>$/;"	l
f0102b22	obj/kern/kernel.asm	/^f0102b22:	68 b8 7a 10 f0       	push   $0xf0107ab8$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102b2c	obj/kern/kernel.asm	/^f0102b2c:	68 5c 04 00 00       	push   $0x45c$/;"	l
f0102b31	obj/kern/kernel.asm	/^f0102b31:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102b36	obj/kern/kernel.asm	/^f0102b36:	e8 05 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b3b	obj/kern/kernel.asm	/^f0102b3b:	39 c6                	cmp    %eax,%esi$/;"	l
f0102b3d	obj/kern/kernel.asm	/^f0102b3d:	73 19                	jae    f0102b58 <mem_init+0x1145>$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	68 96 80 10 f0       	push   $0xf0108096$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	68 5e 04 00 00       	push   $0x45e$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102b53	obj/kern/kernel.asm	/^f0102b53:	e8 e8 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	8b 3d 90 1e 25 f0    	mov    0xf0251e90,%edi$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	89 da                	mov    %ebx,%edx$/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	89 f8                	mov    %edi,%eax$/;"	l
f0102b62	obj/kern/kernel.asm	/^f0102b62:	e8 dd e5 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	85 c0                	test   %eax,%eax$/;"	l
f0102b69	obj/kern/kernel.asm	/^f0102b69:	74 19                	je     f0102b84 <mem_init+0x1171>$/;"	l
f0102b6b	obj/kern/kernel.asm	/^f0102b6b:	68 e0 7a 10 f0       	push   $0xf0107ae0$/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102b75	obj/kern/kernel.asm	/^f0102b75:	68 60 04 00 00       	push   $0x460$/;"	l
f0102b7a	obj/kern/kernel.asm	/^f0102b7a:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	e8 bc d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b84	obj/kern/kernel.asm	/^f0102b84:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102b8a	obj/kern/kernel.asm	/^f0102b8a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	89 c2                	mov    %eax,%edx$/;"	l
f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	89 f8                	mov    %edi,%eax$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	e8 ae e5 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	74 19                	je     f0102bb6 <mem_init+0x11a3>$/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	68 04 7b 10 f0       	push   $0xf0107b04$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102ba7	obj/kern/kernel.asm	/^f0102ba7:	68 61 04 00 00       	push   $0x461$/;"	l
f0102bac	obj/kern/kernel.asm	/^f0102bac:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	e8 8a d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bb6	obj/kern/kernel.asm	/^f0102bb6:	89 f2                	mov    %esi,%edx$/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	89 f8                	mov    %edi,%eax$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	e8 85 e5 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	85 c0                	test   %eax,%eax$/;"	l
f0102bc1	obj/kern/kernel.asm	/^f0102bc1:	74 19                	je     f0102bdc <mem_init+0x11c9>$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	68 34 7b 10 f0       	push   $0xf0107b34$/;"	l
f0102bc8	obj/kern/kernel.asm	/^f0102bc8:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102bcd	obj/kern/kernel.asm	/^f0102bcd:	68 62 04 00 00       	push   $0x462$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	e8 64 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102be2	obj/kern/kernel.asm	/^f0102be2:	89 f8                	mov    %edi,%eax$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	e8 5b e5 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	74 19                	je     f0102c07 <mem_init+0x11f4>$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	68 58 7b 10 f0       	push   $0xf0107b58$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	68 63 04 00 00       	push   $0x463$/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102c02	obj/kern/kernel.asm	/^f0102c02:	e8 39 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c0a	obj/kern/kernel.asm	/^f0102c0a:	6a 00                	push   $0x0$/;"	l
f0102c0c	obj/kern/kernel.asm	/^f0102c0c:	53                   	push   %ebx$/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	57                   	push   %edi$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	e8 6f ea ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102c19	obj/kern/kernel.asm	/^f0102c19:	75 19                	jne    f0102c34 <mem_init+0x1221>$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	68 84 7b 10 f0       	push   $0xf0107b84$/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	68 65 04 00 00       	push   $0x465$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102c2f	obj/kern/kernel.asm	/^f0102c2f:	e8 0c d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c34	obj/kern/kernel.asm	/^f0102c34:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	6a 00                	push   $0x0$/;"	l
f0102c39	obj/kern/kernel.asm	/^f0102c39:	53                   	push   %ebx$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102c40	obj/kern/kernel.asm	/^f0102c40:	e8 3d ea ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f0102c45	obj/kern/kernel.asm	/^f0102c45:	8b 00                	mov    (%eax),%eax$/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c4a	obj/kern/kernel.asm	/^f0102c4a:	83 e0 04             	and    $0x4,%eax$/;"	l
f0102c4d	obj/kern/kernel.asm	/^f0102c4d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	74 19                	je     f0102c6b <mem_init+0x1258>$/;"	l
f0102c52	obj/kern/kernel.asm	/^f0102c52:	68 c8 7b 10 f0       	push   $0xf0107bc8$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	68 66 04 00 00       	push   $0x466$/;"	l
f0102c61	obj/kern/kernel.asm	/^f0102c61:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102c66	obj/kern/kernel.asm	/^f0102c66:	e8 d5 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c6e	obj/kern/kernel.asm	/^f0102c6e:	6a 00                	push   $0x0$/;"	l
f0102c70	obj/kern/kernel.asm	/^f0102c70:	53                   	push   %ebx$/;"	l
f0102c71	obj/kern/kernel.asm	/^f0102c71:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	e8 06 ea ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	6a 00                	push   $0x0$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102c8a	obj/kern/kernel.asm	/^f0102c8a:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	e8 ed e9 ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f0102c95	obj/kern/kernel.asm	/^f0102c95:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102c9b	obj/kern/kernel.asm	/^f0102c9b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102c9e	obj/kern/kernel.asm	/^f0102c9e:	6a 00                	push   $0x0$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	56                   	push   %esi$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0102ca7	obj/kern/kernel.asm	/^f0102ca7:	e8 d6 e9 ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102cb2	obj/kern/kernel.asm	/^f0102cb2:	c7 04 24 a8 80 10 f0 	movl   $0xf01080a8,(%esp)$/;"	l
f0102cb9	obj/kern/kernel.asm	/^f0102cb9:	e8 ba 11 00 00       	call   f0103e78 <cprintf>$/;"	l
f0102cbe	obj/kern/kernel.asm	/^f0102cbe:	a1 94 1e 25 f0       	mov    0xf0251e94,%eax$/;"	l
f0102cc3	obj/kern/kernel.asm	/^f0102cc3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cc6	obj/kern/kernel.asm	/^f0102cc6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	77 15                	ja     f0102ce2 <mem_init+0x12cf>$/;"	l
f0102ccd	obj/kern/kernel.asm	/^f0102ccd:	50                   	push   %eax$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	68 db 00 00 00       	push   $0xdb$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	e8 5e d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ce2	obj/kern/kernel.asm	/^f0102ce2:	8b 15 8c 1e 25 f0    	mov    0xf0251e8c,%edx$/;"	l
f0102ce8	obj/kern/kernel.asm	/^f0102ce8:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	6a 05                	push   $0x5$/;"	l
f0102cfa	obj/kern/kernel.asm	/^f0102cfa:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102cff	obj/kern/kernel.asm	/^f0102cff:	50                   	push   %eax$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102d05	obj/kern/kernel.asm	/^f0102d05:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0102d0a	obj/kern/kernel.asm	/^f0102d0a:	e8 51 ea ff ff       	call   f0101760 <boot_map_region>$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	a1 48 12 25 f0       	mov    0xf0251248,%eax$/;"	l
f0102d14	obj/kern/kernel.asm	/^f0102d14:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	77 15                	ja     f0102d33 <mem_init+0x1320>$/;"	l
f0102d1e	obj/kern/kernel.asm	/^f0102d1e:	50                   	push   %eax$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	68 e6 00 00 00       	push   $0xe6$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	e8 0d d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d33	obj/kern/kernel.asm	/^f0102d33:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102d36	obj/kern/kernel.asm	/^f0102d36:	6a 05                	push   $0x5$/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d3d	obj/kern/kernel.asm	/^f0102d3d:	50                   	push   %eax$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	b9 00 40 0a 00       	mov    $0xa4000,%ecx$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	e8 0e ea ff ff       	call   f0101760 <boot_map_region>$/;"	l
f0102d52	obj/kern/kernel.asm	/^f0102d52:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	b8 00 80 11 f0       	mov    $0xf0118000,%eax$/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	77 15                	ja     f0102d76 <mem_init+0x1363>$/;"	l
f0102d61	obj/kern/kernel.asm	/^f0102d61:	50                   	push   %eax$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	68 f4 00 00 00       	push   $0xf4$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	e8 ca d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d76	obj/kern/kernel.asm	/^f0102d76:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102d79	obj/kern/kernel.asm	/^f0102d79:	6a 03                	push   $0x3$/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	68 00 80 11 00       	push   $0x118000$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	e8 cc e9 ff ff       	call   f0101760 <boot_map_region>$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	6a 03                	push   $0x3$/;"	l
f0102d99	obj/kern/kernel.asm	/^f0102d99:	6a 00                	push   $0x0$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102da0	obj/kern/kernel.asm	/^f0102da0:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0102daa	obj/kern/kernel.asm	/^f0102daa:	e8 b1 e9 ff ff       	call   f0101760 <boot_map_region>$/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	c7 45 c4 00 30 25 f0 	movl   $0xf0253000,-0x3c(%ebp)$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102db9	obj/kern/kernel.asm	/^f0102db9:	bb 00 30 25 f0       	mov    $0xf0253000,%ebx$/;"	l
f0102dbe	obj/kern/kernel.asm	/^f0102dbe:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	77 15                	ja     f0102de0 <mem_init+0x13cd>$/;"	l
f0102dcb	obj/kern/kernel.asm	/^f0102dcb:	53                   	push   %ebx$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	68 37 01 00 00       	push   $0x137$/;"	l
f0102dd6	obj/kern/kernel.asm	/^f0102dd6:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102ddb	obj/kern/kernel.asm	/^f0102ddb:	e8 60 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	6a 03                	push   $0x3$/;"	l
f0102de5	obj/kern/kernel.asm	/^f0102de5:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	50                   	push   %eax$/;"	l
f0102dec	obj/kern/kernel.asm	/^f0102dec:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102df1	obj/kern/kernel.asm	/^f0102df1:	89 f2                	mov    %esi,%edx$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	e8 63 e9 ff ff       	call   f0101760 <boot_map_region>$/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102e09	obj/kern/kernel.asm	/^f0102e09:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	b8 00 30 29 f0       	mov    $0xf0293000,%eax$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	75 ae                	jne    f0102dc3 <mem_init+0x13b0>$/;"	l
f0102e15	obj/kern/kernel.asm	/^f0102e15:	8b 3d 90 1e 25 f0    	mov    0xf0251e90,%edi$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	a1 8c 1e 25 f0       	mov    0xf0251e8c,%eax$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	8b 35 94 1e 25 f0    	mov    0xf0251e94,%esi$/;"	l
f0102e38	obj/kern/kernel.asm	/^f0102e38:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0102e3b	obj/kern/kernel.asm	/^f0102e3b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e40	obj/kern/kernel.asm	/^f0102e40:	eb 55                	jmp    f0102e97 <mem_init+0x1484>$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	89 f8                	mov    %edi,%eax$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	e8 f5 e2 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f0102e56	obj/kern/kernel.asm	/^f0102e56:	77 15                	ja     f0102e6d <mem_init+0x145a>$/;"	l
f0102e58	obj/kern/kernel.asm	/^f0102e58:	56                   	push   %esi$/;"	l
f0102e59	obj/kern/kernel.asm	/^f0102e59:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	68 7a 03 00 00       	push   $0x37a$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102e68	obj/kern/kernel.asm	/^f0102e68:	e8 d3 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e6d	obj/kern/kernel.asm	/^f0102e6d:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f0102e74	obj/kern/kernel.asm	/^f0102e74:	39 c2                	cmp    %eax,%edx$/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	74 19                	je     f0102e91 <mem_init+0x147e>$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	68 fc 7b 10 f0       	push   $0xf0107bfc$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	68 7a 03 00 00       	push   $0x37a$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	e8 af d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e91	obj/kern/kernel.asm	/^f0102e91:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102e97	obj/kern/kernel.asm	/^f0102e97:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	77 a6                	ja     f0102e42 <mem_init+0x142f>$/;"	l
f0102e9c	obj/kern/kernel.asm	/^f0102e9c:	8b 35 48 12 25 f0    	mov    0xf0251248,%esi$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	89 da                	mov    %ebx,%edx$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	89 f8                	mov    %edi,%eax$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	e8 91 e2 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	77 15                	ja     f0102ed1 <mem_init+0x14be>$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	56                   	push   %esi$/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	68 7f 03 00 00       	push   $0x37f$/;"	l
f0102ec7	obj/kern/kernel.asm	/^f0102ec7:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102ecc	obj/kern/kernel.asm	/^f0102ecc:	e8 6f d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	39 d0                	cmp    %edx,%eax$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	74 19                	je     f0102ef5 <mem_init+0x14e2>$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	68 30 7c 10 f0       	push   $0xf0107c30$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	68 7f 03 00 00       	push   $0x37f$/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	e8 4b d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ef5	obj/kern/kernel.asm	/^f0102ef5:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	81 fb 00 40 ca ee    	cmp    $0xeeca4000,%ebx$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	75 a7                	jne    f0102eaa <mem_init+0x1497>$/;"	l
f0102f03	obj/kern/kernel.asm	/^f0102f03:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102f09	obj/kern/kernel.asm	/^f0102f09:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	eb 30                	jmp    f0102f40 <mem_init+0x152d>$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	89 f8                	mov    %edi,%eax$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	e8 27 e2 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f0102f1d	obj/kern/kernel.asm	/^f0102f1d:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	74 19                	je     f0102f3a <mem_init+0x1527>$/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	68 64 7c 10 f0       	push   $0xf0107c64$/;"	l
f0102f26	obj/kern/kernel.asm	/^f0102f26:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	68 83 03 00 00       	push   $0x383$/;"	l
f0102f30	obj/kern/kernel.asm	/^f0102f30:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	e8 06 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f3a	obj/kern/kernel.asm	/^f0102f3a:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f40	obj/kern/kernel.asm	/^f0102f40:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102f42	obj/kern/kernel.asm	/^f0102f42:	72 cc                	jb     f0102f10 <mem_init+0x14fd>$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0102f4c	obj/kern/kernel.asm	/^f0102f4c:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102f52	obj/kern/kernel.asm	/^f0102f52:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	89 c3                	mov    %eax,%ebx$/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	89 da                	mov    %ebx,%edx$/;"	l
f0102f6a	obj/kern/kernel.asm	/^f0102f6a:	89 f8                	mov    %edi,%eax$/;"	l
f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	e8 d3 e1 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	77 15                	ja     f0102f8e <mem_init+0x157b>$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	56                   	push   %esi$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	68 8b 03 00 00       	push   $0x38b$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102f89	obj/kern/kernel.asm	/^f0102f89:	e8 b2 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f8e	obj/kern/kernel.asm	/^f0102f8e:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	8d 94 0b 00 30 25 f0 	lea    -0xfdad000(%ebx,%ecx,1),%edx$/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f9a	obj/kern/kernel.asm	/^f0102f9a:	74 19                	je     f0102fb5 <mem_init+0x15a2>$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	68 8c 7c 10 f0       	push   $0xf0107c8c$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	68 8b 03 00 00       	push   $0x38b$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	e8 8b d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	75 a8                	jne    f0102f68 <mem_init+0x1555>$/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102fc3	obj/kern/kernel.asm	/^f0102fc3:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	89 c6                	mov    %eax,%esi$/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	89 da                	mov    %ebx,%edx$/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	89 f8                	mov    %edi,%eax$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	e8 6d e1 ff ff       	call   f0101144 <check_va2pa>$/;"	l
f0102fd7	obj/kern/kernel.asm	/^f0102fd7:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102fda	obj/kern/kernel.asm	/^f0102fda:	74 19                	je     f0102ff5 <mem_init+0x15e2>$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	68 d4 7c 10 f0       	push   $0xf0107cd4$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	68 8d 03 00 00       	push   $0x38d$/;"	l
f0102feb	obj/kern/kernel.asm	/^f0102feb:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	e8 4b d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ffb	obj/kern/kernel.asm	/^f0102ffb:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	75 cf                	jne    f0102fce <mem_init+0x15bb>$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f0103010	obj/kern/kernel.asm	/^f0103010:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	b8 00 30 29 f0       	mov    $0xf0293000,%eax$/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	39 f0                	cmp    %esi,%eax$/;"	l
f010301d	obj/kern/kernel.asm	/^f010301d:	0f 85 2c ff ff ff    	jne    f0102f4f <mem_init+0x153c>$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	eb 2a                	jmp    f0103054 <mem_init+0x1641>$/;"	l
f010302a	obj/kern/kernel.asm	/^f010302a:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0103030	obj/kern/kernel.asm	/^f0103030:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	77 1f                	ja     f0103054 <mem_init+0x1641>$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	75 7e                	jne    f01030b9 <mem_init+0x16a6>$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	68 c1 80 10 f0       	push   $0xf01080c1$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	68 98 03 00 00       	push   $0x398$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	e8 ec cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	76 3f                	jbe    f010309a <mem_init+0x1687>$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	75 19                	jne    f010307c <mem_init+0x1669>$/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	68 c1 80 10 f0       	push   $0xf01080c1$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	68 9c 03 00 00       	push   $0x39c$/;"	l
f0103072	obj/kern/kernel.asm	/^f0103072:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	e8 c4 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010307c	obj/kern/kernel.asm	/^f010307c:	f6 c2 02             	test   $0x2,%dl$/;"	l
f010307f	obj/kern/kernel.asm	/^f010307f:	75 38                	jne    f01030b9 <mem_init+0x16a6>$/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	68 d2 80 10 f0       	push   $0xf01080d2$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	68 9d 03 00 00       	push   $0x39d$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	e8 a6 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	74 19                	je     f01030b9 <mem_init+0x16a6>$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	68 e3 80 10 f0       	push   $0xf01080e3$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01030aa	obj/kern/kernel.asm	/^f01030aa:	68 9f 03 00 00       	push   $0x39f$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	e8 87 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	83 c0 01             	add    $0x1,%eax$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	0f 86 63 ff ff ff    	jbe    f010302a <mem_init+0x1617>$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01030ca	obj/kern/kernel.asm	/^f01030ca:	68 f8 7c 10 f0       	push   $0xf0107cf8$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	e8 a4 0d 00 00       	call   f0103e78 <cprintf>$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030dc	obj/kern/kernel.asm	/^f01030dc:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	77 15                	ja     f01030f8 <mem_init+0x16e5>$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	50                   	push   %eax$/;"	l
f01030e4	obj/kern/kernel.asm	/^f01030e4:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	68 0f 01 00 00       	push   $0x10f$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	e8 48 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	e8 b0 e0 ff ff       	call   f01011ba <check_page_free_list>$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010311b	obj/kern/kernel.asm	/^f010311b:	6a 00                	push   $0x0$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	e8 71 e4 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	89 c3                	mov    %eax,%ebx$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103127	obj/kern/kernel.asm	/^f0103127:	85 c0                	test   %eax,%eax$/;"	l
f0103129	obj/kern/kernel.asm	/^f0103129:	75 19                	jne    f0103144 <mem_init+0x1731>$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	68 cd 7e 10 f0       	push   $0xf0107ecd$/;"	l
f0103130	obj/kern/kernel.asm	/^f0103130:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0103135	obj/kern/kernel.asm	/^f0103135:	68 7b 04 00 00       	push   $0x47b$/;"	l
f010313a	obj/kern/kernel.asm	/^f010313a:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	e8 fc ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103147	obj/kern/kernel.asm	/^f0103147:	6a 00                	push   $0x0$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	e8 45 e4 ff ff       	call   f0101593 <page_alloc>$/;"	l
f010314e	obj/kern/kernel.asm	/^f010314e:	89 c7                	mov    %eax,%edi$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103153	obj/kern/kernel.asm	/^f0103153:	85 c0                	test   %eax,%eax$/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	75 19                	jne    f0103170 <mem_init+0x175d>$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	68 e3 7e 10 f0       	push   $0xf0107ee3$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	68 7c 04 00 00       	push   $0x47c$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	e8 d0 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	6a 00                	push   $0x0$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	e8 19 e4 ff ff       	call   f0101593 <page_alloc>$/;"	l
f010317a	obj/kern/kernel.asm	/^f010317a:	89 c6                	mov    %eax,%esi$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010317f	obj/kern/kernel.asm	/^f010317f:	85 c0                	test   %eax,%eax$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	75 19                	jne    f010319c <mem_init+0x1789>$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	68 f9 7e 10 f0       	push   $0xf0107ef9$/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010318d	obj/kern/kernel.asm	/^f010318d:	68 7d 04 00 00       	push   $0x47d$/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	e8 a4 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	53                   	push   %ebx$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	e8 5e e4 ff ff       	call   f0101603 <page_free>$/;"	l
f01031a5	obj/kern/kernel.asm	/^f01031a5:	89 f8                	mov    %edi,%eax$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01031b3	obj/kern/kernel.asm	/^f01031b3:	89 c2                	mov    %eax,%edx$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031bb	obj/kern/kernel.asm	/^f01031bb:	3b 15 8c 1e 25 f0    	cmp    0xf0251e8c,%edx$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	72 12                	jb     f01031d5 <mem_init+0x17c2>$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	50                   	push   %eax$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	6a 5a                	push   $0x5a$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	e8 6b ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	68 00 10 00 00       	push   $0x1000$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd:	6a 01                	push   $0x1$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	50                   	push   %eax$/;"	l
f01031e5	obj/kern/kernel.asm	/^f01031e5:	e8 64 2c 00 00       	call   f0105e4e <memset>$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	89 f0                	mov    %esi,%eax$/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	89 c2                	mov    %eax,%edx$/;"	l
f01031fa	obj/kern/kernel.asm	/^f01031fa:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	3b 15 8c 1e 25 f0    	cmp    0xf0251e8c,%edx$/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	72 12                	jb     f010321a <mem_init+0x1807>$/;"	l
f0103208	obj/kern/kernel.asm	/^f0103208:	50                   	push   %eax$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	6a 5a                	push   $0x5a$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0103215	obj/kern/kernel.asm	/^f0103215:	e8 26 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010321a	obj/kern/kernel.asm	/^f010321a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	6a 02                	push   $0x2$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	50                   	push   %eax$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	e8 1f 2c 00 00       	call   f0105e4e <memset>$/;"	l
f010322f	obj/kern/kernel.asm	/^f010322f:	6a 02                	push   $0x2$/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	57                   	push   %edi$/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	e8 10 e7 ff ff       	call   f0101952 <page_insert>$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	83 c4 20             	add    $0x20,%esp$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	74 19                	je     f0103265 <mem_init+0x1852>$/;"	l
f010324c	obj/kern/kernel.asm	/^f010324c:	68 ca 7f 10 f0       	push   $0xf0107fca$/;"	l
f0103251	obj/kern/kernel.asm	/^f0103251:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	68 82 04 00 00       	push   $0x482$/;"	l
f010325b	obj/kern/kernel.asm	/^f010325b:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	e8 db cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	01 01 01 $/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	74 19                	je     f010328a <mem_init+0x1877>$/;"	l
f0103271	obj/kern/kernel.asm	/^f0103271:	68 18 7d 10 f0       	push   $0xf0107d18$/;"	l
f0103276	obj/kern/kernel.asm	/^f0103276:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010327b	obj/kern/kernel.asm	/^f010327b:	68 83 04 00 00       	push   $0x483$/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0103285	obj/kern/kernel.asm	/^f0103285:	e8 b6 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	6a 02                	push   $0x2$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	56                   	push   %esi$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	e8 b5 e6 ff ff       	call   f0101952 <page_insert>$/;"	l
f010329d	obj/kern/kernel.asm	/^f010329d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	02 02 02 $/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	74 19                	je     f01032c5 <mem_init+0x18b2>$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	68 3c 7d 10 f0       	push   $0xf0107d3c$/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	68 85 04 00 00       	push   $0x485$/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01032c0	obj/kern/kernel.asm	/^f01032c0:	e8 7b cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	74 19                	je     f01032e5 <mem_init+0x18d2>$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	68 ec 7f 10 f0       	push   $0xf0107fec$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01032d6	obj/kern/kernel.asm	/^f01032d6:	68 86 04 00 00       	push   $0x486$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	e8 5b cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	74 19                	je     f0103305 <mem_init+0x18f2>$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	68 56 80 10 f0       	push   $0xf0108056$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	68 87 04 00 00       	push   $0x487$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	e8 3b cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f010330c	obj/kern/kernel.asm	/^f010330c:	03 03 03 $/;"	l
f010330f	obj/kern/kernel.asm	/^f010330f:	89 f0                	mov    %esi,%eax$/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f0103317	obj/kern/kernel.asm	/^f0103317:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	89 c2                	mov    %eax,%edx$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103322	obj/kern/kernel.asm	/^f0103322:	3b 15 8c 1e 25 f0    	cmp    0xf0251e8c,%edx$/;"	l
f0103328	obj/kern/kernel.asm	/^f0103328:	72 12                	jb     f010333c <mem_init+0x1929>$/;"	l
f010332a	obj/kern/kernel.asm	/^f010332a:	50                   	push   %eax$/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0103330	obj/kern/kernel.asm	/^f0103330:	6a 5a                	push   $0x5a$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	e8 04 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010333c	obj/kern/kernel.asm	/^f010333c:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103343	obj/kern/kernel.asm	/^f0103343:	03 03 03 $/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	74 19                	je     f0103361 <mem_init+0x194e>$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	68 60 7d 10 f0       	push   $0xf0107d60$/;"	l
f010334d	obj/kern/kernel.asm	/^f010334d:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	68 89 04 00 00       	push   $0x489$/;"	l
f0103357	obj/kern/kernel.asm	/^f0103357:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	e8 df cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	ff 35 90 1e 25 f0    	pushl  0xf0251e90$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	e8 98 e5 ff ff       	call   f010190c <page_remove>$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010337c	obj/kern/kernel.asm	/^f010337c:	74 19                	je     f0103397 <mem_init+0x1984>$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	68 24 80 10 f0       	push   $0xf0108024$/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0103388	obj/kern/kernel.asm	/^f0103388:	68 8b 04 00 00       	push   $0x48b$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	e8 a9 cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103397	obj/kern/kernel.asm	/^f0103397:	8b 0d 90 1e 25 f0    	mov    0xf0251e90,%ecx$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	8b 11                	mov    (%ecx),%edx$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	89 d8                	mov    %ebx,%eax$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	2b 05 94 1e 25 f0    	sub    0xf0251e94,%eax$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01033b0	obj/kern/kernel.asm	/^f01033b0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01033b3	obj/kern/kernel.asm	/^f01033b3:	39 c2                	cmp    %eax,%edx$/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	74 19                	je     f01033d0 <mem_init+0x19bd>$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	68 e8 76 10 f0       	push   $0xf01076e8$/;"	l
f01033bc	obj/kern/kernel.asm	/^f01033bc:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	68 8e 04 00 00       	push   $0x48e$/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01033cb	obj/kern/kernel.asm	/^f01033cb:	e8 70 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033d0	obj/kern/kernel.asm	/^f01033d0:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01033db	obj/kern/kernel.asm	/^f01033db:	74 19                	je     f01033f6 <mem_init+0x19e3>$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	68 db 7f 10 f0       	push   $0xf0107fdb$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	68 90 04 00 00       	push   $0x490$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	68 ed 7d 10 f0       	push   $0xf0107ded$/;"	l
f01033f1	obj/kern/kernel.asm	/^f01033f1:	e8 4a cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	53                   	push   %ebx$/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	e8 fe e1 ff ff       	call   f0101603 <page_free>$/;"	l
f0103405	obj/kern/kernel.asm	/^f0103405:	c7 04 24 8c 7d 10 f0 	movl   $0xf0107d8c,(%esp)$/;"	l
f010340c	obj/kern/kernel.asm	/^f010340c:	e8 67 0a 00 00       	call   f0103e78 <cprintf>$/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	5b                   	pop    %ebx$/;"	l
f0103418	obj/kern/kernel.asm	/^f0103418:	5e                   	pop    %esi$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	5f                   	pop    %edi$/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	5d                   	pop    %ebp$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	c3                   	ret    $/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c <user_mem_check>:$/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c:	55                   	push   %ebp$/;"	l
f010341d	obj/kern/kernel.asm	/^f010341d:	89 e5                	mov    %esp,%ebp$/;"	l
f010341f	obj/kern/kernel.asm	/^f010341f:	57                   	push   %edi$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	56                   	push   %esi$/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	53                   	push   %ebx$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103425	obj/kern/kernel.asm	/^f0103425:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f010342b	obj/kern/kernel.asm	/^f010342b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010343d	obj/kern/kernel.asm	/^f010343d:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	76 6b                	jbe    f01034b2 <user_mem_check+0x96>$/;"	l
f0103447	obj/kern/kernel.asm	/^f0103447:	89 1d 3c 12 25 f0    	mov    %ebx,0xf025123c$/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103452	obj/kern/kernel.asm	/^f0103452:	eb 68                	jmp    f01034bc <user_mem_check+0xa0>$/;"	l
f0103454	obj/kern/kernel.asm	/^f0103454:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	76 1c                	jbe    f0103478 <user_mem_check+0x5c>$/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	81 7d 0c 00 00 80 ef 	cmpl   $0xef800000,0xc(%ebp)$/;"	l
f0103463	obj/kern/kernel.asm	/^f0103463:	b8 00 00 80 ef       	mov    $0xef800000,%eax$/;"	l
f0103468	obj/kern/kernel.asm	/^f0103468:	0f 43 45 0c          	cmovae 0xc(%ebp),%eax$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	a3 3c 12 25 f0       	mov    %eax,0xf025123c$/;"	l
f0103471	obj/kern/kernel.asm	/^f0103471:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	eb 44                	jmp    f01034bc <user_mem_check+0xa0>$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	6a 00                	push   $0x0$/;"	l
f010347d	obj/kern/kernel.asm	/^f010347d:	53                   	push   %ebx$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	e8 fc e1 ff ff       	call   f0101682 <pgdir_walk>$/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	85 c0                	test   %eax,%eax$/;"	l
f010348b	obj/kern/kernel.asm	/^f010348b:	74 0c                	je     f0103499 <user_mem_check+0x7d>$/;"	l
f010348d	obj/kern/kernel.asm	/^f010348d:	8b 00                	mov    (%eax),%eax$/;"	l
f010348f	obj/kern/kernel.asm	/^f010348f:	a8 01                	test   $0x1,%al$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	74 06                	je     f0103499 <user_mem_check+0x7d>$/;"	l
f0103493	obj/kern/kernel.asm	/^f0103493:	21 f0                	and    %esi,%eax$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	39 c6                	cmp    %eax,%esi$/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	74 0d                	je     f01034a6 <user_mem_check+0x8a>$/;"	l
f0103499	obj/kern/kernel.asm	/^f0103499:	89 1d 3c 12 25 f0    	mov    %ebx,0xf025123c$/;"	l
f010349f	obj/kern/kernel.asm	/^f010349f:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01034a4	obj/kern/kernel.asm	/^f01034a4:	eb 16                	jmp    f01034bc <user_mem_check+0xa0>$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	72 9d                	jb     f0103454 <user_mem_check+0x38>$/;"	l
f01034b7	obj/kern/kernel.asm	/^f01034b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01034bc	obj/kern/kernel.asm	/^f01034bc:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	5b                   	pop    %ebx$/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	5e                   	pop    %esi$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	5f                   	pop    %edi$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	5d                   	pop    %ebp$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	c3                   	ret    $/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4 <user_mem_assert>:$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	55                   	push   %ebp$/;"	l
f01034c5	obj/kern/kernel.asm	/^f01034c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	53                   	push   %ebx$/;"	l
f01034c8	obj/kern/kernel.asm	/^f01034c8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01034d1	obj/kern/kernel.asm	/^f01034d1:	83 c8 04             	or     $0x4,%eax$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	50                   	push   %eax$/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	53                   	push   %ebx$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	e8 3b ff ff ff       	call   f010341c <user_mem_check>$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034e4	obj/kern/kernel.asm	/^f01034e4:	85 c0                	test   %eax,%eax$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	79 21                	jns    f0103509 <user_mem_assert+0x45>$/;"	l
f01034e8	obj/kern/kernel.asm	/^f01034e8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01034eb	obj/kern/kernel.asm	/^f01034eb:	ff 35 3c 12 25 f0    	pushl  0xf025123c$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	68 b8 7d 10 f0       	push   $0xf0107db8$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	e8 7a 09 00 00       	call   f0103e78 <cprintf>$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	e8 70 06 00 00       	call   f0103b76 <env_destroy>$/;"	l
f0103506	obj/kern/kernel.asm	/^f0103506:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010350c	obj/kern/kernel.asm	/^f010350c:	c9                   	leave  $/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	c3                   	ret    $/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e <region_alloc>:$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	55                   	push   %ebp$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	57                   	push   %edi$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	56                   	push   %esi$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	53                   	push   %ebx$/;"	l
f0103514	obj/kern/kernel.asm	/^f0103514:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	89 c7                	mov    %eax,%edi$/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	89 d3                	mov    %edx,%ebx$/;"	l
f010351b	obj/kern/kernel.asm	/^f010351b:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f010352e	obj/kern/kernel.asm	/^f010352e:	eb 56                	jmp    f0103586 <region_alloc+0x78>$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103533	obj/kern/kernel.asm	/^f0103533:	6a 00                	push   $0x0$/;"	l
f0103535	obj/kern/kernel.asm	/^f0103535:	e8 59 e0 ff ff       	call   f0101593 <page_alloc>$/;"	l
f010353a	obj/kern/kernel.asm	/^f010353a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	85 c0                	test   %eax,%eax$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	75 17                	jne    f0103558 <region_alloc+0x4a>$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	68 f1 80 10 f0       	push   $0xf01080f1$/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549:	68 35 01 00 00       	push   $0x135$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	e8 e8 ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	6a 06                	push   $0x6$/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	53                   	push   %ebx$/;"	l
f010355b	obj/kern/kernel.asm	/^f010355b:	50                   	push   %eax$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	e8 ee e3 ff ff       	call   f0101952 <page_insert>$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103567	obj/kern/kernel.asm	/^f0103567:	85 c0                	test   %eax,%eax$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	74 15                	je     f0103580 <region_alloc+0x72>$/;"	l
f010356b	obj/kern/kernel.asm	/^f010356b:	50                   	push   %eax$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	68 18 81 10 f0       	push   $0xf0108118$/;"	l
f0103571	obj/kern/kernel.asm	/^f0103571:	68 38 01 00 00       	push   $0x138$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f010357b	obj/kern/kernel.asm	/^f010357b:	e8 c0 ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	75 a6                	jne    f0103530 <region_alloc+0x22>$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	5b                   	pop    %ebx$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	5e                   	pop    %esi$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	5f                   	pop    %edi$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	5d                   	pop    %ebp$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	c3                   	ret    $/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592 <envid2env>:$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	55                   	push   %ebp$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	89 e5                	mov    %esp,%ebp$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	56                   	push   %esi$/;"	l
f0103596	obj/kern/kernel.asm	/^f0103596:	53                   	push   %ebx$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	85 c0                	test   %eax,%eax$/;"	l
f010359f	obj/kern/kernel.asm	/^f010359f:	75 1a                	jne    f01035bb <envid2env+0x29>$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	e8 c8 2e 00 00       	call   f010646e <cpunum>$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	89 01                	mov    %eax,(%ecx)$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035b9	obj/kern/kernel.asm	/^f01035b9:	eb 73                	jmp    f010362e <envid2env+0x9c>$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	89 c3                	mov    %eax,%ebx$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	69 db 90 02 00 00    	imul   $0x290,%ebx,%ebx$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	03 1d 48 12 25 f0    	add    0xf0251248,%ebx$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	74 05                	je     f01035da <envid2env+0x48>$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	3b 43 48             	cmp    0x48(%ebx),%eax$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	74 10                	je     f01035ea <envid2env+0x58>$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	eb 44                	jmp    f010362e <envid2env+0x9c>$/;"	l
f01035ea	obj/kern/kernel.asm	/^f01035ea:	84 d2                	test   %dl,%dl$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	74 36                	je     f0103624 <envid2env+0x92>$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	e8 7b 2e 00 00       	call   f010646e <cpunum>$/;"	l
f01035f3	obj/kern/kernel.asm	/^f01035f3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	3b 98 28 20 25 f0    	cmp    -0xfdadfd8(%eax),%ebx$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	74 26                	je     f0103624 <envid2env+0x92>$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	e8 68 2e 00 00       	call   f010646e <cpunum>$/;"	l
f0103606	obj/kern/kernel.asm	/^f0103606:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0103612	obj/kern/kernel.asm	/^f0103612:	74 10                	je     f0103624 <envid2env+0x92>$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	eb 0a                	jmp    f010362e <envid2env+0x9c>$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	5b                   	pop    %ebx$/;"	l
f010362f	obj/kern/kernel.asm	/^f010362f:	5e                   	pop    %esi$/;"	l
f0103630	obj/kern/kernel.asm	/^f0103630:	5d                   	pop    %ebp$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	c3                   	ret    $/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632 <env_init_percpu>:$/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632:	55                   	push   %ebp$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	89 e5                	mov    %esp,%ebp$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	b8 20 23 12 f0       	mov    $0xf0122320,%eax$/;"	l
f010363a	obj/kern/kernel.asm	/^f010363a:	0f 01 10             	lgdtl  (%eax)$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	8e e8                	mov    %eax,%gs$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	8e e0                	mov    %eax,%fs$/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010364b	obj/kern/kernel.asm	/^f010364b:	8e c0                	mov    %eax,%es$/;"	l
f010364d	obj/kern/kernel.asm	/^f010364d:	8e d8                	mov    %eax,%ds$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	8e d0                	mov    %eax,%ss$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	ea 58 36 10 f0 08 00 	ljmp   $0x8,$0xf0103658$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	0f 00 d0             	lldt   %ax$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	5d                   	pop    %ebp$/;"	l
f0103661	obj/kern/kernel.asm	/^f0103661:	c3                   	ret    $/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662 <env_init>:$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	55                   	push   %ebp$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	89 e5                	mov    %esp,%ebp$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	56                   	push   %esi$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	53                   	push   %ebx$/;"	l
f0103667	obj/kern/kernel.asm	/^f0103667:	8b 35 48 12 25 f0    	mov    0xf0251248,%esi$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	8b 15 4c 12 25 f0    	mov    0xf025124c,%edx$/;"	l
f0103673	obj/kern/kernel.asm	/^f0103673:	8d 86 70 3d 0a 00    	lea    0xa3d70(%esi),%eax$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	8d 9e 70 fd ff ff    	lea    -0x290(%esi),%ebx$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	89 c1                	mov    %eax,%ecx$/;"	l
f0103681	obj/kern/kernel.asm	/^f0103681:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%eax)$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%eax)$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	c7 40 60 00 00 00 00 	movl   $0x0,0x60(%eax)$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	2d 90 02 00 00       	sub    $0x290,%eax$/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	89 ca                	mov    %ecx,%edx$/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	39 d8                	cmp    %ebx,%eax$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	75 cd                	jne    f010367f <env_init+0x1d>$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	89 35 4c 12 25 f0    	mov    %esi,0xf025124c$/;"	l
f01036b8	obj/kern/kernel.asm	/^f01036b8:	e8 75 ff ff ff       	call   f0103632 <env_init_percpu>$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	5b                   	pop    %ebx$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	5e                   	pop    %esi$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	5d                   	pop    %ebp$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	c3                   	ret    $/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1 <env_alloc>:$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	55                   	push   %ebp$/;"	l
f01036c2	obj/kern/kernel.asm	/^f01036c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	53                   	push   %ebx$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01036c8	obj/kern/kernel.asm	/^f01036c8:	8b 1d 4c 12 25 f0    	mov    0xf025124c,%ebx$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	85 db                	test   %ebx,%ebx$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	0f 84 a1 01 00 00    	je     f0103877 <env_alloc+0x1b6>$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	6a 01                	push   $0x1$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	e8 b3 de ff ff       	call   f0101593 <page_alloc>$/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	85 c0                	test   %eax,%eax$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	0f 84 93 01 00 00    	je     f010387e <env_alloc+0x1bd>$/;"	l
f01036eb	obj/kern/kernel.asm	/^f01036eb:	89 c2                	mov    %eax,%edx$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	2b 15 94 1e 25 f0    	sub    0xf0251e94,%edx$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	89 d1                	mov    %edx,%ecx$/;"	l
f01036fb	obj/kern/kernel.asm	/^f01036fb:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01036fe	obj/kern/kernel.asm	/^f01036fe:	3b 0d 8c 1e 25 f0    	cmp    0xf0251e8c,%ecx$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	72 12                	jb     f0103718 <env_alloc+0x57>$/;"	l
f0103706	obj/kern/kernel.asm	/^f0103706:	52                   	push   %edx$/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f010370c	obj/kern/kernel.asm	/^f010370c:	6a 5a                	push   $0x5a$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	e8 28 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103729	obj/kern/kernel.asm	/^f0103729:	68 14 01 00 00       	push   $0x114$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	05 ec 0e 00 00       	add    $0xeec,%eax$/;"	l
f0103738	obj/kern/kernel.asm	/^f0103738:	50                   	push   %eax$/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f010373c	obj/kern/kernel.asm	/^f010373c:	05 ec 0e 00 00       	add    $0xeec,%eax$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	50                   	push   %eax$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	e8 bc 27 00 00       	call   f0105f03 <memcpy>$/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f010374a	obj/kern/kernel.asm	/^f010374a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	77 15                	ja     f0103769 <env_alloc+0xa8>$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	50                   	push   %eax$/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	68 ca 00 00 00       	push   $0xca$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f0103764	obj/kern/kernel.asm	/^f0103764:	e8 d7 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010376f	obj/kern/kernel.asm	/^f010376f:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010377b	obj/kern/kernel.asm	/^f010377b:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103780	obj/kern/kernel.asm	/^f0103780:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103785	obj/kern/kernel.asm	/^f0103785:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	89 da                	mov    %ebx,%edx$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	2b 15 48 12 25 f0    	sub    0xf0251248,%edx$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	c1 fa 04             	sar    $0x4,%edx$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	69 d2 19 9c 8f c1    	imul   $0xc18f9c19,%edx,%edx$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	09 d0                	or     %edx,%eax$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f01037a3	obj/kern/kernel.asm	/^f01037a3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01037a6	obj/kern/kernel.asm	/^f01037a6:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	6a 44                	push   $0x44$/;"	l
f01037c3	obj/kern/kernel.asm	/^f01037c3:	6a 00                	push   $0x0$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	53                   	push   %ebx$/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	e8 83 26 00 00       	call   f0105e4e <memset>$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f01037d1	obj/kern/kernel.asm	/^f01037d1:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f01037dd	obj/kern/kernel.asm	/^f01037dd:	c7 43 3c fc df bf ee 	movl   $0xeebfdffc,0x3c(%ebx)$/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	c6 83 70 02 00 00 00 	movb   $0x0,0x270(%ebx)$/;"	l
f01037ff	obj/kern/kernel.asm	/^f01037ff:	c6 83 71 02 00 00 00 	movb   $0x0,0x271(%ebx)$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	c7 83 88 02 00 00 00 	movl   $0x0,0x288(%ebx)$/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	00 00 00 $/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	c7 83 84 02 00 00 00 	movl   $0x0,0x284(%ebx)$/;"	l
f0103817	obj/kern/kernel.asm	/^f0103817:	00 00 00 $/;"	l
f010381a	obj/kern/kernel.asm	/^f010381a:	c7 83 8c 02 00 00 05 	movl   $0x5,0x28c(%ebx)$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	00 00 00 $/;"	l
f0103824	obj/kern/kernel.asm	/^f0103824:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	a3 4c 12 25 f0       	mov    %eax,0xf025124c$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103831	obj/kern/kernel.asm	/^f0103831:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	e8 35 2c 00 00       	call   f010646e <cpunum>$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010383f	obj/kern/kernel.asm	/^f010383f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103844	obj/kern/kernel.asm	/^f0103844:	83 b8 28 20 25 f0 00 	cmpl   $0x0,-0xfdadfd8(%eax)$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	74 11                	je     f010385e <env_alloc+0x19d>$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	e8 1c 2c 00 00       	call   f010646e <cpunum>$/;"	l
f0103852	obj/kern/kernel.asm	/^f0103852:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103855	obj/kern/kernel.asm	/^f0103855:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f010385b	obj/kern/kernel.asm	/^f010385b:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103861	obj/kern/kernel.asm	/^f0103861:	53                   	push   %ebx$/;"	l
f0103862	obj/kern/kernel.asm	/^f0103862:	52                   	push   %edx$/;"	l
f0103863	obj/kern/kernel.asm	/^f0103863:	68 29 81 10 f0       	push   $0xf0108129$/;"	l
f0103868	obj/kern/kernel.asm	/^f0103868:	e8 0b 06 00 00       	call   f0103e78 <cprintf>$/;"	l
f010386d	obj/kern/kernel.asm	/^f010386d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	eb 0c                	jmp    f0103883 <env_alloc+0x1c2>$/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f010387c	obj/kern/kernel.asm	/^f010387c:	eb 05                	jmp    f0103883 <env_alloc+0x1c2>$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	c9                   	leave  $/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	c3                   	ret    $/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888 <env_create>:$/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888:	55                   	push   %ebp$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	89 e5                	mov    %esp,%ebp$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	57                   	push   %edi$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	56                   	push   %esi$/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	53                   	push   %ebx$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103894	obj/kern/kernel.asm	/^f0103894:	6a 00                	push   $0x0$/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	50                   	push   %eax$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	e8 22 fe ff ff       	call   f01036c1 <env_alloc>$/;"	l
f010389f	obj/kern/kernel.asm	/^f010389f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	74 15                	je     f01038c5 <env_create+0x3d>$/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	57                   	push   %edi$/;"	l
f01038b1	obj/kern/kernel.asm	/^f01038b1:	68 60 81 10 f0       	push   $0xf0108160$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	68 75 01 00 00       	push   $0x175$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	e8 7b c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038c5	obj/kern/kernel.asm	/^f01038c5:	89 fb                	mov    %edi,%ebx$/;"	l
f01038c7	obj/kern/kernel.asm	/^f01038c7:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	01 de                	add    %ebx,%esi$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	77 15                	ja     f01038f5 <env_create+0x6d>$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	50                   	push   %eax$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f01038e6	obj/kern/kernel.asm	/^f01038e6:	68 7a 01 00 00       	push   $0x17a$/;"	l
f01038eb	obj/kern/kernel.asm	/^f01038eb:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	e8 4b c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01038fa	obj/kern/kernel.asm	/^f01038fa:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	eb 44                	jmp    f0103943 <env_create+0xbb>$/;"	l
f01038ff	obj/kern/kernel.asm	/^f01038ff:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	75 3c                	jne    f0103940 <env_create+0xb8>$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103907	obj/kern/kernel.asm	/^f0103907:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	e8 fc fb ff ff       	call   f010350e <region_alloc>$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103915	obj/kern/kernel.asm	/^f0103915:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	89 f8                	mov    %edi,%eax$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f010391d	obj/kern/kernel.asm	/^f010391d:	50                   	push   %eax$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103921	obj/kern/kernel.asm	/^f0103921:	e8 dd 25 00 00       	call   f0105f03 <memcpy>$/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010392c	obj/kern/kernel.asm	/^f010392c:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	29 c2                	sub    %eax,%edx$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	52                   	push   %edx$/;"	l
f0103932	obj/kern/kernel.asm	/^f0103932:	6a 00                	push   $0x0$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	50                   	push   %eax$/;"	l
f0103938	obj/kern/kernel.asm	/^f0103938:	e8 11 25 00 00       	call   f0105e4e <memset>$/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	39 de                	cmp    %ebx,%esi$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	77 b8                	ja     f01038ff <env_create+0x77>$/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	77 15                	ja     f0103968 <env_create+0xe0>$/;"	l
f0103953	obj/kern/kernel.asm	/^f0103953:	50                   	push   %eax$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0103959	obj/kern/kernel.asm	/^f0103959:	68 83 01 00 00       	push   $0x183$/;"	l
f010395e	obj/kern/kernel.asm	/^f010395e:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	e8 d8 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103976	obj/kern/kernel.asm	/^f0103976:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103979	obj/kern/kernel.asm	/^f0103979:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	89 f8                	mov    %edi,%eax$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	e8 84 fb ff ff       	call   f010350e <region_alloc>$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103996	obj/kern/kernel.asm	/^f0103996:	5b                   	pop    %ebx$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	5e                   	pop    %esi$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	5f                   	pop    %edi$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	5d                   	pop    %ebp$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	c3                   	ret    $/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b <env_free>:$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	55                   	push   %ebp$/;"	l
f010399c	obj/kern/kernel.asm	/^f010399c:	89 e5                	mov    %esp,%ebp$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	57                   	push   %edi$/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f:	56                   	push   %esi$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	53                   	push   %ebx$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01039a4	obj/kern/kernel.asm	/^f01039a4:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	e8 c2 2a 00 00       	call   f010646e <cpunum>$/;"	l
f01039ac	obj/kern/kernel.asm	/^f01039ac:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af:	39 b8 28 20 25 f0    	cmp    %edi,-0xfdadfd8(%eax)$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	75 29                	jne    f01039e0 <env_free+0x45>$/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	77 15                	ja     f01039d8 <env_free+0x3d>$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	50                   	push   %eax$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	68 ac 01 00 00       	push   $0x1ac$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	e8 68 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f01039d8	obj/kern/kernel.asm	/^f01039d8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	e8 86 2a 00 00       	call   f010646e <cpunum>$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	83 b8 28 20 25 f0 00 	cmpl   $0x0,-0xfdadfd8(%eax)$/;"	l
f01039f7	obj/kern/kernel.asm	/^f01039f7:	74 11                	je     f0103a0a <env_free+0x6f>$/;"	l
f01039f9	obj/kern/kernel.asm	/^f01039f9:	e8 70 2a 00 00       	call   f010646e <cpunum>$/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0103a07	obj/kern/kernel.asm	/^f0103a07:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	53                   	push   %ebx$/;"	l
f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	52                   	push   %edx$/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	68 3e 81 10 f0       	push   $0xf010813e$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	e8 5f 04 00 00       	call   f0103e78 <cprintf>$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103a26	obj/kern/kernel.asm	/^f0103a26:	89 d0                	mov    %edx,%eax$/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103a2e	obj/kern/kernel.asm	/^f0103a2e:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103a31	obj/kern/kernel.asm	/^f0103a31:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	0f 84 a8 00 00 00    	je     f0103ae8 <env_free+0x14d>$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103a46	obj/kern/kernel.asm	/^f0103a46:	89 f0                	mov    %esi,%eax$/;"	l
f0103a48	obj/kern/kernel.asm	/^f0103a48:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	39 05 8c 1e 25 f0    	cmp    %eax,0xf0251e8c$/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	77 15                	ja     f0103a6b <env_free+0xd0>$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	56                   	push   %esi$/;"	l
f0103a57	obj/kern/kernel.asm	/^f0103a57:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	68 bb 01 00 00       	push   $0x1bb$/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f0103a66	obj/kern/kernel.asm	/^f0103a66:	e8 d5 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103a6e	obj/kern/kernel.asm	/^f0103a6e:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103a71	obj/kern/kernel.asm	/^f0103a71:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103a79	obj/kern/kernel.asm	/^f0103a79:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103a80	obj/kern/kernel.asm	/^f0103a80:	01 $/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	74 17                	je     f0103a9a <env_free+0xff>$/;"	l
f0103a83	obj/kern/kernel.asm	/^f0103a83:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103a86	obj/kern/kernel.asm	/^f0103a86:	89 d8                	mov    %ebx,%eax$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103a8e	obj/kern/kernel.asm	/^f0103a8e:	50                   	push   %eax$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	e8 75 de ff ff       	call   f010190c <page_remove>$/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	75 d4                	jne    f0103a79 <env_free+0xde>$/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103aa8	obj/kern/kernel.asm	/^f0103aa8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	3b 05 8c 1e 25 f0    	cmp    0xf0251e8c,%eax$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	72 14                	jb     f0103ad1 <env_free+0x136>$/;"	l
f0103abd	obj/kern/kernel.asm	/^f0103abd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	68 90 75 10 f0       	push   $0xf0107590$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	6a 53                	push   $0x53$/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0103acc	obj/kern/kernel.asm	/^f0103acc:	e8 6f c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	a1 94 1e 25 f0       	mov    0xf0251e94,%eax$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103adc	obj/kern/kernel.asm	/^f0103adc:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103adf	obj/kern/kernel.asm	/^f0103adf:	50                   	push   %eax$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	e8 76 db ff ff       	call   f010165b <page_decref>$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103aef	obj/kern/kernel.asm	/^f0103aef:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	0f 85 29 ff ff ff    	jne    f0103a23 <env_free+0x88>$/;"	l
f0103afa	obj/kern/kernel.asm	/^f0103afa:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103afd	obj/kern/kernel.asm	/^f0103afd:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103b02	obj/kern/kernel.asm	/^f0103b02:	77 15                	ja     f0103b19 <env_free+0x17e>$/;"	l
f0103b04	obj/kern/kernel.asm	/^f0103b04:	50                   	push   %eax$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0103b0a	obj/kern/kernel.asm	/^f0103b0a:	68 c9 01 00 00       	push   $0x1c9$/;"	l
f0103b0f	obj/kern/kernel.asm	/^f0103b0f:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	e8 27 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	3b 05 8c 1e 25 f0    	cmp    0xf0251e8c,%eax$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	72 14                	jb     f0103b44 <env_free+0x1a9>$/;"	l
f0103b30	obj/kern/kernel.asm	/^f0103b30:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103b33	obj/kern/kernel.asm	/^f0103b33:	68 90 75 10 f0       	push   $0xf0107590$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	6a 53                	push   $0x53$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	68 e3 6e 10 f0       	push   $0xf0106ee3$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	e8 fc c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b44	obj/kern/kernel.asm	/^f0103b44:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b47	obj/kern/kernel.asm	/^f0103b47:	8b 15 94 1e 25 f0    	mov    0xf0251e94,%edx$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	50                   	push   %eax$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	e8 05 db ff ff       	call   f010165b <page_decref>$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	a1 4c 12 25 f0       	mov    0xf025124c,%eax$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	89 3d 4c 12 25 f0    	mov    %edi,0xf025124c$/;"	l
f0103b6b	obj/kern/kernel.asm	/^f0103b6b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	5b                   	pop    %ebx$/;"	l
f0103b72	obj/kern/kernel.asm	/^f0103b72:	5e                   	pop    %esi$/;"	l
f0103b73	obj/kern/kernel.asm	/^f0103b73:	5f                   	pop    %edi$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	5d                   	pop    %ebp$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	c3                   	ret    $/;"	l
f0103b76	obj/kern/kernel.asm	/^f0103b76 <env_destroy>:$/;"	l
f0103b76	obj/kern/kernel.asm	/^f0103b76:	55                   	push   %ebp$/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	53                   	push   %ebx$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	75 19                	jne    f0103b9f <env_destroy+0x29>$/;"	l
f0103b86	obj/kern/kernel.asm	/^f0103b86:	e8 e3 28 00 00       	call   f010646e <cpunum>$/;"	l
f0103b8b	obj/kern/kernel.asm	/^f0103b8b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	3b 98 28 20 25 f0    	cmp    -0xfdadfd8(%eax),%ebx$/;"	l
f0103b94	obj/kern/kernel.asm	/^f0103b94:	74 09                	je     f0103b9f <env_destroy+0x29>$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103b9d	obj/kern/kernel.asm	/^f0103b9d:	eb 33                	jmp    f0103bd2 <env_destroy+0x5c>$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	53                   	push   %ebx$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	e8 f3 fd ff ff       	call   f010399b <env_free>$/;"	l
f0103ba8	obj/kern/kernel.asm	/^f0103ba8:	e8 c1 28 00 00       	call   f010646e <cpunum>$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103bb3	obj/kern/kernel.asm	/^f0103bb3:	3b 98 28 20 25 f0    	cmp    -0xfdadfd8(%eax),%ebx$/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	75 17                	jne    f0103bd2 <env_destroy+0x5c>$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	e8 ae 28 00 00       	call   f010646e <cpunum>$/;"	l
f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	c7 80 28 20 25 f0 00 	movl   $0x0,-0xfdadfd8(%eax)$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	00 00 00 $/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	e8 ee 0c 00 00       	call   f01048c0 <sched_yield>$/;"	l
f0103bd2	obj/kern/kernel.asm	/^f0103bd2:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103bd5	obj/kern/kernel.asm	/^f0103bd5:	c9                   	leave  $/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	c3                   	ret    $/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7 <env_pop_tf>:$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	55                   	push   %ebp$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bda	obj/kern/kernel.asm	/^f0103bda:	53                   	push   %ebx$/;"	l
f0103bdb	obj/kern/kernel.asm	/^f0103bdb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103bde	obj/kern/kernel.asm	/^f0103bde:	e8 8b 28 00 00       	call   f010646e <cpunum>$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	8b 98 28 20 25 f0    	mov    -0xfdadfd8(%eax),%ebx$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	e8 7d 28 00 00       	call   f010646e <cpunum>$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103bf4	obj/kern/kernel.asm	/^f0103bf4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103bf7	obj/kern/kernel.asm	/^f0103bf7:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	e8 78 2b 00 00       	call   f0106779 <spin_unlock>$/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	f3 90                	pause  $/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103c06	obj/kern/kernel.asm	/^f0103c06:	61                   	popa   $/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	07                   	pop    %es$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	1f                   	pop    %ds$/;"	l
f0103c09	obj/kern/kernel.asm	/^f0103c09:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c0c	obj/kern/kernel.asm	/^f0103c0c:	cf                   	iret   $/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	68 54 81 10 f0       	push   $0xf0108154$/;"	l
f0103c15	obj/kern/kernel.asm	/^f0103c15:	68 01 02 00 00       	push   $0x201$/;"	l
f0103c1a	obj/kern/kernel.asm	/^f0103c1a:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f0103c1f	obj/kern/kernel.asm	/^f0103c1f:	e8 1c c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c24	obj/kern/kernel.asm	/^f0103c24 <env_run>:$/;"	l
f0103c24	obj/kern/kernel.asm	/^f0103c24:	55                   	push   %ebp$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	e8 3f 28 00 00       	call   f010646e <cpunum>$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c32	obj/kern/kernel.asm	/^f0103c32:	83 b8 28 20 25 f0 00 	cmpl   $0x0,-0xfdadfd8(%eax)$/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	74 29                	je     f0103c64 <env_run+0x40>$/;"	l
f0103c3b	obj/kern/kernel.asm	/^f0103c3b:	e8 2e 28 00 00       	call   f010646e <cpunum>$/;"	l
f0103c40	obj/kern/kernel.asm	/^f0103c40:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	75 15                	jne    f0103c64 <env_run+0x40>$/;"	l
f0103c4f	obj/kern/kernel.asm	/^f0103c4f:	e8 1a 28 00 00       	call   f010646e <cpunum>$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103c64	obj/kern/kernel.asm	/^f0103c64:	e8 05 28 00 00       	call   f010646e <cpunum>$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c6c	obj/kern/kernel.asm	/^f0103c6c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	89 90 28 20 25 f0    	mov    %edx,-0xfdadfd8(%eax)$/;"	l
f0103c75	obj/kern/kernel.asm	/^f0103c75:	e8 f4 27 00 00       	call   f010646e <cpunum>$/;"	l
f0103c7a	obj/kern/kernel.asm	/^f0103c7a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103c8a	obj/kern/kernel.asm	/^f0103c8a:	e8 df 27 00 00       	call   f010646e <cpunum>$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0103c98	obj/kern/kernel.asm	/^f0103c98:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	e8 cd 27 00 00       	call   f010646e <cpunum>$/;"	l
f0103ca1	obj/kern/kernel.asm	/^f0103ca1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103cb2	obj/kern/kernel.asm	/^f0103cb2:	77 15                	ja     f0103cc9 <env_run+0xa5>$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	50                   	push   %eax$/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba:	68 24 02 00 00       	push   $0x224$/;"	l
f0103cbf	obj/kern/kernel.asm	/^f0103cbf:	68 0d 81 10 f0       	push   $0xf010810d$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	e8 77 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103cd1	obj/kern/kernel.asm	/^f0103cd1:	e8 98 27 00 00       	call   f010646e <cpunum>$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	0f ae 48 70          	fxrstor 0x70(%eax)$/;"	l
f0103ce3	obj/kern/kernel.asm	/^f0103ce3:	e8 86 27 00 00       	call   f010646e <cpunum>$/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	e8 de fe ff ff       	call   f0103bd7 <env_pop_tf>$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9 <mc146818_read>:$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	55                   	push   %ebp$/;"	l
f0103cfa	obj/kern/kernel.asm	/^f0103cfa:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	ee                   	out    %al,(%dx)$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	ec                   	in     (%dx),%al$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	5d                   	pop    %ebp$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	c3                   	ret    $/;"	l
f0103d10	obj/kern/kernel.asm	/^f0103d10 <mc146818_write>:$/;"	l
f0103d10	obj/kern/kernel.asm	/^f0103d10:	55                   	push   %ebp$/;"	l
f0103d11	obj/kern/kernel.asm	/^f0103d11:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d13	obj/kern/kernel.asm	/^f0103d13:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103d18	obj/kern/kernel.asm	/^f0103d18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103d1b	obj/kern/kernel.asm	/^f0103d1b:	ee                   	out    %al,(%dx)$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103d24	obj/kern/kernel.asm	/^f0103d24:	ee                   	out    %al,(%dx)$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	5d                   	pop    %ebp$/;"	l
f0103d26	obj/kern/kernel.asm	/^f0103d26:	c3                   	ret    $/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27 <irq_setmask_8259A>:$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	55                   	push   %ebp$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	56                   	push   %esi$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	53                   	push   %ebx$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	66 a3 a8 23 12 f0    	mov    %ax,0xf01223a8$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	80 3d 50 12 25 f0 00 	cmpb   $0x0,0xf0251250$/;"	l
f0103d3c	obj/kern/kernel.asm	/^f0103d3c:	74 5a                	je     f0103d98 <irq_setmask_8259A+0x71>$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	89 c6                	mov    %eax,%esi$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45:	ee                   	out    %al,(%dx)$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103d4a	obj/kern/kernel.asm	/^f0103d4a:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	ee                   	out    %al,(%dx)$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	68 84 81 10 f0       	push   $0xf0108184$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	e8 1b 01 00 00       	call   f0103e78 <cprintf>$/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	f7 d6                	not    %esi$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103d6d	obj/kern/kernel.asm	/^f0103d6d:	73 11                	jae    f0103d80 <irq_setmask_8259A+0x59>$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	53                   	push   %ebx$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	68 5f 86 10 f0       	push   $0xf010865f$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	e8 fb 00 00 00       	call   f0103e78 <cprintf>$/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d80	obj/kern/kernel.asm	/^f0103d80:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	75 e2                	jne    f0103d6a <irq_setmask_8259A+0x43>$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	68 bf 80 10 f0       	push   $0xf01080bf$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	e8 e3 00 00 00       	call   f0103e78 <cprintf>$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	5b                   	pop    %ebx$/;"	l
f0103d9c	obj/kern/kernel.asm	/^f0103d9c:	5e                   	pop    %esi$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	5d                   	pop    %ebp$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	c3                   	ret    $/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f <pic_init>:$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	c6 05 50 12 25 f0 01 	movb   $0x1,0xf0251250$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	ee                   	out    %al,(%dx)$/;"	l
f0103db1	obj/kern/kernel.asm	/^f0103db1:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	ee                   	out    %al,(%dx)$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	ee                   	out    %al,(%dx)$/;"	l
f0103dc2	obj/kern/kernel.asm	/^f0103dc2:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103dc7	obj/kern/kernel.asm	/^f0103dc7:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	ee                   	out    %al,(%dx)$/;"	l
f0103dcd	obj/kern/kernel.asm	/^f0103dcd:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	ee                   	out    %al,(%dx)$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	ee                   	out    %al,(%dx)$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	ee                   	out    %al,(%dx)$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	ee                   	out    %al,(%dx)$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	ee                   	out    %al,(%dx)$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	ee                   	out    %al,(%dx)$/;"	l
f0103dfb	obj/kern/kernel.asm	/^f0103dfb:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	ee                   	out    %al,(%dx)$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	ee                   	out    %al,(%dx)$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	ee                   	out    %al,(%dx)$/;"	l
f0103e17	obj/kern/kernel.asm	/^f0103e17:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	ee                   	out    %al,(%dx)$/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	0f b7 05 a8 23 12 f0 	movzwl 0xf01223a8,%eax$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	74 13                	je     f0103e3d <pic_init+0x9e>$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	55                   	push   %ebp$/;"	l
f0103e2b	obj/kern/kernel.asm	/^f0103e2b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	50                   	push   %eax$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	e8 ee fe ff ff       	call   f0103d27 <irq_setmask_8259A>$/;"	l
f0103e39	obj/kern/kernel.asm	/^f0103e39:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	c9                   	leave  $/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	f3 c3                	repz ret $/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f <putch>:$/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	55                   	push   %ebp$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	e8 02 c9 ff ff       	call   f010074f <cputchar>$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	c9                   	leave  $/;"	l
f0103e51	obj/kern/kernel.asm	/^f0103e51:	c3                   	ret    $/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52 <vcprintf>:$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	55                   	push   %ebp$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103e58	obj/kern/kernel.asm	/^f0103e58:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103e5f	obj/kern/kernel.asm	/^f0103e5f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	50                   	push   %eax$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	68 3f 3e 10 f0       	push   $0xf0103e3f$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	e8 7e 18 00 00       	call   f01056f1 <vprintfmt>$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	c9                   	leave  $/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	c3                   	ret    $/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78 <cprintf>:$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	55                   	push   %ebp$/;"	l
f0103e79	obj/kern/kernel.asm	/^f0103e79:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	50                   	push   %eax$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	e8 c8 ff ff ff       	call   f0103e52 <vcprintf>$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	c9                   	leave  $/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	c3                   	ret    $/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c <trap_init_percpu>:$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	55                   	push   %ebp$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	57                   	push   %edi$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	56                   	push   %esi$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	53                   	push   %ebx$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	e8 d4 25 00 00       	call   f010646e <cpunum>$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	bf 00 00 00 f0       	mov    $0xf0000000,%edi$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	29 c7                	sub    %eax,%edi$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	e8 c5 25 00 00       	call   f010646e <cpunum>$/;"	l
f0103ea9	obj/kern/kernel.asm	/^f0103ea9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	89 b8 30 20 25 f0    	mov    %edi,-0xfdadfd0(%eax)$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	e8 b7 25 00 00       	call   f010646e <cpunum>$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	66 c7 80 34 20 25 f0 	movw   $0x10,-0xfdadfcc(%eax)$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	10 00 $/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	e8 a6 25 00 00       	call   f010646e <cpunum>$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	66 c7 80 92 20 25 f0 	movw   $0x68,-0xfdadf6e(%eax)$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	68 00 $/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	e8 95 25 00 00       	call   f010646e <cpunum>$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	8d 58 05             	lea    0x5(%eax),%ebx$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	e8 8d 25 00 00       	call   f010646e <cpunum>$/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	89 c6                	mov    %eax,%esi$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	e8 86 25 00 00       	call   f010646e <cpunum>$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	e8 7e 25 00 00       	call   f010646e <cpunum>$/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	66 c7 04 dd 40 23 12 	movw   $0x67,-0xfeddcc0(,%ebx,8)$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	f0 67 00 $/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	6b f6 74             	imul   $0x74,%esi,%esi$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	81 c6 2c 20 25 f0    	add    $0xf025202c,%esi$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	66 89 34 dd 42 23 12 	mov    %si,-0xfeddcbe(,%ebx,8)$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	f0 $/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	6b 55 e4 74          	imul   $0x74,-0x1c(%ebp),%edx$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	81 c2 2c 20 25 f0    	add    $0xf025202c,%edx$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	88 14 dd 44 23 12 f0 	mov    %dl,-0xfeddcbc(,%ebx,8)$/;"	l
f0103f1f	obj/kern/kernel.asm	/^f0103f1f:	c6 04 dd 45 23 12 f0 	movb   $0x99,-0xfeddcbb(,%ebx,8)$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	99 $/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	c6 04 dd 46 23 12 f0 	movb   $0x40,-0xfeddcba(,%ebx,8)$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	40 $/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f32	obj/kern/kernel.asm	/^f0103f32:	05 2c 20 25 f0       	add    $0xf025202c,%eax$/;"	l
f0103f37	obj/kern/kernel.asm	/^f0103f37:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103f3a	obj/kern/kernel.asm	/^f0103f3a:	88 04 dd 47 23 12 f0 	mov    %al,-0xfeddcb9(,%ebx,8)$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	e8 28 25 00 00       	call   f010646e <cpunum>$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	80 24 c5 6d 23 12 f0 	andb   $0xef,-0xfeddc93(,%eax,8)$/;"	l
f0103f4d	obj/kern/kernel.asm	/^f0103f4d:	ef $/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	e8 1b 25 00 00       	call   f010646e <cpunum>$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	8d 04 c5 28 00 00 00 	lea    0x28(,%eax,8),%eax$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	0f 00 d8             	ltr    %ax$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	b8 ac 23 12 f0       	mov    $0xf01223ac,%eax$/;"	l
f0103f62	obj/kern/kernel.asm	/^f0103f62:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	0f 30                	wrmsr  $/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	b9 75 01 00 00       	mov    $0x175,%ecx$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	89 f8                	mov    %edi,%eax$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	0f 30                	wrmsr  $/;"	l
f0103f7f	obj/kern/kernel.asm	/^f0103f7f:	b8 86 47 10 f0       	mov    $0xf0104786,%eax$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	b9 76 01 00 00       	mov    $0x176,%ecx$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	0f 30                	wrmsr  $/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f0103f8e	obj/kern/kernel.asm	/^f0103f8e:	80 cc 02             	or     $0x2,%ah$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103f97	obj/kern/kernel.asm	/^f0103f97:	5b                   	pop    %ebx$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	5e                   	pop    %esi$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	5f                   	pop    %edi$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	5d                   	pop    %ebp$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	c3                   	ret    $/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c <trap_init>:$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	8b 0c 85 b2 23 12 f0 	mov    -0xfeddc4e(,%eax,4),%ecx$/;"	l
f0103fa8	obj/kern/kernel.asm	/^f0103fa8:	66 89 0c c5 60 12 25 	mov    %cx,-0xfdaeda0(,%eax,8)$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	f0 $/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	66 c7 04 c5 62 12 25 	movw   $0x8,-0xfdaed9e(,%eax,8)$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	f0 08 00 $/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	c6 04 c5 64 12 25 f0 	movb   $0x0,-0xfdaed9c(,%eax,8)$/;"	l
f0103fc1	obj/kern/kernel.asm	/^f0103fc1:	00 $/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	0f 94 c2             	sete   %dl$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	f7 da                	neg    %edx$/;"	l
f0103fca	obj/kern/kernel.asm	/^f0103fca:	83 e2 03             	and    $0x3,%edx$/;"	l
f0103fcd	obj/kern/kernel.asm	/^f0103fcd:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	83 ca 8e             	or     $0xffffff8e,%edx$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	88 14 c5 65 12 25 f0 	mov    %dl,-0xfdaed9b(,%eax,8)$/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	66 89 0c c5 66 12 25 	mov    %cx,-0xfdaed9a(,%eax,8)$/;"	l
f0103fe4	obj/kern/kernel.asm	/^f0103fe4:	f0 $/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	83 f8 14             	cmp    $0x14,%eax$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	75 b4                	jne    f0103fa1 <trap_init+0x5>$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	a1 02 24 12 f0       	mov    0xf0122402,%eax$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	66 a3 e0 13 25 f0    	mov    %ax,0xf02513e0$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	66 c7 05 e2 13 25 f0 	movw   $0x8,0xf02513e2$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	08 00 $/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	c6 05 e4 13 25 f0 00 	movb   $0x0,0xf02513e4$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	c6 05 e5 13 25 f0 ee 	movb   $0xee,0xf02513e5$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	66 a3 e6 13 25 f0    	mov    %ax,0xf02513e6$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	8b 14 85 86 23 12 f0 	mov    -0xfeddc7a(,%eax,4),%edx$/;"	l
f0104024	obj/kern/kernel.asm	/^f0104024:	66 89 14 c5 60 12 25 	mov    %dx,-0xfdaeda0(,%eax,8)$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	f0 $/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	66 c7 04 c5 62 12 25 	movw   $0x8,-0xfdaed9e(,%eax,8)$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	f0 08 00 $/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	c6 04 c5 64 12 25 f0 	movb   $0x0,-0xfdaed9c(,%eax,8)$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	00 $/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	c6 04 c5 65 12 25 f0 	movb   $0x8e,-0xfdaed9b(,%eax,8)$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	8e $/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	66 89 14 c5 66 12 25 	mov    %dx,-0xfdaed9a(,%eax,8)$/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	f0 $/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	75 c4                	jne    f010401d <trap_init+0x81>$/;"	l
f0104059	obj/kern/kernel.asm	/^f0104059:	55                   	push   %ebp$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	89 e5                	mov    %esp,%ebp$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	e8 28 fe ff ff       	call   f0103e8c <trap_init_percpu>$/;"	l
f0104064	obj/kern/kernel.asm	/^f0104064:	c9                   	leave  $/;"	l
f0104065	obj/kern/kernel.asm	/^f0104065:	c3                   	ret    $/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066 <print_regs>:$/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066:	55                   	push   %ebp$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	89 e5                	mov    %esp,%ebp$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	53                   	push   %ebx$/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	ff 33                	pushl  (%ebx)$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	68 98 81 10 f0       	push   $0xf0108198$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	e8 fc fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f010407c	obj/kern/kernel.asm	/^f010407c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	68 a7 81 10 f0       	push   $0xf01081a7$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	e8 ec fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f010408c	obj/kern/kernel.asm	/^f010408c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010408f	obj/kern/kernel.asm	/^f010408f:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	68 b6 81 10 f0       	push   $0xf01081b6$/;"	l
f0104097	obj/kern/kernel.asm	/^f0104097:	e8 dc fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010409f	obj/kern/kernel.asm	/^f010409f:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	68 c5 81 10 f0       	push   $0xf01081c5$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	e8 cc fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f01040ac	obj/kern/kernel.asm	/^f01040ac:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	68 d4 81 10 f0       	push   $0xf01081d4$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	e8 bc fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f01040bc	obj/kern/kernel.asm	/^f01040bc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f01040c2	obj/kern/kernel.asm	/^f01040c2:	68 e3 81 10 f0       	push   $0xf01081e3$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	e8 ac fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f01040cc	obj/kern/kernel.asm	/^f01040cc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f01040d2	obj/kern/kernel.asm	/^f01040d2:	68 f2 81 10 f0       	push   $0xf01081f2$/;"	l
f01040d7	obj/kern/kernel.asm	/^f01040d7:	e8 9c fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f01040dc	obj/kern/kernel.asm	/^f01040dc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	68 01 82 10 f0       	push   $0xf0108201$/;"	l
f01040e7	obj/kern/kernel.asm	/^f01040e7:	e8 8c fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01040f2	obj/kern/kernel.asm	/^f01040f2:	c9                   	leave  $/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	c3                   	ret    $/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4 <print_trapframe>:$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	55                   	push   %ebp$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	56                   	push   %esi$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	53                   	push   %ebx$/;"	l
f01040f9	obj/kern/kernel.asm	/^f01040f9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	e8 6d 23 00 00       	call   f010646e <cpunum>$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104104	obj/kern/kernel.asm	/^f0104104:	50                   	push   %eax$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	53                   	push   %ebx$/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	68 65 82 10 f0       	push   $0xf0108265$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	e8 68 fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104110	obj/kern/kernel.asm	/^f0104110:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104113	obj/kern/kernel.asm	/^f0104113:	e8 4e ff ff ff       	call   f0104066 <print_regs>$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	83 c4 08             	add    $0x8,%esp$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	50                   	push   %eax$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	68 83 82 10 f0       	push   $0xf0108283$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	e8 4e fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0104131	obj/kern/kernel.asm	/^f0104131:	50                   	push   %eax$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	68 96 82 10 f0       	push   $0xf0108296$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	e8 3c fd ff ff       	call   f0103e78 <cprintf>$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104145	obj/kern/kernel.asm	/^f0104145:	77 09                	ja     f0104150 <print_trapframe+0x5c>$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	8b 14 85 40 85 10 f0 	mov    -0xfef7ac0(,%eax,4),%edx$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	eb 1f                	jmp    f010416f <print_trapframe+0x7b>$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	74 15                	je     f010416a <print_trapframe+0x76>$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	b9 2f 82 10 f0       	mov    $0xf010822f,%ecx$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	ba 1c 82 10 f0       	mov    $0xf010821c,%edx$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	eb 05                	jmp    f010416f <print_trapframe+0x7b>$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	ba 10 82 10 f0       	mov    $0xf0108210,%edx$/;"	l
f010416f	obj/kern/kernel.asm	/^f010416f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	52                   	push   %edx$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	50                   	push   %eax$/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174:	68 a9 82 10 f0       	push   $0xf01082a9$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	e8 fa fc ff ff       	call   f0103e78 <cprintf>$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	3b 1d 60 1a 25 f0    	cmp    0xf0251a60,%ebx$/;"	l
f0104187	obj/kern/kernel.asm	/^f0104187:	75 1a                	jne    f01041a3 <print_trapframe+0xaf>$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	75 14                	jne    f01041a3 <print_trapframe+0xaf>$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	50                   	push   %eax$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	68 bb 82 10 f0       	push   $0xf01082bb$/;"	l
f010419b	obj/kern/kernel.asm	/^f010419b:	e8 d8 fc ff ff       	call   f0103e78 <cprintf>$/;"	l
f01041a0	obj/kern/kernel.asm	/^f01041a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041a3	obj/kern/kernel.asm	/^f01041a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	68 ca 82 10 f0       	push   $0xf01082ca$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	e8 c5 fc ff ff       	call   f0103e78 <cprintf>$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041b6	obj/kern/kernel.asm	/^f01041b6:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	75 49                	jne    f0104205 <print_trapframe+0x111>$/;"	l
f01041bc	obj/kern/kernel.asm	/^f01041bc:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	89 c2                	mov    %eax,%edx$/;"	l
f01041c1	obj/kern/kernel.asm	/^f01041c1:	83 e2 01             	and    $0x1,%edx$/;"	l
f01041c4	obj/kern/kernel.asm	/^f01041c4:	ba 49 82 10 f0       	mov    $0xf0108249,%edx$/;"	l
f01041c9	obj/kern/kernel.asm	/^f01041c9:	b9 3e 82 10 f0       	mov    $0xf010823e,%ecx$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	89 c2                	mov    %eax,%edx$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	83 e2 02             	and    $0x2,%edx$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	ba 5b 82 10 f0       	mov    $0xf010825b,%edx$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	be 55 82 10 f0       	mov    $0xf0108255,%esi$/;"	l
f01041e0	obj/kern/kernel.asm	/^f01041e0:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	83 e0 04             	and    $0x4,%eax$/;"	l
f01041e6	obj/kern/kernel.asm	/^f01041e6:	be b3 83 10 f0       	mov    $0xf01083b3,%esi$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	b8 60 82 10 f0       	mov    $0xf0108260,%eax$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	51                   	push   %ecx$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	52                   	push   %edx$/;"	l
f01041f5	obj/kern/kernel.asm	/^f01041f5:	50                   	push   %eax$/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6:	68 d8 82 10 f0       	push   $0xf01082d8$/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	e8 78 fc ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	eb 10                	jmp    f0104215 <print_trapframe+0x121>$/;"	l
f0104205	obj/kern/kernel.asm	/^f0104205:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	68 bf 80 10 f0       	push   $0xf01080bf$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	e8 66 fc ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104215	obj/kern/kernel.asm	/^f0104215:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	68 e7 82 10 f0       	push   $0xf01082e7$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	e8 53 fc ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	50                   	push   %eax$/;"	l
f010422d	obj/kern/kernel.asm	/^f010422d:	68 f6 82 10 f0       	push   $0xf01082f6$/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232:	e8 41 fc ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237:	83 c4 08             	add    $0x8,%esp$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f010423d	obj/kern/kernel.asm	/^f010423d:	68 09 83 10 f0       	push   $0xf0108309$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	e8 31 fc ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	83 c4 10             	add    $0x10,%esp$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	74 25                	je     f0104275 <print_trapframe+0x181>$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104253	obj/kern/kernel.asm	/^f0104253:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	68 18 83 10 f0       	push   $0xf0108318$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	e8 18 fc ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	50                   	push   %eax$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	68 27 83 10 f0       	push   $0xf0108327$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	e8 06 fc ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104275	obj/kern/kernel.asm	/^f0104275:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278:	5b                   	pop    %ebx$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	5e                   	pop    %esi$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	5d                   	pop    %ebp$/;"	l
f010427b	obj/kern/kernel.asm	/^f010427b:	c3                   	ret    $/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c <page_fault_handler>:$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	55                   	push   %ebp$/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	89 e5                	mov    %esp,%ebp$/;"	l
f010427f	obj/kern/kernel.asm	/^f010427f:	57                   	push   %edi$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	56                   	push   %esi$/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	53                   	push   %ebx$/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104288	obj/kern/kernel.asm	/^f0104288:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	75 15                	jne    f01042a6 <page_fault_handler+0x2a>$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	56                   	push   %esi$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	68 3a 83 10 f0       	push   $0xf010833a$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	68 49 01 00 00       	push   $0x149$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	68 58 83 10 f0       	push   $0xf0108358$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	e8 9a bd ff ff       	call   f0100040 <_panic>$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	e8 c3 21 00 00       	call   f010646e <cpunum>$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	0f 84 d5 00 00 00    	je     f0104393 <page_fault_handler+0x117>$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	e8 ab 21 00 00       	call   f010646e <cpunum>$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	81 78 3c ff ef bf ee 	cmpl   $0xeebfefff,0x3c(%eax)$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	76 35                	jbe    f010430a <page_fault_handler+0x8e>$/;"	l
f01042d5	obj/kern/kernel.asm	/^f01042d5:	e8 94 21 00 00       	call   f010646e <cpunum>$/;"	l
f01042da	obj/kern/kernel.asm	/^f01042da:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	81 78 3c ff ff bf ee 	cmpl   $0xeebfffff,0x3c(%eax)$/;"	l
f01042ea	obj/kern/kernel.asm	/^f01042ea:	77 1e                	ja     f010430a <page_fault_handler+0x8e>$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	e8 7d 21 00 00       	call   f010646e <cpunum>$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	89 c7                	mov    %eax,%edi$/;"	l
f0104302	obj/kern/kernel.asm	/^f0104302:	0f 84 8b 00 00 00    	je     f0104393 <page_fault_handler+0x117>$/;"	l
f0104308	obj/kern/kernel.asm	/^f0104308:	eb 1c                	jmp    f0104326 <page_fault_handler+0xaa>$/;"	l
f010430a	obj/kern/kernel.asm	/^f010430a:	e8 5f 21 00 00       	call   f010646e <cpunum>$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	81 78 3c 00 e0 bf ee 	cmpl   $0xeebfe000,0x3c(%eax)$/;"	l
f010431f	obj/kern/kernel.asm	/^f010431f:	77 72                	ja     f0104393 <page_fault_handler+0x117>$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	bf cc ff bf ee       	mov    $0xeebfffcc,%edi$/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	e8 43 21 00 00       	call   f010646e <cpunum>$/;"	l
f010432b	obj/kern/kernel.asm	/^f010432b:	6a 06                	push   $0x6$/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	6a 34                	push   $0x34$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	57                   	push   %edi$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104333	obj/kern/kernel.asm	/^f0104333:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f0104339	obj/kern/kernel.asm	/^f0104339:	e8 86 f1 ff ff       	call   f01034c4 <user_mem_assert>$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	89 37                	mov    %esi,(%edi)$/;"	l
f0104340	obj/kern/kernel.asm	/^f0104340:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	89 fa                	mov    %edi,%edx$/;"	l
f0104345	obj/kern/kernel.asm	/^f0104345:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	89 de                	mov    %ebx,%esi$/;"	l
f0104352	obj/kern/kernel.asm	/^f0104352:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f010435a	obj/kern/kernel.asm	/^f010435a:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	89 53 3c             	mov    %edx,0x3c(%ebx)$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	e8 00 21 00 00       	call   f010646e <cpunum>$/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f010437a	obj/kern/kernel.asm	/^f010437a:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	e8 ec 20 00 00       	call   f010646e <cpunum>$/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104385	obj/kern/kernel.asm	/^f0104385:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	e8 91 f8 ff ff       	call   f0103c24 <env_run>$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	e8 d3 20 00 00       	call   f010646e <cpunum>$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	57                   	push   %edi$/;"	l
f010439c	obj/kern/kernel.asm	/^f010439c:	56                   	push   %esi$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	68 00 85 10 f0       	push   $0xf0108500$/;"	l
f01043ae	obj/kern/kernel.asm	/^f01043ae:	e8 c5 fa ff ff       	call   f0103e78 <cprintf>$/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	e8 39 fd ff ff       	call   f01040f4 <print_trapframe>$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	e8 ae 20 00 00       	call   f010646e <cpunum>$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	83 c4 04             	add    $0x4,%esp$/;"	l
f01043c3	obj/kern/kernel.asm	/^f01043c3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	e8 a5 f7 ff ff       	call   f0103b76 <env_destroy>$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	5b                   	pop    %ebx$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	5e                   	pop    %esi$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	5f                   	pop    %edi$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	5d                   	pop    %ebp$/;"	l
f01043db	obj/kern/kernel.asm	/^f01043db:	c3                   	ret    $/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc <trap>:$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	55                   	push   %ebp$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	57                   	push   %edi$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	56                   	push   %esi$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	fc                   	cld    $/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	83 3d 80 1e 25 f0 00 	cmpl   $0x0,0xf0251e80$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	74 01                	je     f01043ef <trap+0x13>$/;"	l
f01043ee	obj/kern/kernel.asm	/^f01043ee:	f4                   	hlt    $/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	e8 7a 20 00 00       	call   f010646e <cpunum>$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	81 c2 20 20 25 f0    	add    $0xf0252020,%edx$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104406	obj/kern/kernel.asm	/^f0104406:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	75 10                	jne    f010441b <trap+0x3f>$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	e8 c4 22 00 00       	call   f01066dc <spin_lock>$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	83 c4 10             	add    $0x10,%esp$/;"	l
f010441b	obj/kern/kernel.asm	/^f010441b:	9c                   	pushf  $/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	58                   	pop    %eax$/;"	l
f010441d	obj/kern/kernel.asm	/^f010441d:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104420	obj/kern/kernel.asm	/^f0104420:	74 19                	je     f010443b <trap+0x5f>$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	68 64 83 10 f0       	push   $0xf0108364$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f010442c	obj/kern/kernel.asm	/^f010442c:	68 10 01 00 00       	push   $0x110$/;"	l
f0104431	obj/kern/kernel.asm	/^f0104431:	68 58 83 10 f0       	push   $0xf0108358$/;"	l
f0104436	obj/kern/kernel.asm	/^f0104436:	e8 05 bc ff ff       	call   f0100040 <_panic>$/;"	l
f010443b	obj/kern/kernel.asm	/^f010443b:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f010443f	obj/kern/kernel.asm	/^f010443f:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	0f 85 b2 00 00 00    	jne    f01044fe <trap+0x122>$/;"	l
f010444c	obj/kern/kernel.asm	/^f010444c:	e8 1d 20 00 00       	call   f010646e <cpunum>$/;"	l
f0104451	obj/kern/kernel.asm	/^f0104451:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	83 b8 28 20 25 f0 00 	cmpl   $0x0,-0xfdadfd8(%eax)$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	75 19                	jne    f0104476 <trap+0x9a>$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	68 7d 83 10 f0       	push   $0xf010837d$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	68 05 7e 10 f0       	push   $0xf0107e05$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	68 17 01 00 00       	push   $0x117$/;"	l
f010446c	obj/kern/kernel.asm	/^f010446c:	68 58 83 10 f0       	push   $0xf0108358$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	e8 ca bb ff ff       	call   f0100040 <_panic>$/;"	l
f0104476	obj/kern/kernel.asm	/^f0104476:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f010447e	obj/kern/kernel.asm	/^f010447e:	e8 59 22 00 00       	call   f01066dc <spin_lock>$/;"	l
f0104483	obj/kern/kernel.asm	/^f0104483:	e8 e6 1f 00 00       	call   f010646e <cpunum>$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	0f ae 40 70          	fxsave 0x70(%eax)$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	e8 d4 1f 00 00       	call   f010646e <cpunum>$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	75 2d                	jne    f01044d9 <trap+0xfd>$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	e8 bd 1f 00 00       	call   f010646e <cpunum>$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	e8 d9 f4 ff ff       	call   f010399b <env_free>$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	e8 a7 1f 00 00       	call   f010646e <cpunum>$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	c7 80 28 20 25 f0 00 	movl   $0x0,-0xfdadfd8(%eax)$/;"	l
f01044d1	obj/kern/kernel.asm	/^f01044d1:	00 00 00 $/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	e8 e7 03 00 00       	call   f01048c0 <sched_yield>$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	e8 90 1f 00 00       	call   f010646e <cpunum>$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	89 c7                	mov    %eax,%edi$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	e8 79 1f 00 00       	call   f010646e <cpunum>$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	8b b0 28 20 25 f0    	mov    -0xfdadfd8(%eax),%esi$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	89 35 60 1a 25 f0    	mov    %esi,0xf0251a60$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a:	75 11                	jne    f010451d <trap+0x141>$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010450f	obj/kern/kernel.asm	/^f010450f:	56                   	push   %esi$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	e8 67 fd ff ff       	call   f010427c <page_fault_handler>$/;"	l
f0104515	obj/kern/kernel.asm	/^f0104515:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104518	obj/kern/kernel.asm	/^f0104518:	e9 c3 00 00 00       	jmp    f01045e0 <trap+0x204>$/;"	l
f010451d	obj/kern/kernel.asm	/^f010451d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	75 11                	jne    f0104533 <trap+0x157>$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	56                   	push   %esi$/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526:	e8 39 ca ff ff       	call   f0100f64 <monitor>$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	e9 ad 00 00 00       	jmp    f01045e0 <trap+0x204>$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	75 11                	jne    f0104549 <trap+0x16d>$/;"	l
f0104538	obj/kern/kernel.asm	/^f0104538:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	56                   	push   %esi$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	e8 23 ca ff ff       	call   f0100f64 <monitor>$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	e9 97 00 00 00       	jmp    f01045e0 <trap+0x204>$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	75 21                	jne    f010456f <trap+0x193>$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	ff 36                	pushl  (%esi)$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	e8 a0 06 00 00       	call   f0104c07 <syscall>$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010456a	obj/kern/kernel.asm	/^f010456a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	eb 71                	jmp    f01045e0 <trap+0x204>$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572:	75 1a                	jne    f010458e <trap+0x1b2>$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	68 84 83 10 f0       	push   $0xf0108384$/;"	l
f010457c	obj/kern/kernel.asm	/^f010457c:	e8 f7 f8 ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	e8 6b fb ff ff       	call   f01040f4 <print_trapframe>$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	83 c4 10             	add    $0x10,%esp$/;"	l
f010458c	obj/kern/kernel.asm	/^f010458c:	eb 52                	jmp    f01045e0 <trap+0x204>$/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	75 0a                	jne    f010459d <trap+0x1c1>$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	e8 21 20 00 00       	call   f01065b9 <lapic_eoi>$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	e8 23 03 00 00       	call   f01048c0 <sched_yield>$/;"	l
f010459d	obj/kern/kernel.asm	/^f010459d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045a0	obj/kern/kernel.asm	/^f01045a0:	56                   	push   %esi$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	e8 4e fb ff ff       	call   f01040f4 <print_trapframe>$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	75 17                	jne    f01045c7 <trap+0x1eb>$/;"	l
f01045b0	obj/kern/kernel.asm	/^f01045b0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01045b3	obj/kern/kernel.asm	/^f01045b3:	68 a1 83 10 f0       	push   $0xf01083a1$/;"	l
f01045b8	obj/kern/kernel.asm	/^f01045b8:	68 f6 00 00 00       	push   $0xf6$/;"	l
f01045bd	obj/kern/kernel.asm	/^f01045bd:	68 58 83 10 f0       	push   $0xf0108358$/;"	l
f01045c2	obj/kern/kernel.asm	/^f01045c2:	e8 79 ba ff ff       	call   f0100040 <_panic>$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	e8 a2 1e 00 00       	call   f010646e <cpunum>$/;"	l
f01045cc	obj/kern/kernel.asm	/^f01045cc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045d2	obj/kern/kernel.asm	/^f01045d2:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	e8 99 f5 ff ff       	call   f0103b76 <env_destroy>$/;"	l
f01045dd	obj/kern/kernel.asm	/^f01045dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045e0	obj/kern/kernel.asm	/^f01045e0:	e8 89 1e 00 00       	call   f010646e <cpunum>$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045e8	obj/kern/kernel.asm	/^f01045e8:	83 b8 28 20 25 f0 00 	cmpl   $0x0,-0xfdadfd8(%eax)$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	74 2a                	je     f010461b <trap+0x23f>$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	e8 78 1e 00 00       	call   f010646e <cpunum>$/;"	l
f01045f6	obj/kern/kernel.asm	/^f01045f6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01045ff	obj/kern/kernel.asm	/^f01045ff:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	75 16                	jne    f010461b <trap+0x23f>$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	e8 64 1e 00 00       	call   f010646e <cpunum>$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	e8 09 f6 ff ff       	call   f0103c24 <env_run>$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	e8 a0 02 00 00       	call   f01048c0 <sched_yield>$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620 <divide_handler>:$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	6a 00                	push   $0x0$/;"	l
f0104622	obj/kern/kernel.asm	/^f0104622:	6a 00                	push   $0x0$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	e9 1d de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	90                   	nop$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a <debug_handler>:$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	6a 00                	push   $0x0$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	6a 01                	push   $0x1$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	e9 13 de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	90                   	nop$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634 <nmi_handler>:$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	6a 00                	push   $0x0$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	6a 02                	push   $0x2$/;"	l
f0104638	obj/kern/kernel.asm	/^f0104638:	e9 09 de 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	90                   	nop$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e <brkpt_handler>:$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	6a 00                	push   $0x0$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	6a 03                	push   $0x3$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	e9 ff dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104647	obj/kern/kernel.asm	/^f0104647:	90                   	nop$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648 <oflow_handler>:$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648:	6a 00                	push   $0x0$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	6a 04                	push   $0x4$/;"	l
f010464c	obj/kern/kernel.asm	/^f010464c:	e9 f5 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	90                   	nop$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652 <bound_handler>:$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	6a 00                	push   $0x0$/;"	l
f0104654	obj/kern/kernel.asm	/^f0104654:	6a 05                	push   $0x5$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	e9 eb dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	90                   	nop$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c <illop_handler>:$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	6a 00                	push   $0x0$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	6a 06                	push   $0x6$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	e9 e1 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	90                   	nop$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666 <device_handler>:$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666:	6a 00                	push   $0x0$/;"	l
f0104668	obj/kern/kernel.asm	/^f0104668:	6a 07                	push   $0x7$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	e9 d7 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	90                   	nop$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670 <dblflt_handler>:$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	6a 08                	push   $0x8$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	e9 cf dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	90                   	nop$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678 <coproc_handler>:$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	6a 00                	push   $0x0$/;"	l
f010467a	obj/kern/kernel.asm	/^f010467a:	6a 09                	push   $0x9$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	e9 c5 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	90                   	nop$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682 <tss_handler>:$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	6a 0a                	push   $0xa$/;"	l
f0104684	obj/kern/kernel.asm	/^f0104684:	e9 bd dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	90                   	nop$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a <segnp_handler>:$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	6a 0b                	push   $0xb$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	e9 b5 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	90                   	nop$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692 <stack_handler>:$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	6a 0c                	push   $0xc$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	e9 ad dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	90                   	nop$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a <gpflt_handler>:$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	6a 0d                	push   $0xd$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	e9 a5 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	90                   	nop$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2 <pgflt_handler>:$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	6a 0e                	push   $0xe$/;"	l
f01046a4	obj/kern/kernel.asm	/^f01046a4:	e9 9d dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046a9	obj/kern/kernel.asm	/^f01046a9:	90                   	nop$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa <res_handler>:$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	6a 00                	push   $0x0$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	6a 0f                	push   $0xf$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	e9 93 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	90                   	nop$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4 <fperr_handler>:$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	6a 00                	push   $0x0$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	6a 10                	push   $0x10$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	e9 89 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd:	90                   	nop$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be <align_handler>:$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	6a 00                	push   $0x0$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	6a 11                	push   $0x11$/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2:	e9 7f dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	90                   	nop$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8 <mchk_handler>:$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8:	6a 00                	push   $0x0$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	6a 12                	push   $0x12$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	e9 75 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	90                   	nop$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2 <simderr_handler>:$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	6a 00                	push   $0x0$/;"	l
f01046d4	obj/kern/kernel.asm	/^f01046d4:	6a 13                	push   $0x13$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	e9 6b dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	90                   	nop$/;"	l
f01046dc	obj/kern/kernel.asm	/^f01046dc <syscall_handler>:$/;"	l
f01046dc	obj/kern/kernel.asm	/^f01046dc:	6a 00                	push   $0x0$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	6a 30                	push   $0x30$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	e9 61 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	90                   	nop$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6 <irq0_handler>:$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	6a 00                	push   $0x0$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	6a 20                	push   $0x20$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	e9 57 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	90                   	nop$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0 <irq1_handler>:$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0:	6a 00                	push   $0x0$/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	6a 21                	push   $0x21$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	e9 4d dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	90                   	nop$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa <irq2_handler>:$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	6a 00                	push   $0x0$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	6a 22                	push   $0x22$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	e9 43 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	90                   	nop$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704 <irq3_handler>:$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	6a 00                	push   $0x0$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	6a 23                	push   $0x23$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	e9 39 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	90                   	nop$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e <irq4_handler>:$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	6a 00                	push   $0x0$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	6a 24                	push   $0x24$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	e9 2f dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	90                   	nop$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718 <irq5_handler>:$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718:	6a 00                	push   $0x0$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	6a 25                	push   $0x25$/;"	l
f010471c	obj/kern/kernel.asm	/^f010471c:	e9 25 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	90                   	nop$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722 <irq6_handler>:$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	6a 00                	push   $0x0$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	6a 26                	push   $0x26$/;"	l
f0104726	obj/kern/kernel.asm	/^f0104726:	e9 1b dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	90                   	nop$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c <irq7_handler>:$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	6a 00                	push   $0x0$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	6a 27                	push   $0x27$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	e9 11 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	90                   	nop$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736 <irq8_handler>:$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	6a 00                	push   $0x0$/;"	l
f0104738	obj/kern/kernel.asm	/^f0104738:	6a 28                	push   $0x28$/;"	l
f010473a	obj/kern/kernel.asm	/^f010473a:	e9 07 dd 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	90                   	nop$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740 <irq9_handler>:$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	6a 00                	push   $0x0$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	6a 29                	push   $0x29$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	e9 fd dc 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	90                   	nop$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a <irq10_handler>:$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	6a 00                	push   $0x0$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	6a 2a                	push   $0x2a$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	e9 f3 dc 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	90                   	nop$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754 <irq11_handler>:$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	6a 00                	push   $0x0$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	6a 2b                	push   $0x2b$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	e9 e9 dc 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010475d	obj/kern/kernel.asm	/^f010475d:	90                   	nop$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e <irq12_handler>:$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	6a 00                	push   $0x0$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	6a 2c                	push   $0x2c$/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762:	e9 df dc 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	90                   	nop$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768 <irq13_handler>:$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	6a 00                	push   $0x0$/;"	l
f010476a	obj/kern/kernel.asm	/^f010476a:	6a 2d                	push   $0x2d$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	e9 d5 dc 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104771	obj/kern/kernel.asm	/^f0104771:	90                   	nop$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772 <irq14_handler>:$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	6a 00                	push   $0x0$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	6a 2e                	push   $0x2e$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	e9 cb dc 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f010477b	obj/kern/kernel.asm	/^f010477b:	90                   	nop$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c <irq15_handler>:$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	6a 00                	push   $0x0$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	6a 2f                	push   $0x2f$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	e9 c1 dc 01 00       	jmp    f0122446 <_alltraps>$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	90                   	nop$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786 <sysenter_handler>:$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786:	fa                   	cli    $/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	fc                   	cld    $/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	56                   	push   %esi$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	55                   	push   %ebp$/;"	l
f010478a	obj/kern/kernel.asm	/^f010478a:	57                   	push   %edi$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	53                   	push   %ebx$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	51                   	push   %ecx$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	52                   	push   %edx$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	50                   	push   %eax$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	8e c0                	mov    %eax,%es$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	8e d8                	mov    %eax,%ds$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	e8 3b 1f 00 00       	call   f01066dc <spin_lock>$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	83 c4 04             	add    $0x4,%esp$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	e8 5e 04 00 00       	call   f0104c07 <syscall>$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	50                   	push   %eax$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	e8 c5 1f 00 00       	call   f0106779 <spin_unlock>$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	58                   	pop    %eax$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	58                   	pop    %eax$/;"	l
f01047b6	obj/kern/kernel.asm	/^f01047b6:	66 bb 20 00          	mov    $0x20,%bx$/;"	l
f01047ba	obj/kern/kernel.asm	/^f01047ba:	8e c3                	mov    %ebx,%es$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	8e db                	mov    %ebx,%ds$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	83 c4 14             	add    $0x14,%esp$/;"	l
f01047c1	obj/kern/kernel.asm	/^f01047c1:	59                   	pop    %ecx$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	5a                   	pop    %edx$/;"	l
f01047c3	obj/kern/kernel.asm	/^f01047c3:	fb                   	sti    $/;"	l
f01047c4	obj/kern/kernel.asm	/^f01047c4:	0f 35                	sysexit $/;"	l
f01047c6	obj/kern/kernel.asm	/^f01047c6 <srand>:$/;"	l
f01047c6	obj/kern/kernel.asm	/^f01047c6:	55                   	push   %ebp$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01047c9	obj/kern/kernel.asm	/^f01047c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	a3 58 24 12 f0       	mov    %eax,0xf0122458$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	5d                   	pop    %ebp$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	c3                   	ret    $/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3 <lottery_sched_init>:$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	55                   	push   %ebp$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	89 e5                	mov    %esp,%ebp$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	c6 05 64 1a 25 f0 01 	movb   $0x1,0xf0251a64$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	c7 05 58 24 12 f0 bb 	movl   $0x6eb69abb,0xf0122458$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	9a b6 6e $/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	5d                   	pop    %ebp$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	c3                   	ret    $/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9 <sched_halt>:$/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	55                   	push   %ebp$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	a1 48 12 25 f0       	mov    0xf0251248,%eax$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f01047f7	obj/kern/kernel.asm	/^f01047f7:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	8b 02                	mov    (%edx),%eax$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	76 13                	jbe    f0104819 <sched_halt+0x30>$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104809	obj/kern/kernel.asm	/^f0104809:	81 c2 90 02 00 00    	add    $0x290,%edx$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	75 e5                	jne    f01047fc <sched_halt+0x13>$/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	eb 08                	jmp    f0104821 <sched_halt+0x38>$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	75 1f                	jne    f0104840 <sched_halt+0x57>$/;"	l
f0104821	obj/kern/kernel.asm	/^f0104821:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	68 90 85 10 f0       	push   $0xf0108590$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	e8 4a f6 ff ff       	call   f0103e78 <cprintf>$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	6a 00                	push   $0x0$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	e8 29 c7 ff ff       	call   f0100f64 <monitor>$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	eb f1                	jmp    f0104831 <sched_halt+0x48>$/;"	l
f0104840	obj/kern/kernel.asm	/^f0104840:	e8 29 1c 00 00       	call   f010646e <cpunum>$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848:	c7 80 28 20 25 f0 00 	movl   $0x0,-0xfdadfd8(%eax)$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	00 00 00 $/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	a1 90 1e 25 f0       	mov    0xf0251e90,%eax$/;"	l
f0104857	obj/kern/kernel.asm	/^f0104857:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	77 12                	ja     f0104870 <sched_halt+0x87>$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	50                   	push   %eax$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	68 48 6b 10 f0       	push   $0xf0106b48$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	6a 76                	push   $0x76$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	68 b9 85 10 f0       	push   $0xf01085b9$/;"	l
f010486b	obj/kern/kernel.asm	/^f010486b:	e8 d0 b7 ff ff       	call   f0100040 <_panic>$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	e8 f1 1b 00 00       	call   f010646e <cpunum>$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	81 c2 20 20 25 f0    	add    $0xf0252020,%edx$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104892	obj/kern/kernel.asm	/^f0104892:	68 60 24 12 f0       	push   $0xf0122460$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	e8 dd 1e 00 00       	call   f0106779 <spin_unlock>$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	f3 90                	pause  $/;"	l
f010489e	obj/kern/kernel.asm	/^f010489e:	e8 cb 1b 00 00       	call   f010646e <cpunum>$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	8b 80 30 20 25 f0    	mov    -0xfdadfd0(%eax),%eax$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	89 c4                	mov    %eax,%esp$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	6a 00                	push   $0x0$/;"	l
f01048b5	obj/kern/kernel.asm	/^f01048b5:	6a 00                	push   $0x0$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	fb                   	sti    $/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8:	f4                   	hlt    $/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	eb fd                	jmp    f01048b8 <sched_halt+0xcf>$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	c9                   	leave  $/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	c3                   	ret    $/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0 <sched_yield>:$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	55                   	push   %ebp$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01048c3	obj/kern/kernel.asm	/^f01048c3:	57                   	push   %edi$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	56                   	push   %esi$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	53                   	push   %ebx$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01048c9	obj/kern/kernel.asm	/^f01048c9:	e8 a0 1b 00 00       	call   f010646e <cpunum>$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	83 b8 28 20 25 f0 00 	cmpl   $0x0,-0xfdadfd8(%eax)$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	74 17                	je     f01048f6 <sched_yield+0x36>$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	e8 8a 1b 00 00       	call   f010646e <cpunum>$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f01048f6	obj/kern/kernel.asm	/^f01048f6:	80 3d 64 1a 25 f0 00 	cmpb   $0x0,0xf0251a64$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	0f 84 b5 00 00 00    	je     f01049b8 <sched_yield+0xf8>$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	a1 48 12 25 f0       	mov    0xf0251248,%eax$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	83 c0 54             	add    $0x54,%eax$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	89 c7                	mov    %eax,%edi$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	8b 08                	mov    (%eax),%ecx$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	74 09                	je     f0104927 <sched_yield+0x67>$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	39 d3                	cmp    %edx,%ebx$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	75 0b                	jne    f010492d <sched_yield+0x6d>$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	83 f9 03             	cmp    $0x3,%ecx$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	75 06                	jne    f010492d <sched_yield+0x6d>$/;"	l
f0104927	obj/kern/kernel.asm	/^f0104927:	03 b7 38 02 00 00    	add    0x238(%edi),%esi$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f010493b	obj/kern/kernel.asm	/^f010493b:	75 d8                	jne    f0104915 <sched_yield+0x55>$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	85 f6                	test   %esi,%esi$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	75 05                	jne    f0104946 <sched_yield+0x86>$/;"	l
f0104941	obj/kern/kernel.asm	/^f0104941:	e8 a3 fe ff ff       	call   f01047e9 <sched_halt>$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	69 05 58 24 12 f0 6d 	imul   $0x41c64e6d,0xf0122458,%eax$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	4e c6 41 $/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	05 39 30 00 00       	add    $0x3039,%eax$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	a3 58 24 12 f0       	mov    %eax,0xf0122458$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	f7 f6                	div    %esi$/;"	l
f0104961	obj/kern/kernel.asm	/^f0104961:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	a1 48 12 25 f0       	mov    0xf0251248,%eax$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979:	89 c6                	mov    %eax,%esi$/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	8b 48 54             	mov    0x54(%eax),%ecx$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	74 0a                	je     f010498d <sched_yield+0xcd>$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	39 55 e0             	cmp    %edx,-0x20(%ebp)$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	75 18                	jne    f01049a0 <sched_yield+0xe0>$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	83 f9 03             	cmp    $0x3,%ecx$/;"	l
f010498b	obj/kern/kernel.asm	/^f010498b:	75 13                	jne    f01049a0 <sched_yield+0xe0>$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	03 be 8c 02 00 00    	add    0x28c(%esi),%edi$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	39 fb                	cmp    %edi,%ebx$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	7f 09                	jg     f01049a0 <sched_yield+0xe0>$/;"	l
f0104997	obj/kern/kernel.asm	/^f0104997:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	56                   	push   %esi$/;"	l
f010499b	obj/kern/kernel.asm	/^f010499b:	e8 84 f2 ff ff       	call   f0103c24 <env_run>$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	83 c2 01             	add    $0x1,%edx$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	75 c9                	jne    f0104979 <sched_yield+0xb9>$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	e8 31 fe ff ff       	call   f01047e9 <sched_halt>$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	8b 0d 48 12 25 f0    	mov    0xf0251248,%ecx$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	69 f2 90 02 00 00    	imul   $0x290,%edx,%esi$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	8d 04 31             	lea    (%ecx,%esi,1),%eax$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	eb 1c                	jmp    f01049e8 <sched_yield+0x128>$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	89 c7                	mov    %eax,%edi$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	83 b8 c4 fd ff ff 02 	cmpl   $0x2,-0x23c(%eax)$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	75 09                	jne    f01049e5 <sched_yield+0x125>$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	57                   	push   %edi$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	e8 3f f2 ff ff       	call   f0103c24 <env_run>$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	83 c2 01             	add    $0x1,%edx$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	7e dc                	jle    f01049cc <sched_yield+0x10c>$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	89 c8                	mov    %ecx,%eax$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	eb 1c                	jmp    f0104a15 <sched_yield+0x155>$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	89 c7                	mov    %eax,%edi$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	05 90 02 00 00       	add    $0x290,%eax$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	83 b8 c4 fd ff ff 02 	cmpl   $0x2,-0x23c(%eax)$/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	75 09                	jne    f0104a12 <sched_yield+0x152>$/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	57                   	push   %edi$/;"	l
f0104a0d	obj/kern/kernel.asm	/^f0104a0d:	e8 12 f2 ff ff       	call   f0103c24 <env_run>$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	39 d3                	cmp    %edx,%ebx$/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	7f e0                	jg     f01049f9 <sched_yield+0x139>$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	85 db                	test   %ebx,%ebx$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	78 16                	js     f0104a33 <sched_yield+0x173>$/;"	l
f0104a1d	obj/kern/kernel.asm	/^f0104a1d:	8d 84 31 70 fd ff ff 	lea    -0x290(%ecx,%esi,1),%eax$/;"	l
f0104a24	obj/kern/kernel.asm	/^f0104a24:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	75 09                	jne    f0104a33 <sched_yield+0x173>$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	50                   	push   %eax$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	e8 f1 f1 ff ff       	call   f0103c24 <env_run>$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	e8 b1 fd ff ff       	call   f01047e9 <sched_halt>$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	5b                   	pop    %ebx$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	5e                   	pop    %esi$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	5f                   	pop    %edi$/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	5d                   	pop    %ebp$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	c3                   	ret    $/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40 <ipc_try_recv>:$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	55                   	push   %ebp$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	57                   	push   %edi$/;"	l
f0104a44	obj/kern/kernel.asm	/^f0104a44:	56                   	push   %esi$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	53                   	push   %ebx$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	8b b0 84 02 00 00    	mov    0x284(%eax),%esi$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	80 b8 70 02 00 00 00 	cmpb   $0x0,0x270(%eax)$/;"	l
f0104a56	obj/kern/kernel.asm	/^f0104a56:	0f 84 63 01 00 00    	je     f0104bbf <ipc_try_recv+0x17f>$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	85 f6                	test   %esi,%esi$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	0f 84 62 01 00 00    	je     f0104bc6 <ipc_try_recv+0x186>$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	89 c3                	mov    %eax,%ebx$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	8b be 74 02 00 00    	mov    0x274(%esi),%edi$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	0f 87 f8 00 00 00    	ja     f0104b70 <ipc_try_recv+0x130>$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	8b 80 74 02 00 00    	mov    0x274(%eax),%eax$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	0f 87 e4 00 00 00    	ja     f0104b70 <ipc_try_recv+0x130>$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	8b 86 80 02 00 00    	mov    0x280(%esi),%eax$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	8b 53 48             	mov    0x48(%ebx),%edx$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	6a 00                	push   $0x0$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	50                   	push   %eax$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	ff 76 48             	pushl  0x48(%esi)$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	e8 e6 ea ff ff       	call   f0103592 <envid2env>$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	0f 84 96 00 00 00    	je     f0104b4e <ipc_try_recv+0x10e>$/;"	l
f0104ab8	obj/kern/kernel.asm	/^f0104ab8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	6a 00                	push   $0x0$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	50                   	push   %eax$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	e8 c9 ea ff ff       	call   f0103592 <envid2env>$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	74 7d                	je     f0104b4e <ipc_try_recv+0x10e>$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	0f 85 f0 00 00 00    	jne    f0104bcd <ipc_try_recv+0x18d>$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	f7 45 d4 ff 0f 00 00 	testl  $0xfff,-0x2c(%ebp)$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	0f 85 ed 00 00 00    	jne    f0104bd7 <ipc_try_recv+0x197>$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	0f 85 e6 00 00 00    	jne    f0104be1 <ipc_try_recv+0x1a1>$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	50                   	push   %eax$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	57                   	push   %edi$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104b09	obj/kern/kernel.asm	/^f0104b09:	e8 63 cd ff ff       	call   f0101871 <page_lookup>$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b11	obj/kern/kernel.asm	/^f0104b11:	85 c0                	test   %eax,%eax$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	0f 84 d2 00 00 00    	je     f0104beb <ipc_try_recv+0x1ab>$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104b1c	obj/kern/kernel.asm	/^f0104b1c:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	75 0a                	jne    f0104b2b <ipc_try_recv+0xeb>$/;"	l
f0104b21	obj/kern/kernel.asm	/^f0104b21:	f6 45 d0 02          	testb  $0x2,-0x30(%ebp)$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	0f 85 ca 00 00 00    	jne    f0104bf5 <ipc_try_recv+0x1b5>$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	50                   	push   %eax$/;"	l
f0104b32	obj/kern/kernel.asm	/^f0104b32:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	e8 15 ce ff ff       	call   f0101952 <page_insert>$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	85 c0                	test   %eax,%eax$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f0104b4a	obj/kern/kernel.asm	/^f0104b4a:	85 c0                	test   %eax,%eax$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	79 16                	jns    f0104b64 <ipc_try_recv+0x124>$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	c6 86 71 02 00 00 00 	movb   $0x0,0x271(%esi)$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	c7 46 54 02 00 00 00 	movl   $0x2,0x54(%esi)$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104b5f	obj/kern/kernel.asm	/^f0104b5f:	e9 9b 00 00 00       	jmp    f0104bff <ipc_try_recv+0x1bf>$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	8b 86 80 02 00 00    	mov    0x280(%esi),%eax$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	89 83 80 02 00 00    	mov    %eax,0x280(%ebx)$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	c6 86 71 02 00 00 00 	movb   $0x0,0x271(%esi)$/;"	l
f0104b77	obj/kern/kernel.asm	/^f0104b77:	c7 46 54 02 00 00 00 	movl   $0x2,0x54(%esi)$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	c7 46 1c 00 00 00 00 	movl   $0x0,0x1c(%esi)$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	c6 83 70 02 00 00 00 	movb   $0x0,0x270(%ebx)$/;"	l
f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	8b 46 48             	mov    0x48(%esi),%eax$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	89 83 7c 02 00 00    	mov    %eax,0x27c(%ebx)$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	8b 86 78 02 00 00    	mov    0x278(%esi),%eax$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	89 83 78 02 00 00    	mov    %eax,0x278(%ebx)$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	8b 46 44             	mov    0x44(%esi),%eax$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	89 83 84 02 00 00    	mov    %eax,0x284(%ebx)$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	eb 40                	jmp    f0104bff <ipc_try_recv+0x1bf>$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	eb 39                	jmp    f0104bff <ipc_try_recv+0x1bf>$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	eb 32                	jmp    f0104bff <ipc_try_recv+0x1bf>$/;"	l
f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	e9 77 ff ff ff       	jmp    f0104b4e <ipc_try_recv+0x10e>$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	e9 6d ff ff ff       	jmp    f0104b4e <ipc_try_recv+0x10e>$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	e9 63 ff ff ff       	jmp    f0104b4e <ipc_try_recv+0x10e>$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	e9 59 ff ff ff       	jmp    f0104b4e <ipc_try_recv+0x10e>$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104bfa	obj/kern/kernel.asm	/^f0104bfa:	e9 4f ff ff ff       	jmp    f0104b4e <ipc_try_recv+0x10e>$/;"	l
f0104bff	obj/kern/kernel.asm	/^f0104bff:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	5b                   	pop    %ebx$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	5e                   	pop    %esi$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	5f                   	pop    %edi$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	5d                   	pop    %ebp$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	c3                   	ret    $/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07 <syscall>:$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	55                   	push   %ebp$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	57                   	push   %edi$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	56                   	push   %esi$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	53                   	push   %ebx$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0104c16	obj/kern/kernel.asm	/^f0104c16:	0f 87 d1 05 00 00    	ja     f01051ed <syscall+0x5e6>$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	ff 24 85 00 86 10 f0 	jmp    *-0xfef7a00(,%eax,4)$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	e8 46 18 00 00       	call   f010646e <cpunum>$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	6a 04                	push   $0x4$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	e8 86 e8 ff ff       	call   f01034c4 <user_mem_assert>$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104c41	obj/kern/kernel.asm	/^f0104c41:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	68 c6 85 10 f0       	push   $0xf01085c6$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	e8 27 f2 ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c57	obj/kern/kernel.asm	/^f0104c57:	e9 9d 05 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	e8 7f b9 ff ff       	call   f01005e0 <cons_getc>$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	e9 93 05 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	e8 03 18 00 00       	call   f010646e <cpunum>$/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	e9 7d 05 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	6a 01                	push   $0x1$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	50                   	push   %eax$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	e8 05 e9 ff ff       	call   f0103592 <envid2env>$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	85 c0                	test   %eax,%eax$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	0f 88 61 05 00 00    	js     f01051f9 <syscall+0x5f2>$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	e8 d1 17 00 00       	call   f010646e <cpunum>$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	39 90 28 20 25 f0    	cmp    %edx,-0xfdadfd8(%eax)$/;"	l
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	75 23                	jne    f0104cce <syscall+0xc7>$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	e8 be 17 00 00       	call   f010646e <cpunum>$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cb6	obj/kern/kernel.asm	/^f0104cb6:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104cbf	obj/kern/kernel.asm	/^f0104cbf:	68 cb 85 10 f0       	push   $0xf01085cb$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	e8 af f1 ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	eb 25                	jmp    f0104cf3 <syscall+0xec>$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	e8 98 17 00 00       	call   f010646e <cpunum>$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104cd9	obj/kern/kernel.asm	/^f0104cd9:	53                   	push   %ebx$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cdd	obj/kern/kernel.asm	/^f0104cdd:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0104ce3	obj/kern/kernel.asm	/^f0104ce3:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	68 e6 85 10 f0       	push   $0xf01085e6$/;"	l
f0104ceb	obj/kern/kernel.asm	/^f0104ceb:	e8 88 f1 ff ff       	call   f0103e78 <cprintf>$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	e8 78 ee ff ff       	call   f0103b76 <env_destroy>$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	e9 ee 04 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104d0e	obj/kern/kernel.asm	/^f0104d0e:	6a 01                	push   $0x1$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104d13	obj/kern/kernel.asm	/^f0104d13:	50                   	push   %eax$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	e8 76 e8 ff ff       	call   f0103592 <envid2env>$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	0f 84 d1 04 00 00    	je     f01051f9 <syscall+0x5f2>$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	6a 01                	push   $0x1$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	e8 61 c8 ff ff       	call   f0101593 <page_alloc>$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	89 c3                	mov    %eax,%ebx$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	85 c0                	test   %eax,%eax$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	74 4e                	je     f0104d89 <syscall+0x182>$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	77 4f                	ja     f0104d93 <syscall+0x18c>$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	75 50                	jne    f0104d9d <syscall+0x196>$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	75 4d                	jne    f0104da7 <syscall+0x1a0>$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	53                   	push   %ebx$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67:	e8 e6 cb ff ff       	call   f0101952 <page_insert>$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	85 c0                	test   %eax,%eax$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	79 3e                	jns    f0104db1 <syscall+0x1aa>$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	53                   	push   %ebx$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	e8 87 c8 ff ff       	call   f0101603 <page_free>$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	e9 70 04 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	e9 66 04 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104d93	obj/kern/kernel.asm	/^f0104d93:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	e9 5c 04 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	e9 52 04 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	e9 48 04 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	e9 3e 04 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	6a 01                	push   $0x1$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	50                   	push   %eax$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	e8 c6 e7 ff ff       	call   f0103592 <envid2env>$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	0f 84 21 04 00 00    	je     f01051f9 <syscall+0x5f2>$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	6a 01                	push   $0x1$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	50                   	push   %eax$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	e8 a9 e7 ff ff       	call   f0103592 <envid2env>$/;"	l
f0104de9	obj/kern/kernel.asm	/^f0104de9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	0f 84 04 04 00 00    	je     f01051f9 <syscall+0x5f2>$/;"	l
f0104df5	obj/kern/kernel.asm	/^f0104df5:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	77 76                	ja     f0104e74 <syscall+0x26d>$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104e05	obj/kern/kernel.asm	/^f0104e05:	75 77                	jne    f0104e7e <syscall+0x277>$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	77 6e                	ja     f0104e7e <syscall+0x277>$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	75 6f                	jne    f0104e88 <syscall+0x281>$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	75 6c                	jne    f0104e92 <syscall+0x28b>$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104e29	obj/kern/kernel.asm	/^f0104e29:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	50                   	push   %eax$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	e8 36 ca ff ff       	call   f0101871 <page_lookup>$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	85 c0                	test   %eax,%eax$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	74 5a                	je     f0104e9c <syscall+0x295>$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	75 06                	jne    f0104e50 <syscall+0x249>$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	75 56                	jne    f0104ea6 <syscall+0x29f>$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	50                   	push   %eax$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104e5d	obj/kern/kernel.asm	/^f0104e5d:	e8 f0 ca ff ff       	call   f0101952 <page_insert>$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	85 c0                	test   %eax,%eax$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104e6c	obj/kern/kernel.asm	/^f0104e6c:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	e9 85 03 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	e9 7b 03 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	e9 71 03 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	e9 67 03 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	e9 5d 03 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	e9 53 03 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104ea6	obj/kern/kernel.asm	/^f0104ea6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	e9 49 03 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	6a 01                	push   $0x1$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	50                   	push   %eax$/;"	l
f0104eb9	obj/kern/kernel.asm	/^f0104eb9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	e8 d1 e6 ff ff       	call   f0103592 <envid2env>$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104ec7	obj/kern/kernel.asm	/^f0104ec7:	0f 84 2c 03 00 00    	je     f01051f9 <syscall+0x5f2>$/;"	l
f0104ecd	obj/kern/kernel.asm	/^f0104ecd:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	77 27                	ja     f0104efd <syscall+0x2f6>$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	75 28                	jne    f0104f07 <syscall+0x300>$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	e8 1c ca ff ff       	call   f010190c <page_remove>$/;"	l
f0104ef0	obj/kern/kernel.asm	/^f0104ef0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	e9 fc 02 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	e9 f2 02 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	e9 e8 02 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104f11	obj/kern/kernel.asm	/^f0104f11:	e8 58 15 00 00       	call   f010646e <cpunum>$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0104f22	obj/kern/kernel.asm	/^f0104f22:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	50                   	push   %eax$/;"	l
f0104f29	obj/kern/kernel.asm	/^f0104f29:	e8 93 e7 ff ff       	call   f01036c1 <env_alloc>$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31:	85 c0                	test   %eax,%eax$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	0f 88 c0 02 00 00    	js     f01051f9 <syscall+0x5f2>$/;"	l
f0104f39	obj/kern/kernel.asm	/^f0104f39:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0104f43	obj/kern/kernel.asm	/^f0104f43:	e8 26 15 00 00       	call   f010646e <cpunum>$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	8b b0 28 20 25 f0    	mov    -0xfdadfd8(%eax),%esi$/;"	l
f0104f51	obj/kern/kernel.asm	/^f0104f51:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	89 df                	mov    %ebx,%edi$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	e9 8d 02 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	6a 01                	push   $0x1$/;"	l
f0104f71	obj/kern/kernel.asm	/^f0104f71:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	50                   	push   %eax$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104f78	obj/kern/kernel.asm	/^f0104f78:	e8 15 e6 ff ff       	call   f0103592 <envid2env>$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	0f 84 70 02 00 00    	je     f01051f9 <syscall+0x5f2>$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104f8f	obj/kern/kernel.asm	/^f0104f8f:	a9 fd ff ff ff       	test   $0xfffffffd,%eax$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	75 13                	jne    f0104fa9 <syscall+0x3a2>$/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	89 70 54             	mov    %esi,0x54(%eax)$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	e9 50 02 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104fae	obj/kern/kernel.asm	/^f0104fae:	e9 46 02 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104fb3	obj/kern/kernel.asm	/^f0104fb3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	6a 01                	push   $0x1$/;"	l
f0104fb8	obj/kern/kernel.asm	/^f0104fb8:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	50                   	push   %eax$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	e8 ce e5 ff ff       	call   f0103592 <envid2env>$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104fca	obj/kern/kernel.asm	/^f0104fca:	0f 84 29 02 00 00    	je     f01051f9 <syscall+0x5f2>$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	89 48 64             	mov    %ecx,0x64(%eax)$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	e9 16 02 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	6a 01                	push   $0x1$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	50                   	push   %eax$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104fef	obj/kern/kernel.asm	/^f0104fef:	e8 9e e5 ff ff       	call   f0103592 <envid2env>$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ff7	obj/kern/kernel.asm	/^f0104ff7:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	0f 84 f9 01 00 00    	je     f01051f9 <syscall+0x5f2>$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	0f b6 55 10          	movzbl 0x10(%ebp),%edx$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	89 90 8c 02 00 00    	mov    %edx,0x28c(%eax)$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	e9 e2 01 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	e8 a4 f8 ff ff       	call   f01048c0 <sched_yield>$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	6a 00                	push   $0x0$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	50                   	push   %eax$/;"	l
f0105025	obj/kern/kernel.asm	/^f0105025:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028:	e8 65 e5 ff ff       	call   f0103592 <envid2env>$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	0f 84 c0 01 00 00    	je     f01051f9 <syscall+0x5f2>$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f0105040	obj/kern/kernel.asm	/^f0105040:	77 55                	ja     f0105097 <syscall+0x490>$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f0105049	obj/kern/kernel.asm	/^f0105049:	75 42                	jne    f010508d <syscall+0x486>$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	75 35                	jne    f010508d <syscall+0x486>$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	e8 11 14 00 00       	call   f010646e <cpunum>$/;"	l
f010505d	obj/kern/kernel.asm	/^f010505d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	52                   	push   %edx$/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010506a	obj/kern/kernel.asm	/^f010506a:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	e8 f9 c7 ff ff       	call   f0101871 <page_lookup>$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	83 c4 10             	add    $0x10,%esp$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	85 c0                	test   %eax,%eax$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	74 0e                	je     f010508d <syscall+0x486>$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	75 10                	jne    f0105097 <syscall+0x490>$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	74 0a                	je     f0105097 <syscall+0x490>$/;"	l
f010508d	obj/kern/kernel.asm	/^f010508d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	e9 62 01 00 00       	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	e8 d2 13 00 00       	call   f010646e <cpunum>$/;"	l
f010509c	obj/kern/kernel.asm	/^f010509c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	c6 80 71 02 00 00 01 	movb   $0x1,0x271(%eax)$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	e8 bd 13 00 00       	call   f010646e <cpunum>$/;"	l
f01050b1	obj/kern/kernel.asm	/^f01050b1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	e8 a8 13 00 00       	call   f010646e <cpunum>$/;"	l
f01050c6	obj/kern/kernel.asm	/^f01050c6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	89 b8 78 02 00 00    	mov    %edi,0x278(%eax)$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	e8 91 13 00 00       	call   f010646e <cpunum>$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	89 88 74 02 00 00    	mov    %ecx,0x274(%eax)$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	e8 7a 13 00 00       	call   f010646e <cpunum>$/;"	l
f01050f4	obj/kern/kernel.asm	/^f01050f4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050f7	obj/kern/kernel.asm	/^f01050f7:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	89 b8 80 02 00 00    	mov    %edi,0x280(%eax)$/;"	l
f0105106	obj/kern/kernel.asm	/^f0105106:	e8 63 13 00 00       	call   f010646e <cpunum>$/;"	l
f010510b	obj/kern/kernel.asm	/^f010510b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
f010511b	obj/kern/kernel.asm	/^f010511b:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010511e	obj/kern/kernel.asm	/^f010511e:	83 bb 84 02 00 00 00 	cmpl   $0x0,0x284(%ebx)$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	75 1c                	jne    f0105143 <syscall+0x53c>$/;"	l
f0105127	obj/kern/kernel.asm	/^f0105127:	e8 42 13 00 00       	call   f010646e <cpunum>$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	89 83 88 02 00 00    	mov    %eax,0x288(%ebx)$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	89 83 84 02 00 00    	mov    %eax,0x284(%ebx)$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	eb 2e                	jmp    f0105171 <syscall+0x56a>$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	8b 9b 88 02 00 00    	mov    0x288(%ebx),%ebx$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	e8 20 13 00 00       	call   f010646e <cpunum>$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	89 43 44             	mov    %eax,0x44(%ebx)$/;"	l
f010515a	obj/kern/kernel.asm	/^f010515a:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	e8 0c 13 00 00       	call   f010646e <cpunum>$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	89 83 88 02 00 00    	mov    %eax,0x288(%ebx)$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	e8 c7 f8 ff ff       	call   f0104a40 <ipc_try_recv>$/;"	l
f0105179	obj/kern/kernel.asm	/^f0105179:	e8 42 f7 ff ff       	call   f01048c0 <sched_yield>$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	77 09                	ja     f0105190 <syscall+0x589>$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	75 64                	jne    f01051f4 <syscall+0x5ed>$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190:	e8 d9 12 00 00       	call   f010646e <cpunum>$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	c6 80 70 02 00 00 01 	movb   $0x1,0x270(%eax)$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	e8 c4 12 00 00       	call   f010646e <cpunum>$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01051ad	obj/kern/kernel.asm	/^f01051ad:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01051b3	obj/kern/kernel.asm	/^f01051b3:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	89 b8 74 02 00 00    	mov    %edi,0x274(%eax)$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	e8 ad 12 00 00       	call   f010646e <cpunum>$/;"	l
f01051c1	obj/kern/kernel.asm	/^f01051c1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	e8 98 12 00 00       	call   f010646e <cpunum>$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01051d9	obj/kern/kernel.asm	/^f01051d9:	8b 80 28 20 25 f0    	mov    -0xfdadfd8(%eax),%eax$/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	e8 5c f8 ff ff       	call   f0104a40 <ipc_try_recv>$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	85 c0                	test   %eax,%eax$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	74 11                	je     f01051f9 <syscall+0x5f2>$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	e8 d3 f6 ff ff       	call   f01048c0 <sched_yield>$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	eb 05                	jmp    f01051f9 <syscall+0x5f2>$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01051f9	obj/kern/kernel.asm	/^f01051f9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc:	5b                   	pop    %ebx$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	5e                   	pop    %esi$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	5f                   	pop    %edi$/;"	l
f01051ff	obj/kern/kernel.asm	/^f01051ff:	5d                   	pop    %ebp$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	c3                   	ret    $/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201 <stab_binsearch>:$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	55                   	push   %ebp$/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	89 e5                	mov    %esp,%ebp$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	57                   	push   %edi$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	56                   	push   %esi$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	53                   	push   %ebx$/;"	l
f0105207	obj/kern/kernel.asm	/^f0105207:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105213	obj/kern/kernel.asm	/^f0105213:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105218	obj/kern/kernel.asm	/^f0105218:	8b 01                	mov    (%ecx),%eax$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	eb 7f                	jmp    f01052a5 <stab_binsearch+0xa4>$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	01 d8                	add    %ebx,%eax$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	89 c6                	mov    %eax,%esi$/;"	l
f010522d	obj/kern/kernel.asm	/^f010522d:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	01 c6                	add    %eax,%esi$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	d1 fe                	sar    %esi$/;"	d
f0105234	obj/kern/kernel.asm	/^f0105234:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0105237	obj/kern/kernel.asm	/^f0105237:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010523a	obj/kern/kernel.asm	/^f010523a:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f010523d	obj/kern/kernel.asm	/^f010523d:	89 f0                	mov    %esi,%eax$/;"	l
f010523f	obj/kern/kernel.asm	/^f010523f:	eb 03                	jmp    f0105244 <stab_binsearch+0x43>$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	7f 0d                	jg     f0105255 <stab_binsearch+0x54>$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	39 f9                	cmp    %edi,%ecx$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	75 ee                	jne    f0105241 <stab_binsearch+0x40>$/;"	l
f0105253	obj/kern/kernel.asm	/^f0105253:	eb 05                	jmp    f010525a <stab_binsearch+0x59>$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	eb 4b                	jmp    f01052a5 <stab_binsearch+0xa4>$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	76 11                	jbe    f010527a <stab_binsearch+0x79>$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	89 03                	mov    %eax,(%ebx)$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	eb 2b                	jmp    f01052a5 <stab_binsearch+0xa4>$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	73 14                	jae    f0105293 <stab_binsearch+0x92>$/;"	l
f010527f	obj/kern/kernel.asm	/^f010527f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	89 06                	mov    %eax,(%esi)$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	eb 12                	jmp    f01052a5 <stab_binsearch+0xa4>$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	89 06                	mov    %eax,(%esi)$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	89 c3                	mov    %eax,%ebx$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	0f 8e 78 ff ff ff    	jle    f0105226 <stab_binsearch+0x25>$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	75 0f                	jne    f01052c3 <stab_binsearch+0xc2>$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	8b 00                	mov    (%eax),%eax$/;"	l
f01052b9	obj/kern/kernel.asm	/^f01052b9:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01052bc	obj/kern/kernel.asm	/^f01052bc:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	89 06                	mov    %eax,(%esi)$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	eb 2c                	jmp    f01052ef <stab_binsearch+0xee>$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6:	8b 00                	mov    (%eax),%eax$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	8b 0e                	mov    (%esi),%ecx$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f01052d3	obj/kern/kernel.asm	/^f01052d3:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	eb 03                	jmp    f01052db <stab_binsearch+0xda>$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01052db	obj/kern/kernel.asm	/^f01052db:	39 c8                	cmp    %ecx,%eax$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	7e 0b                	jle    f01052ea <stab_binsearch+0xe9>$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f01052e3	obj/kern/kernel.asm	/^f01052e3:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	39 df                	cmp    %ebx,%edi$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	75 ee                	jne    f01052d8 <stab_binsearch+0xd7>$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	89 06                	mov    %eax,(%esi)$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	83 c4 14             	add    $0x14,%esp$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	5b                   	pop    %ebx$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	5e                   	pop    %esi$/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	5f                   	pop    %edi$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	5d                   	pop    %ebp$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	c3                   	ret    $/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7 <debuginfo_eip>:$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	55                   	push   %ebp$/;"	l
f01052f8	obj/kern/kernel.asm	/^f01052f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	57                   	push   %edi$/;"	l
f01052fb	obj/kern/kernel.asm	/^f01052fb:	56                   	push   %esi$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	53                   	push   %ebx$/;"	l
f01052fd	obj/kern/kernel.asm	/^f01052fd:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105303	obj/kern/kernel.asm	/^f0105303:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105306	obj/kern/kernel.asm	/^f0105306:	c7 03 38 86 10 f0    	movl   $0xf0108638,(%ebx)$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	c7 43 08 38 86 10 f0 	movl   $0xf0108638,0x8(%ebx)$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0105331	obj/kern/kernel.asm	/^f0105331:	0f 87 a4 00 00 00    	ja     f01053db <debuginfo_eip+0xe4>$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	e8 32 11 00 00       	call   f010646e <cpunum>$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	6a 04                	push   $0x4$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	6a 10                	push   $0x10$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	68 00 00 20 00       	push   $0x200000$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	e8 c9 e0 ff ff       	call   f010341c <user_mem_check>$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105356	obj/kern/kernel.asm	/^f0105356:	85 c0                	test   %eax,%eax$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	0f 88 39 02 00 00    	js     f0105597 <debuginfo_eip+0x2a0>$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	8b 0d 08 00 20 00    	mov    0x200008,%ecx$/;"	l
f010536f	obj/kern/kernel.asm	/^f010536f:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f0105378	obj/kern/kernel.asm	/^f0105378:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f010537b	obj/kern/kernel.asm	/^f010537b:	89 f9                	mov    %edi,%ecx$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	29 c1                	sub    %eax,%ecx$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	e8 e4 10 00 00       	call   f010646e <cpunum>$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a:	6a 04                	push   $0x4$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
f0105392	obj/kern/kernel.asm	/^f0105392:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f010539b	obj/kern/kernel.asm	/^f010539b:	e8 7c e0 ff ff       	call   f010341c <user_mem_check>$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	85 c0                	test   %eax,%eax$/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	0f 88 f3 01 00 00    	js     f010559e <debuginfo_eip+0x2a7>$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f01053ae	obj/kern/kernel.asm	/^f01053ae:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f01053b4	obj/kern/kernel.asm	/^f01053b4:	e8 b5 10 00 00       	call   f010646e <cpunum>$/;"	l
f01053b9	obj/kern/kernel.asm	/^f01053b9:	6a 04                	push   $0x4$/;"	l
f01053bb	obj/kern/kernel.asm	/^f01053bb:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	ff b0 28 20 25 f0    	pushl  -0xfdadfd8(%eax)$/;"	l
f01053ca	obj/kern/kernel.asm	/^f01053ca:	e8 4d e0 ff ff       	call   f010341c <user_mem_check>$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	85 c0                	test   %eax,%eax$/;"	l
f01053d4	obj/kern/kernel.asm	/^f01053d4:	79 1f                	jns    f01053f5 <debuginfo_eip+0xfe>$/;"	l
f01053d6	obj/kern/kernel.asm	/^f01053d6:	e9 ca 01 00 00       	jmp    f01055a5 <debuginfo_eip+0x2ae>$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	c7 45 c0 31 7d 11 f0 	movl   $0xf0117d31,-0x40(%ebp)$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	c7 45 b8 71 3e 11 f0 	movl   $0xf0113e71,-0x48(%ebp)$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	bf 70 3e 11 f0       	mov    $0xf0113e70,%edi$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	c7 45 bc 3c 8b 10 f0 	movl   $0xf0108b3c,-0x44(%ebp)$/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f01053f8	obj/kern/kernel.asm	/^f01053f8:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f01053fb	obj/kern/kernel.asm	/^f01053fb:	0f 83 ab 01 00 00    	jae    f01055ac <debuginfo_eip+0x2b5>$/;"	l
f0105401	obj/kern/kernel.asm	/^f0105401:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	0f 85 a8 01 00 00    	jne    f01055b3 <debuginfo_eip+0x2bc>$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	89 fa                	mov    %edi,%edx$/;"	l
f0105414	obj/kern/kernel.asm	/^f0105414:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0105417	obj/kern/kernel.asm	/^f0105417:	29 fa                	sub    %edi,%edx$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	89 d0                	mov    %edx,%eax$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105427	obj/kern/kernel.asm	/^f0105427:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010542a	obj/kern/kernel.asm	/^f010542a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	56                   	push   %esi$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	6a 64                	push   $0x64$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0105433	obj/kern/kernel.asm	/^f0105433:	89 d1                	mov    %edx,%ecx$/;"	l
f0105435	obj/kern/kernel.asm	/^f0105435:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	89 f8                	mov    %edi,%eax$/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a:	e8 c2 fd ff ff       	call   f0105201 <stab_binsearch>$/;"	l
f010543f	obj/kern/kernel.asm	/^f010543f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105442	obj/kern/kernel.asm	/^f0105442:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	85 c0                	test   %eax,%eax$/;"	l
f0105447	obj/kern/kernel.asm	/^f0105447:	0f 84 6d 01 00 00    	je     f01055ba <debuginfo_eip+0x2c3>$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	56                   	push   %esi$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	6a 24                	push   $0x24$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	89 d1                	mov    %edx,%ecx$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	89 f8                	mov    %edi,%eax$/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	e8 96 fd ff ff       	call   f0105201 <stab_binsearch>$/;"	l
f010546b	obj/kern/kernel.asm	/^f010546b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010546e	obj/kern/kernel.asm	/^f010546e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105471	obj/kern/kernel.asm	/^f0105471:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	39 d0                	cmp    %edx,%eax$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	7f 2b                	jg     f01054a6 <debuginfo_eip+0x1af>$/;"	l
f010547b	obj/kern/kernel.asm	/^f010547b:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010547e	obj/kern/kernel.asm	/^f010547e:	8d 0c 97             	lea    (%edi,%edx,4),%ecx$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	8b 11                	mov    (%ecx),%edx$/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	2b 7d b8             	sub    -0x48(%ebp),%edi$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	39 fa                	cmp    %edi,%edx$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	73 06                	jae    f0105493 <debuginfo_eip+0x19c>$/;"	l
f010548d	obj/kern/kernel.asm	/^f010548d:	03 55 b8             	add    -0x48(%ebp),%edx$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	89 53 08             	mov    %edx,0x8(%ebx)$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	8b 51 08             	mov    0x8(%ecx),%edx$/;"	l
f0105496	obj/kern/kernel.asm	/^f0105496:	89 53 10             	mov    %edx,0x10(%ebx)$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	29 d6                	sub    %edx,%esi$/;"	l
f010549b	obj/kern/kernel.asm	/^f010549b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01054a4	obj/kern/kernel.asm	/^f01054a4:	eb 0f                	jmp    f01054b5 <debuginfo_eip+0x1be>$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f01054a9	obj/kern/kernel.asm	/^f01054a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	6a 3a                	push   $0x3a$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	e8 70 09 00 00       	call   f0105e32 <strfind>$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	56                   	push   %esi$/;"	l
f01054cc	obj/kern/kernel.asm	/^f01054cc:	6a 44                	push   $0x44$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01054d4	obj/kern/kernel.asm	/^f01054d4:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f01054d7	obj/kern/kernel.asm	/^f01054d7:	89 f8                	mov    %edi,%eax$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	e8 23 fd ff ff       	call   f0105201 <stab_binsearch>$/;"	l
f01054de	obj/kern/kernel.asm	/^f01054de:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	0f b7 4a 06          	movzwl 0x6(%edx),%ecx$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f01054fb	obj/kern/kernel.asm	/^f01054fb:	eb 0a                	jmp    f0105507 <debuginfo_eip+0x210>$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105500	obj/kern/kernel.asm	/^f0105500:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	39 c7                	cmp    %eax,%edi$/;"	l
f0105509	obj/kern/kernel.asm	/^f0105509:	7e 05                	jle    f0105510 <debuginfo_eip+0x219>$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	eb 47                	jmp    f0105557 <debuginfo_eip+0x260>$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105517	obj/kern/kernel.asm	/^f0105517:	75 0e                	jne    f0105527 <debuginfo_eip+0x230>$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	74 1c                	je     f010553e <debuginfo_eip+0x247>$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	eb 17                	jmp    f010553e <debuginfo_eip+0x247>$/;"	l
f0105527	obj/kern/kernel.asm	/^f0105527:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	75 d1                	jne    f01054fd <debuginfo_eip+0x206>$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	74 cb                	je     f01054fd <debuginfo_eip+0x206>$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105535	obj/kern/kernel.asm	/^f0105535:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	74 03                	je     f010553e <debuginfo_eip+0x247>$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	8b 75 bc             	mov    -0x44(%ebp),%esi$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	8b 7d b8             	mov    -0x48(%ebp),%edi$/;"	l
f010554d	obj/kern/kernel.asm	/^f010554d:	29 f8                	sub    %edi,%eax$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	39 c2                	cmp    %eax,%edx$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	73 04                	jae    f0105557 <debuginfo_eip+0x260>$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	01 fa                	add    %edi,%edx$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	89 13                	mov    %edx,(%ebx)$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f010555d	obj/kern/kernel.asm	/^f010555d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	39 f2                	cmp    %esi,%edx$/;"	l
f0105564	obj/kern/kernel.asm	/^f0105564:	7d 60                	jge    f01055c6 <debuginfo_eip+0x2cf>$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	89 d0                	mov    %edx,%eax$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	eb 04                	jmp    f010557d <debuginfo_eip+0x286>$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	39 c6                	cmp    %eax,%esi$/;"	l
f010557f	obj/kern/kernel.asm	/^f010557f:	7e 40                	jle    f01055c1 <debuginfo_eip+0x2ca>$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105588	obj/kern/kernel.asm	/^f0105588:	83 c2 0c             	add    $0xc,%edx$/;"	l
f010558b	obj/kern/kernel.asm	/^f010558b:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e:	74 e9                	je     f0105579 <debuginfo_eip+0x282>$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105595	obj/kern/kernel.asm	/^f0105595:	eb 2f                	jmp    f01055c6 <debuginfo_eip+0x2cf>$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	eb 28                	jmp    f01055c6 <debuginfo_eip+0x2cf>$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01055a3	obj/kern/kernel.asm	/^f01055a3:	eb 21                	jmp    f01055c6 <debuginfo_eip+0x2cf>$/;"	l
f01055a5	obj/kern/kernel.asm	/^f01055a5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	eb 1a                	jmp    f01055c6 <debuginfo_eip+0x2cf>$/;"	l
f01055ac	obj/kern/kernel.asm	/^f01055ac:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	eb 13                	jmp    f01055c6 <debuginfo_eip+0x2cf>$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	eb 0c                	jmp    f01055c6 <debuginfo_eip+0x2cf>$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	eb 05                	jmp    f01055c6 <debuginfo_eip+0x2cf>$/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	5b                   	pop    %ebx$/;"	l
f01055ca	obj/kern/kernel.asm	/^f01055ca:	5e                   	pop    %esi$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	5f                   	pop    %edi$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	5d                   	pop    %ebp$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	c3                   	ret    $/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce <printnum>:$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	55                   	push   %ebp$/;"	l
f01055cf	obj/kern/kernel.asm	/^f01055cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	57                   	push   %edi$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	56                   	push   %esi$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	53                   	push   %ebx$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01055d7	obj/kern/kernel.asm	/^f01055d7:	89 c7                	mov    %eax,%edi$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	89 d6                	mov    %edx,%esi$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01055e1	obj/kern/kernel.asm	/^f01055e1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01055e4	obj/kern/kernel.asm	/^f01055e4:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01055e7	obj/kern/kernel.asm	/^f01055e7:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	39 d3                	cmp    %edx,%ebx$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	72 05                	jb     f01055fe <printnum+0x30>$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f01055fc	obj/kern/kernel.asm	/^f01055fc:	77 45                	ja     f0105643 <printnum+0x75>$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105601	obj/kern/kernel.asm	/^f0105601:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	53                   	push   %ebx$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010560e	obj/kern/kernel.asm	/^f010560e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105614	obj/kern/kernel.asm	/^f0105614:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	e8 4e 12 00 00       	call   f0106870 <__udivdi3>$/;"	l
f0105622	obj/kern/kernel.asm	/^f0105622:	83 c4 18             	add    $0x18,%esp$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	52                   	push   %edx$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	50                   	push   %eax$/;"	l
f0105627	obj/kern/kernel.asm	/^f0105627:	89 f2                	mov    %esi,%edx$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	89 f8                	mov    %edi,%eax$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	e8 9e ff ff ff       	call   f01055ce <printnum>$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105633	obj/kern/kernel.asm	/^f0105633:	eb 18                	jmp    f010564d <printnum+0x7f>$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105638	obj/kern/kernel.asm	/^f0105638:	56                   	push   %esi$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f010563c	obj/kern/kernel.asm	/^f010563c:	ff d7                	call   *%edi$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105641	obj/kern/kernel.asm	/^f0105641:	eb 03                	jmp    f0105646 <printnum+0x78>$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105649	obj/kern/kernel.asm	/^f0105649:	85 db                	test   %ebx,%ebx$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	7f e8                	jg     f0105635 <printnum+0x67>$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	56                   	push   %esi$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105660	obj/kern/kernel.asm	/^f0105660:	e8 3b 13 00 00       	call   f01069a0 <__umoddi3>$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	0f be 80 42 86 10 f0 	movsbl -0xfef79be(%eax),%eax$/;"	l
f010566f	obj/kern/kernel.asm	/^f010566f:	50                   	push   %eax$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	ff d7                	call   *%edi$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	5b                   	pop    %ebx$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	5e                   	pop    %esi$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	5f                   	pop    %edi$/;"	l
f010567b	obj/kern/kernel.asm	/^f010567b:	5d                   	pop    %ebp$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	c3                   	ret    $/;"	l
f010567d	obj/kern/kernel.asm	/^f010567d <getuint>:$/;"	l
f010567d	obj/kern/kernel.asm	/^f010567d:	55                   	push   %ebp$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	7e 0e                	jle    f0105693 <getuint+0x16>$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	8b 10                	mov    (%eax),%edx$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	89 08                	mov    %ecx,(%eax)$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	8b 02                	mov    (%edx),%eax$/;"	l
f010568e	obj/kern/kernel.asm	/^f010568e:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	eb 22                	jmp    f01056b5 <getuint+0x38>$/;"	l
f0105693	obj/kern/kernel.asm	/^f0105693:	85 d2                	test   %edx,%edx$/;"	l
f0105695	obj/kern/kernel.asm	/^f0105695:	74 10                	je     f01056a7 <getuint+0x2a>$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	8b 10                	mov    (%eax),%edx$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	89 08                	mov    %ecx,(%eax)$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	8b 02                	mov    (%edx),%eax$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	eb 0e                	jmp    f01056b5 <getuint+0x38>$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	8b 10                	mov    (%eax),%edx$/;"	l
f01056a9	obj/kern/kernel.asm	/^f01056a9:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	89 08                	mov    %ecx,(%eax)$/;"	l
f01056ae	obj/kern/kernel.asm	/^f01056ae:	8b 02                	mov    (%edx),%eax$/;"	l
f01056b0	obj/kern/kernel.asm	/^f01056b0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	5d                   	pop    %ebp$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	c3                   	ret    $/;"	l
f01056b7	obj/kern/kernel.asm	/^f01056b7 <sprintputch>:$/;"	l
f01056b7	obj/kern/kernel.asm	/^f01056b7:	55                   	push   %ebp$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01056bd	obj/kern/kernel.asm	/^f01056bd:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	8b 10                	mov    (%eax),%edx$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	73 0a                	jae    f01056d2 <sprintputch+0x1b>$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	89 08                	mov    %ecx,(%eax)$/;"	l
f01056cd	obj/kern/kernel.asm	/^f01056cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01056d0	obj/kern/kernel.asm	/^f01056d0:	88 02                	mov    %al,(%edx)$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	5d                   	pop    %ebp$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	c3                   	ret    $/;"	l
f01056d4	obj/kern/kernel.asm	/^f01056d4 <printfmt>:$/;"	l
f01056d4	obj/kern/kernel.asm	/^f01056d4:	55                   	push   %ebp$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01056d7	obj/kern/kernel.asm	/^f01056d7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01056da	obj/kern/kernel.asm	/^f01056da:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01056dd	obj/kern/kernel.asm	/^f01056dd:	50                   	push   %eax$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01056e4	obj/kern/kernel.asm	/^f01056e4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	e8 05 00 00 00       	call   f01056f1 <vprintfmt>$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	c9                   	leave  $/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	c3                   	ret    $/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1 <vprintfmt>:$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	55                   	push   %ebp$/;"	l
f01056f2	obj/kern/kernel.asm	/^f01056f2:	89 e5                	mov    %esp,%ebp$/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	57                   	push   %edi$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	56                   	push   %esi$/;"	l
f01056f6	obj/kern/kernel.asm	/^f01056f6:	53                   	push   %ebx$/;"	l
f01056f7	obj/kern/kernel.asm	/^f01056f7:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	89 df                	mov    %ebx,%edi$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	e9 16 01 00 00       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105707	obj/kern/kernel.asm	/^f0105707:	85 c0                	test   %eax,%eax$/;"	l
f0105709	obj/kern/kernel.asm	/^f0105709:	0f 84 78 04 00 00    	je     f0105b87 <vprintfmt+0x496>$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	83 f8 1b             	cmp    $0x1b,%eax$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	0f 85 f8 00 00 00    	jne    f0105810 <vprintfmt+0x11f>$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	8d 73 02             	lea    0x2(%ebx),%esi$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	0f b6 5b 01          	movzbl 0x1(%ebx),%ebx$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	83 fb 5b             	cmp    $0x5b,%ebx$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	0f 84 d8 00 00 00    	je     f0105800 <vprintfmt+0x10f>$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	57                   	push   %edi$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	6a 1b                	push   $0x1b$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	57                   	push   %edi$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	53                   	push   %ebx$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	83 c4 10             	add    $0x10,%esp$/;"	l
f010573c	obj/kern/kernel.asm	/^f010573c:	89 f3                	mov    %esi,%ebx$/;"	l
f010573e	obj/kern/kernel.asm	/^f010573e:	e9 da 00 00 00       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	3c 33                	cmp    $0x33,%al$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	74 39                	je     f0105780 <vprintfmt+0x8f>$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	3c 33                	cmp    $0x33,%al$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	77 09                	ja     f0105754 <vprintfmt+0x63>$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	3c 30                	cmp    $0x30,%al$/;"	l
f010574d	obj/kern/kernel.asm	/^f010574d:	74 16                	je     f0105765 <vprintfmt+0x74>$/;"	l
f010574f	obj/kern/kernel.asm	/^f010574f:	e9 c9 00 00 00       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	3c 34                	cmp    $0x34,%al$/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	74 67                	je     f01057bf <vprintfmt+0xce>$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	3c 3b                	cmp    $0x3b,%al$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	0f 84 9e 00 00 00    	je     f01057fe <vprintfmt+0x10d>$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	e9 b8 00 00 00       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	c7 05 00 23 12 f0 00 	movl   $0x700,0xf0122300$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	07 00 00 $/;"	l
f010576f	obj/kern/kernel.asm	/^f010576f:	c7 05 00 10 25 f0 00 	movl   $0x0,0xf0251000$/;"	l
f0105776	obj/kern/kernel.asm	/^f0105776:	00 00 00 $/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	89 de                	mov    %ebx,%esi$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	e9 80 00 00 00       	jmp    f0105800 <vprintfmt+0x10f>$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f0105784	obj/kern/kernel.asm	/^f0105784:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0105787	obj/kern/kernel.asm	/^f0105787:	83 ea 30             	sub    $0x30,%edx$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	b9 37 00 00 00       	mov    $0x37,%ecx$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	0f 47 c1             	cmova  %ecx,%eax$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	83 e8 30             	sub    $0x30,%eax$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	89 c2                	mov    %eax,%edx$/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	83 e2 04             	and    $0x4,%edx$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	89 c1                	mov    %eax,%ecx$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	83 e1 01             	and    $0x1,%ecx$/;"	l
f01057a8	obj/kern/kernel.asm	/^f01057a8:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f01057ab	obj/kern/kernel.asm	/^f01057ab:	09 ca                	or     %ecx,%edx$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	83 e0 02             	and    $0x2,%eax$/;"	l
f01057b0	obj/kern/kernel.asm	/^f01057b0:	09 d0                	or     %edx,%eax$/;"	l
f01057b2	obj/kern/kernel.asm	/^f01057b2:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01057b5	obj/kern/kernel.asm	/^f01057b5:	a3 00 23 12 f0       	mov    %eax,0xf0122300$/;"	l
f01057ba	obj/kern/kernel.asm	/^f01057ba:	8d 76 02             	lea    0x2(%esi),%esi$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	eb 41                	jmp    f0105800 <vprintfmt+0x10f>$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f01057c3	obj/kern/kernel.asm	/^f01057c3:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	83 ea 30             	sub    $0x30,%edx$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01057cc	obj/kern/kernel.asm	/^f01057cc:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	b9 30 00 00 00       	mov    $0x30,%ecx$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	0f 47 c1             	cmova  %ecx,%eax$/;"	l
f01057d7	obj/kern/kernel.asm	/^f01057d7:	83 e8 30             	sub    $0x30,%eax$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	89 c2                	mov    %eax,%edx$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	83 e2 04             	and    $0x4,%edx$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2:	89 c1                	mov    %eax,%ecx$/;"	l
f01057e4	obj/kern/kernel.asm	/^f01057e4:	83 e1 01             	and    $0x1,%ecx$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	09 ca                	or     %ecx,%edx$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	83 e0 02             	and    $0x2,%eax$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	09 d0                	or     %edx,%eax$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	a3 00 10 25 f0       	mov    %eax,0xf0251000$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	8d 76 02             	lea    0x2(%esi),%esi$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	eb 02                	jmp    f0105800 <vprintfmt+0x10f>$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	89 de                	mov    %ebx,%esi$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	3c 6d                	cmp    $0x6d,%al$/;"	l
f0105808	obj/kern/kernel.asm	/^f0105808:	0f 85 35 ff ff ff    	jne    f0105743 <vprintfmt+0x52>$/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	eb 0d                	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	57                   	push   %edi$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	50                   	push   %eax$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	83 c4 10             	add    $0x10,%esp$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	89 f3                	mov    %esi,%ebx$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	0f 85 db fe ff ff    	jne    f0105707 <vprintfmt+0x16>$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	eb 06                	jmp    f0105852 <vprintfmt+0x161>$/;"	l
f010584c	obj/kern/kernel.asm	/^f010584c:	89 de                	mov    %ebx,%esi$/;"	l
f010584e	obj/kern/kernel.asm	/^f010584e:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0105852	obj/kern/kernel.asm	/^f0105852:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105858	obj/kern/kernel.asm	/^f0105858:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	83 e8 23             	sub    $0x23,%eax$/;"	l
f010585e	obj/kern/kernel.asm	/^f010585e:	3c 55                	cmp    $0x55,%al$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	0f 87 03 03 00 00    	ja     f0105b69 <vprintfmt+0x478>$/;"	l
f0105866	obj/kern/kernel.asm	/^f0105866:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105869	obj/kern/kernel.asm	/^f0105869:	ff 24 85 00 87 10 f0 	jmp    *-0xfef7900(,%eax,4)$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	89 de                	mov    %ebx,%esi$/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	eb da                	jmp    f0105852 <vprintfmt+0x161>$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	89 de                	mov    %ebx,%esi$/;"	l
f010587a	obj/kern/kernel.asm	/^f010587a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010587f	obj/kern/kernel.asm	/^f010587f:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	0f be 0e             	movsbl (%esi),%ecx$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	77 36                	ja     f01058c7 <vprintfmt+0x1d6>$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	eb e9                	jmp    f010587f <vprintfmt+0x18e>$/;"	l
f0105896	obj/kern/kernel.asm	/^f0105896:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	8b 00                	mov    (%eax),%eax$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4:	89 de                	mov    %ebx,%esi$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	eb 22                	jmp    f01058ca <vprintfmt+0x1d9>$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01058ab	obj/kern/kernel.asm	/^f01058ab:	85 c0                	test   %eax,%eax$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	0f 49 c8             	cmovns %eax,%ecx$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	89 de                	mov    %ebx,%esi$/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	eb 96                	jmp    f0105852 <vprintfmt+0x161>$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	89 de                	mov    %ebx,%esi$/;"	l
f01058be	obj/kern/kernel.asm	/^f01058be:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f01058c5	obj/kern/kernel.asm	/^f01058c5:	eb 8b                	jmp    f0105852 <vprintfmt+0x161>$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	79 82                	jns    f0105852 <vprintfmt+0x161>$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01058d3	obj/kern/kernel.asm	/^f01058d3:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01058d6	obj/kern/kernel.asm	/^f01058d6:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	e9 70 ff ff ff       	jmp    f0105852 <vprintfmt+0x161>$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	89 de                	mov    %ebx,%esi$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	e9 66 ff ff ff       	jmp    f0105852 <vprintfmt+0x161>$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01058f5	obj/kern/kernel.asm	/^f01058f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	57                   	push   %edi$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	ff 30                	pushl  (%eax)$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	e9 17 ff ff ff       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	8b 00                	mov    (%eax),%eax$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	99                   	cltd   $/;"	l
f0105912	obj/kern/kernel.asm	/^f0105912:	31 d0                	xor    %edx,%eax$/;"	l
f0105914	obj/kern/kernel.asm	/^f0105914:	29 d0                	sub    %edx,%eax$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0105919	obj/kern/kernel.asm	/^f0105919:	7f 0b                	jg     f0105926 <vprintfmt+0x235>$/;"	l
f010591b	obj/kern/kernel.asm	/^f010591b:	8b 14 85 60 88 10 f0 	mov    -0xfef77a0(,%eax,4),%edx$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	85 d2                	test   %edx,%edx$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	75 17                	jne    f010593d <vprintfmt+0x24c>$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	50                   	push   %eax$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	68 5a 86 10 f0       	push   $0xf010865a$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	57                   	push   %edi$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105930	obj/kern/kernel.asm	/^f0105930:	e8 9f fd ff ff       	call   f01056d4 <printfmt>$/;"	l
f0105935	obj/kern/kernel.asm	/^f0105935:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	e9 e0 fe ff ff       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f010593d	obj/kern/kernel.asm	/^f010593d:	52                   	push   %edx$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	68 17 7e 10 f0       	push   $0xf0107e17$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	57                   	push   %edi$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	e8 88 fd ff ff       	call   f01056d4 <printfmt>$/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	e9 c9 fe ff ff       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010595d	obj/kern/kernel.asm	/^f010595d:	8b 30                	mov    (%eax),%esi$/;"	l
f010595f	obj/kern/kernel.asm	/^f010595f:	85 f6                	test   %esi,%esi$/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961:	b8 53 86 10 f0       	mov    $0xf0108653,%eax$/;"	l
f0105966	obj/kern/kernel.asm	/^f0105966:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	0f 8e 92 00 00 00    	jle    f0105a05 <vprintfmt+0x314>$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	0f 84 96 00 00 00    	je     f0105a13 <vprintfmt+0x322>$/;"	l
f010597d	obj/kern/kernel.asm	/^f010597d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	56                   	push   %esi$/;"	l
f0105984	obj/kern/kernel.asm	/^f0105984:	e8 5f 03 00 00       	call   f0105ce8 <strnlen>$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	29 c1                	sub    %eax,%ecx$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105994	obj/kern/kernel.asm	/^f0105994:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0105998	obj/kern/kernel.asm	/^f0105998:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f010599b	obj/kern/kernel.asm	/^f010599b:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	89 cb                	mov    %ecx,%ebx$/;"	l
f01059a0	obj/kern/kernel.asm	/^f01059a0:	89 c6                	mov    %eax,%esi$/;"	l
f01059a2	obj/kern/kernel.asm	/^f01059a2:	eb 0e                	jmp    f01059b2 <vprintfmt+0x2c1>$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	57                   	push   %edi$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	56                   	push   %esi$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	85 db                	test   %ebx,%ebx$/;"	l
f01059b4	obj/kern/kernel.asm	/^f01059b4:	7f ee                	jg     f01059a4 <vprintfmt+0x2b3>$/;"	l
f01059b6	obj/kern/kernel.asm	/^f01059b6:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f01059b9	obj/kern/kernel.asm	/^f01059b9:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01059bc	obj/kern/kernel.asm	/^f01059bc:	85 c9                	test   %ecx,%ecx$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	29 c1                	sub    %eax,%ecx$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f01059cb	obj/kern/kernel.asm	/^f01059cb:	89 cf                	mov    %ecx,%edi$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	eb 4d                	jmp    f0105a1f <vprintfmt+0x32e>$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01059d6	obj/kern/kernel.asm	/^f01059d6:	74 1b                	je     f01059f3 <vprintfmt+0x302>$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	0f be c0             	movsbl %al,%eax$/;"	l
f01059db	obj/kern/kernel.asm	/^f01059db:	83 e8 20             	sub    $0x20,%eax$/;"	l
f01059de	obj/kern/kernel.asm	/^f01059de:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	76 10                	jbe    f01059f3 <vprintfmt+0x302>$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	6a 3f                	push   $0x3f$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	83 c4 10             	add    $0x10,%esp$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	eb 0d                	jmp    f0105a00 <vprintfmt+0x30f>$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01059f9	obj/kern/kernel.asm	/^f01059f9:	52                   	push   %edx$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	eb 1a                	jmp    f0105a1f <vprintfmt+0x32e>$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	eb 0c                	jmp    f0105a1f <vprintfmt+0x32e>$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105a19	obj/kern/kernel.asm	/^f0105a19:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105a1f	obj/kern/kernel.asm	/^f0105a1f:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105a22	obj/kern/kernel.asm	/^f0105a22:	0f b6 46 ff          	movzbl -0x1(%esi),%eax$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	0f be d0             	movsbl %al,%edx$/;"	l
f0105a29	obj/kern/kernel.asm	/^f0105a29:	85 d2                	test   %edx,%edx$/;"	l
f0105a2b	obj/kern/kernel.asm	/^f0105a2b:	74 25                	je     f0105a52 <vprintfmt+0x361>$/;"	l
f0105a2d	obj/kern/kernel.asm	/^f0105a2d:	85 db                	test   %ebx,%ebx$/;"	l
f0105a2f	obj/kern/kernel.asm	/^f0105a2f:	78 a1                	js     f01059d2 <vprintfmt+0x2e1>$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	79 9c                	jns    f01059d2 <vprintfmt+0x2e1>$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	89 f8                	mov    %edi,%eax$/;"	l
f0105a38	obj/kern/kernel.asm	/^f0105a38:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	89 c3                	mov    %eax,%ebx$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	eb 18                	jmp    f0105a5a <vprintfmt+0x369>$/;"	l
f0105a42	obj/kern/kernel.asm	/^f0105a42:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	57                   	push   %edi$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	6a 20                	push   $0x20$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	ff d6                	call   *%esi$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105a4d	obj/kern/kernel.asm	/^f0105a4d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a50	obj/kern/kernel.asm	/^f0105a50:	eb 08                	jmp    f0105a5a <vprintfmt+0x369>$/;"	l
f0105a52	obj/kern/kernel.asm	/^f0105a52:	89 fb                	mov    %edi,%ebx$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105a57	obj/kern/kernel.asm	/^f0105a57:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105a5a	obj/kern/kernel.asm	/^f0105a5a:	85 db                	test   %ebx,%ebx$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	7f e4                	jg     f0105a42 <vprintfmt+0x351>$/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105a64	obj/kern/kernel.asm	/^f0105a64:	e9 b4 fd ff ff       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105a6c	obj/kern/kernel.asm	/^f0105a6c:	7e 16                	jle    f0105a84 <vprintfmt+0x393>$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	8b 00                	mov    (%eax),%eax$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	eb 32                	jmp    f0105ab6 <vprintfmt+0x3c5>$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	85 d2                	test   %edx,%edx$/;"	l
f0105a86	obj/kern/kernel.asm	/^f0105a86:	74 18                	je     f0105aa0 <vprintfmt+0x3af>$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105a91	obj/kern/kernel.asm	/^f0105a91:	8b 30                	mov    (%eax),%esi$/;"	l
f0105a93	obj/kern/kernel.asm	/^f0105a93:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	89 f0                	mov    %esi,%eax$/;"	l
f0105a98	obj/kern/kernel.asm	/^f0105a98:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	eb 16                	jmp    f0105ab6 <vprintfmt+0x3c5>$/;"	l
f0105aa0	obj/kern/kernel.asm	/^f0105aa0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105aa6	obj/kern/kernel.asm	/^f0105aa6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	8b 30                	mov    (%eax),%esi$/;"	l
f0105aab	obj/kern/kernel.asm	/^f0105aab:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105aae	obj/kern/kernel.asm	/^f0105aae:	89 f0                	mov    %esi,%eax$/;"	l
f0105ab0	obj/kern/kernel.asm	/^f0105ab0:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105ab9	obj/kern/kernel.asm	/^f0105ab9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105ac5	obj/kern/kernel.asm	/^f0105ac5:	79 72                	jns    f0105b39 <vprintfmt+0x448>$/;"	l
f0105ac7	obj/kern/kernel.asm	/^f0105ac7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	57                   	push   %edi$/;"	l
f0105acb	obj/kern/kernel.asm	/^f0105acb:	6a 2d                	push   $0x2d$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	f7 d8                	neg    %eax$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	f7 da                	neg    %edx$/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0:	eb 57                	jmp    f0105b39 <vprintfmt+0x448>$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	e8 93 fb ff ff       	call   f010567d <getuint>$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	eb 48                	jmp    f0105b39 <vprintfmt+0x448>$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	e8 84 fb ff ff       	call   f010567d <getuint>$/;"	l
f0105af9	obj/kern/kernel.asm	/^f0105af9:	be 08 00 00 00       	mov    $0x8,%esi$/;"	l
f0105afe	obj/kern/kernel.asm	/^f0105afe:	eb 39                	jmp    f0105b39 <vprintfmt+0x448>$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105b03	obj/kern/kernel.asm	/^f0105b03:	57                   	push   %edi$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	6a 30                	push   $0x30$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105b0c	obj/kern/kernel.asm	/^f0105b0c:	57                   	push   %edi$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	6a 78                	push   $0x78$/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b12	obj/kern/kernel.asm	/^f0105b12:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	8b 00                	mov    (%eax),%eax$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b22	obj/kern/kernel.asm	/^f0105b22:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	eb 0d                	jmp    f0105b39 <vprintfmt+0x448>$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	e8 49 fb ff ff       	call   f010567d <getuint>$/;"	l
f0105b34	obj/kern/kernel.asm	/^f0105b34:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	0f be 4d d8          	movsbl -0x28(%ebp),%ecx$/;"	l
f0105b40	obj/kern/kernel.asm	/^f0105b40:	51                   	push   %ecx$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	56                   	push   %esi$/;"	l
f0105b45	obj/kern/kernel.asm	/^f0105b45:	52                   	push   %edx$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	50                   	push   %eax$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	89 fa                	mov    %edi,%edx$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	e8 7d fa ff ff       	call   f01055ce <printnum>$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	e9 c4 fc ff ff       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	57                   	push   %edi$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	51                   	push   %ecx$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	e9 b4 fc ff ff       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105b69	obj/kern/kernel.asm	/^f0105b69:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105b6c	obj/kern/kernel.asm	/^f0105b6c:	57                   	push   %edi$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	6a 25                	push   $0x25$/;"	l
f0105b6f	obj/kern/kernel.asm	/^f0105b6f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	89 f3                	mov    %esi,%ebx$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	eb 03                	jmp    f0105b7c <vprintfmt+0x48b>$/;"	l
f0105b79	obj/kern/kernel.asm	/^f0105b79:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	75 f7                	jne    f0105b79 <vprintfmt+0x488>$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	e9 96 fc ff ff       	jmp    f010581d <vprintfmt+0x12c>$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	5b                   	pop    %ebx$/;"	l
f0105b8b	obj/kern/kernel.asm	/^f0105b8b:	5e                   	pop    %esi$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	5f                   	pop    %edi$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	5d                   	pop    %ebp$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	c3                   	ret    $/;"	l
f0105b8f	obj/kern/kernel.asm	/^f0105b8f <vsnprintf>:$/;"	l
f0105b8f	obj/kern/kernel.asm	/^f0105b8f:	55                   	push   %ebp$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b98	obj/kern/kernel.asm	/^f0105b98:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b9b	obj/kern/kernel.asm	/^f0105b9b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105bac	obj/kern/kernel.asm	/^f0105bac:	85 c0                	test   %eax,%eax$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	74 26                	je     f0105bd6 <vsnprintf+0x47>$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	85 d2                	test   %edx,%edx$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	7e 22                	jle    f0105bd6 <vsnprintf+0x47>$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0105bb7	obj/kern/kernel.asm	/^f0105bb7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105bbd	obj/kern/kernel.asm	/^f0105bbd:	50                   	push   %eax$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	68 b7 56 10 f0       	push   $0xf01056b7$/;"	l
f0105bc3	obj/kern/kernel.asm	/^f0105bc3:	e8 29 fb ff ff       	call   f01056f1 <vprintfmt>$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105bd1	obj/kern/kernel.asm	/^f0105bd1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	eb 05                	jmp    f0105bdb <vsnprintf+0x4c>$/;"	l
f0105bd6	obj/kern/kernel.asm	/^f0105bd6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	c9                   	leave  $/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	c3                   	ret    $/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd <snprintf>:$/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd:	55                   	push   %ebp$/;"	l
f0105bde	obj/kern/kernel.asm	/^f0105bde:	89 e5                	mov    %esp,%ebp$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105be6	obj/kern/kernel.asm	/^f0105be6:	50                   	push   %eax$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105bed	obj/kern/kernel.asm	/^f0105bed:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	e8 9a ff ff ff       	call   f0105b8f <vsnprintf>$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	c9                   	leave  $/;"	l
f0105bf6	obj/kern/kernel.asm	/^f0105bf6:	c3                   	ret    $/;"	l
f0105bf7	obj/kern/kernel.asm	/^f0105bf7 <readline>:$/;"	l
f0105bf7	obj/kern/kernel.asm	/^f0105bf7:	55                   	push   %ebp$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	57                   	push   %edi$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	56                   	push   %esi$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	53                   	push   %ebx$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c03	obj/kern/kernel.asm	/^f0105c03:	85 c0                	test   %eax,%eax$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	74 11                	je     f0105c18 <readline+0x21>$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105c0a	obj/kern/kernel.asm	/^f0105c0a:	50                   	push   %eax$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	68 17 7e 10 f0       	push   $0xf0107e17$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	e8 63 e2 ff ff       	call   f0103e78 <cprintf>$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c18	obj/kern/kernel.asm	/^f0105c18:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c1b	obj/kern/kernel.asm	/^f0105c1b:	6a 00                	push   $0x0$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	e8 4e ab ff ff       	call   f0100770 <iscons>$/;"	l
f0105c22	obj/kern/kernel.asm	/^f0105c22:	89 c7                	mov    %eax,%edi$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c27	obj/kern/kernel.asm	/^f0105c27:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c:	e8 2e ab ff ff       	call   f010075f <getchar>$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	89 c3                	mov    %eax,%ebx$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	85 c0                	test   %eax,%eax$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	79 18                	jns    f0105c4f <readline+0x58>$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	50                   	push   %eax$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	68 a9 88 10 f0       	push   $0xf01088a9$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	e8 33 e2 ff ff       	call   f0103e78 <cprintf>$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c48	obj/kern/kernel.asm	/^f0105c48:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	eb 79                	jmp    f0105cc8 <readline+0xd1>$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105c52	obj/kern/kernel.asm	/^f0105c52:	0f 94 c2             	sete   %dl$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	0f 94 c0             	sete   %al$/;"	l
f0105c5b	obj/kern/kernel.asm	/^f0105c5b:	08 c2                	or     %al,%dl$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	74 1a                	je     f0105c79 <readline+0x82>$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	85 f6                	test   %esi,%esi$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	7e 16                	jle    f0105c79 <readline+0x82>$/;"	l
f0105c63	obj/kern/kernel.asm	/^f0105c63:	85 ff                	test   %edi,%edi$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	74 0d                	je     f0105c74 <readline+0x7d>$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	6a 08                	push   $0x8$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	e8 de aa ff ff       	call   f010074f <cputchar>$/;"	l
f0105c71	obj/kern/kernel.asm	/^f0105c71:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105c77	obj/kern/kernel.asm	/^f0105c77:	eb b3                	jmp    f0105c2c <readline+0x35>$/;"	l
f0105c79	obj/kern/kernel.asm	/^f0105c79:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0105c7c	obj/kern/kernel.asm	/^f0105c7c:	7e 23                	jle    f0105ca1 <readline+0xaa>$/;"	l
f0105c7e	obj/kern/kernel.asm	/^f0105c7e:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	7f 1b                	jg     f0105ca1 <readline+0xaa>$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	85 ff                	test   %edi,%edi$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	74 0c                	je     f0105c96 <readline+0x9f>$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	53                   	push   %ebx$/;"	l
f0105c8e	obj/kern/kernel.asm	/^f0105c8e:	e8 bc aa ff ff       	call   f010074f <cputchar>$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c96	obj/kern/kernel.asm	/^f0105c96:	88 9e 80 1a 25 f0    	mov    %bl,-0xfdae580(%esi)$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	eb 8b                	jmp    f0105c2c <readline+0x35>$/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105ca4	obj/kern/kernel.asm	/^f0105ca4:	74 05                	je     f0105cab <readline+0xb4>$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105ca9	obj/kern/kernel.asm	/^f0105ca9:	75 81                	jne    f0105c2c <readline+0x35>$/;"	l
f0105cab	obj/kern/kernel.asm	/^f0105cab:	85 ff                	test   %edi,%edi$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	74 0d                	je     f0105cbc <readline+0xc5>$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105cb2	obj/kern/kernel.asm	/^f0105cb2:	6a 0a                	push   $0xa$/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	e8 96 aa ff ff       	call   f010074f <cputchar>$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	c6 86 80 1a 25 f0 00 	movb   $0x0,-0xfdae580(%esi)$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	b8 80 1a 25 f0       	mov    $0xf0251a80,%eax$/;"	l
f0105cc8	obj/kern/kernel.asm	/^f0105cc8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105ccb	obj/kern/kernel.asm	/^f0105ccb:	5b                   	pop    %ebx$/;"	l
f0105ccc	obj/kern/kernel.asm	/^f0105ccc:	5e                   	pop    %esi$/;"	l
f0105ccd	obj/kern/kernel.asm	/^f0105ccd:	5f                   	pop    %edi$/;"	l
f0105cce	obj/kern/kernel.asm	/^f0105cce:	5d                   	pop    %ebp$/;"	l
f0105ccf	obj/kern/kernel.asm	/^f0105ccf:	c3                   	ret    $/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0 <strlen>:$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	55                   	push   %ebp$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105cd3	obj/kern/kernel.asm	/^f0105cd3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105cdb	obj/kern/kernel.asm	/^f0105cdb:	eb 03                	jmp    f0105ce0 <strlen+0x10>$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	75 f7                	jne    f0105cdd <strlen+0xd>$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	5d                   	pop    %ebp$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	c3                   	ret    $/;"	l
f0105ce8	obj/kern/kernel.asm	/^f0105ce8 <strnlen>:$/;"	l
f0105ce8	obj/kern/kernel.asm	/^f0105ce8:	55                   	push   %ebp$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105cf6	obj/kern/kernel.asm	/^f0105cf6:	eb 03                	jmp    f0105cfb <strnlen+0x13>$/;"	l
f0105cf8	obj/kern/kernel.asm	/^f0105cf8:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105cfb	obj/kern/kernel.asm	/^f0105cfb:	39 c2                	cmp    %eax,%edx$/;"	l
f0105cfd	obj/kern/kernel.asm	/^f0105cfd:	74 08                	je     f0105d07 <strnlen+0x1f>$/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0105d03	obj/kern/kernel.asm	/^f0105d03:	75 f3                	jne    f0105cf8 <strnlen+0x10>$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	89 d0                	mov    %edx,%eax$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	5d                   	pop    %ebp$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	c3                   	ret    $/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09 <strcpy>:$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	55                   	push   %ebp$/;"	l
f0105d0a	obj/kern/kernel.asm	/^f0105d0a:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	53                   	push   %ebx$/;"	l
f0105d0d	obj/kern/kernel.asm	/^f0105d0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	89 c2                	mov    %eax,%edx$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	84 db                	test   %bl,%bl$/;"	l
f0105d24	obj/kern/kernel.asm	/^f0105d24:	75 ef                	jne    f0105d15 <strcpy+0xc>$/;"	l
f0105d26	obj/kern/kernel.asm	/^f0105d26:	5b                   	pop    %ebx$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	5d                   	pop    %ebp$/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28:	c3                   	ret    $/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29 <strcat>:$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	55                   	push   %ebp$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d2c	obj/kern/kernel.asm	/^f0105d2c:	53                   	push   %ebx$/;"	l
f0105d2d	obj/kern/kernel.asm	/^f0105d2d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	53                   	push   %ebx$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	e8 9a ff ff ff       	call   f0105cd0 <strlen>$/;"	l
f0105d36	obj/kern/kernel.asm	/^f0105d36:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105d3c	obj/kern/kernel.asm	/^f0105d3c:	01 d8                	add    %ebx,%eax$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	50                   	push   %eax$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	e8 c5 ff ff ff       	call   f0105d09 <strcpy>$/;"	l
f0105d44	obj/kern/kernel.asm	/^f0105d44:	89 d8                	mov    %ebx,%eax$/;"	l
f0105d46	obj/kern/kernel.asm	/^f0105d46:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	c9                   	leave  $/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	c3                   	ret    $/;"	l
f0105d4b	obj/kern/kernel.asm	/^f0105d4b <strncpy>:$/;"	l
f0105d4b	obj/kern/kernel.asm	/^f0105d4b:	55                   	push   %ebp$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d4e	obj/kern/kernel.asm	/^f0105d4e:	56                   	push   %esi$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	53                   	push   %ebx$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	89 f3                	mov    %esi,%ebx$/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105d5b	obj/kern/kernel.asm	/^f0105d5b:	89 f2                	mov    %esi,%edx$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	eb 0f                	jmp    f0105d6e <strncpy+0x23>$/;"	l
f0105d5f	obj/kern/kernel.asm	/^f0105d5f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f0105d68	obj/kern/kernel.asm	/^f0105d68:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	39 da                	cmp    %ebx,%edx$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	75 ed                	jne    f0105d5f <strncpy+0x14>$/;"	l
f0105d72	obj/kern/kernel.asm	/^f0105d72:	89 f0                	mov    %esi,%eax$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	5b                   	pop    %ebx$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	5e                   	pop    %esi$/;"	l
f0105d76	obj/kern/kernel.asm	/^f0105d76:	5d                   	pop    %ebp$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	c3                   	ret    $/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78 <strlcpy>:$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	55                   	push   %ebp$/;"	l
f0105d79	obj/kern/kernel.asm	/^f0105d79:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	56                   	push   %esi$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	53                   	push   %ebx$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105d86	obj/kern/kernel.asm	/^f0105d86:	89 f0                	mov    %esi,%eax$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	85 d2                	test   %edx,%edx$/;"	l
f0105d8a	obj/kern/kernel.asm	/^f0105d8a:	74 21                	je     f0105dad <strlcpy+0x35>$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f0105d90	obj/kern/kernel.asm	/^f0105d90:	89 f2                	mov    %esi,%edx$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	eb 09                	jmp    f0105d9d <strlcpy+0x25>$/;"	l
f0105d94	obj/kern/kernel.asm	/^f0105d94:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	39 c2                	cmp    %eax,%edx$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	74 09                	je     f0105daa <strlcpy+0x32>$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0105da4	obj/kern/kernel.asm	/^f0105da4:	84 db                	test   %bl,%bl$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	75 ec                	jne    f0105d94 <strlcpy+0x1c>$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	89 d0                	mov    %edx,%eax$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105dad	obj/kern/kernel.asm	/^f0105dad:	29 f0                	sub    %esi,%eax$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	5b                   	pop    %ebx$/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	5e                   	pop    %esi$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	5d                   	pop    %ebp$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	c3                   	ret    $/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3 <strcmp>:$/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3:	55                   	push   %ebp$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105db6	obj/kern/kernel.asm	/^f0105db6:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	eb 06                	jmp    f0105dc4 <strcmp+0x11>$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105dc1	obj/kern/kernel.asm	/^f0105dc1:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105dc7	obj/kern/kernel.asm	/^f0105dc7:	84 c0                	test   %al,%al$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	74 04                	je     f0105dcf <strcmp+0x1c>$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	3a 02                	cmp    (%edx),%al$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	74 ef                	je     f0105dbe <strcmp+0xb>$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	29 d0                	sub    %edx,%eax$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	5d                   	pop    %ebp$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	c3                   	ret    $/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9 <strncmp>:$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	55                   	push   %ebp$/;"	l
f0105dda	obj/kern/kernel.asm	/^f0105dda:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ddc	obj/kern/kernel.asm	/^f0105ddc:	53                   	push   %ebx$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105de0	obj/kern/kernel.asm	/^f0105de0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105de3	obj/kern/kernel.asm	/^f0105de3:	89 c3                	mov    %eax,%ebx$/;"	l
f0105de5	obj/kern/kernel.asm	/^f0105de5:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105de8	obj/kern/kernel.asm	/^f0105de8:	eb 06                	jmp    f0105df0 <strncmp+0x17>$/;"	l
f0105dea	obj/kern/kernel.asm	/^f0105dea:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ded	obj/kern/kernel.asm	/^f0105ded:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105df0	obj/kern/kernel.asm	/^f0105df0:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105df2	obj/kern/kernel.asm	/^f0105df2:	74 15                	je     f0105e09 <strncmp+0x30>$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105df7	obj/kern/kernel.asm	/^f0105df7:	84 c9                	test   %cl,%cl$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	74 04                	je     f0105dff <strncmp+0x26>$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0105dfd	obj/kern/kernel.asm	/^f0105dfd:	74 eb                	je     f0105dea <strncmp+0x11>$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105e05	obj/kern/kernel.asm	/^f0105e05:	29 d0                	sub    %edx,%eax$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	eb 05                	jmp    f0105e0e <strncmp+0x35>$/;"	l
f0105e09	obj/kern/kernel.asm	/^f0105e09:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e:	5b                   	pop    %ebx$/;"	l
f0105e0f	obj/kern/kernel.asm	/^f0105e0f:	5d                   	pop    %ebp$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	c3                   	ret    $/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11 <strchr>:$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	55                   	push   %ebp$/;"	l
f0105e12	obj/kern/kernel.asm	/^f0105e12:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e17	obj/kern/kernel.asm	/^f0105e17:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	eb 07                	jmp    f0105e24 <strchr+0x13>$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	38 ca                	cmp    %cl,%dl$/;"	l
f0105e1f	obj/kern/kernel.asm	/^f0105e1f:	74 0f                	je     f0105e30 <strchr+0x1f>$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105e27	obj/kern/kernel.asm	/^f0105e27:	84 d2                	test   %dl,%dl$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	75 f2                	jne    f0105e1d <strchr+0xc>$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	5d                   	pop    %ebp$/;"	l
f0105e31	obj/kern/kernel.asm	/^f0105e31:	c3                   	ret    $/;"	l
f0105e32	obj/kern/kernel.asm	/^f0105e32 <strfind>:$/;"	l
f0105e32	obj/kern/kernel.asm	/^f0105e32:	55                   	push   %ebp$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e35	obj/kern/kernel.asm	/^f0105e35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	eb 03                	jmp    f0105e41 <strfind+0xf>$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	38 ca                	cmp    %cl,%dl$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	74 04                	je     f0105e4c <strfind+0x1a>$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	84 d2                	test   %dl,%dl$/;"	l
f0105e4a	obj/kern/kernel.asm	/^f0105e4a:	75 f2                	jne    f0105e3e <strfind+0xc>$/;"	l
f0105e4c	obj/kern/kernel.asm	/^f0105e4c:	5d                   	pop    %ebp$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	c3                   	ret    $/;"	l
f0105e4e	obj/kern/kernel.asm	/^f0105e4e <memset>:$/;"	l
f0105e4e	obj/kern/kernel.asm	/^f0105e4e:	55                   	push   %ebp$/;"	l
f0105e4f	obj/kern/kernel.asm	/^f0105e4f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	57                   	push   %edi$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	56                   	push   %esi$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	53                   	push   %ebx$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105e5a	obj/kern/kernel.asm	/^f0105e5a:	85 c9                	test   %ecx,%ecx$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	74 36                	je     f0105e94 <memset+0x46>$/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	75 28                	jne    f0105e8e <memset+0x40>$/;"	l
f0105e66	obj/kern/kernel.asm	/^f0105e66:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	75 23                	jne    f0105e8e <memset+0x40>$/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	89 d3                	mov    %edx,%ebx$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	89 d6                	mov    %edx,%esi$/;"	l
f0105e76	obj/kern/kernel.asm	/^f0105e76:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	89 d0                	mov    %edx,%eax$/;"	l
f0105e7b	obj/kern/kernel.asm	/^f0105e7b:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0105e7e	obj/kern/kernel.asm	/^f0105e7e:	09 f0                	or     %esi,%eax$/;"	l
f0105e80	obj/kern/kernel.asm	/^f0105e80:	09 c2                	or     %eax,%edx$/;"	l
f0105e82	obj/kern/kernel.asm	/^f0105e82:	89 d8                	mov    %ebx,%eax$/;"	l
f0105e84	obj/kern/kernel.asm	/^f0105e84:	09 d0                	or     %edx,%eax$/;"	l
f0105e86	obj/kern/kernel.asm	/^f0105e86:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105e89	obj/kern/kernel.asm	/^f0105e89:	fc                   	cld    $/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	eb 06                	jmp    f0105e94 <memset+0x46>$/;"	l
f0105e8e	obj/kern/kernel.asm	/^f0105e8e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	fc                   	cld    $/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94:	89 f8                	mov    %edi,%eax$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	5b                   	pop    %ebx$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	5e                   	pop    %esi$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	5f                   	pop    %edi$/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	5d                   	pop    %ebp$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	c3                   	ret    $/;"	l
f0105e9b	obj/kern/kernel.asm	/^f0105e9b <memmove>:$/;"	l
f0105e9b	obj/kern/kernel.asm	/^f0105e9b:	55                   	push   %ebp$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e9e	obj/kern/kernel.asm	/^f0105e9e:	57                   	push   %edi$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	56                   	push   %esi$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ea3	obj/kern/kernel.asm	/^f0105ea3:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	39 c6                	cmp    %eax,%esi$/;"	l
f0105eab	obj/kern/kernel.asm	/^f0105eab:	73 35                	jae    f0105ee2 <memmove+0x47>$/;"	l
f0105ead	obj/kern/kernel.asm	/^f0105ead:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0:	39 d0                	cmp    %edx,%eax$/;"	l
f0105eb2	obj/kern/kernel.asm	/^f0105eb2:	73 2e                	jae    f0105ee2 <memmove+0x47>$/;"	l
f0105eb4	obj/kern/kernel.asm	/^f0105eb4:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	89 d6                	mov    %edx,%esi$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	09 fe                	or     %edi,%esi$/;"	l
f0105ebb	obj/kern/kernel.asm	/^f0105ebb:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	75 13                	jne    f0105ed6 <memmove+0x3b>$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105ec6	obj/kern/kernel.asm	/^f0105ec6:	75 0e                	jne    f0105ed6 <memmove+0x3b>$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	fd                   	std    $/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	eb 09                	jmp    f0105edf <memmove+0x44>$/;"	l
f0105ed6	obj/kern/kernel.asm	/^f0105ed6:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	fd                   	std    $/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	fc                   	cld    $/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	eb 1d                	jmp    f0105eff <memmove+0x64>$/;"	l
f0105ee2	obj/kern/kernel.asm	/^f0105ee2:	89 f2                	mov    %esi,%edx$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	09 c2                	or     %eax,%edx$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105ee9	obj/kern/kernel.asm	/^f0105ee9:	75 0f                	jne    f0105efa <memmove+0x5f>$/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105eee	obj/kern/kernel.asm	/^f0105eee:	75 0a                	jne    f0105efa <memmove+0x5f>$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105ef3	obj/kern/kernel.asm	/^f0105ef3:	89 c7                	mov    %eax,%edi$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	fc                   	cld    $/;"	l
f0105ef6	obj/kern/kernel.asm	/^f0105ef6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8:	eb 05                	jmp    f0105eff <memmove+0x64>$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	89 c7                	mov    %eax,%edi$/;"	l
f0105efc	obj/kern/kernel.asm	/^f0105efc:	fc                   	cld    $/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	5e                   	pop    %esi$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	5f                   	pop    %edi$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	5d                   	pop    %ebp$/;"	l
f0105f02	obj/kern/kernel.asm	/^f0105f02:	c3                   	ret    $/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03 <memcpy>:$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	55                   	push   %ebp$/;"	l
f0105f04	obj/kern/kernel.asm	/^f0105f04:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f06	obj/kern/kernel.asm	/^f0105f06:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105f09	obj/kern/kernel.asm	/^f0105f09:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105f0f	obj/kern/kernel.asm	/^f0105f0f:	e8 87 ff ff ff       	call   f0105e9b <memmove>$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	c9                   	leave  $/;"	l
f0105f15	obj/kern/kernel.asm	/^f0105f15:	c3                   	ret    $/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16 <memcmp>:$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	55                   	push   %ebp$/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	56                   	push   %esi$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	53                   	push   %ebx$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105f21	obj/kern/kernel.asm	/^f0105f21:	89 c6                	mov    %eax,%esi$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	eb 1a                	jmp    f0105f42 <memcmp+0x2c>$/;"	l
f0105f28	obj/kern/kernel.asm	/^f0105f28:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105f2b	obj/kern/kernel.asm	/^f0105f2b:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	38 d9                	cmp    %bl,%cl$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	74 0a                	je     f0105f3c <memcmp+0x26>$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	29 d8                	sub    %ebx,%eax$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	eb 0f                	jmp    f0105f4b <memcmp+0x35>$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105f42	obj/kern/kernel.asm	/^f0105f42:	39 f0                	cmp    %esi,%eax$/;"	l
f0105f44	obj/kern/kernel.asm	/^f0105f44:	75 e2                	jne    f0105f28 <memcmp+0x12>$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	5b                   	pop    %ebx$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	5e                   	pop    %esi$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	5d                   	pop    %ebp$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	c3                   	ret    $/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f <memfind>:$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	55                   	push   %ebp$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f52	obj/kern/kernel.asm	/^f0105f52:	53                   	push   %ebx$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105f56	obj/kern/kernel.asm	/^f0105f56:	89 c1                	mov    %eax,%ecx$/;"	l
f0105f58	obj/kern/kernel.asm	/^f0105f58:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f0105f5f	obj/kern/kernel.asm	/^f0105f5f:	eb 0a                	jmp    f0105f6b <memfind+0x1c>$/;"	l
f0105f61	obj/kern/kernel.asm	/^f0105f61:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	39 da                	cmp    %ebx,%edx$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	74 07                	je     f0105f6f <memfind+0x20>$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	72 f2                	jb     f0105f61 <memfind+0x12>$/;"	l
f0105f6f	obj/kern/kernel.asm	/^f0105f6f:	5b                   	pop    %ebx$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	5d                   	pop    %ebp$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	c3                   	ret    $/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72 <strtol>:$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	55                   	push   %ebp$/;"	l
f0105f73	obj/kern/kernel.asm	/^f0105f73:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f75	obj/kern/kernel.asm	/^f0105f75:	57                   	push   %edi$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	56                   	push   %esi$/;"	l
f0105f77	obj/kern/kernel.asm	/^f0105f77:	53                   	push   %ebx$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105f7e	obj/kern/kernel.asm	/^f0105f7e:	eb 03                	jmp    f0105f83 <strtol+0x11>$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105f83	obj/kern/kernel.asm	/^f0105f83:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	3c 20                	cmp    $0x20,%al$/;"	l
f0105f88	obj/kern/kernel.asm	/^f0105f88:	74 f6                	je     f0105f80 <strtol+0xe>$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	3c 09                	cmp    $0x9,%al$/;"	l
f0105f8c	obj/kern/kernel.asm	/^f0105f8c:	74 f2                	je     f0105f80 <strtol+0xe>$/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	75 0a                	jne    f0105f9c <strtol+0x2a>$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105f95	obj/kern/kernel.asm	/^f0105f95:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	eb 11                	jmp    f0105fad <strtol+0x3b>$/;"	l
f0105f9c	obj/kern/kernel.asm	/^f0105f9c:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105fa1	obj/kern/kernel.asm	/^f0105fa1:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	75 08                	jne    f0105fad <strtol+0x3b>$/;"	l
f0105fa5	obj/kern/kernel.asm	/^f0105fa5:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	75 15                	jne    f0105fca <strtol+0x58>$/;"	l
f0105fb5	obj/kern/kernel.asm	/^f0105fb5:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	75 10                	jne    f0105fca <strtol+0x58>$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	75 7c                	jne    f010603c <strtol+0xca>$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	eb 16                	jmp    f0105fe0 <strtol+0x6e>$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	85 db                	test   %ebx,%ebx$/;"	l
f0105fcc	obj/kern/kernel.asm	/^f0105fcc:	75 12                	jne    f0105fe0 <strtol+0x6e>$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	75 08                	jne    f0105fe0 <strtol+0x6e>$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105fe5	obj/kern/kernel.asm	/^f0105fe5:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	89 f3                	mov    %esi,%ebx$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	77 08                	ja     f0105ffd <strtol+0x8b>$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	eb 22                	jmp    f010601f <strtol+0xad>$/;"	l
f0105ffd	obj/kern/kernel.asm	/^f0105ffd:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	89 f3                	mov    %esi,%ebx$/;"	l
f0106002	obj/kern/kernel.asm	/^f0106002:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	77 08                	ja     f010600f <strtol+0x9d>$/;"	l
f0106007	obj/kern/kernel.asm	/^f0106007:	0f be d2             	movsbl %dl,%edx$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	83 ea 57             	sub    $0x57,%edx$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	eb 10                	jmp    f010601f <strtol+0xad>$/;"	l
f010600f	obj/kern/kernel.asm	/^f010600f:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	89 f3                	mov    %esi,%ebx$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	77 16                	ja     f010602f <strtol+0xbd>$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	0f be d2             	movsbl %dl,%edx$/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	83 ea 37             	sub    $0x37,%edx$/;"	l
f010601f	obj/kern/kernel.asm	/^f010601f:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0106022	obj/kern/kernel.asm	/^f0106022:	7d 0b                	jge    f010602f <strtol+0xbd>$/;"	l
f0106024	obj/kern/kernel.asm	/^f0106024:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	01 d0                	add    %edx,%eax$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	eb b9                	jmp    f0105fe8 <strtol+0x76>$/;"	l
f010602f	obj/kern/kernel.asm	/^f010602f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	74 0d                	je     f0106042 <strtol+0xd0>$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	89 0e                	mov    %ecx,(%esi)$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	eb 06                	jmp    f0106042 <strtol+0xd0>$/;"	l
f010603c	obj/kern/kernel.asm	/^f010603c:	85 db                	test   %ebx,%ebx$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	74 98                	je     f0105fd8 <strtol+0x66>$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	eb 9e                	jmp    f0105fe0 <strtol+0x6e>$/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042:	89 c2                	mov    %eax,%edx$/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	f7 da                	neg    %edx$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	85 ff                	test   %edi,%edi$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	5b                   	pop    %ebx$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	5e                   	pop    %esi$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	5f                   	pop    %edi$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	5d                   	pop    %ebp$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	c3                   	ret    $/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050 <mpentry_start>:$/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050:	fa                   	cli    $/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	31 c0                	xor    %eax,%eax$/;"	l
f0106053	obj/kern/kernel.asm	/^f0106053:	8e d8                	mov    %eax,%ds$/;"	l
f0106055	obj/kern/kernel.asm	/^f0106055:	8e c0                	mov    %eax,%es$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	8e d0                	mov    %eax,%ss$/;"	l
f0106059	obj/kern/kernel.asm	/^f0106059:	0f 01 16             	lgdtl  (%esi)$/;"	l
f010605c	obj/kern/kernel.asm	/^f010605c:	74 70                	je     f01060ce <mpsearch1+0x3>$/;"	l
f010605e	obj/kern/kernel.asm	/^f010605e:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106061	obj/kern/kernel.asm	/^f0106061:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f010606e	obj/kern/kernel.asm	/^f010606e:	08 00                	or     %al,(%eax)$/;"	l
f0106070	obj/kern/kernel.asm	/^f0106070 <start32>:$/;"	l
f0106070	obj/kern/kernel.asm	/^f0106070:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	8e d8                	mov    %eax,%ds$/;"	l
f0106076	obj/kern/kernel.asm	/^f0106076:	8e c0                	mov    %eax,%es$/;"	l
f0106078	obj/kern/kernel.asm	/^f0106078:	8e d0                	mov    %eax,%ss$/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010607e	obj/kern/kernel.asm	/^f010607e:	8e e0                	mov    %eax,%fs$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	8e e8                	mov    %eax,%gs$/;"	l
f0106082	obj/kern/kernel.asm	/^f0106082:	b8 00 00 12 00       	mov    $0x120000,%eax$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106095	obj/kern/kernel.asm	/^f0106095:	8b 25 84 1e 25 f0    	mov    0xf0251e84,%esp$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	b8 a1 01 10 f0       	mov    $0xf01001a1,%eax$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	ff d0                	call   *%eax$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7 <spin>:$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	eb fe                	jmp    f01060a7 <spin>$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac <gdt>:$/;"	l
f01060b4	obj/kern/kernel.asm	/^f01060b4:	ff                   	(bad)  $/;"	l
f01060b5	obj/kern/kernel.asm	/^f01060b5:	ff 00                	incl   (%eax)$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	00 00                	add    %al,(%eax)$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	00                   	.byte 0x0$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	92                   	xchg   %eax,%edx$/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2:	cf                   	iret   $/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4 <gdtdesc>:$/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4:	17                   	pop    %ss$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca <mpentry_end>:$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca:	90                   	nop$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb <mpsearch1>:$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	55                   	push   %ebp$/;"	l
f01060cc	obj/kern/kernel.asm	/^f01060cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01060ce	obj/kern/kernel.asm	/^f01060ce:	57                   	push   %edi$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	56                   	push   %esi$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	53                   	push   %ebx$/;"	l
f01060d1	obj/kern/kernel.asm	/^f01060d1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	8b 0d 8c 1e 25 f0    	mov    0xf0251e8c,%ecx$/;"	l
f01060da	obj/kern/kernel.asm	/^f01060da:	89 c3                	mov    %eax,%ebx$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01060e1	obj/kern/kernel.asm	/^f01060e1:	72 12                	jb     f01060f5 <mpsearch1+0x2a>$/;"	l
f01060e3	obj/kern/kernel.asm	/^f01060e3:	50                   	push   %eax$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f01060e9	obj/kern/kernel.asm	/^f01060e9:	6a 57                	push   $0x57$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	68 49 8a 10 f0       	push   $0xf0108a49$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	e8 4b 9f ff ff       	call   f0100040 <_panic>$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01060fb	obj/kern/kernel.asm	/^f01060fb:	01 d0                	add    %edx,%eax$/;"	l
f01060fd	obj/kern/kernel.asm	/^f01060fd:	89 c2                	mov    %eax,%edx$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	39 ca                	cmp    %ecx,%edx$/;"	l
f0106104	obj/kern/kernel.asm	/^f0106104:	72 12                	jb     f0106118 <mpsearch1+0x4d>$/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	50                   	push   %eax$/;"	l
f0106107	obj/kern/kernel.asm	/^f0106107:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	6a 57                	push   $0x57$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	68 49 8a 10 f0       	push   $0xf0108a49$/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	e8 28 9f ff ff       	call   f0100040 <_panic>$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	eb 2f                	jmp    f010614f <mpsearch1+0x84>$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106123	obj/kern/kernel.asm	/^f0106123:	6a 04                	push   $0x4$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	68 59 8a 10 f0       	push   $0xf0108a59$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	53                   	push   %ebx$/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b:	e8 e6 fd ff ff       	call   f0105f16 <memcmp>$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	85 c0                	test   %eax,%eax$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	75 15                	jne    f010614c <mpsearch1+0x81>$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	89 da                	mov    %ebx,%edx$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	01 c8                	add    %ecx,%eax$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106144	obj/kern/kernel.asm	/^f0106144:	39 d7                	cmp    %edx,%edi$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	75 f4                	jne    f010613c <mpsearch1+0x71>$/;"	l
f0106148	obj/kern/kernel.asm	/^f0106148:	84 c0                	test   %al,%al$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	74 0e                	je     f010615a <mpsearch1+0x8f>$/;"	l
f010614c	obj/kern/kernel.asm	/^f010614c:	83 c3 10             	add    $0x10,%ebx$/;"	l
f010614f	obj/kern/kernel.asm	/^f010614f:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	72 cd                	jb     f0106120 <mpsearch1+0x55>$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	eb 02                	jmp    f010615c <mpsearch1+0x91>$/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a:	89 d8                	mov    %ebx,%eax$/;"	l
f010615c	obj/kern/kernel.asm	/^f010615c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	5b                   	pop    %ebx$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	5e                   	pop    %esi$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	5f                   	pop    %edi$/;"	l
f0106162	obj/kern/kernel.asm	/^f0106162:	5d                   	pop    %ebp$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	c3                   	ret    $/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164 <mp_init>:$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	55                   	push   %ebp$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	89 e5                	mov    %esp,%ebp$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	57                   	push   %edi$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	56                   	push   %esi$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	53                   	push   %ebx$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d:	c7 05 c0 23 25 f0 20 	movl   $0xf0252020,0xf02523c0$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	20 25 f0 $/;"	l
f0106177	obj/kern/kernel.asm	/^f0106177:	83 3d 8c 1e 25 f0 00 	cmpl   $0x0,0xf0251e8c$/;"	l
f010617e	obj/kern/kernel.asm	/^f010617e:	75 16                	jne    f0106196 <mp_init+0x32>$/;"	l
f0106180	obj/kern/kernel.asm	/^f0106180:	68 00 04 00 00       	push   $0x400$/;"	l
f0106185	obj/kern/kernel.asm	/^f0106185:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	6a 6f                	push   $0x6f$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	68 49 8a 10 f0       	push   $0xf0108a49$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	e8 aa 9e ff ff       	call   f0100040 <_panic>$/;"	l
f0106196	obj/kern/kernel.asm	/^f0106196:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	85 c0                	test   %eax,%eax$/;"	l
f010619f	obj/kern/kernel.asm	/^f010619f:	74 16                	je     f01061b7 <mp_init+0x53>$/;"	l
f01061a1	obj/kern/kernel.asm	/^f01061a1:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01061a9	obj/kern/kernel.asm	/^f01061a9:	e8 1d ff ff ff       	call   f01060cb <mpsearch1>$/;"	l
f01061ae	obj/kern/kernel.asm	/^f01061ae:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	85 c0                	test   %eax,%eax$/;"	l
f01061b3	obj/kern/kernel.asm	/^f01061b3:	75 3c                	jne    f01061f1 <mp_init+0x8d>$/;"	l
f01061b5	obj/kern/kernel.asm	/^f01061b5:	eb 20                	jmp    f01061d7 <mp_init+0x73>$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f01061be	obj/kern/kernel.asm	/^f01061be:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f01061c6	obj/kern/kernel.asm	/^f01061c6:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	e8 fb fe ff ff       	call   f01060cb <mpsearch1>$/;"	l
f01061d0	obj/kern/kernel.asm	/^f01061d0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	85 c0                	test   %eax,%eax$/;"	l
f01061d5	obj/kern/kernel.asm	/^f01061d5:	75 1a                	jne    f01061f1 <mp_init+0x8d>$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01061dc	obj/kern/kernel.asm	/^f01061dc:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	e8 e5 fe ff ff       	call   f01060cb <mpsearch1>$/;"	l
f01061e6	obj/kern/kernel.asm	/^f01061e6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	85 c0                	test   %eax,%eax$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	0f 84 5d 02 00 00    	je     f010644e <mp_init+0x2ea>$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f01061f7	obj/kern/kernel.asm	/^f01061f7:	85 f6                	test   %esi,%esi$/;"	l
f01061f9	obj/kern/kernel.asm	/^f01061f9:	74 06                	je     f0106201 <mp_init+0x9d>$/;"	l
f01061fb	obj/kern/kernel.asm	/^f01061fb:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	74 15                	je     f0106216 <mp_init+0xb2>$/;"	l
f0106201	obj/kern/kernel.asm	/^f0106201:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106204	obj/kern/kernel.asm	/^f0106204:	68 bc 88 10 f0       	push   $0xf01088bc$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	e8 6a dc ff ff       	call   f0103e78 <cprintf>$/;"	l
f010620e	obj/kern/kernel.asm	/^f010620e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	e9 38 02 00 00       	jmp    f010644e <mp_init+0x2ea>$/;"	l
f0106216	obj/kern/kernel.asm	/^f0106216:	89 f0                	mov    %esi,%eax$/;"	l
f0106218	obj/kern/kernel.asm	/^f0106218:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010621b	obj/kern/kernel.asm	/^f010621b:	3b 05 8c 1e 25 f0    	cmp    0xf0251e8c,%eax$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	72 15                	jb     f0106238 <mp_init+0xd4>$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	56                   	push   %esi$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f0106229	obj/kern/kernel.asm	/^f0106229:	68 90 00 00 00       	push   $0x90$/;"	l
f010622e	obj/kern/kernel.asm	/^f010622e:	68 49 8a 10 f0       	push   $0xf0108a49$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	e8 08 9e ff ff       	call   f0100040 <_panic>$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f010623e	obj/kern/kernel.asm	/^f010623e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106241	obj/kern/kernel.asm	/^f0106241:	6a 04                	push   $0x4$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	68 5e 8a 10 f0       	push   $0xf0108a5e$/;"	l
f0106248	obj/kern/kernel.asm	/^f0106248:	53                   	push   %ebx$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	e8 c8 fc ff ff       	call   f0105f16 <memcmp>$/;"	l
f010624e	obj/kern/kernel.asm	/^f010624e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106251	obj/kern/kernel.asm	/^f0106251:	85 c0                	test   %eax,%eax$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	74 15                	je     f010626a <mp_init+0x106>$/;"	l
f0106255	obj/kern/kernel.asm	/^f0106255:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	68 ec 88 10 f0       	push   $0xf01088ec$/;"	l
f010625d	obj/kern/kernel.asm	/^f010625d:	e8 16 dc ff ff       	call   f0103e78 <cprintf>$/;"	l
f0106262	obj/kern/kernel.asm	/^f0106262:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	e9 e4 01 00 00       	jmp    f010644e <mp_init+0x2ea>$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f010626e	obj/kern/kernel.asm	/^f010626e:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010627a	obj/kern/kernel.asm	/^f010627a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	eb 0d                	jmp    f010628e <mp_init+0x12a>$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0106288	obj/kern/kernel.asm	/^f0106288:	f0 $/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	01 ca                	add    %ecx,%edx$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010628e	obj/kern/kernel.asm	/^f010628e:	39 c7                	cmp    %eax,%edi$/;"	l
f0106290	obj/kern/kernel.asm	/^f0106290:	75 ef                	jne    f0106281 <mp_init+0x11d>$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	84 d2                	test   %dl,%dl$/;"	l
f0106294	obj/kern/kernel.asm	/^f0106294:	74 15                	je     f01062ab <mp_init+0x147>$/;"	l
f0106296	obj/kern/kernel.asm	/^f0106296:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106299	obj/kern/kernel.asm	/^f0106299:	68 20 89 10 f0       	push   $0xf0108920$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	e8 d5 db ff ff       	call   f0103e78 <cprintf>$/;"	l
f01062a3	obj/kern/kernel.asm	/^f01062a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	e9 a3 01 00 00       	jmp    f010644e <mp_init+0x2ea>$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	3c 01                	cmp    $0x1,%al$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	74 1d                	je     f01062d0 <mp_init+0x16c>$/;"	l
f01062b3	obj/kern/kernel.asm	/^f01062b3:	3c 04                	cmp    $0x4,%al$/;"	l
f01062b5	obj/kern/kernel.asm	/^f01062b5:	74 19                	je     f01062d0 <mp_init+0x16c>$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01062bd	obj/kern/kernel.asm	/^f01062bd:	50                   	push   %eax$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	68 44 89 10 f0       	push   $0xf0108944$/;"	l
f01062c3	obj/kern/kernel.asm	/^f01062c3:	e8 b0 db ff ff       	call   f0103e78 <cprintf>$/;"	l
f01062c8	obj/kern/kernel.asm	/^f01062c8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01062cb	obj/kern/kernel.asm	/^f01062cb:	e9 7e 01 00 00       	jmp    f010644e <mp_init+0x2ea>$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062e2	obj/kern/kernel.asm	/^f01062e2:	01 ce                	add    %ecx,%esi$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	eb 0d                	jmp    f01062f3 <mp_init+0x18f>$/;"	l
f01062e6	obj/kern/kernel.asm	/^f01062e6:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f01062ed	obj/kern/kernel.asm	/^f01062ed:	f0 $/;"	l
f01062ee	obj/kern/kernel.asm	/^f01062ee:	01 ca                	add    %ecx,%edx$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	39 c7                	cmp    %eax,%edi$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	75 ef                	jne    f01062e6 <mp_init+0x182>$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	89 d0                	mov    %edx,%eax$/;"	l
f01062f9	obj/kern/kernel.asm	/^f01062f9:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	74 15                	je     f0106313 <mp_init+0x1af>$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	68 64 89 10 f0       	push   $0xf0108964$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	e8 6d db ff ff       	call   f0103e78 <cprintf>$/;"	l
f010630b	obj/kern/kernel.asm	/^f010630b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010630e	obj/kern/kernel.asm	/^f010630e:	e9 3b 01 00 00       	jmp    f010644e <mp_init+0x2ea>$/;"	l
f0106313	obj/kern/kernel.asm	/^f0106313:	85 db                	test   %ebx,%ebx$/;"	l
f0106315	obj/kern/kernel.asm	/^f0106315:	0f 84 33 01 00 00    	je     f010644e <mp_init+0x2ea>$/;"	l
f010631b	obj/kern/kernel.asm	/^f010631b:	c7 05 00 20 25 f0 01 	movl   $0x1,0xf0252000$/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322:	00 00 00 $/;"	l
f0106325	obj/kern/kernel.asm	/^f0106325:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0106328	obj/kern/kernel.asm	/^f0106328:	a3 00 30 29 f0       	mov    %eax,0xf0293000$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	e9 85 00 00 00       	jmp    f01063bf <mp_init+0x25b>$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f010633d	obj/kern/kernel.asm	/^f010633d:	84 c0                	test   %al,%al$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	74 06                	je     f0106347 <mp_init+0x1e3>$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	3c 04                	cmp    $0x4,%al$/;"	l
f0106343	obj/kern/kernel.asm	/^f0106343:	77 55                	ja     f010639a <mp_init+0x236>$/;"	l
f0106345	obj/kern/kernel.asm	/^f0106345:	eb 4e                	jmp    f0106395 <mp_init+0x231>$/;"	l
f0106347	obj/kern/kernel.asm	/^f0106347:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	74 11                	je     f010635e <mp_init+0x1fa>$/;"	l
f010634d	obj/kern/kernel.asm	/^f010634d:	6b 05 c4 23 25 f0 74 	imul   $0x74,0xf02523c4,%eax$/;"	l
f0106354	obj/kern/kernel.asm	/^f0106354:	05 20 20 25 f0       	add    $0xf0252020,%eax$/;"	l
f0106359	obj/kern/kernel.asm	/^f0106359:	a3 c0 23 25 f0       	mov    %eax,0xf02523c0$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	a1 c4 23 25 f0       	mov    0xf02523c4,%eax$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106366	obj/kern/kernel.asm	/^f0106366:	7f 13                	jg     f010637b <mp_init+0x217>$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010636b	obj/kern/kernel.asm	/^f010636b:	88 82 20 20 25 f0    	mov    %al,-0xfdadfe0(%edx)$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106374	obj/kern/kernel.asm	/^f0106374:	a3 c4 23 25 f0       	mov    %eax,0xf02523c4$/;"	l
f0106379	obj/kern/kernel.asm	/^f0106379:	eb 15                	jmp    f0106390 <mp_init+0x22c>$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010637e	obj/kern/kernel.asm	/^f010637e:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	50                   	push   %eax$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	68 94 89 10 f0       	push   $0xf0108994$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	e8 eb da ff ff       	call   f0103e78 <cprintf>$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106390	obj/kern/kernel.asm	/^f0106390:	83 c7 14             	add    $0x14,%edi$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	eb 27                	jmp    f01063bc <mp_init+0x258>$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	83 c7 08             	add    $0x8,%edi$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	eb 22                	jmp    f01063bc <mp_init+0x258>$/;"	l
f010639a	obj/kern/kernel.asm	/^f010639a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	50                   	push   %eax$/;"	l
f01063a1	obj/kern/kernel.asm	/^f01063a1:	68 bc 89 10 f0       	push   $0xf01089bc$/;"	l
f01063a6	obj/kern/kernel.asm	/^f01063a6:	e8 cd da ff ff       	call   f0103e78 <cprintf>$/;"	l
f01063ab	obj/kern/kernel.asm	/^f01063ab:	c7 05 00 20 25 f0 00 	movl   $0x0,0xf0252000$/;"	l
f01063b2	obj/kern/kernel.asm	/^f01063b2:	00 00 00 $/;"	l
f01063b5	obj/kern/kernel.asm	/^f01063b5:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	83 c6 01             	add    $0x1,%esi$/;"	l
f01063bf	obj/kern/kernel.asm	/^f01063bf:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	39 c6                	cmp    %eax,%esi$/;"	l
f01063c5	obj/kern/kernel.asm	/^f01063c5:	0f 82 6f ff ff ff    	jb     f010633a <mp_init+0x1d6>$/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	a1 c0 23 25 f0       	mov    0xf02523c0,%eax$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f01063d7	obj/kern/kernel.asm	/^f01063d7:	83 3d 00 20 25 f0 00 	cmpl   $0x0,0xf0252000$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	75 26                	jne    f0106406 <mp_init+0x2a2>$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	c7 05 c4 23 25 f0 01 	movl   $0x1,0xf02523c4$/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7:	00 00 00 $/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	c7 05 00 30 29 f0 00 	movl   $0x0,0xf0293000$/;"	l
f01063f1	obj/kern/kernel.asm	/^f01063f1:	00 00 00 $/;"	l
f01063f4	obj/kern/kernel.asm	/^f01063f4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01063f7	obj/kern/kernel.asm	/^f01063f7:	68 dc 89 10 f0       	push   $0xf01089dc$/;"	l
f01063fc	obj/kern/kernel.asm	/^f01063fc:	e8 77 da ff ff       	call   f0103e78 <cprintf>$/;"	l
f0106401	obj/kern/kernel.asm	/^f0106401:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	eb 48                	jmp    f010644e <mp_init+0x2ea>$/;"	l
f0106406	obj/kern/kernel.asm	/^f0106406:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	ff 35 c4 23 25 f0    	pushl  0xf02523c4$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106412	obj/kern/kernel.asm	/^f0106412:	50                   	push   %eax$/;"	l
f0106413	obj/kern/kernel.asm	/^f0106413:	68 63 8a 10 f0       	push   $0xf0108a63$/;"	l
f0106418	obj/kern/kernel.asm	/^f0106418:	e8 5b da ff ff       	call   f0103e78 <cprintf>$/;"	l
f010641d	obj/kern/kernel.asm	/^f010641d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106423	obj/kern/kernel.asm	/^f0106423:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	74 25                	je     f010644e <mp_init+0x2ea>$/;"	l
f0106429	obj/kern/kernel.asm	/^f0106429:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	68 08 8a 10 f0       	push   $0xf0108a08$/;"	l
f0106431	obj/kern/kernel.asm	/^f0106431:	e8 42 da ff ff       	call   f0103e78 <cprintf>$/;"	l
f0106436	obj/kern/kernel.asm	/^f0106436:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106440	obj/kern/kernel.asm	/^f0106440:	ee                   	out    %al,(%dx)$/;"	l
f0106441	obj/kern/kernel.asm	/^f0106441:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f0106446	obj/kern/kernel.asm	/^f0106446:	ec                   	in     (%dx),%al$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	83 c8 01             	or     $0x1,%eax$/;"	l
f010644a	obj/kern/kernel.asm	/^f010644a:	ee                   	out    %al,(%dx)$/;"	l
f010644b	obj/kern/kernel.asm	/^f010644b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0106451	obj/kern/kernel.asm	/^f0106451:	5b                   	pop    %ebx$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	5e                   	pop    %esi$/;"	l
f0106453	obj/kern/kernel.asm	/^f0106453:	5f                   	pop    %edi$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454:	5d                   	pop    %ebp$/;"	l
f0106455	obj/kern/kernel.asm	/^f0106455:	c3                   	ret    $/;"	l
f0106456	obj/kern/kernel.asm	/^f0106456 <lapicw>:$/;"	l
f0106456	obj/kern/kernel.asm	/^f0106456:	55                   	push   %ebp$/;"	l
f0106457	obj/kern/kernel.asm	/^f0106457:	89 e5                	mov    %esp,%ebp$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	8b 0d 04 30 29 f0    	mov    0xf0293004,%ecx$/;"	l
f010645f	obj/kern/kernel.asm	/^f010645f:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0106462	obj/kern/kernel.asm	/^f0106462:	89 10                	mov    %edx,(%eax)$/;"	l
f0106464	obj/kern/kernel.asm	/^f0106464:	a1 04 30 29 f0       	mov    0xf0293004,%eax$/;"	l
f0106469	obj/kern/kernel.asm	/^f0106469:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c:	5d                   	pop    %ebp$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	c3                   	ret    $/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e <cpunum>:$/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e:	55                   	push   %ebp$/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106471	obj/kern/kernel.asm	/^f0106471:	a1 04 30 29 f0       	mov    0xf0293004,%eax$/;"	l
f0106476	obj/kern/kernel.asm	/^f0106476:	85 c0                	test   %eax,%eax$/;"	l
f0106478	obj/kern/kernel.asm	/^f0106478:	74 08                	je     f0106482 <cpunum+0x14>$/;"	l
f010647a	obj/kern/kernel.asm	/^f010647a:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f010647d	obj/kern/kernel.asm	/^f010647d:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106480	obj/kern/kernel.asm	/^f0106480:	eb 05                	jmp    f0106487 <cpunum+0x19>$/;"	l
f0106482	obj/kern/kernel.asm	/^f0106482:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106487	obj/kern/kernel.asm	/^f0106487:	5d                   	pop    %ebp$/;"	l
f0106488	obj/kern/kernel.asm	/^f0106488:	c3                   	ret    $/;"	l
f0106489	obj/kern/kernel.asm	/^f0106489 <lapic_init>:$/;"	l
f0106489	obj/kern/kernel.asm	/^f0106489:	a1 00 30 29 f0       	mov    0xf0293000,%eax$/;"	l
f010648e	obj/kern/kernel.asm	/^f010648e:	85 c0                	test   %eax,%eax$/;"	l
f0106490	obj/kern/kernel.asm	/^f0106490:	0f 84 21 01 00 00    	je     f01065b7 <lapic_init+0x12e>$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	55                   	push   %ebp$/;"	l
f0106497	obj/kern/kernel.asm	/^f0106497:	89 e5                	mov    %esp,%ebp$/;"	l
f0106499	obj/kern/kernel.asm	/^f0106499:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010649c	obj/kern/kernel.asm	/^f010649c:	68 00 10 00 00       	push   $0x1000$/;"	l
f01064a1	obj/kern/kernel.asm	/^f01064a1:	50                   	push   %eax$/;"	l
f01064a2	obj/kern/kernel.asm	/^f01064a2:	e8 0c b5 ff ff       	call   f01019b3 <mmio_map_region>$/;"	l
f01064a7	obj/kern/kernel.asm	/^f01064a7:	a3 04 30 29 f0       	mov    %eax,0xf0293004$/;"	l
f01064ac	obj/kern/kernel.asm	/^f01064ac:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f01064b1	obj/kern/kernel.asm	/^f01064b1:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f01064b6	obj/kern/kernel.asm	/^f01064b6:	e8 9b ff ff ff       	call   f0106456 <lapicw>$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f01064c0	obj/kern/kernel.asm	/^f01064c0:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f01064c5	obj/kern/kernel.asm	/^f01064c5:	e8 8c ff ff ff       	call   f0106456 <lapicw>$/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f01064cf	obj/kern/kernel.asm	/^f01064cf:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f01064d4	obj/kern/kernel.asm	/^f01064d4:	e8 7d ff ff ff       	call   f0106456 <lapicw>$/;"	l
f01064d9	obj/kern/kernel.asm	/^f01064d9:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f01064de	obj/kern/kernel.asm	/^f01064de:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f01064e3	obj/kern/kernel.asm	/^f01064e3:	e8 6e ff ff ff       	call   f0106456 <lapicw>$/;"	l
f01064e8	obj/kern/kernel.asm	/^f01064e8:	e8 81 ff ff ff       	call   f010646e <cpunum>$/;"	l
f01064ed	obj/kern/kernel.asm	/^f01064ed:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01064f0	obj/kern/kernel.asm	/^f01064f0:	05 20 20 25 f0       	add    $0xf0252020,%eax$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	39 05 c0 23 25 f0    	cmp    %eax,0xf02523c0$/;"	l
f01064fe	obj/kern/kernel.asm	/^f01064fe:	74 0f                	je     f010650f <lapic_init+0x86>$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	e8 47 ff ff ff       	call   f0106456 <lapicw>$/;"	l
f010650f	obj/kern/kernel.asm	/^f010650f:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106519	obj/kern/kernel.asm	/^f0106519:	e8 38 ff ff ff       	call   f0106456 <lapicw>$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	a1 04 30 29 f0       	mov    0xf0293004,%eax$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	3c 03                	cmp    $0x3,%al$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	76 0f                	jbe    f010653c <lapic_init+0xb3>$/;"	l
f010652d	obj/kern/kernel.asm	/^f010652d:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106532	obj/kern/kernel.asm	/^f0106532:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106537	obj/kern/kernel.asm	/^f0106537:	e8 1a ff ff ff       	call   f0106456 <lapicw>$/;"	l
f010653c	obj/kern/kernel.asm	/^f010653c:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	e8 0b ff ff ff       	call   f0106456 <lapicw>$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106550	obj/kern/kernel.asm	/^f0106550:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106555	obj/kern/kernel.asm	/^f0106555:	e8 fc fe ff ff       	call   f0106456 <lapicw>$/;"	l
f010655a	obj/kern/kernel.asm	/^f010655a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	e8 ed fe ff ff       	call   f0106456 <lapicw>$/;"	l
f0106569	obj/kern/kernel.asm	/^f0106569:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010656e	obj/kern/kernel.asm	/^f010656e:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106573	obj/kern/kernel.asm	/^f0106573:	e8 de fe ff ff       	call   f0106456 <lapicw>$/;"	l
f0106578	obj/kern/kernel.asm	/^f0106578:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010657d	obj/kern/kernel.asm	/^f010657d:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106582	obj/kern/kernel.asm	/^f0106582:	e8 cf fe ff ff       	call   f0106456 <lapicw>$/;"	l
f0106587	obj/kern/kernel.asm	/^f0106587:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f010658c	obj/kern/kernel.asm	/^f010658c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106591	obj/kern/kernel.asm	/^f0106591:	e8 c0 fe ff ff       	call   f0106456 <lapicw>$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	8b 15 04 30 29 f0    	mov    0xf0293004,%edx$/;"	l
f010659c	obj/kern/kernel.asm	/^f010659c:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	75 f5                	jne    f010659c <lapic_init+0x113>$/;"	l
f01065a7	obj/kern/kernel.asm	/^f01065a7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01065ac	obj/kern/kernel.asm	/^f01065ac:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	e8 a0 fe ff ff       	call   f0106456 <lapicw>$/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	c9                   	leave  $/;"	l
f01065b7	obj/kern/kernel.asm	/^f01065b7:	f3 c3                	repz ret $/;"	l
f01065b9	obj/kern/kernel.asm	/^f01065b9 <lapic_eoi>:$/;"	l
f01065b9	obj/kern/kernel.asm	/^f01065b9:	83 3d 04 30 29 f0 00 	cmpl   $0x0,0xf0293004$/;"	l
f01065c0	obj/kern/kernel.asm	/^f01065c0:	74 13                	je     f01065d5 <lapic_eoi+0x1c>$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	55                   	push   %ebp$/;"	l
f01065c3	obj/kern/kernel.asm	/^f01065c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01065c5	obj/kern/kernel.asm	/^f01065c5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01065ca	obj/kern/kernel.asm	/^f01065ca:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	e8 82 fe ff ff       	call   f0106456 <lapicw>$/;"	l
f01065d4	obj/kern/kernel.asm	/^f01065d4:	5d                   	pop    %ebp$/;"	l
f01065d5	obj/kern/kernel.asm	/^f01065d5:	f3 c3                	repz ret $/;"	l
f01065d7	obj/kern/kernel.asm	/^f01065d7 <lapic_startap>:$/;"	l
f01065d7	obj/kern/kernel.asm	/^f01065d7:	55                   	push   %ebp$/;"	l
f01065d8	obj/kern/kernel.asm	/^f01065d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	56                   	push   %esi$/;"	l
f01065db	obj/kern/kernel.asm	/^f01065db:	53                   	push   %ebx$/;"	l
f01065dc	obj/kern/kernel.asm	/^f01065dc:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01065df	obj/kern/kernel.asm	/^f01065df:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01065ec	obj/kern/kernel.asm	/^f01065ec:	ee                   	out    %al,(%dx)$/;"	l
f01065ed	obj/kern/kernel.asm	/^f01065ed:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f01065f2	obj/kern/kernel.asm	/^f01065f2:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01065f7	obj/kern/kernel.asm	/^f01065f7:	ee                   	out    %al,(%dx)$/;"	l
f01065f8	obj/kern/kernel.asm	/^f01065f8:	83 3d 8c 1e 25 f0 00 	cmpl   $0x0,0xf0251e8c$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	75 19                	jne    f010661a <lapic_startap+0x43>$/;"	l
f0106601	obj/kern/kernel.asm	/^f0106601:	68 67 04 00 00       	push   $0x467$/;"	l
f0106606	obj/kern/kernel.asm	/^f0106606:	68 24 6b 10 f0       	push   $0xf0106b24$/;"	l
f010660b	obj/kern/kernel.asm	/^f010660b:	68 98 00 00 00       	push   $0x98$/;"	l
f0106610	obj/kern/kernel.asm	/^f0106610:	68 80 8a 10 f0       	push   $0xf0108a80$/;"	l
f0106615	obj/kern/kernel.asm	/^f0106615:	e8 26 9a ff ff       	call   f0100040 <_panic>$/;"	l
f010661a	obj/kern/kernel.asm	/^f010661a:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	00 00 $/;"	l
f0106623	obj/kern/kernel.asm	/^f0106623:	89 d8                	mov    %ebx,%eax$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f010662e	obj/kern/kernel.asm	/^f010662e:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0106631	obj/kern/kernel.asm	/^f0106631:	89 f2                	mov    %esi,%edx$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106638	obj/kern/kernel.asm	/^f0106638:	e8 19 fe ff ff       	call   f0106456 <lapicw>$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0106642	obj/kern/kernel.asm	/^f0106642:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106647	obj/kern/kernel.asm	/^f0106647:	e8 0a fe ff ff       	call   f0106456 <lapicw>$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0106651	obj/kern/kernel.asm	/^f0106651:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106656	obj/kern/kernel.asm	/^f0106656:	e8 fb fd ff ff       	call   f0106456 <lapicw>$/;"	l
f010665b	obj/kern/kernel.asm	/^f010665b:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	80 cf 06             	or     $0x6,%bh$/;"	l
f0106661	obj/kern/kernel.asm	/^f0106661:	89 f2                	mov    %esi,%edx$/;"	l
f0106663	obj/kern/kernel.asm	/^f0106663:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	e8 e9 fd ff ff       	call   f0106456 <lapicw>$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	89 da                	mov    %ebx,%edx$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	e8 dd fd ff ff       	call   f0106456 <lapicw>$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	89 f2                	mov    %esi,%edx$/;"	l
f010667b	obj/kern/kernel.asm	/^f010667b:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	e8 d1 fd ff ff       	call   f0106456 <lapicw>$/;"	l
f0106685	obj/kern/kernel.asm	/^f0106685:	89 da                	mov    %ebx,%edx$/;"	l
f0106687	obj/kern/kernel.asm	/^f0106687:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	e8 c5 fd ff ff       	call   f0106456 <lapicw>$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0106694	obj/kern/kernel.asm	/^f0106694:	5b                   	pop    %ebx$/;"	l
f0106695	obj/kern/kernel.asm	/^f0106695:	5e                   	pop    %esi$/;"	l
f0106696	obj/kern/kernel.asm	/^f0106696:	5d                   	pop    %ebp$/;"	l
f0106697	obj/kern/kernel.asm	/^f0106697:	c3                   	ret    $/;"	l
f0106698	obj/kern/kernel.asm	/^f0106698 <lapic_ipi>:$/;"	l
f0106698	obj/kern/kernel.asm	/^f0106698:	55                   	push   %ebp$/;"	l
f0106699	obj/kern/kernel.asm	/^f0106699:	89 e5                	mov    %esp,%ebp$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f01066a4	obj/kern/kernel.asm	/^f01066a4:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	e8 a8 fd ff ff       	call   f0106456 <lapicw>$/;"	l
f01066ae	obj/kern/kernel.asm	/^f01066ae:	8b 15 04 30 29 f0    	mov    0xf0293004,%edx$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01066ba	obj/kern/kernel.asm	/^f01066ba:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	75 f5                	jne    f01066b4 <lapic_ipi+0x1c>$/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	5d                   	pop    %ebp$/;"	l
f01066c0	obj/kern/kernel.asm	/^f01066c0:	c3                   	ret    $/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1 <__spin_initlock>:$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	55                   	push   %ebp$/;"	l
f01066c2	obj/kern/kernel.asm	/^f01066c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01066cd	obj/kern/kernel.asm	/^f01066cd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01066d0	obj/kern/kernel.asm	/^f01066d0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f01066d3	obj/kern/kernel.asm	/^f01066d3:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f01066da	obj/kern/kernel.asm	/^f01066da:	5d                   	pop    %ebp$/;"	l
f01066db	obj/kern/kernel.asm	/^f01066db:	c3                   	ret    $/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc <spin_lock>:$/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc:	55                   	push   %ebp$/;"	l
f01066dd	obj/kern/kernel.asm	/^f01066dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01066df	obj/kern/kernel.asm	/^f01066df:	56                   	push   %esi$/;"	l
f01066e0	obj/kern/kernel.asm	/^f01066e0:	53                   	push   %ebx$/;"	l
f01066e1	obj/kern/kernel.asm	/^f01066e1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01066e4	obj/kern/kernel.asm	/^f01066e4:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	74 14                	je     f01066fd <spin_lock+0x21>$/;"	l
f01066e9	obj/kern/kernel.asm	/^f01066e9:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f01066ec	obj/kern/kernel.asm	/^f01066ec:	e8 7d fd ff ff       	call   f010646e <cpunum>$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01066f4	obj/kern/kernel.asm	/^f01066f4:	05 20 20 25 f0       	add    $0xf0252020,%eax$/;"	l
f01066f9	obj/kern/kernel.asm	/^f01066f9:	39 c6                	cmp    %eax,%esi$/;"	l
f01066fb	obj/kern/kernel.asm	/^f01066fb:	74 07                	je     f0106704 <spin_lock+0x28>$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0106702	obj/kern/kernel.asm	/^f0106702:	eb 20                	jmp    f0106724 <spin_lock+0x48>$/;"	l
f0106704	obj/kern/kernel.asm	/^f0106704:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106707	obj/kern/kernel.asm	/^f0106707:	e8 62 fd ff ff       	call   f010646e <cpunum>$/;"	l
f010670c	obj/kern/kernel.asm	/^f010670c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010670f	obj/kern/kernel.asm	/^f010670f:	53                   	push   %ebx$/;"	l
f0106710	obj/kern/kernel.asm	/^f0106710:	50                   	push   %eax$/;"	l
f0106711	obj/kern/kernel.asm	/^f0106711:	68 90 8a 10 f0       	push   $0xf0108a90$/;"	l
f0106716	obj/kern/kernel.asm	/^f0106716:	6a 41                	push   $0x41$/;"	l
f0106718	obj/kern/kernel.asm	/^f0106718:	68 f4 8a 10 f0       	push   $0xf0108af4$/;"	l
f010671d	obj/kern/kernel.asm	/^f010671d:	e8 1e 99 ff ff       	call   f0100040 <_panic>$/;"	l
f0106722	obj/kern/kernel.asm	/^f0106722:	f3 90                	pause  $/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	89 d0                	mov    %edx,%eax$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106729	obj/kern/kernel.asm	/^f0106729:	85 c0                	test   %eax,%eax$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	75 f5                	jne    f0106722 <spin_lock+0x46>$/;"	l
f010672d	obj/kern/kernel.asm	/^f010672d:	e8 3c fd ff ff       	call   f010646e <cpunum>$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106735	obj/kern/kernel.asm	/^f0106735:	05 20 20 25 f0       	add    $0xf0252020,%eax$/;"	l
f010673a	obj/kern/kernel.asm	/^f010673a:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f010673d	obj/kern/kernel.asm	/^f010673d:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0106740	obj/kern/kernel.asm	/^f0106740:	89 ea                	mov    %ebp,%edx$/;"	l
f0106742	obj/kern/kernel.asm	/^f0106742:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106747	obj/kern/kernel.asm	/^f0106747:	eb 0b                	jmp    f0106754 <spin_lock+0x78>$/;"	l
f0106749	obj/kern/kernel.asm	/^f0106749:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f010674c	obj/kern/kernel.asm	/^f010674c:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f010674f	obj/kern/kernel.asm	/^f010674f:	8b 12                	mov    (%edx),%edx$/;"	l
f0106751	obj/kern/kernel.asm	/^f0106751:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106754	obj/kern/kernel.asm	/^f0106754:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f010675a	obj/kern/kernel.asm	/^f010675a:	76 11                	jbe    f010676d <spin_lock+0x91>$/;"	l
f010675c	obj/kern/kernel.asm	/^f010675c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	7e e8                	jle    f0106749 <spin_lock+0x6d>$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	eb 0a                	jmp    f010676d <spin_lock+0x91>$/;"	l
f0106763	obj/kern/kernel.asm	/^f0106763:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010676d	obj/kern/kernel.asm	/^f010676d:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106770	obj/kern/kernel.asm	/^f0106770:	7e f1                	jle    f0106763 <spin_lock+0x87>$/;"	l
f0106772	obj/kern/kernel.asm	/^f0106772:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0106775	obj/kern/kernel.asm	/^f0106775:	5b                   	pop    %ebx$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	5e                   	pop    %esi$/;"	l
f0106777	obj/kern/kernel.asm	/^f0106777:	5d                   	pop    %ebp$/;"	l
f0106778	obj/kern/kernel.asm	/^f0106778:	c3                   	ret    $/;"	l
f0106779	obj/kern/kernel.asm	/^f0106779 <spin_unlock>:$/;"	l
f0106779	obj/kern/kernel.asm	/^f0106779:	55                   	push   %ebp$/;"	l
f010677a	obj/kern/kernel.asm	/^f010677a:	89 e5                	mov    %esp,%ebp$/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c:	57                   	push   %edi$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	56                   	push   %esi$/;"	l
f010677e	obj/kern/kernel.asm	/^f010677e:	53                   	push   %ebx$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106785	obj/kern/kernel.asm	/^f0106785:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0106788	obj/kern/kernel.asm	/^f0106788:	74 18                	je     f01067a2 <spin_unlock+0x29>$/;"	l
f010678a	obj/kern/kernel.asm	/^f010678a:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f010678d	obj/kern/kernel.asm	/^f010678d:	e8 dc fc ff ff       	call   f010646e <cpunum>$/;"	l
f0106792	obj/kern/kernel.asm	/^f0106792:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106795	obj/kern/kernel.asm	/^f0106795:	05 20 20 25 f0       	add    $0xf0252020,%eax$/;"	l
f010679a	obj/kern/kernel.asm	/^f010679a:	39 c3                	cmp    %eax,%ebx$/;"	l
f010679c	obj/kern/kernel.asm	/^f010679c:	0f 84 a5 00 00 00    	je     f0106847 <spin_unlock+0xce>$/;"	l
f01067a2	obj/kern/kernel.asm	/^f01067a2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	6a 28                	push   $0x28$/;"	l
f01067a7	obj/kern/kernel.asm	/^f01067a7:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	50                   	push   %eax$/;"	l
f01067ab	obj/kern/kernel.asm	/^f01067ab:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	53                   	push   %ebx$/;"	l
f01067af	obj/kern/kernel.asm	/^f01067af:	e8 e7 f6 ff ff       	call   f0105e9b <memmove>$/;"	l
f01067b4	obj/kern/kernel.asm	/^f01067b4:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01067b7	obj/kern/kernel.asm	/^f01067b7:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f01067ba	obj/kern/kernel.asm	/^f01067ba:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f01067bd	obj/kern/kernel.asm	/^f01067bd:	e8 ac fc ff ff       	call   f010646e <cpunum>$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	57                   	push   %edi$/;"	l
f01067c3	obj/kern/kernel.asm	/^f01067c3:	56                   	push   %esi$/;"	l
f01067c4	obj/kern/kernel.asm	/^f01067c4:	50                   	push   %eax$/;"	l
f01067c5	obj/kern/kernel.asm	/^f01067c5:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01067ca	obj/kern/kernel.asm	/^f01067ca:	e8 a9 d6 ff ff       	call   f0103e78 <cprintf>$/;"	l
f01067cf	obj/kern/kernel.asm	/^f01067cf:	83 c4 20             	add    $0x20,%esp$/;"	l
f01067d2	obj/kern/kernel.asm	/^f01067d2:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f01067d5	obj/kern/kernel.asm	/^f01067d5:	eb 54                	jmp    f010682b <spin_unlock+0xb2>$/;"	l
f01067d7	obj/kern/kernel.asm	/^f01067d7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	57                   	push   %edi$/;"	l
f01067db	obj/kern/kernel.asm	/^f01067db:	50                   	push   %eax$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	e8 16 eb ff ff       	call   f01052f7 <debuginfo_eip>$/;"	l
f01067e1	obj/kern/kernel.asm	/^f01067e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01067e4	obj/kern/kernel.asm	/^f01067e4:	85 c0                	test   %eax,%eax$/;"	l
f01067e6	obj/kern/kernel.asm	/^f01067e6:	78 27                	js     f010680f <spin_unlock+0x96>$/;"	l
f01067e8	obj/kern/kernel.asm	/^f01067e8:	8b 06                	mov    (%esi),%eax$/;"	l
f01067ea	obj/kern/kernel.asm	/^f01067ea:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	89 c2                	mov    %eax,%edx$/;"	l
f01067ef	obj/kern/kernel.asm	/^f01067ef:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f01067f2	obj/kern/kernel.asm	/^f01067f2:	52                   	push   %edx$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f01067f6	obj/kern/kernel.asm	/^f01067f6:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f01067f9	obj/kern/kernel.asm	/^f01067f9:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f01067fc	obj/kern/kernel.asm	/^f01067fc:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01067ff	obj/kern/kernel.asm	/^f01067ff:	50                   	push   %eax$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	68 04 8b 10 f0       	push   $0xf0108b04$/;"	l
f0106805	obj/kern/kernel.asm	/^f0106805:	e8 6e d6 ff ff       	call   f0103e78 <cprintf>$/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010680d	obj/kern/kernel.asm	/^f010680d:	eb 12                	jmp    f0106821 <spin_unlock+0xa8>$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106812	obj/kern/kernel.asm	/^f0106812:	ff 36                	pushl  (%esi)$/;"	l
f0106814	obj/kern/kernel.asm	/^f0106814:	68 1b 8b 10 f0       	push   $0xf0108b1b$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	e8 5a d6 ff ff       	call   f0103e78 <cprintf>$/;"	l
f010681e	obj/kern/kernel.asm	/^f010681e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106821	obj/kern/kernel.asm	/^f0106821:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106829	obj/kern/kernel.asm	/^f0106829:	74 08                	je     f0106833 <spin_unlock+0xba>$/;"	l
f010682b	obj/kern/kernel.asm	/^f010682b:	89 de                	mov    %ebx,%esi$/;"	l
f010682d	obj/kern/kernel.asm	/^f010682d:	8b 03                	mov    (%ebx),%eax$/;"	l
f010682f	obj/kern/kernel.asm	/^f010682f:	85 c0                	test   %eax,%eax$/;"	l
f0106831	obj/kern/kernel.asm	/^f0106831:	75 a4                	jne    f01067d7 <spin_unlock+0x5e>$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106836	obj/kern/kernel.asm	/^f0106836:	68 23 8b 10 f0       	push   $0xf0108b23$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	6a 67                	push   $0x67$/;"	l
f010683d	obj/kern/kernel.asm	/^f010683d:	68 f4 8a 10 f0       	push   $0xf0108af4$/;"	l
f0106842	obj/kern/kernel.asm	/^f0106842:	e8 f9 97 ff ff       	call   f0100040 <_panic>$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0106855	obj/kern/kernel.asm	/^f0106855:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010685a	obj/kern/kernel.asm	/^f010685a:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0106860	obj/kern/kernel.asm	/^f0106860:	5b                   	pop    %ebx$/;"	l
f0106861	obj/kern/kernel.asm	/^f0106861:	5e                   	pop    %esi$/;"	l
f0106862	obj/kern/kernel.asm	/^f0106862:	5f                   	pop    %edi$/;"	l
f0106863	obj/kern/kernel.asm	/^f0106863:	5d                   	pop    %ebp$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	c3                   	ret    $/;"	l
f0106865	obj/kern/kernel.asm	/^f0106865:	66 90                	xchg   %ax,%ax$/;"	l
f0106867	obj/kern/kernel.asm	/^f0106867:	66 90                	xchg   %ax,%ax$/;"	l
f0106869	obj/kern/kernel.asm	/^f0106869:	66 90                	xchg   %ax,%ax$/;"	l
f010686b	obj/kern/kernel.asm	/^f010686b:	66 90                	xchg   %ax,%ax$/;"	l
f010686d	obj/kern/kernel.asm	/^f010686d:	66 90                	xchg   %ax,%ax$/;"	l
f010686f	obj/kern/kernel.asm	/^f010686f:	90                   	nop$/;"	l
f0106870	obj/kern/kernel.asm	/^f0106870 <__udivdi3>:$/;"	l
f0106870	obj/kern/kernel.asm	/^f0106870:	55                   	push   %ebp$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	57                   	push   %edi$/;"	l
f0106872	obj/kern/kernel.asm	/^f0106872:	56                   	push   %esi$/;"	l
f0106873	obj/kern/kernel.asm	/^f0106873:	53                   	push   %ebx$/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106877	obj/kern/kernel.asm	/^f0106877:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f010687b	obj/kern/kernel.asm	/^f010687b:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f010687f	obj/kern/kernel.asm	/^f010687f:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0106883	obj/kern/kernel.asm	/^f0106883:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106887	obj/kern/kernel.asm	/^f0106887:	85 f6                	test   %esi,%esi$/;"	l
f0106889	obj/kern/kernel.asm	/^f0106889:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010688d	obj/kern/kernel.asm	/^f010688d:	89 ca                	mov    %ecx,%edx$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	89 f8                	mov    %edi,%eax$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	75 3d                	jne    f01068d0 <__udivdi3+0x60>$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	39 cf                	cmp    %ecx,%edi$/;"	l
f0106895	obj/kern/kernel.asm	/^f0106895:	0f 87 c5 00 00 00    	ja     f0106960 <__udivdi3+0xf0>$/;"	l
f010689b	obj/kern/kernel.asm	/^f010689b:	85 ff                	test   %edi,%edi$/;"	l
f010689d	obj/kern/kernel.asm	/^f010689d:	89 fd                	mov    %edi,%ebp$/;"	l
f010689f	obj/kern/kernel.asm	/^f010689f:	75 0b                	jne    f01068ac <__udivdi3+0x3c>$/;"	l
f01068a1	obj/kern/kernel.asm	/^f01068a1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01068a6	obj/kern/kernel.asm	/^f01068a6:	31 d2                	xor    %edx,%edx$/;"	l
f01068a8	obj/kern/kernel.asm	/^f01068a8:	f7 f7                	div    %edi$/;"	l
f01068aa	obj/kern/kernel.asm	/^f01068aa:	89 c5                	mov    %eax,%ebp$/;"	l
f01068ac	obj/kern/kernel.asm	/^f01068ac:	89 c8                	mov    %ecx,%eax$/;"	l
f01068ae	obj/kern/kernel.asm	/^f01068ae:	31 d2                	xor    %edx,%edx$/;"	l
f01068b0	obj/kern/kernel.asm	/^f01068b0:	f7 f5                	div    %ebp$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	89 c1                	mov    %eax,%ecx$/;"	l
f01068b4	obj/kern/kernel.asm	/^f01068b4:	89 d8                	mov    %ebx,%eax$/;"	l
f01068b6	obj/kern/kernel.asm	/^f01068b6:	89 cf                	mov    %ecx,%edi$/;"	l
f01068b8	obj/kern/kernel.asm	/^f01068b8:	f7 f5                	div    %ebp$/;"	l
f01068ba	obj/kern/kernel.asm	/^f01068ba:	89 c3                	mov    %eax,%ebx$/;"	l
f01068bc	obj/kern/kernel.asm	/^f01068bc:	89 d8                	mov    %ebx,%eax$/;"	l
f01068be	obj/kern/kernel.asm	/^f01068be:	89 fa                	mov    %edi,%edx$/;"	l
f01068c0	obj/kern/kernel.asm	/^f01068c0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	5b                   	pop    %ebx$/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	5e                   	pop    %esi$/;"	l
f01068c5	obj/kern/kernel.asm	/^f01068c5:	5f                   	pop    %edi$/;"	l
f01068c6	obj/kern/kernel.asm	/^f01068c6:	5d                   	pop    %ebp$/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	c3                   	ret    $/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	90                   	nop$/;"	l
f01068c9	obj/kern/kernel.asm	/^f01068c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	39 ce                	cmp    %ecx,%esi$/;"	l
f01068d2	obj/kern/kernel.asm	/^f01068d2:	77 74                	ja     f0106948 <__udivdi3+0xd8>$/;"	l
f01068d4	obj/kern/kernel.asm	/^f01068d4:	0f bd fe             	bsr    %esi,%edi$/;"	l
f01068d7	obj/kern/kernel.asm	/^f01068d7:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da:	0f 84 98 00 00 00    	je     f0106978 <__udivdi3+0x108>$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	89 f9                	mov    %edi,%ecx$/;"	l
f01068e7	obj/kern/kernel.asm	/^f01068e7:	89 c5                	mov    %eax,%ebp$/;"	l
f01068e9	obj/kern/kernel.asm	/^f01068e9:	29 fb                	sub    %edi,%ebx$/;"	l
f01068eb	obj/kern/kernel.asm	/^f01068eb:	d3 e6                	shl    %cl,%esi$/;"	d
f01068ed	obj/kern/kernel.asm	/^f01068ed:	89 d9                	mov    %ebx,%ecx$/;"	l
f01068ef	obj/kern/kernel.asm	/^f01068ef:	d3 ed                	shr    %cl,%ebp$/;"	d
f01068f1	obj/kern/kernel.asm	/^f01068f1:	89 f9                	mov    %edi,%ecx$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	d3 e0                	shl    %cl,%eax$/;"	d
f01068f5	obj/kern/kernel.asm	/^f01068f5:	09 ee                	or     %ebp,%esi$/;"	l
f01068f7	obj/kern/kernel.asm	/^f01068f7:	89 d9                	mov    %ebx,%ecx$/;"	l
f01068f9	obj/kern/kernel.asm	/^f01068f9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	89 d5                	mov    %edx,%ebp$/;"	l
f01068ff	obj/kern/kernel.asm	/^f01068ff:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106903	obj/kern/kernel.asm	/^f0106903:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106905	obj/kern/kernel.asm	/^f0106905:	89 f9                	mov    %edi,%ecx$/;"	l
f0106907	obj/kern/kernel.asm	/^f0106907:	d3 e2                	shl    %cl,%edx$/;"	d
f0106909	obj/kern/kernel.asm	/^f0106909:	89 d9                	mov    %ebx,%ecx$/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b:	d3 e8                	shr    %cl,%eax$/;"	d
f010690d	obj/kern/kernel.asm	/^f010690d:	09 c2                	or     %eax,%edx$/;"	l
f010690f	obj/kern/kernel.asm	/^f010690f:	89 d0                	mov    %edx,%eax$/;"	l
f0106911	obj/kern/kernel.asm	/^f0106911:	89 ea                	mov    %ebp,%edx$/;"	l
f0106913	obj/kern/kernel.asm	/^f0106913:	f7 f6                	div    %esi$/;"	l
f0106915	obj/kern/kernel.asm	/^f0106915:	89 d5                	mov    %edx,%ebp$/;"	l
f0106917	obj/kern/kernel.asm	/^f0106917:	89 c3                	mov    %eax,%ebx$/;"	l
f0106919	obj/kern/kernel.asm	/^f0106919:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010691d	obj/kern/kernel.asm	/^f010691d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010691f	obj/kern/kernel.asm	/^f010691f:	72 10                	jb     f0106931 <__udivdi3+0xc1>$/;"	l
f0106921	obj/kern/kernel.asm	/^f0106921:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0106925	obj/kern/kernel.asm	/^f0106925:	89 f9                	mov    %edi,%ecx$/;"	l
f0106927	obj/kern/kernel.asm	/^f0106927:	d3 e6                	shl    %cl,%esi$/;"	d
f0106929	obj/kern/kernel.asm	/^f0106929:	39 c6                	cmp    %eax,%esi$/;"	l
f010692b	obj/kern/kernel.asm	/^f010692b:	73 07                	jae    f0106934 <__udivdi3+0xc4>$/;"	l
f010692d	obj/kern/kernel.asm	/^f010692d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010692f	obj/kern/kernel.asm	/^f010692f:	75 03                	jne    f0106934 <__udivdi3+0xc4>$/;"	l
f0106931	obj/kern/kernel.asm	/^f0106931:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106934	obj/kern/kernel.asm	/^f0106934:	31 ff                	xor    %edi,%edi$/;"	l
f0106936	obj/kern/kernel.asm	/^f0106936:	89 d8                	mov    %ebx,%eax$/;"	l
f0106938	obj/kern/kernel.asm	/^f0106938:	89 fa                	mov    %edi,%edx$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010693d	obj/kern/kernel.asm	/^f010693d:	5b                   	pop    %ebx$/;"	l
f010693e	obj/kern/kernel.asm	/^f010693e:	5e                   	pop    %esi$/;"	l
f010693f	obj/kern/kernel.asm	/^f010693f:	5f                   	pop    %edi$/;"	l
f0106940	obj/kern/kernel.asm	/^f0106940:	5d                   	pop    %ebp$/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	c3                   	ret    $/;"	l
f0106942	obj/kern/kernel.asm	/^f0106942:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	31 ff                	xor    %edi,%edi$/;"	l
f010694a	obj/kern/kernel.asm	/^f010694a:	31 db                	xor    %ebx,%ebx$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	89 d8                	mov    %ebx,%eax$/;"	l
f010694e	obj/kern/kernel.asm	/^f010694e:	89 fa                	mov    %edi,%edx$/;"	l
f0106950	obj/kern/kernel.asm	/^f0106950:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106953	obj/kern/kernel.asm	/^f0106953:	5b                   	pop    %ebx$/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954:	5e                   	pop    %esi$/;"	l
f0106955	obj/kern/kernel.asm	/^f0106955:	5f                   	pop    %edi$/;"	l
f0106956	obj/kern/kernel.asm	/^f0106956:	5d                   	pop    %ebp$/;"	l
f0106957	obj/kern/kernel.asm	/^f0106957:	c3                   	ret    $/;"	l
f0106958	obj/kern/kernel.asm	/^f0106958:	90                   	nop$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	89 d8                	mov    %ebx,%eax$/;"	l
f0106962	obj/kern/kernel.asm	/^f0106962:	f7 f7                	div    %edi$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	31 ff                	xor    %edi,%edi$/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966:	89 c3                	mov    %eax,%ebx$/;"	l
f0106968	obj/kern/kernel.asm	/^f0106968:	89 d8                	mov    %ebx,%eax$/;"	l
f010696a	obj/kern/kernel.asm	/^f010696a:	89 fa                	mov    %edi,%edx$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010696f	obj/kern/kernel.asm	/^f010696f:	5b                   	pop    %ebx$/;"	l
f0106970	obj/kern/kernel.asm	/^f0106970:	5e                   	pop    %esi$/;"	l
f0106971	obj/kern/kernel.asm	/^f0106971:	5f                   	pop    %edi$/;"	l
f0106972	obj/kern/kernel.asm	/^f0106972:	5d                   	pop    %ebp$/;"	l
f0106973	obj/kern/kernel.asm	/^f0106973:	c3                   	ret    $/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106978	obj/kern/kernel.asm	/^f0106978:	39 ce                	cmp    %ecx,%esi$/;"	l
f010697a	obj/kern/kernel.asm	/^f010697a:	72 0c                	jb     f0106988 <__udivdi3+0x118>$/;"	l
f010697c	obj/kern/kernel.asm	/^f010697c:	31 db                	xor    %ebx,%ebx$/;"	l
f010697e	obj/kern/kernel.asm	/^f010697e:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0106982	obj/kern/kernel.asm	/^f0106982:	0f 87 34 ff ff ff    	ja     f01068bc <__udivdi3+0x4c>$/;"	l
f0106988	obj/kern/kernel.asm	/^f0106988:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	e9 2a ff ff ff       	jmp    f01068bc <__udivdi3+0x4c>$/;"	l
f0106992	obj/kern/kernel.asm	/^f0106992:	66 90                	xchg   %ax,%ax$/;"	l
f0106994	obj/kern/kernel.asm	/^f0106994:	66 90                	xchg   %ax,%ax$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	66 90                	xchg   %ax,%ax$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	66 90                	xchg   %ax,%ax$/;"	l
f010699a	obj/kern/kernel.asm	/^f010699a:	66 90                	xchg   %ax,%ax$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	66 90                	xchg   %ax,%ax$/;"	l
f010699e	obj/kern/kernel.asm	/^f010699e:	66 90                	xchg   %ax,%ax$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0 <__umoddi3>:$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0:	55                   	push   %ebp$/;"	l
f01069a1	obj/kern/kernel.asm	/^f01069a1:	57                   	push   %edi$/;"	l
f01069a2	obj/kern/kernel.asm	/^f01069a2:	56                   	push   %esi$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	53                   	push   %ebx$/;"	l
f01069a4	obj/kern/kernel.asm	/^f01069a4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f01069ab	obj/kern/kernel.asm	/^f01069ab:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f01069af	obj/kern/kernel.asm	/^f01069af:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f01069b3	obj/kern/kernel.asm	/^f01069b3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01069b7	obj/kern/kernel.asm	/^f01069b7:	85 d2                	test   %edx,%edx$/;"	l
f01069b9	obj/kern/kernel.asm	/^f01069b9:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01069bd	obj/kern/kernel.asm	/^f01069bd:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01069c1	obj/kern/kernel.asm	/^f01069c1:	89 f3                	mov    %esi,%ebx$/;"	l
f01069c3	obj/kern/kernel.asm	/^f01069c3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01069c6	obj/kern/kernel.asm	/^f01069c6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01069ca	obj/kern/kernel.asm	/^f01069ca:	75 1c                	jne    f01069e8 <__umoddi3+0x48>$/;"	l
f01069cc	obj/kern/kernel.asm	/^f01069cc:	39 f7                	cmp    %esi,%edi$/;"	l
f01069ce	obj/kern/kernel.asm	/^f01069ce:	76 50                	jbe    f0106a20 <__umoddi3+0x80>$/;"	l
f01069d0	obj/kern/kernel.asm	/^f01069d0:	89 c8                	mov    %ecx,%eax$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	89 f2                	mov    %esi,%edx$/;"	l
f01069d4	obj/kern/kernel.asm	/^f01069d4:	f7 f7                	div    %edi$/;"	l
f01069d6	obj/kern/kernel.asm	/^f01069d6:	89 d0                	mov    %edx,%eax$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	31 d2                	xor    %edx,%edx$/;"	l
f01069da	obj/kern/kernel.asm	/^f01069da:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01069dd	obj/kern/kernel.asm	/^f01069dd:	5b                   	pop    %ebx$/;"	l
f01069de	obj/kern/kernel.asm	/^f01069de:	5e                   	pop    %esi$/;"	l
f01069df	obj/kern/kernel.asm	/^f01069df:	5f                   	pop    %edi$/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	5d                   	pop    %ebp$/;"	l
f01069e1	obj/kern/kernel.asm	/^f01069e1:	c3                   	ret    $/;"	l
f01069e2	obj/kern/kernel.asm	/^f01069e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01069e8	obj/kern/kernel.asm	/^f01069e8:	39 f2                	cmp    %esi,%edx$/;"	l
f01069ea	obj/kern/kernel.asm	/^f01069ea:	89 d0                	mov    %edx,%eax$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	77 52                	ja     f0106a40 <__umoddi3+0xa0>$/;"	l
f01069ee	obj/kern/kernel.asm	/^f01069ee:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f01069f1	obj/kern/kernel.asm	/^f01069f1:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f01069f4	obj/kern/kernel.asm	/^f01069f4:	75 5a                	jne    f0106a50 <__umoddi3+0xb0>$/;"	l
f01069f6	obj/kern/kernel.asm	/^f01069f6:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f01069fa	obj/kern/kernel.asm	/^f01069fa:	0f 82 e0 00 00 00    	jb     f0106ae0 <__umoddi3+0x140>$/;"	l
f0106a00	obj/kern/kernel.asm	/^f0106a00:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0106a03	obj/kern/kernel.asm	/^f0106a03:	0f 86 d7 00 00 00    	jbe    f0106ae0 <__umoddi3+0x140>$/;"	l
f0106a09	obj/kern/kernel.asm	/^f0106a09:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106a0d	obj/kern/kernel.asm	/^f0106a0d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106a11	obj/kern/kernel.asm	/^f0106a11:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	5b                   	pop    %ebx$/;"	l
f0106a15	obj/kern/kernel.asm	/^f0106a15:	5e                   	pop    %esi$/;"	l
f0106a16	obj/kern/kernel.asm	/^f0106a16:	5f                   	pop    %edi$/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	5d                   	pop    %ebp$/;"	l
f0106a18	obj/kern/kernel.asm	/^f0106a18:	c3                   	ret    $/;"	l
f0106a19	obj/kern/kernel.asm	/^f0106a19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106a20	obj/kern/kernel.asm	/^f0106a20:	85 ff                	test   %edi,%edi$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	89 fd                	mov    %edi,%ebp$/;"	l
f0106a24	obj/kern/kernel.asm	/^f0106a24:	75 0b                	jne    f0106a31 <__umoddi3+0x91>$/;"	l
f0106a26	obj/kern/kernel.asm	/^f0106a26:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106a2b	obj/kern/kernel.asm	/^f0106a2b:	31 d2                	xor    %edx,%edx$/;"	l
f0106a2d	obj/kern/kernel.asm	/^f0106a2d:	f7 f7                	div    %edi$/;"	l
f0106a2f	obj/kern/kernel.asm	/^f0106a2f:	89 c5                	mov    %eax,%ebp$/;"	l
f0106a31	obj/kern/kernel.asm	/^f0106a31:	89 f0                	mov    %esi,%eax$/;"	l
f0106a33	obj/kern/kernel.asm	/^f0106a33:	31 d2                	xor    %edx,%edx$/;"	l
f0106a35	obj/kern/kernel.asm	/^f0106a35:	f7 f5                	div    %ebp$/;"	l
f0106a37	obj/kern/kernel.asm	/^f0106a37:	89 c8                	mov    %ecx,%eax$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	f7 f5                	div    %ebp$/;"	l
f0106a3b	obj/kern/kernel.asm	/^f0106a3b:	89 d0                	mov    %edx,%eax$/;"	l
f0106a3d	obj/kern/kernel.asm	/^f0106a3d:	eb 99                	jmp    f01069d8 <__umoddi3+0x38>$/;"	l
f0106a3f	obj/kern/kernel.asm	/^f0106a3f:	90                   	nop$/;"	l
f0106a40	obj/kern/kernel.asm	/^f0106a40:	89 c8                	mov    %ecx,%eax$/;"	l
f0106a42	obj/kern/kernel.asm	/^f0106a42:	89 f2                	mov    %esi,%edx$/;"	l
f0106a44	obj/kern/kernel.asm	/^f0106a44:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106a47	obj/kern/kernel.asm	/^f0106a47:	5b                   	pop    %ebx$/;"	l
f0106a48	obj/kern/kernel.asm	/^f0106a48:	5e                   	pop    %esi$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	5f                   	pop    %edi$/;"	l
f0106a4a	obj/kern/kernel.asm	/^f0106a4a:	5d                   	pop    %ebp$/;"	l
f0106a4b	obj/kern/kernel.asm	/^f0106a4b:	c3                   	ret    $/;"	l
f0106a4c	obj/kern/kernel.asm	/^f0106a4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106a50	obj/kern/kernel.asm	/^f0106a50:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0106a53	obj/kern/kernel.asm	/^f0106a53:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106a5a	obj/kern/kernel.asm	/^f0106a5a:	29 ef                	sub    %ebp,%edi$/;"	l
f0106a5c	obj/kern/kernel.asm	/^f0106a5c:	d3 e0                	shl    %cl,%eax$/;"	d
f0106a5e	obj/kern/kernel.asm	/^f0106a5e:	89 f9                	mov    %edi,%ecx$/;"	l
f0106a60	obj/kern/kernel.asm	/^f0106a60:	89 f2                	mov    %esi,%edx$/;"	l
f0106a62	obj/kern/kernel.asm	/^f0106a62:	d3 ea                	shr    %cl,%edx$/;"	d
f0106a64	obj/kern/kernel.asm	/^f0106a64:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106a66	obj/kern/kernel.asm	/^f0106a66:	09 c2                	or     %eax,%edx$/;"	l
f0106a68	obj/kern/kernel.asm	/^f0106a68:	89 d8                	mov    %ebx,%eax$/;"	l
f0106a6a	obj/kern/kernel.asm	/^f0106a6a:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d:	89 f2                	mov    %esi,%edx$/;"	l
f0106a6f	obj/kern/kernel.asm	/^f0106a6f:	d3 e2                	shl    %cl,%edx$/;"	d
f0106a71	obj/kern/kernel.asm	/^f0106a71:	89 f9                	mov    %edi,%ecx$/;"	l
f0106a73	obj/kern/kernel.asm	/^f0106a73:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106a77	obj/kern/kernel.asm	/^f0106a77:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0106a7b	obj/kern/kernel.asm	/^f0106a7b:	d3 e8                	shr    %cl,%eax$/;"	d
f0106a7d	obj/kern/kernel.asm	/^f0106a7d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106a7f	obj/kern/kernel.asm	/^f0106a7f:	89 c6                	mov    %eax,%esi$/;"	l
f0106a81	obj/kern/kernel.asm	/^f0106a81:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106a83	obj/kern/kernel.asm	/^f0106a83:	89 f9                	mov    %edi,%ecx$/;"	l
f0106a85	obj/kern/kernel.asm	/^f0106a85:	89 d0                	mov    %edx,%eax$/;"	l
f0106a87	obj/kern/kernel.asm	/^f0106a87:	d3 e8                	shr    %cl,%eax$/;"	d
f0106a89	obj/kern/kernel.asm	/^f0106a89:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	09 d8                	or     %ebx,%eax$/;"	l
f0106a8d	obj/kern/kernel.asm	/^f0106a8d:	89 d3                	mov    %edx,%ebx$/;"	l
f0106a8f	obj/kern/kernel.asm	/^f0106a8f:	89 f2                	mov    %esi,%edx$/;"	l
f0106a91	obj/kern/kernel.asm	/^f0106a91:	f7 34 24             	divl   (%esp)$/;"	l
f0106a94	obj/kern/kernel.asm	/^f0106a94:	89 d6                	mov    %edx,%esi$/;"	l
f0106a96	obj/kern/kernel.asm	/^f0106a96:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106a98	obj/kern/kernel.asm	/^f0106a98:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f0106a9c	obj/kern/kernel.asm	/^f0106a9c:	39 d6                	cmp    %edx,%esi$/;"	l
f0106a9e	obj/kern/kernel.asm	/^f0106a9e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106aa2	obj/kern/kernel.asm	/^f0106aa2:	89 d1                	mov    %edx,%ecx$/;"	l
f0106aa4	obj/kern/kernel.asm	/^f0106aa4:	89 c3                	mov    %eax,%ebx$/;"	l
f0106aa6	obj/kern/kernel.asm	/^f0106aa6:	72 08                	jb     f0106ab0 <__umoddi3+0x110>$/;"	l
f0106aa8	obj/kern/kernel.asm	/^f0106aa8:	75 11                	jne    f0106abb <__umoddi3+0x11b>$/;"	l
f0106aaa	obj/kern/kernel.asm	/^f0106aaa:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f0106aae	obj/kern/kernel.asm	/^f0106aae:	73 0b                	jae    f0106abb <__umoddi3+0x11b>$/;"	l
f0106ab0	obj/kern/kernel.asm	/^f0106ab0:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0106ab4	obj/kern/kernel.asm	/^f0106ab4:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0106ab7	obj/kern/kernel.asm	/^f0106ab7:	89 d1                	mov    %edx,%ecx$/;"	l
f0106ab9	obj/kern/kernel.asm	/^f0106ab9:	89 c3                	mov    %eax,%ebx$/;"	l
f0106abb	obj/kern/kernel.asm	/^f0106abb:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	29 da                	sub    %ebx,%edx$/;"	l
f0106ac1	obj/kern/kernel.asm	/^f0106ac1:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106ac3	obj/kern/kernel.asm	/^f0106ac3:	89 f9                	mov    %edi,%ecx$/;"	l
f0106ac5	obj/kern/kernel.asm	/^f0106ac5:	89 f0                	mov    %esi,%eax$/;"	l
f0106ac7	obj/kern/kernel.asm	/^f0106ac7:	d3 e0                	shl    %cl,%eax$/;"	d
f0106ac9	obj/kern/kernel.asm	/^f0106ac9:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106acb	obj/kern/kernel.asm	/^f0106acb:	d3 ea                	shr    %cl,%edx$/;"	d
f0106acd	obj/kern/kernel.asm	/^f0106acd:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106acf	obj/kern/kernel.asm	/^f0106acf:	d3 ee                	shr    %cl,%esi$/;"	d
f0106ad1	obj/kern/kernel.asm	/^f0106ad1:	09 d0                	or     %edx,%eax$/;"	l
f0106ad3	obj/kern/kernel.asm	/^f0106ad3:	89 f2                	mov    %esi,%edx$/;"	l
f0106ad5	obj/kern/kernel.asm	/^f0106ad5:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106ad8	obj/kern/kernel.asm	/^f0106ad8:	5b                   	pop    %ebx$/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	5e                   	pop    %esi$/;"	l
f0106ada	obj/kern/kernel.asm	/^f0106ada:	5f                   	pop    %edi$/;"	l
f0106adb	obj/kern/kernel.asm	/^f0106adb:	5d                   	pop    %ebp$/;"	l
f0106adc	obj/kern/kernel.asm	/^f0106adc:	c3                   	ret    $/;"	l
f0106add	obj/kern/kernel.asm	/^f0106add:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106ae0	obj/kern/kernel.asm	/^f0106ae0:	29 f9                	sub    %edi,%ecx$/;"	l
f0106ae2	obj/kern/kernel.asm	/^f0106ae2:	19 d6                	sbb    %edx,%esi$/;"	l
f0106ae4	obj/kern/kernel.asm	/^f0106ae4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106aec	obj/kern/kernel.asm	/^f0106aec:	e9 18 ff ff ff       	jmp    f0106a09 <__umoddi3+0x69>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
fxsave	inc/env.h	/^	char fxsave[512] __attribute__((aligned(16)));$/;"	m	struct:Env
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idttable	kern/trapentry.S	/^idttable:$/;"	l
idttable	obj/kern/kernel.asm	/^idttable:$/;"	l
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/kern/kernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/badsegment.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/breakpoint.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/buggyhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/buggyhello2.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/divzero.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/dumbfork.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/evilhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/fairness.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultalloc.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultallocbad.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultbadhandler.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultdie.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultevilhandler.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultnostack.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultread.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultreadkernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultregs.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultwrite.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultwritekernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/forktree.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/fputest.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/fputest.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/fputest.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/hello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/idle.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/lottery.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/lottery.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/lottery.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/pingpong.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/pingpongs.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/primes.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/sendpage.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/singlestep.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/singlestep.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/singlestep.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/softint.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/spin.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/stresssched.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testbss.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/yield.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipc_try_recv	kern/syscall.c	/^ipc_try_recv(struct Env *recenv)$/;"	f	file:
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
irqtable	kern/trapentry.S	/^irqtable:$/;"	l
irqtable	obj/kern/kernel.asm	/^irqtable:$/;"	l
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fputest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lottery.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/singlestep.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/fputest.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/lottery.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/singlestep.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lottery_sched_init	kern/sched.c	/^void lottery_sched_init()$/;"	f
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_chperm	kern/monitor.c	/^mon_chperm(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_continue	kern/monitor.c	/^mon_continue(int argc, char **argv, struct Trapframe *tf) {$/;"	f
mon_dumpmem	kern/monitor.c	/^mon_dumpmem(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_showmappings	kern/monitor.c	/^mon_showmappings(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_step	kern/monitor.c	/^mon_step(int argc, char **argv, struct Trapframe *tf) {$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
next	kern/sched.c	/^static unsigned next = 1;$/;"	v	file:
next	obj/kern/kernel.asm	/^	next = next * 1103515245 + 12345;$/;"	d
next	obj/kern/kernel.asm	/^	next = seed;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fputest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fputest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fputest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fputest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lottery.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lottery.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lottery.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lottery.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/singlestep.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/singlestep.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/singlestep.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/singlestep.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/fputest.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/lottery.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/singlestep.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/kern/kernel.asm	/^			offset = PGOFF(i);$/;"	d
offsetof	inc/types.h	73;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/fputest.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/lottery.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/singlestep.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/fputest.asm	/^			padc = '-';$/;"	d
padc	obj/user/fputest.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/lottery.asm	/^			padc = '-';$/;"	d
padc	obj/user/lottery.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/singlestep.asm	/^			padc = '-';$/;"	d
padc	obj/user/singlestep.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pg	obj/user/fairness.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/sendpage.asm	/^		pg = (void *) UTOP;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgnum	obj/kern/kernel.asm	/^			pgnum = i >> PGSHIFT;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *)((uint8_t *)elfhdr + elfhdr->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pn	obj/kern/kernel.asm	/^		pn = pn >> PGSHIFT;$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/fputest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fputest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fputest.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/lottery.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lottery.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lottery.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/singlestep.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/singlestep.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/singlestep.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fputest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lottery.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/singlestep.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte_p	obj/kern/kernel.asm	/^			pte_p = pgdir_walk(pgdir, (void *) va, true);$/;"	d
pte_p	obj/kern/kernel.asm	/^		pte_p = pgdir_walk(kern_pgdir, (void *) va, 0);$/;"	d
pte_p	obj/kern/kernel.asm	/^		pte_p = pgdir_walk(pgdir, (void *) va, true);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^        r = sys_ipc_page_map(sender->env_id, sender->env_ipc_va,$/;"	d
r	obj/user/fairness.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/primes.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
r	obj/user/sendpage.asm	/^	r = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
rand	kern/sched.c	/^static unsigned rand()$/;"	f	file:
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fputest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lottery.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/singlestep.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rdmsr	inc/x86.h	6;"	d
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fputest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lottery.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/singlestep.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/fputest.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/lottery.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/singlestep.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/fputest.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/lottery.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/singlestep.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
sender_list_head	inc/env.h	/^	struct Env *sender_list_head, *sender_list_tail;	\/\/ for non-loop ipc_send challenge$/;"	m	struct:Env	typeref:struct:Env::Env
sender_list_tail	inc/env.h	/^	struct Env *sender_list_head, *sender_list_tail;	\/\/ for non-loop ipc_send challenge$/;"	m	struct:Env	typeref:struct:Env::
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/fputest.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/lottery.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/singlestep.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
srand	kern/sched.c	/^void srand(unsigned seed)$/;"	f
srcpp	obj/kern/kernel.asm	/^	srcpp = page_lookup(srcenv->env_pgdir, srcva, &srcpte);$/;"	d
srcpp	obj/kern/kernel.asm	/^        srcpp = page_lookup(curenv->env_pgdir, srcva, &srcpte);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool use_lottery = false;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static unsigned next = 1;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned rand()$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int32_t$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int32_t$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int32_t$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int32_t$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int32_t$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int32_t$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int32_t$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static int32_t$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/fputest.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/fputest.asm	/^static int$/;"	l
static	obj/user/fputest.asm	/^static int32_t$/;"	l
static	obj/user/fputest.asm	/^static long long$/;"	l
static	obj/user/fputest.asm	/^static unsigned long long$/;"	l
static	obj/user/fputest.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int32_t$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int32_t$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/lottery.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/lottery.asm	/^static int$/;"	l
static	obj/user/lottery.asm	/^static int32_t$/;"	l
static	obj/user/lottery.asm	/^static long long$/;"	l
static	obj/user/lottery.asm	/^static unsigned long long$/;"	l
static	obj/user/lottery.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static int32_t$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static int32_t$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static int32_t$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/singlestep.asm	/^static int32_t$/;"	l
static	obj/user/singlestep.asm	/^static long long$/;"	l
static	obj/user/singlestep.asm	/^static unsigned long long$/;"	l
static	obj/user/singlestep.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int32_t$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static int32_t$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static int32_t$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int32_t$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int32_t$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_tickets	kern/syscall.c	/^sys_env_set_tickets(envid_t envid, int tickets)$/;"	f	file:
sys_env_set_tickets	lib/syscall.c	/^sys_env_set_tickets(envid_t envid, int tickets)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_page_map	kern/syscall.c	/^sys_ipc_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
sysenter	lib/syscall.c	/^sysenter(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4)$/;"	f	file:
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	inc/lib.h	22;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fputest.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fputest.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lottery.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lottery.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/singlestep.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
total_tickets	obj/kern/kernel.asm	/^		total_tickets = 0;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fputest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lottery.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/singlestep.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
use_lottery	kern/sched.c	/^static bool use_lottery = false;$/;"	v	file:
use_lottery	obj/kern/kernel.asm	/^	use_lottery = true;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = MAX((size_t) va, ULIM);$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = curva;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^		user_mem_check_addr = curva;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(curenv->env_tf.tf_esp$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^			va = (unsigned char *)(page2kva(&pages[pgnum]) + offset);$/;"	d
va	obj/kern/kernel.asm	/^		va = (uintptr_t) page2kva(&pages[pn]);$/;"	d
va	obj/kern/kernel.asm	/^		va = (uintptr_t) pn << PGSHIFT;$/;"	d
va	obj/kern/kernel.asm	/^		va = PDX(va) << PDXSHIFT;$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void enable_PS_percpu()$/;"	l
void	obj/kern/kernel.asm	/^void lottery_sched_init()$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void srand(unsigned seed)$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/fputest.asm	/^void *$/;"	l
void	obj/user/fputest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fputest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/fputest.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/lottery.asm	/^void *$/;"	l
void	obj/user/lottery.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lottery.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/singlestep.asm	/^void *$/;"	l
void	obj/user/singlestep.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/singlestep.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/fputest.asm	/^				width = 0;$/;"	d
width	obj/user/fputest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fputest.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/lottery.asm	/^				width = 0;$/;"	d
width	obj/user/lottery.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lottery.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/singlestep.asm	/^				width = 0;$/;"	d
width	obj/user/singlestep.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/singlestep.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
wrmsr	inc/x86.h	11;"	d
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
