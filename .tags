!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon5
ALT	kern/console.c	226;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/singlestep.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	293;"	d	file:
CAPSLOCK	kern/console.c	228;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	17;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	396;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon7
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon7
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon7
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	225;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/singlestep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	232;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon2
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon2
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon2
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon2
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon2
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon1
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon1
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon1
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon1
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IA32_SYSENTER_CS	inc/x86.h	17;"	d
IA32_SYSENTER_EIP	inc/x86.h	19;"	d
IA32_SYSENTER_ESP	inc/x86.h	18;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	297;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	222;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon4
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	229;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	84;"	d
O_CREAT	inc/lib.h	86;"	d
O_EXCL	inc/lib.h	88;"	d
O_MKDIR	inc/lib.h	89;"	d
O_RDONLY	inc/lib.h	81;"	d
O_RDWR	inc/lib.h	83;"	d
O_TRUNC	inc/lib.h	87;"	d
O_WRONLY	inc/lib.h	82;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Oct 8 21:31:51 PDT 2018$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PS_enabled	kern/pmap.c	/^static bool PS_enabled;$/;"	v	file:
PS_enabled	obj/kern/kernel.asm	/^	PS_enabled = !!(edx & (1 << 3));$/;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	74;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	230;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	224;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon4
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon4
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon4
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon4
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon4
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon4
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon4
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon4
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon4
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon4
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon4
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon4
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon4
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	296;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/singlestep.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/singlestep.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/singlestep.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/singlestep.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/singlestep.asm	/^			base = 10;$/;"	d
base	obj/user/singlestep.asm	/^			base = 16;$/;"	d
base	obj/user/singlestep.asm	/^			base = 8;$/;"	d
base	obj/user/singlestep.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/singlestep.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
broken	obj/kern/kernel.asm	/^					broken = false;$/;"	d
broken	obj/user/badsegment.asm	/^					broken = false;$/;"	d
broken	obj/user/breakpoint.asm	/^					broken = false;$/;"	d
broken	obj/user/buggyhello.asm	/^					broken = false;$/;"	d
broken	obj/user/buggyhello2.asm	/^					broken = false;$/;"	d
broken	obj/user/divzero.asm	/^					broken = false;$/;"	d
broken	obj/user/evilhello.asm	/^					broken = false;$/;"	d
broken	obj/user/faultread.asm	/^					broken = false;$/;"	d
broken	obj/user/faultreadkernel.asm	/^					broken = false;$/;"	d
broken	obj/user/faultwrite.asm	/^					broken = false;$/;"	d
broken	obj/user/faultwritekernel.asm	/^					broken = false;$/;"	d
broken	obj/user/hello.asm	/^					broken = false;$/;"	d
broken	obj/user/singlestep.asm	/^					broken = false;$/;"	d
broken	obj/user/softint.asm	/^					broken = false;$/;"	d
broken	obj/user/testbss.asm	/^					broken = false;$/;"	d
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/singlestep.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/kern/kernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/kern/kernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/badsegment.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/badsegment.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/breakpoint.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/breakpoint.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello2.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello2.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/divzero.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/divzero.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/evilhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/evilhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultread.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultread.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultreadkernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultreadkernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwrite.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwrite.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwritekernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwritekernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/hello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/hello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/singlestep.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/singlestep.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/singlestep.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/singlestep.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/softint.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/softint.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testbss.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testbss.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/singlestep.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
clr	obj/kern/kernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/badsegment.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/breakpoint.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/buggyhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/buggyhello2.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/divzero.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/evilhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultread.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultreadkernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultwrite.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultwritekernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/hello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/singlestep.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/softint.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testbss.asm	/^						clr = ch - '0';$/;"	d
clr_b	obj/kern/kernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/badsegment.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/breakpoint.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/buggyhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/buggyhello2.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/divzero.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/evilhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultread.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultreadkernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultwrite.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultwritekernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/hello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/singlestep.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/softint.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testbss.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_g	obj/kern/kernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/badsegment.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/breakpoint.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/buggyhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/buggyhello2.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/divzero.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/evilhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultread.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultreadkernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultwrite.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultwritekernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/hello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/singlestep.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/softint.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testbss.asm	/^						clr_g = clr & 2;$/;"	d
clr_r	obj/kern/kernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/badsegment.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/breakpoint.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/buggyhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/buggyhello2.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/divzero.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/evilhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultread.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultreadkernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultwrite.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultwritekernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/hello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/singlestep.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/softint.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testbss.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/singlestep.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon6	file:
cons_bgclr	kern/console.c	/^int cons_bgclr = 0;$/;"	v
cons_bgclr	lib/printf.c	/^int cons_bgclr = 0;$/;"	v
cons_bgclr	obj/kern/kernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/kern/kernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/badsegment.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/badsegment.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/breakpoint.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/breakpoint.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/buggyhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/buggyhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/buggyhello2.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/buggyhello2.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/divzero.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/divzero.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/evilhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/evilhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultread.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultread.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultreadkernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultreadkernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultwrite.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultwrite.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultwritekernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultwritekernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/hello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/hello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/singlestep.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/singlestep.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/softint.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/softint.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testbss.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testbss.asm	/^						cons_bgclr = 0;$/;"	d
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
cons_textclr	kern/console.c	/^int cons_textclr = 0x0700;$/;"	v
cons_textclr	lib/printf.c	/^int cons_textclr = 0x0700;$/;"	v
cons_textclr	obj/kern/kernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/divzero.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/divzero.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/divzero.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultread.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultread.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultread.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/hello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/hello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/hello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/softint.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/softint.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/softint.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testbss.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testbss.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testbss.asm	/^			cons_textclr = num;$/;"	d
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/singlestep.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/singlestep.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
curva	obj/kern/kernel.asm	/^		curva = ROUNDDOWN(curva, PGSIZE);$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/singlestep.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/singlestep.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
detect_PS_support	kern/pmap.c	/^detect_PS_support()$/;"	f	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/singlestep.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^        ebp = (unsigned int*)(*ebp);$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/singlestep.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/singlestep.asm	/^				err = -err;$/;"	d
err	obj/user/singlestep.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 a0 11 00       	mov    $0x11a000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 a0 11 f0       	mov    $0xf011a000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <i386_init>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100046	obj/kern/kernel.asm	/^f0100046:	b8 80 6b 18 f0       	mov    $0xf0186b80,%eax$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	2d 80 5c 18 f0       	sub    $0xf0185c80,%eax$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	50                   	push   %eax$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	6a 00                	push   $0x0$/;"	l
f0100053	obj/kern/kernel.asm	/^f0100053:	68 80 5c 18 f0       	push   $0xf0185c80$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	e8 be 4a 00 00       	call   f0104b1b <memset>$/;"	l
f010005d	obj/kern/kernel.asm	/^f010005d:	e8 a3 04 00 00       	call   f0100505 <cons_init>$/;"	l
f0100062	obj/kern/kernel.asm	/^f0100062:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100065	obj/kern/kernel.asm	/^f0100065:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f010006a	obj/kern/kernel.asm	/^f010006a:	68 c0 4f 10 f0       	push   $0xf0104fc0$/;"	l
f010006f	obj/kern/kernel.asm	/^f010006f:	e8 5c 36 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100074	obj/kern/kernel.asm	/^f0100074:	e8 48 17 00 00       	call   f01017c1 <mem_init>$/;"	l
f0100079	obj/kern/kernel.asm	/^f0100079:	e8 97 30 00 00       	call   f0103115 <env_init>$/;"	l
f010007e	obj/kern/kernel.asm	/^f010007e:	e8 f0 36 00 00       	call   f0103773 <trap_init>$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	6a 00                	push   $0x0$/;"	l
<<<<<<< Updated upstream
f0100088	obj/kern/kernel.asm	/^f0100088:	68 bb 2d 13 f0       	push   $0xf0132dbb$/;"	l
=======
f0100088	obj/kern/kernel.asm	/^f0100088:	68 db c3 11 f0       	push   $0xf011c3db$/;"	l
>>>>>>> Stashed changes
f010008d	obj/kern/kernel.asm	/^f010008d:	e8 56 32 00 00       	call   f01032e8 <env_create>$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	ff 35 d0 5e 18 f0    	pushl  0xf0185ed0$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	e8 67 35 00 00       	call   f0103607 <env_run>$/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0 <_panic>:$/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	55                   	push   %ebp$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01000a3	obj/kern/kernel.asm	/^f01000a3:	56                   	push   %esi$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	53                   	push   %ebx$/;"	l
f01000a5	obj/kern/kernel.asm	/^f01000a5:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	83 3d 84 6b 18 f0 00 	cmpl   $0x0,0xf0186b84$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	75 37                	jne    f01000e8 <_panic+0x48>$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1:	89 35 84 6b 18 f0    	mov    %esi,0xf0186b84$/;"	l
f01000b7	obj/kern/kernel.asm	/^f01000b7:	fa                   	cli    $/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	fc                   	cld    $/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000bc	obj/kern/kernel.asm	/^f01000bc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000bf	obj/kern/kernel.asm	/^f01000bf:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	68 db 4f 10 f0       	push   $0xf0104fdb$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	e8 01 36 00 00       	call   f01036d0 <cprintf>$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000d2	obj/kern/kernel.asm	/^f01000d2:	53                   	push   %ebx$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	56                   	push   %esi$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	e8 d1 35 00 00       	call   f01036aa <vcprintf>$/;"	l
f01000d9	obj/kern/kernel.asm	/^f01000d9:	c7 04 24 68 63 10 f0 	movl   $0xf0106368,(%esp)$/;"	l
f01000e0	obj/kern/kernel.asm	/^f01000e0:	e8 eb 35 00 00       	call   f01036d0 <cprintf>$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000e8	obj/kern/kernel.asm	/^f01000e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	6a 00                	push   $0x0$/;"	l
f01000ed	obj/kern/kernel.asm	/^f01000ed:	e8 20 0d 00 00       	call   f0100e12 <monitor>$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000f5	obj/kern/kernel.asm	/^f01000f5:	eb f1                	jmp    f01000e8 <_panic+0x48>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7 <_warn>:$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	55                   	push   %ebp$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	53                   	push   %ebx$/;"	l
f01000fb	obj/kern/kernel.asm	/^f01000fb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	68 f3 4f 10 f0       	push   $0xf0104ff3$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	e8 bf 35 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	53                   	push   %ebx$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100118	obj/kern/kernel.asm	/^f0100118:	e8 8d 35 00 00       	call   f01036aa <vcprintf>$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	c7 04 24 68 63 10 f0 	movl   $0xf0106368,(%esp)$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	e8 a7 35 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	83 c4 10             	add    $0x10,%esp$/;"	l
f010012c	obj/kern/kernel.asm	/^f010012c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	c9                   	leave  $/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	c3                   	ret    $/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131 <serial_proc_data>:$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	55                   	push   %ebp$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	89 e5                	mov    %esp,%ebp$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	ec                   	in     (%dx),%al$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	a8 01                	test   $0x1,%al$/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	74 0b                	je     f0100149 <serial_proc_data+0x18>$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	ec                   	in     (%dx),%al$/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	eb 05                	jmp    f010014e <serial_proc_data+0x1d>$/;"	l
f0100149	obj/kern/kernel.asm	/^f0100149:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	5d                   	pop    %ebp$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	c3                   	ret    $/;"	l
f0100150	obj/kern/kernel.asm	/^f0100150 <cons_intr>:$/;"	l
f0100150	obj/kern/kernel.asm	/^f0100150:	55                   	push   %ebp$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	89 e5                	mov    %esp,%ebp$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	53                   	push   %ebx$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	89 c3                	mov    %eax,%ebx$/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	eb 2b                	jmp    f0100186 <cons_intr+0x36>$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	85 c0                	test   %eax,%eax$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	74 27                	je     f0100186 <cons_intr+0x36>$/;"	l
f010015f	obj/kern/kernel.asm	/^f010015f:	8b 0d a4 5e 18 f0    	mov    0xf0185ea4,%ecx$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168:	89 15 a4 5e 18 f0    	mov    %edx,0xf0185ea4$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	88 81 a0 5c 18 f0    	mov    %al,-0xfe7a360(%ecx)$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	75 0a                	jne    f0100186 <cons_intr+0x36>$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	c7 05 a4 5e 18 f0 00 	movl   $0x0,0xf0185ea4$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	00 00 00 $/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	ff d3                	call   *%ebx$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	75 ce                	jne    f010015b <cons_intr+0xb>$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	5b                   	pop    %ebx$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	5d                   	pop    %ebp$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	c3                   	ret    $/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193 <kbd_proc_data>:$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100198	obj/kern/kernel.asm	/^f0100198:	ec                   	in     (%dx),%al$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	a8 01                	test   $0x1,%al$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	0f 84 f8 00 00 00    	je     f0100299 <kbd_proc_data+0x106>$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	a8 20                	test   $0x20,%al$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	0f 85 f6 00 00 00    	jne    f010029f <kbd_proc_data+0x10c>$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	ec                   	in     (%dx),%al$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	89 c2                	mov    %eax,%edx$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	3c e0                	cmp    $0xe0,%al$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	75 0d                	jne    f01001c2 <kbd_proc_data+0x2f>$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	83 0d 84 5c 18 f0 40 	orl    $0x40,0xf0185c84$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	c3                   	ret    $/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	55                   	push   %ebp$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	53                   	push   %ebx$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	84 c0                	test   %al,%al$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	79 36                	jns    f0100203 <kbd_proc_data+0x70>$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	8b 0d 84 5c 18 f0    	mov    0xf0185c84,%ecx$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	89 cb                	mov    %ecx,%ebx$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	83 e3 40             	and    $0x40,%ebx$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	85 db                	test   %ebx,%ebx$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01001e0	obj/kern/kernel.asm	/^f01001e0:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	0f b6 82 60 51 10 f0 	movzbl -0xfefaea0(%edx),%eax$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	83 c8 40             	or     $0x40,%eax$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	f7 d0                	not    %eax$/;"	l
f01001f2	obj/kern/kernel.asm	/^f01001f2:	21 c8                	and    %ecx,%eax$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	a3 84 5c 18 f0       	mov    %eax,0xf0185c84$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	e9 a4 00 00 00       	jmp    f01002a7 <kbd_proc_data+0x114>$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	8b 0d 84 5c 18 f0    	mov    0xf0185c84,%ecx$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	74 0e                	je     f010021c <kbd_proc_data+0x89>$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	89 c2                	mov    %eax,%edx$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	89 0d 84 5c 18 f0    	mov    %ecx,0xf0185c84$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	0f b6 82 60 51 10 f0 	movzbl -0xfefaea0(%edx),%eax$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	0b 05 84 5c 18 f0    	or     0xf0185c84,%eax$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	0f b6 8a 60 50 10 f0 	movzbl -0xfefafa0(%edx),%ecx$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	31 c8                	xor    %ecx,%eax$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	a3 84 5c 18 f0       	mov    %eax,0xf0185c84$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	89 c1                	mov    %eax,%ecx$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	8b 0c 8d 40 50 10 f0 	mov    -0xfefafc0(,%ecx,4),%ecx$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f010024d	obj/kern/kernel.asm	/^f010024d:	a8 08                	test   $0x8,%al$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	74 1b                	je     f010026c <kbd_proc_data+0xd9>$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	89 da                	mov    %ebx,%edx$/;"	l
f0100253	obj/kern/kernel.asm	/^f0100253:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	77 05                	ja     f0100260 <kbd_proc_data+0xcd>$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	eb 0c                	jmp    f010026c <kbd_proc_data+0xd9>$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	f7 d0                	not    %eax$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	a8 06                	test   $0x6,%al$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	75 33                	jne    f01002a5 <kbd_proc_data+0x112>$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	75 2b                	jne    f01002a5 <kbd_proc_data+0x112>$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	68 0d 50 10 f0       	push   $0xf010500d$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	e8 49 34 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	ee                   	out    %al,(%dx)$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	89 d8                	mov    %ebx,%eax$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	eb 0e                	jmp    f01002a7 <kbd_proc_data+0x114>$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	c3                   	ret    $/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	c3                   	ret    $/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	89 d8                	mov    %ebx,%eax$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	c9                   	leave  $/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	c3                   	ret    $/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac <cons_putc>:$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	55                   	push   %ebp$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	57                   	push   %edi$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	56                   	push   %esi$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	53                   	push   %ebx$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	89 c6                	mov    %eax,%esi$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	eb 09                	jmp    f01002d1 <cons_putc+0x25>$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	89 ca                	mov    %ecx,%edx$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	ec                   	in     (%dx),%al$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	ec                   	in     (%dx),%al$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	ec                   	in     (%dx),%al$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	ec                   	in     (%dx),%al$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	89 fa                	mov    %edi,%edx$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	ec                   	in     (%dx),%al$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	a8 20                	test   $0x20,%al$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	75 08                	jne    f01002e0 <cons_putc+0x34>$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de:	7e e8                	jle    f01002c8 <cons_putc+0x1c>$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	89 f0                	mov    %esi,%eax$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	ee                   	out    %al,(%dx)$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	eb 09                	jmp    f0100302 <cons_putc+0x56>$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	89 ca                	mov    %ecx,%edx$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	ec                   	in     (%dx),%al$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	ec                   	in     (%dx),%al$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	ec                   	in     (%dx),%al$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	ec                   	in     (%dx),%al$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	89 fa                	mov    %edi,%edx$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	ec                   	in     (%dx),%al$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	7f 04                	jg     f0100311 <cons_putc+0x65>$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	84 c0                	test   %al,%al$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	79 e8                	jns    f01002f9 <cons_putc+0x4d>$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	89 f0                	mov    %esi,%eax$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	ee                   	out    %al,(%dx)$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	ee                   	out    %al,(%dx)$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	ee                   	out    %al,(%dx)$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	a1 00 c3 11 f0       	mov    0xf011c300,%eax$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	0b 05 80 5c 18 f0    	or     0xf0185c80,%eax$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	09 f0                	or     %esi,%eax$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	89 c1                	mov    %eax,%ecx$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	74 76                	je     f01003b7 <cons_putc+0x10b>$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	7f 0a                	jg     f0100350 <cons_putc+0xa4>$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	74 14                	je     f010035f <cons_putc+0xb3>$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	e9 9b 00 00 00       	jmp    f01003eb <cons_putc+0x13f>$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	74 3c                	je     f0100391 <cons_putc+0xe5>$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	74 3f                	je     f0100399 <cons_putc+0xed>$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	e9 8c 00 00 00       	jmp    f01003eb <cons_putc+0x13f>$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	0f b7 05 a8 5e 18 f0 	movzwl 0xf0185ea8,%eax$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	66 85 c0             	test   %ax,%ax$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	0f 84 e8 00 00 00    	je     f0100457 <cons_putc+0x1ab>$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	66 a3 a8 5e 18 f0    	mov    %ax,0xf0185ea8$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	89 ce                	mov    %ecx,%esi$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	66 81 e6 00 ff       	and    $0xff00,%si$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	83 ce 20             	or     $0x20,%esi$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	8b 15 ac 5e 18 f0    	mov    0xf0185eac,%edx$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	eb 78                	jmp    f0100409 <cons_putc+0x15d>$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	66 83 05 a8 5e 18 f0 	addw   $0x50,0xf0185ea8$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	50 $/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	0f b7 05 a8 5e 18 f0 	movzwl 0xf0185ea8,%eax$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	66 a3 a8 5e 18 f0    	mov    %ax,0xf0185ea8$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	eb 52                	jmp    f0100409 <cons_putc+0x15d>$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	e8 eb fe ff ff       	call   f01002ac <cons_putc>$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	e8 e1 fe ff ff       	call   f01002ac <cons_putc>$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	e8 d7 fe ff ff       	call   f01002ac <cons_putc>$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	e8 cd fe ff ff       	call   f01002ac <cons_putc>$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	e8 c3 fe ff ff       	call   f01002ac <cons_putc>$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	eb 1e                	jmp    f0100409 <cons_putc+0x15d>$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	0f b7 05 a8 5e 18 f0 	movzwl 0xf0185ea8,%eax$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	66 89 15 a8 5e 18 f0 	mov    %dx,0xf0185ea8$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	8b 15 ac 5e 18 f0    	mov    0xf0185eac,%edx$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	66 89 0c 42          	mov    %cx,(%edx,%eax,2)$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	66 81 3d a8 5e 18 f0 	cmpw   $0x7cf,0xf0185ea8$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	cf 07 $/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	76 43                	jbe    f0100457 <cons_putc+0x1ab>$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	a1 ac 5e 18 f0       	mov    0xf0185eac,%eax$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	68 00 0f 00 00       	push   $0xf00$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100427	obj/kern/kernel.asm	/^f0100427:	52                   	push   %edx$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	50                   	push   %eax$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	e8 3a 47 00 00       	call   f0104b68 <memmove>$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	8b 15 ac 5e 18 f0    	mov    0xf0185eac,%edx$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	83 c0 02             	add    $0x2,%eax$/;"	l
f010044b	obj/kern/kernel.asm	/^f010044b:	39 d0                	cmp    %edx,%eax$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	75 f4                	jne    f0100443 <cons_putc+0x197>$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	66 83 2d a8 5e 18 f0 	subw   $0x50,0xf0185ea8$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	50 $/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	8b 0d b0 5e 18 f0    	mov    0xf0185eb0,%ecx$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	89 ca                	mov    %ecx,%edx$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	ee                   	out    %al,(%dx)$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	0f b7 1d a8 5e 18 f0 	movzwl 0xf0185ea8,%ebx$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	89 f2                	mov    %esi,%edx$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	ee                   	out    %al,(%dx)$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	89 ca                	mov    %ecx,%edx$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	ee                   	out    %al,(%dx)$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	89 d8                	mov    %ebx,%eax$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	89 f2                	mov    %esi,%edx$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	ee                   	out    %al,(%dx)$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	5b                   	pop    %ebx$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	5e                   	pop    %esi$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	5f                   	pop    %edi$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	5d                   	pop    %ebp$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	c3                   	ret    $/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d <serial_intr>:$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	80 3d b4 5e 18 f0 00 	cmpb   $0x0,0xf0185eb4$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	74 11                	je     f01004a7 <serial_intr+0x1a>$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	55                   	push   %ebp$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	89 e5                	mov    %esp,%ebp$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	b8 31 01 10 f0       	mov    $0xf0100131,%eax$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	e8 aa fc ff ff       	call   f0100150 <cons_intr>$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	c9                   	leave  $/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	f3 c3                	repz ret $/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9 <kbd_intr>:$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	55                   	push   %ebp$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	b8 93 01 10 f0       	mov    $0xf0100193,%eax$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	e8 97 fc ff ff       	call   f0100150 <cons_intr>$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	c9                   	leave  $/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	c3                   	ret    $/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb <cons_getc>:$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	55                   	push   %ebp$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	e8 c7 ff ff ff       	call   f010048d <serial_intr>$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	e8 de ff ff ff       	call   f01004a9 <kbd_intr>$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	a1 a0 5e 18 f0       	mov    0xf0185ea0,%eax$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	3b 05 a4 5e 18 f0    	cmp    0xf0185ea4,%eax$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	74 26                	je     f01004fe <cons_getc+0x43>$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	89 15 a0 5e 18 f0    	mov    %edx,0xf0185ea0$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	0f b6 88 a0 5c 18 f0 	movzbl -0xfe7a360(%eax),%ecx$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	89 c8                	mov    %ecx,%eax$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	75 11                	jne    f0100503 <cons_getc+0x48>$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	c7 05 a0 5e 18 f0 00 	movl   $0x0,0xf0185ea0$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	00 00 00 $/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	eb 05                	jmp    f0100503 <cons_getc+0x48>$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	c9                   	leave  $/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	c3                   	ret    $/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505 <cons_init>:$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	55                   	push   %ebp$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	89 e5                	mov    %esp,%ebp$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	57                   	push   %edi$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	56                   	push   %esi$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	53                   	push   %ebx$/;"	l
f010050b	obj/kern/kernel.asm	/^f010050b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	5a a5 $/;"	l
f010051e	obj/kern/kernel.asm	/^f010051e:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f0100525	obj/kern/kernel.asm	/^f0100525:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	74 11                	je     f010053c <cons_init+0x37>$/;"	l
f010052b	obj/kern/kernel.asm	/^f010052b:	c7 05 b0 5e 18 f0 b4 	movl   $0x3b4,0xf0185eb0$/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	03 00 00 $/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	eb 16                	jmp    f0100552 <cons_init+0x4d>$/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	c7 05 b0 5e 18 f0 d4 	movl   $0x3d4,0xf0185eb0$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	03 00 00 $/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	8b 3d b0 5e 18 f0    	mov    0xf0185eb0,%edi$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	89 fa                	mov    %edi,%edx$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	ee                   	out    %al,(%dx)$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	89 da                	mov    %ebx,%edx$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	ec                   	in     (%dx),%al$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100569	obj/kern/kernel.asm	/^f0100569:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	89 fa                	mov    %edi,%edx$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	ee                   	out    %al,(%dx)$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	89 da                	mov    %ebx,%edx$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	ec                   	in     (%dx),%al$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	89 35 ac 5e 18 f0    	mov    %esi,0xf0185eac$/;"	l
f010057d	obj/kern/kernel.asm	/^f010057d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	09 c8                	or     %ecx,%eax$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	66 a3 a8 5e 18 f0    	mov    %ax,0xf0185ea8$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	89 f2                	mov    %esi,%edx$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	ee                   	out    %al,(%dx)$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	ee                   	out    %al,(%dx)$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	89 da                	mov    %ebx,%edx$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	ee                   	out    %al,(%dx)$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	ee                   	out    %al,(%dx)$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	ee                   	out    %al,(%dx)$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	ee                   	out    %al,(%dx)$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01005d8	obj/kern/kernel.asm	/^f01005d8:	ee                   	out    %al,(%dx)$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	ec                   	in     (%dx),%al$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	89 c1                	mov    %eax,%ecx$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	3c ff                	cmp    $0xff,%al$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	0f 95 05 b4 5e 18 f0 	setne  0xf0185eb4$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	89 f2                	mov    %esi,%edx$/;"	l
f01005ec	obj/kern/kernel.asm	/^f01005ec:	ec                   	in     (%dx),%al$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	89 da                	mov    %ebx,%edx$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	ec                   	in     (%dx),%al$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	75 10                	jne    f0100605 <cons_init+0x100>$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	68 19 50 10 f0       	push   $0xf0105019$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	e8 ce 30 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	5b                   	pop    %ebx$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	5e                   	pop    %esi$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	5f                   	pop    %edi$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	5d                   	pop    %ebp$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	c3                   	ret    $/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d <cputchar>:$/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d:	55                   	push   %ebp$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	e8 91 fc ff ff       	call   f01002ac <cons_putc>$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	c9                   	leave  $/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	c3                   	ret    $/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d <getchar>:$/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	55                   	push   %ebp$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	e8 93 fe ff ff       	call   f01004bb <cons_getc>$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	85 c0                	test   %eax,%eax$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	74 f7                	je     f0100623 <getchar+0x6>$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	c9                   	leave  $/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	c3                   	ret    $/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e <iscons>:$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	55                   	push   %ebp$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	5d                   	pop    %ebp$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	c3                   	ret    $/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638 <mon_help>:$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	55                   	push   %ebp$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	89 e5                	mov    %esp,%ebp$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	56                   	push   %esi$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	53                   	push   %ebx$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	bb 44 58 10 f0       	mov    $0xf0105844,%ebx$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	be a4 58 10 f0       	mov    $0xf01058a4,%esi$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	ff 33                	pushl  (%ebx)$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	ff 73 fc             	pushl  -0x4(%ebx)$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	68 60 52 10 f0       	push   $0xf0105260$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	e8 77 30 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	75 e4                	jne    f0100647 <mon_help+0xf>$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	5b                   	pop    %ebx$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	5e                   	pop    %esi$/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	5d                   	pop    %ebp$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	c3                   	ret    $/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f <mon_kerninfo>:$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	55                   	push   %ebp$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	89 e5                	mov    %esp,%ebp$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	68 69 52 10 f0       	push   $0xf0105269$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	e8 51 30 00 00       	call   f01036d0 <cprintf>$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	68 44 54 10 f0       	push   $0xf0105444$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	e8 3f 30 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	68 6c 54 10 f0       	push   $0xf010546c$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	e8 28 30 00 00       	call   f01036d0 <cprintf>$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	68 a1 4f 10 00       	push   $0x104fa1$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	68 a1 4f 10 f0       	push   $0xf0104fa1$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	68 90 54 10 f0       	push   $0xf0105490$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	e8 11 30 00 00       	call   f01036d0 <cprintf>$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	68 80 5c 18 00       	push   $0x185c80$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	68 80 5c 18 f0       	push   $0xf0185c80$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	68 b4 54 10 f0       	push   $0xf01054b4$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	e8 fa 2f 00 00       	call   f01036d0 <cprintf>$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	68 80 6b 18 00       	push   $0x186b80$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	68 80 6b 18 f0       	push   $0xf0186b80$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	68 d8 54 10 f0       	push   $0xf01054d8$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	e8 e3 2f 00 00       	call   f01036d0 <cprintf>$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	b8 7f 6f 18 f0       	mov    $0xf0186f7f,%eax$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	83 c4 08             	add    $0x8,%esp$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	85 c0                	test   %eax,%eax$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	50                   	push   %eax$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	68 fc 54 10 f0       	push   $0xf01054fc$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	e8 b8 2f 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	c9                   	leave  $/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	c3                   	ret    $/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f <mon_backtrace>:$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	55                   	push   %ebp$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	89 e5                	mov    %esp,%ebp$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	57                   	push   %edi$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	56                   	push   %esi$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	53                   	push   %ebx$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	89 ee                	mov    %ebp,%esi$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	68 82 52 10 f0       	push   $0xf0105282$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	e8 9c 2f 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	eb 78                	jmp    f01007b1 <mon_backtrace+0x92>$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	89 c7                	mov    %eax,%edi$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	8d 55 d0             	lea    -0x30(%ebp),%edx$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	52                   	push   %edx$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	50                   	push   %eax$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	e8 9c 38 00 00       	call   f0103fea <debuginfo_eip>$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	57                   	push   %edi$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	56                   	push   %esi$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	68 94 52 10 f0       	push   $0xf0105294$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	e8 73 2f 00 00       	call   f01036d0 <cprintf>$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	ff 33                	pushl  (%ebx)$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	68 ab 52 10 f0       	push   $0xf01052ab$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	e8 5b 2f 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	83 c4 10             	add    $0x10,%esp$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	39 fb                	cmp    %edi,%ebx$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	75 e7                	jne    f0100766 <mon_backtrace+0x47>$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	68 68 63 10 f0       	push   $0xf0106368$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	e8 44 2f 00 00       	call   f01036d0 <cprintf>$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	50                   	push   %eax$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	68 b1 52 10 f0       	push   $0xf01052b1$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	e8 24 2f 00 00       	call   f01036d0 <cprintf>$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	8b 36                	mov    (%esi),%esi$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	83 c4 20             	add    $0x20,%esp$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	85 f6                	test   %esi,%esi$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	75 84                	jne    f0100739 <mon_backtrace+0x1a>$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	5b                   	pop    %ebx$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	5e                   	pop    %esi$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	5f                   	pop    %edi$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	5d                   	pop    %ebp$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	c3                   	ret    $/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2 <mon_showmappings>:$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	55                   	push   %ebp$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	57                   	push   %edi$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	56                   	push   %esi$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	53                   	push   %ebx$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	74 26                	je     f01007f7 <mon_showmappings+0x35>$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	68 c2 52 10 f0       	push   $0xf01052c2$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	e8 f2 2e 00 00       	call   f01036d0 <cprintf>$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	c7 04 24 28 55 10 f0 	movl   $0xf0105528,(%esp)$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	e8 e6 2e 00 00       	call   f01036d0 <cprintf>$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	e9 8a 01 00 00       	jmp    f0100981 <mon_showmappings+0x1bf>$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	6a 00                	push   $0x0$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	6a 00                	push   $0x0$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	e8 36 44 00 00       	call   f0104c3f <strtol>$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	89 c3                	mov    %eax,%ebx$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	6a 00                	push   $0x0$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	6a 00                	push   $0x0$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	e8 22 44 00 00       	call   f0104c3f <strtol>$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	89 c7                	mov    %eax,%edi$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	6a 00                	push   $0x0$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	53                   	push   %ebx$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f010082b	obj/kern/kernel.asm	/^f010082b:	e8 a0 0c 00 00       	call   f01014d0 <pgdir_walk>$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	85 c0                	test   %eax,%eax$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	75 08                	jne    f010083f <mon_showmappings+0x7d>$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	eb 1a                	jmp    f0100859 <mon_showmappings+0x97>$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	89 da                	mov    %ebx,%edx$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	81 e2 00 00 c0 ff    	and    $0xffc00000,%edx$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	85 c0                	test   %eax,%eax$/;"	l
f0100856	obj/kern/kernel.asm	/^f0100856:	0f 45 da             	cmovne %edx,%ebx$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	68 50 55 10 f0       	push   $0xf0105550$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	e8 6a 2e 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	e9 f1 00 00 00       	jmp    f010095f <mon_showmappings+0x19d>$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	6a 00                	push   $0x0$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	53                   	push   %ebx$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	e8 51 0c 00 00       	call   f01014d0 <pgdir_walk>$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	89 c6                	mov    %eax,%esi$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	53                   	push   %ebx$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	68 de 52 10 f0       	push   $0xf01052de$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	e8 41 2e 00 00       	call   f01036d0 <cprintf>$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	85 f6                	test   %esi,%esi$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	74 06                	je     f010089c <mon_showmappings+0xda>$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	8b 06                	mov    (%esi),%eax$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	a8 01                	test   $0x1,%al$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	75 29                	jne    f01008c5 <mon_showmappings+0x103>$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	68 e6 52 10 f0       	push   $0xf01052e6$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	e8 27 2e 00 00       	call   f01036d0 <cprintf>$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	8d 83 00 00 40 00    	lea    0x400000(%ebx),%eax$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	39 c3                	cmp    %eax,%ebx$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	0f 83 b4 00 00 00    	jae    f010096e <mon_showmappings+0x1ac>$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	e9 9a 00 00 00       	jmp    f010095f <mon_showmappings+0x19d>$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	50                   	push   %eax$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	68 de 52 10 f0       	push   $0xf01052de$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	e8 f8 2d 00 00       	call   f01036d0 <cprintf>$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	8b 06                	mov    (%esi),%eax$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	89 c2                	mov    %eax,%edx$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	83 e2 06             	and    $0x6,%edx$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	b9 2d 00 00 00       	mov    $0x2d,%ecx$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	89 c2                	mov    %eax,%edx$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	83 e2 04             	and    $0x4,%edx$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	19 d2                	sbb    %edx,%edx$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	19 c0                	sbb    %eax,%eax$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	51                   	push   %ecx$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	52                   	push   %edx$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	50                   	push   %eax$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	68 f5 52 10 f0       	push   $0xf01052f5$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	e8 b3 2d 00 00       	call   f01036d0 <cprintf>$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	f6 06 80             	testb  $0x80,(%esi)$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	74 1e                	je     f0100943 <mon_showmappings+0x181>$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	68 fe 52 10 f0       	push   $0xf01052fe$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	e8 9e 2d 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	8d 83 00 00 40 00    	lea    0x400000(%ebx),%eax$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	83 c4 10             	add    $0x10,%esp$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	73 36                	jae    f0100975 <mon_showmappings+0x1b3>$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	89 c3                	mov    %eax,%ebx$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	eb 1c                	jmp    f010095f <mon_showmappings+0x19d>$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	68 05 53 10 f0       	push   $0xf0105305$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	e8 80 2d 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	39 c3                	cmp    %eax,%ebx$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	73 1f                	jae    f010097c <mon_showmappings+0x1ba>$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	89 c3                	mov    %eax,%ebx$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	0f 86 07 ff ff ff    	jbe    f010086e <mon_showmappings+0xac>$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	eb 13                	jmp    f0100981 <mon_showmappings+0x1bf>$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	eb 0c                	jmp    f0100981 <mon_showmappings+0x1bf>$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	eb 05                	jmp    f0100981 <mon_showmappings+0x1bf>$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	5b                   	pop    %ebx$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	5e                   	pop    %esi$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	5f                   	pop    %edi$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	5d                   	pop    %ebp$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	c3                   	ret    $/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989 <mon_chperm>:$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	55                   	push   %ebp$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	89 e5                	mov    %esp,%ebp$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	57                   	push   %edi$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	56                   	push   %esi$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	53                   	push   %ebx$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	74 26                	je     f01009be <mon_chperm+0x35>$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	68 c2 52 10 f0       	push   $0xf01052c2$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	e8 2b 2d 00 00       	call   f01036d0 <cprintf>$/;"	l
f01009a5	obj/kern/kernel.asm	/^f01009a5:	c7 04 24 7c 55 10 f0 	movl   $0xf010557c,(%esp)$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	e8 1f 2d 00 00       	call   f01036d0 <cprintf>$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	e9 40 02 00 00       	jmp    f0100bfe <mon_chperm+0x275>$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	80 38 2d             	cmpb   $0x2d,(%eax)$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	75 0e                	jne    f01009d7 <mon_chperm+0x4e>$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	0f b6 58 01          	movzbl 0x1(%eax),%ebx$/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	80 fb 70             	cmp    $0x70,%bl$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	74 2c                	je     f01009fe <mon_chperm+0x75>$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	80 fb 76             	cmp    $0x76,%bl$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	74 27                	je     f01009fe <mon_chperm+0x75>$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	50                   	push   %eax$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	68 0c 53 10 f0       	push   $0xf010530c$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	e8 eb 2c 00 00       	call   f01036d0 <cprintf>$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	c7 04 24 7c 55 10 f0 	movl   $0xf010557c,(%esp)$/;"	l
f01009ec	obj/kern/kernel.asm	/^f01009ec:	e8 df 2c 00 00       	call   f01036d0 <cprintf>$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	e9 00 02 00 00       	jmp    f0100bfe <mon_chperm+0x275>$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	0f b6 78 02          	movzbl 0x2(%eax),%edi$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	6a 00                	push   $0x0$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	6a 00                	push   $0x0$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	e8 2b 42 00 00       	call   f0104c3f <strtol>$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	89 c2                	mov    %eax,%edx$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	89 f9                	mov    %edi,%ecx$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	80 f9 70             	cmp    $0x70,%cl$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	89 c6                	mov    %eax,%esi$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	80 fb 70             	cmp    $0x70,%bl$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	75 25                	jne    f0100a53 <mon_chperm+0xca>$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	89 f2                	mov    %esi,%edx$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	3b 15 88 6b 18 f0    	cmp    0xf0186b88,%edx$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	72 12                	jb     f0100a4d <mon_chperm+0xc4>$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	56                   	push   %esi$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	6a 56                	push   $0x56$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	e8 53 f6 ff ff       	call   f01000a0 <_panic>$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	8d b6 00 00 00 f0    	lea    -0x10000000(%esi),%esi$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	6a 00                	push   $0x0$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	56                   	push   %esi$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	e8 6c 0a 00 00       	call   f01014d0 <pgdir_walk>$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	89 c7                	mov    %eax,%edi$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	8b 18                	mov    (%eax),%ebx$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	f6 c3 01             	test   $0x1,%bl$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	75 1a                	jne    f0100a8a <mon_chperm+0x101>$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	68 d8 55 10 f0       	push   $0xf01055d8$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	e8 53 2c 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	e9 74 01 00 00       	jmp    f0100bfe <mon_chperm+0x275>$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	89 da                	mov    %ebx,%edx$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	81 e2 80 00 00 00    	and    $0x80,%edx$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	89 f0                	mov    %esi,%eax$/;"	l
f0100a94	obj/kern/kernel.asm	/^f0100a94:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	85 d2                	test   %edx,%edx$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	0f 45 f0             	cmovne %eax,%esi$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	80 f9 07             	cmp    $0x7,%cl$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	77 36                	ja     f0100ae5 <mon_chperm+0x15c>$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	6a 00                	push   $0x0$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	6a 00                	push   $0x0$/;"	l
f0100ab6	obj/kern/kernel.asm	/^f0100ab6:	52                   	push   %edx$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	e8 83 41 00 00       	call   f0104c3f <strtol>$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	89 da                	mov    %ebx,%edx$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	83 e2 f8             	and    $0xfffffff8,%edx$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	09 d0                	or     %edx,%eax$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	a8 01                	test   $0x1,%al$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	74 04                	je     f0100ace <mon_chperm+0x145>$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	89 07                	mov    %eax,(%edi)$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	eb 65                	jmp    f0100b33 <mon_chperm+0x1aa>$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	83 c8 01             	or     $0x1,%eax$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	89 07                	mov    %eax,(%edi)$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	68 0c 56 10 f0       	push   $0xf010560c$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	e8 f0 2b 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	eb 4e                	jmp    f0100b33 <mon_chperm+0x1aa>$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	3c 55                	cmp    $0x55,%al$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	75 09                	jne    f0100af2 <mon_chperm+0x169>$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	89 d8                	mov    %ebx,%eax$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	83 c8 04             	or     $0x4,%eax$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	89 07                	mov    %eax,(%edi)$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	eb 0b                	jmp    f0100afd <mon_chperm+0x174>$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	75 07                	jne    f0100afd <mon_chperm+0x174>$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	89 d8                	mov    %ebx,%eax$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	83 e0 fb             	and    $0xfffffffb,%eax$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	89 07                	mov    %eax,(%edi)$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	0f b6 40 01          	movzbl 0x1(%eax),%eax$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	3c 57                	cmp    $0x57,%al$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	75 05                	jne    f0100b10 <mon_chperm+0x187>$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	83 0f 02             	orl    $0x2,(%edi)$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	eb 07                	jmp    f0100b17 <mon_chperm+0x18e>$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	75 03                	jne    f0100b17 <mon_chperm+0x18e>$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	83 27 fd             	andl   $0xfffffffd,(%edi)$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	80 78 02 2d          	cmpb   $0x2d,0x2(%eax)$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	75 10                	jne    f0100b33 <mon_chperm+0x1aa>$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	68 0c 56 10 f0       	push   $0xf010560c$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	e8 a0 2b 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	56                   	push   %esi$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	68 31 53 10 f0       	push   $0xf0105331$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	e8 8f 2b 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	8b 07                	mov    (%edi),%eax$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	50                   	push   %eax$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	68 42 53 10 f0       	push   $0xf0105342$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	e8 7a 2b 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	c7 04 24 30 56 10 f0 	movl   $0xf0105630,(%esp)$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	e8 6e 2b 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	89 d8                	mov    %ebx,%eax$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	83 e0 06             	and    $0x6,%eax$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
f0100b72	obj/kern/kernel.asm	/^f0100b72:	b9 57 00 00 00       	mov    $0x57,%ecx$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	0f 45 c8             	cmovne %eax,%ecx$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	89 d8                	mov    %ebx,%eax$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	83 e0 04             	and    $0x4,%eax$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	19 d2                	sbb    %edx,%edx$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	83 e3 02             	and    $0x2,%ebx$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	19 c0                	sbb    %eax,%eax$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	51                   	push   %ecx$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	52                   	push   %edx$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	50                   	push   %eax$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	68 53 53 10 f0       	push   $0xf0105353$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	e8 2b 2b 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	c7 04 24 54 56 10 f0 	movl   $0xf0105654,(%esp)$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	e8 1f 2b 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	8b 07                	mov    (%edi),%eax$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	89 c2                	mov    %eax,%edx$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	83 e2 06             	and    $0x6,%edx$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bbb	obj/kern/kernel.asm	/^f0100bbb:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	b9 2d 00 00 00       	mov    $0x2d,%ecx$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
f0100bc8	obj/kern/kernel.asm	/^f0100bc8:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	89 c2                	mov    %eax,%edx$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	19 d2                	sbb    %edx,%edx$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100bde	obj/kern/kernel.asm	/^f0100bde:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	19 c0                	sbb    %eax,%eax$/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	51                   	push   %ecx$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	52                   	push   %edx$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	50                   	push   %eax$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	68 53 53 10 f0       	push   $0xf0105353$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	e8 da 2a 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	5b                   	pop    %ebx$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	5e                   	pop    %esi$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	5f                   	pop    %edi$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	5d                   	pop    %ebp$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	c3                   	ret    $/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06 <mon_continue>:$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	55                   	push   %ebp$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	85 c0                	test   %eax,%eax$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	74 15                	je     f0100c28 <mon_continue+0x22>$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	81 60 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%eax)$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	ff 35 cc 5e 18 f0    	pushl  0xf0185ecc$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	e8 df 29 00 00       	call   f0103607 <env_run>$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	68 5d 53 10 f0       	push   $0xf010535d$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	e8 9b 2a 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	c9                   	leave  $/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	c3                   	ret    $/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c <mon_step>:$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	55                   	push   %ebp$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	85 c0                	test   %eax,%eax$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	74 15                	je     f0100c5e <mon_step+0x22>$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	81 48 38 00 01 00 00 	orl    $0x100,0x38(%eax)$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	ff 35 cc 5e 18 f0    	pushl  0xf0185ecc$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	e8 a9 29 00 00       	call   f0103607 <env_run>$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	68 5d 53 10 f0       	push   $0xf010535d$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	e8 65 2a 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	c9                   	leave  $/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	c3                   	ret    $/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72 <mon_dumpmem>:$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	55                   	push   %ebp$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	57                   	push   %edi$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	56                   	push   %esi$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	53                   	push   %ebx$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	74 26                	je     f0100caa <mon_dumpmem+0x38>$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	68 c2 52 10 f0       	push   $0xf01052c2$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	e8 3f 2a 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	c7 04 24 74 56 10 f0 	movl   $0xf0105674,(%esp)$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	e8 33 2a 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	e9 60 01 00 00       	jmp    f0100e0a <mon_dumpmem+0x198>$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	80 38 2d             	cmpb   $0x2d,(%eax)$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	75 0e                	jne    f0100cc0 <mon_dumpmem+0x4e>$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	0f b6 50 01          	movzbl 0x1(%eax),%edx$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	80 fa 70             	cmp    $0x70,%dl$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	74 2c                	je     f0100ce7 <mon_dumpmem+0x75>$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	80 fa 76             	cmp    $0x76,%dl$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	74 27                	je     f0100ce7 <mon_dumpmem+0x75>$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	50                   	push   %eax$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	68 0c 53 10 f0       	push   $0xf010530c$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	e8 02 2a 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	c7 04 24 74 56 10 f0 	movl   $0xf0105674,(%esp)$/;"	l
f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	e8 f6 29 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	e9 23 01 00 00       	jmp    f0100e0a <mon_dumpmem+0x198>$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	6a 00                	push   $0x0$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	6a 00                	push   $0x0$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	e8 49 3f 00 00       	call   f0104c3f <strtol>$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	89 c3                	mov    %eax,%ebx$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	6a 00                	push   $0x0$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	6a 00                	push   $0x0$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	ff 77 0c             	pushl  0xc(%edi)$/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02:	e8 38 3f 00 00       	call   f0104c3f <strtol>$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	89 c6                	mov    %eax,%esi$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	80 78 01 70          	cmpb   $0x70,0x1(%eax)$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	0f 85 93 00 00 00    	jne    f0100dac <mon_dumpmem+0x13a>$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	74 73                	je     f0100d91 <mon_dumpmem+0x11f>$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	53                   	push   %ebx$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	68 7a 53 10 f0       	push   $0xf010537a$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	e8 a4 29 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	eb 60                	jmp    f0100d91 <mon_dumpmem+0x11f>$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	75 11                	jne    f0100d47 <mon_dumpmem+0xd5>$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	53                   	push   %ebx$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	68 79 53 10 f0       	push   $0xf0105379$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	e8 8c 29 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	89 da                	mov    %ebx,%edx$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	89 c1                	mov    %eax,%ecx$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	3b 0d 88 6b 18 f0    	cmp    0xf0186b88,%ecx$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	72 12                	jb     f0100d75 <mon_dumpmem+0x103>$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	50                   	push   %eax$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0100d69	obj/kern/kernel.asm	/^f0100d69:	6a 56                	push   $0x56$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	e8 2b f3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	0f b6 84 02 00 00 00 	movzbl -0x10000000(%edx,%eax,1),%eax$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	f0 $/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	50                   	push   %eax$/;"	l
f0100d81	obj/kern/kernel.asm	/^f0100d81:	68 83 53 10 f0       	push   $0xf0105383$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	e8 45 29 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	72 9c                	jb     f0100d31 <mon_dumpmem+0xbf>$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	68 68 63 10 f0       	push   $0xf0106368$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	e8 2e 29 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	eb 5e                	jmp    f0100e0a <mon_dumpmem+0x198>$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	74 40                	je     f0100df1 <mon_dumpmem+0x17f>$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	53                   	push   %ebx$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	68 7a 53 10 f0       	push   $0xf010537a$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	e8 11 29 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	eb 2d                	jmp    f0100df1 <mon_dumpmem+0x17f>$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	75 11                	jne    f0100dda <mon_dumpmem+0x168>$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	53                   	push   %ebx$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	68 79 53 10 f0       	push   $0xf0105379$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	e8 f9 28 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	50                   	push   %eax$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	68 83 53 10 f0       	push   $0xf0105383$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	e8 e5 28 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	72 cf                	jb     f0100dc4 <mon_dumpmem+0x152>$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	68 68 63 10 f0       	push   $0xf0106368$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	e8 ce 28 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	5b                   	pop    %ebx$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	5e                   	pop    %esi$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	5f                   	pop    %edi$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	5d                   	pop    %ebp$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	c3                   	ret    $/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12 <monitor>:$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	55                   	push   %ebp$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	57                   	push   %edi$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	56                   	push   %esi$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	53                   	push   %ebx$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	83 ec 58             	sub    $0x58,%esp$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	68 a0 56 10 f0       	push   $0xf01056a0$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	e8 ab 28 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	c7 04 24 c4 56 10 f0 	movl   $0xf01056c4,(%esp)$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	e8 9f 28 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	74 0e                	je     f0100e48 <monitor+0x36>$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	e8 d9 2b 00 00       	call   f0103a1e <print_trapframe>$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	68 89 53 10 f0       	push   $0xf0105389$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	e8 6f 3a 00 00       	call   f01048c4 <readline>$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	89 c3                	mov    %eax,%ebx$/;"	l
f0100e57	obj/kern/kernel.asm	/^f0100e57:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	85 c0                	test   %eax,%eax$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	74 ea                	je     f0100e48 <monitor+0x36>$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	eb 0a                	jmp    f0100e76 <monitor+0x64>$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	89 f7                	mov    %esi,%edi$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	89 fe                	mov    %edi,%esi$/;"	l
f0100e76	obj/kern/kernel.asm	/^f0100e76:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	84 c0                	test   %al,%al$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	74 63                	je     f0100ee0 <monitor+0xce>$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	0f be c0             	movsbl %al,%eax$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	50                   	push   %eax$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	68 8d 53 10 f0       	push   $0xf010538d$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	e8 50 3c 00 00       	call   f0104ade <strchr>$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	85 c0                	test   %eax,%eax$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	75 d7                	jne    f0100e6c <monitor+0x5a>$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	74 46                	je     f0100ee0 <monitor+0xce>$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	75 14                	jne    f0100eb3 <monitor+0xa1>$/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	6a 10                	push   $0x10$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	68 92 53 10 f0       	push   $0xf0105392$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	e8 22 28 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	eb 95                	jmp    f0100e48 <monitor+0x36>$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	eb 03                	jmp    f0100ebf <monitor+0xad>$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	84 c0                	test   %al,%al$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	74 ae                	je     f0100e74 <monitor+0x62>$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	50                   	push   %eax$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	68 8d 53 10 f0       	push   $0xf010538d$/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	e8 07 3c 00 00       	call   f0104ade <strchr>$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	85 c0                	test   %eax,%eax$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	74 de                	je     f0100ebc <monitor+0xaa>$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	eb 94                	jmp    f0100e74 <monitor+0x62>$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	00 $/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	85 f6                	test   %esi,%esi$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	0f 84 58 ff ff ff    	je     f0100e48 <monitor+0x36>$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	ff 34 85 40 58 10 f0 	pushl  -0xfefa7c0(,%eax,4)$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	e8 76 3b 00 00       	call   f0104a80 <strcmp>$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	85 c0                	test   %eax,%eax$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	75 21                	jne    f0100f32 <monitor+0x120>$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	52                   	push   %edx$/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	56                   	push   %esi$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	ff 14 85 48 58 10 f0 	call   *-0xfefa7b8(,%eax,4)$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	85 c0                	test   %eax,%eax$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	78 25                	js     f0100f52 <monitor+0x140>$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	e9 16 ff ff ff       	jmp    f0100e48 <monitor+0x36>$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	83 fb 08             	cmp    $0x8,%ebx$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38:	75 bb                	jne    f0100ef5 <monitor+0xe3>$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	68 af 53 10 f0       	push   $0xf01053af$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	e8 86 27 00 00       	call   f01036d0 <cprintf>$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f4d	obj/kern/kernel.asm	/^f0100f4d:	e9 f6 fe ff ff       	jmp    f0100e48 <monitor+0x36>$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	5b                   	pop    %ebx$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	5e                   	pop    %esi$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	5f                   	pop    %edi$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	5d                   	pop    %ebp$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	c3                   	ret    $/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a <boot_alloc>:$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	55                   	push   %ebp$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	89 c2                	mov    %eax,%edx$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	83 3d b8 5e 18 f0 00 	cmpl   $0x0,0xf0185eb8$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	75 0f                	jne    f0100f77 <boot_alloc+0x1d>$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	b8 7f 7b 18 f0       	mov    $0xf0187b7f,%eax$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	a3 b8 5e 18 f0       	mov    %eax,0xf0185eb8$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	a1 b8 5e 18 f0       	mov    0xf0185eb8,%eax$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	01 c2                	add    %eax,%edx$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	89 15 b8 5e 18 f0    	mov    %edx,0xf0185eb8$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	5d                   	pop    %ebp$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	c3                   	ret    $/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92 <nvram_read>:$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	55                   	push   %ebp$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	56                   	push   %esi$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	53                   	push   %ebx$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	89 c3                	mov    %eax,%ebx$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	50                   	push   %eax$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	e8 c7 26 00 00       	call   f0103669 <mc146818_read>$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	89 c6                	mov    %eax,%esi$/;"	l
f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	e8 ba 26 00 00       	call   f0103669 <mc146818_read>$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	09 f0                	or     %esi,%eax$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	5b                   	pop    %ebx$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	5e                   	pop    %esi$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	5d                   	pop    %ebp$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	c3                   	ret    $/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb <page2kva>:$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	89 c2                	mov    %eax,%edx$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	39 15 88 6b 18 f0    	cmp    %edx,0xf0186b88$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	77 18                	ja     f0100fec <page2kva+0x31>$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	55                   	push   %ebp$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fda	obj/kern/kernel.asm	/^f0100fda:	50                   	push   %eax$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	6a 56                	push   $0x56$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	e8 b4 f0 ff ff       	call   f01000a0 <_panic>$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	c3                   	ret    $/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2 <check_va2pa>:$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	89 d1                	mov    %edx,%ecx$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	a8 01                	test   $0x1,%al$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	74 64                	je     f0101062 <check_va2pa+0x70>$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	a8 80                	test   $0x80,%al$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	74 0e                	je     f0101010 <check_va2pa+0x1e>$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	81 e2 00 f0 3f 00    	and    $0x3ff000,%edx$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	09 d0                	or     %edx,%eax$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	c3                   	ret    $/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	89 c1                	mov    %eax,%ecx$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	3b 0d 88 6b 18 f0    	cmp    0xf0186b88,%ecx$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	72 1b                	jb     f010103d <check_va2pa+0x4b>$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	55                   	push   %ebp$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	89 e5                	mov    %esp,%ebp$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	50                   	push   %eax$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	68 54 03 00 00       	push   $0x354$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	e8 63 f0 ff ff       	call   f01000a0 <_panic>$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	89 c2                	mov    %eax,%edx$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	83 e2 01             	and    $0x1,%edx$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	85 d2                	test   %edx,%edx$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	c3                   	ret    $/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	c3                   	ret    $/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068 <check_page_free_list>:$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	55                   	push   %ebp$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	89 e5                	mov    %esp,%ebp$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	57                   	push   %edi$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	56                   	push   %esi$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	53                   	push   %ebx$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	84 c0                	test   %al,%al$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	0f 85 81 02 00 00    	jne    f01012fa <check_page_free_list+0x292>$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	e9 8e 02 00 00       	jmp    f010130c <check_page_free_list+0x2a4>$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	68 a0 58 10 f0       	push   $0xf01058a0$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	68 8c 02 00 00       	push   $0x28c$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	e8 0b f0 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	89 c2                	mov    %eax,%edx$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	2b 15 90 6b 18 f0    	sub    0xf0186b90,%edx$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	0f 95 c2             	setne  %dl$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	89 01                	mov    %eax,(%ecx)$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	8b 00                	mov    (%eax),%eax$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	85 c0                	test   %eax,%eax$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	75 dc                	jne    f01010a1 <check_page_free_list+0x39>$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	89 10                	mov    %edx,(%eax)$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	a3 c4 5e 18 f0       	mov    %eax,0xf0185ec4$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	8b 1d c4 5e 18 f0    	mov    0xf0185ec4,%ebx$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	eb 53                	jmp    f010113e <check_page_free_list+0xd6>$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	89 d8                	mov    %ebx,%eax$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	89 c2                	mov    %eax,%edx$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	39 f2                	cmp    %esi,%edx$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	73 3a                	jae    f010113c <check_page_free_list+0xd4>$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	89 c2                	mov    %eax,%edx$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	3b 15 88 6b 18 f0    	cmp    0xf0186b88,%edx$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	72 12                	jb     f0101121 <check_page_free_list+0xb9>$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	50                   	push   %eax$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	6a 56                	push   $0x56$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	e8 7f ef ff ff       	call   f01000a0 <_panic>$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	68 80 00 00 00       	push   $0x80$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	68 97 00 00 00       	push   $0x97$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	50                   	push   %eax$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	e8 e2 39 00 00       	call   f0104b1b <memset>$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	83 c4 10             	add    $0x10,%esp$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	85 db                	test   %ebx,%ebx$/;"	l
f0101140	obj/kern/kernel.asm	/^f0101140:	75 a9                	jne    f01010eb <check_page_free_list+0x83>$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	e8 0e fe ff ff       	call   f0100f5a <boot_alloc>$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	8b 15 c4 5e 18 f0    	mov    0xf0185ec4,%edx$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	8b 0d 90 6b 18 f0    	mov    0xf0186b90,%ecx$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	a1 88 6b 18 f0       	mov    0xf0186b88,%eax$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101163	obj/kern/kernel.asm	/^f0101163:	8d 3c c1             	lea    (%ecx,%eax,8),%edi$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	e9 30 01 00 00       	jmp    f01012a6 <check_page_free_list+0x23e>$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	39 ca                	cmp    %ecx,%edx$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	73 19                	jae    f0101193 <check_page_free_list+0x12b>$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	68 d1 60 10 f0       	push   $0xf01060d1$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	68 a6 02 00 00       	push   $0x2a6$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	e8 0d ef ff ff       	call   f01000a0 <_panic>$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	39 fa                	cmp    %edi,%edx$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	72 19                	jb     f01011b0 <check_page_free_list+0x148>$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	68 f2 60 10 f0       	push   $0xf01060f2$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	68 a7 02 00 00       	push   $0x2a7$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	e8 f0 ee ff ff       	call   f01000a0 <_panic>$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	89 d0                	mov    %edx,%eax$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	a8 07                	test   $0x7,%al$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	74 19                	je     f01011d2 <check_page_free_list+0x16a>$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	68 c4 58 10 f0       	push   $0xf01058c4$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	68 a8 02 00 00       	push   $0x2a8$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	e8 ce ee ff ff       	call   f01000a0 <_panic>$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	85 c0                	test   %eax,%eax$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	75 19                	jne    f01011f5 <check_page_free_list+0x18d>$/;"	l
f01011dc	obj/kern/kernel.asm	/^f01011dc:	68 06 61 10 f0       	push   $0xf0106106$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	68 ab 02 00 00       	push   $0x2ab$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	e8 ab ee ff ff       	call   f01000a0 <_panic>$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	75 19                	jne    f0101215 <check_page_free_list+0x1ad>$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	68 17 61 10 f0       	push   $0xf0106117$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	68 ac 02 00 00       	push   $0x2ac$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	e8 8b ee ff ff       	call   f01000a0 <_panic>$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	75 19                	jne    f0101235 <check_page_free_list+0x1cd>$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	68 f8 58 10 f0       	push   $0xf01058f8$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	68 ad 02 00 00       	push   $0x2ad$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	e8 6b ee ff ff       	call   f01000a0 <_panic>$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	75 19                	jne    f0101255 <check_page_free_list+0x1ed>$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	68 30 61 10 f0       	push   $0xf0106130$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	68 ae 02 00 00       	push   $0x2ae$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101250	obj/kern/kernel.asm	/^f0101250:	e8 4b ee ff ff       	call   f01000a0 <_panic>$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	76 3f                	jbe    f010129b <check_page_free_list+0x233>$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	89 c3                	mov    %eax,%ebx$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	77 12                	ja     f0101278 <check_page_free_list+0x210>$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	50                   	push   %eax$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	6a 56                	push   $0x56$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	e8 28 ee ff ff       	call   f01000a0 <_panic>$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	76 1e                	jbe    f01012a0 <check_page_free_list+0x238>$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	68 1c 59 10 f0       	push   $0xf010591c$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	68 af 02 00 00       	push   $0x2af$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	e8 05 ee ff ff       	call   f01000a0 <_panic>$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	83 c6 01             	add    $0x1,%esi$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	eb 04                	jmp    f01012a4 <check_page_free_list+0x23c>$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	8b 12                	mov    (%edx),%edx$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	85 d2                	test   %edx,%edx$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	0f 85 c8 fe ff ff    	jne    f0101176 <check_page_free_list+0x10e>$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	85 f6                	test   %esi,%esi$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	7f 19                	jg     f01012ce <check_page_free_list+0x266>$/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	68 4a 61 10 f0       	push   $0xf010614a$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	68 b7 02 00 00       	push   $0x2b7$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	e8 d2 ed ff ff       	call   f01000a0 <_panic>$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	85 db                	test   %ebx,%ebx$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	7f 19                	jg     f01012eb <check_page_free_list+0x283>$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	68 5c 61 10 f0       	push   $0xf010615c$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	68 b8 02 00 00       	push   $0x2b8$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	e8 b5 ed ff ff       	call   f01000a0 <_panic>$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	68 64 59 10 f0       	push   $0xf0105964$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	e8 d8 23 00 00       	call   f01036d0 <cprintf>$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	eb 29                	jmp    f0101323 <check_page_free_list+0x2bb>$/;"	l
f01012fa	obj/kern/kernel.asm	/^f01012fa:	a1 c4 5e 18 f0       	mov    0xf0185ec4,%eax$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	85 c0                	test   %eax,%eax$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	0f 85 8e fd ff ff    	jne    f0101095 <check_page_free_list+0x2d>$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	e9 72 fd ff ff       	jmp    f010107e <check_page_free_list+0x16>$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	83 3d c4 5e 18 f0 00 	cmpl   $0x0,0xf0185ec4$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	0f 84 65 fd ff ff    	je     f010107e <check_page_free_list+0x16>$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	e9 c0 fd ff ff       	jmp    f01010e3 <check_page_free_list+0x7b>$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	5b                   	pop    %ebx$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	5e                   	pop    %esi$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	5f                   	pop    %edi$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	5d                   	pop    %ebp$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	c3                   	ret    $/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b <page_init>:$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	55                   	push   %ebp$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	89 e5                	mov    %esp,%ebp$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	57                   	push   %edi$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	56                   	push   %esi$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	53                   	push   %ebx$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	e8 1c fc ff ff       	call   f0100f5a <boot_alloc>$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	77 15                	ja     f010135a <page_init+0x2f>$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	50                   	push   %eax$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	68 34 01 00 00       	push   $0x134$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	e8 46 ed ff ff       	call   f01000a0 <_panic>$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	89 c6                	mov    %eax,%esi$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	c7 05 c4 5e 18 f0 00 	movl   $0x0,0xf0185ec4$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	00 00 00 $/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	8b 3d c8 5e 18 f0    	mov    0xf0185ec8,%edi$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	eb 41                	jmp    f01013c5 <page_init+0x9a>$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	89 ca                	mov    %ecx,%edx$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	03 15 90 6b 18 f0    	add    0xf0186b90,%edx$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	85 c0                	test   %eax,%eax$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	74 1f                	je     f01013bc <page_init+0x91>$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	39 f8                	cmp    %edi,%eax$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	72 0b                	jb     f01013ac <page_init+0x81>$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	76 14                	jbe    f01013bc <page_init+0x91>$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	39 f0                	cmp    %esi,%eax$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	72 10                	jb     f01013bc <page_init+0x91>$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	89 1a                	mov    %ebx,(%edx)$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	89 cb                	mov    %ecx,%ebx$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	03 1d 90 6b 18 f0    	add    0xf0186b90,%ebx$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	c6 45 e7 01          	movb   $0x1,-0x19(%ebp)$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	eb 06                	jmp    f01013c2 <page_init+0x97>$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	83 c0 01             	add    $0x1,%eax$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	3b 05 88 6b 18 f0    	cmp    0xf0186b88,%eax$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	72 b7                	jb     f0101384 <page_init+0x59>$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	74 06                	je     f01013d9 <page_init+0xae>$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	89 1d c4 5e 18 f0    	mov    %ebx,0xf0185ec4$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	5b                   	pop    %ebx$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	5e                   	pop    %esi$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	5f                   	pop    %edi$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	5d                   	pop    %ebp$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	c3                   	ret    $/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1 <page_alloc>:$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	55                   	push   %ebp$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	53                   	push   %ebx$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	8b 1d c4 5e 18 f0    	mov    0xf0185ec4,%ebx$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	85 db                	test   %ebx,%ebx$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	74 58                	je     f010144a <page_alloc+0x69>$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	8b 03                	mov    (%ebx),%eax$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	a3 c4 5e 18 f0       	mov    %eax,0xf0185ec4$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	74 45                	je     f010144a <page_alloc+0x69>$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	89 d8                	mov    %ebx,%eax$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	89 c2                	mov    %eax,%edx$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	3b 15 88 6b 18 f0    	cmp    0xf0186b88,%edx$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	72 12                	jb     f0101432 <page_alloc+0x51>$/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	50                   	push   %eax$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	6a 56                	push   $0x56$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	e8 6e ec ff ff       	call   f01000a0 <_panic>$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	68 00 10 00 00       	push   $0x1000$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	6a 00                	push   $0x0$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	50                   	push   %eax$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	e8 d4 36 00 00       	call   f0104b1b <memset>$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	83 c4 10             	add    $0x10,%esp$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	89 d8                	mov    %ebx,%eax$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	c9                   	leave  $/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	c3                   	ret    $/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451 <page_free>:$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	55                   	push   %ebp$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	89 e5                	mov    %esp,%ebp$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	74 1a                	je     f010147b <page_free+0x2a>$/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461:	e8 55 fb ff ff       	call   f0100fbb <page2kva>$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	50                   	push   %eax$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	68 ac 59 10 f0       	push   $0xf01059ac$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	68 6a 01 00 00       	push   $0x16a$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	e8 25 ec ff ff       	call   f01000a0 <_panic>$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	74 1a                	je     f010149a <page_free+0x49>$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	e8 36 fb ff ff       	call   f0100fbb <page2kva>$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	50                   	push   %eax$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	68 e0 59 10 f0       	push   $0xf01059e0$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	68 6d 01 00 00       	push   $0x16d$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	e8 06 ec ff ff       	call   f01000a0 <_panic>$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	8b 15 c4 5e 18 f0    	mov    0xf0185ec4,%edx$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	89 10                	mov    %edx,(%eax)$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	a3 c4 5e 18 f0       	mov    %eax,0xf0185ec4$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	c9                   	leave  $/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	c3                   	ret    $/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9 <page_decref>:$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	55                   	push   %ebp$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	66 85 c0             	test   %ax,%ax$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	75 0c                	jne    f01014ce <page_decref+0x25>$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	52                   	push   %edx$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	e8 86 ff ff ff       	call   f0101451 <page_free>$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	c9                   	leave  $/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	c3                   	ret    $/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0 <pgdir_walk>:$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	55                   	push   %ebp$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	56                   	push   %esi$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	53                   	push   %ebx$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	89 f3                	mov    %esi,%ebx$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f01014e3	obj/kern/kernel.asm	/^f01014e3:	8b 03                	mov    (%ebx),%eax$/;"	l
f01014e5	obj/kern/kernel.asm	/^f01014e5:	a8 01                	test   $0x1,%al$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	74 41                	je     f010152a <pgdir_walk+0x5a>$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	a8 80                	test   $0x80,%al$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	0f 85 b4 00 00 00    	jne    f01015a5 <pgdir_walk+0xd5>$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	89 c2                	mov    %eax,%edx$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	39 15 88 6b 18 f0    	cmp    %edx,0xf0186b88$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	77 15                	ja     f0101518 <pgdir_walk+0x48>$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	50                   	push   %eax$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	68 9b 01 00 00       	push   $0x19b$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	e8 88 eb ff ff       	call   f01000a0 <_panic>$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	8d 9c 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%ebx$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	eb 7b                	jmp    f01015a5 <pgdir_walk+0xd5>$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	74 69                	je     f0101599 <pgdir_walk+0xc9>$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	6a 01                	push   $0x1$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	e8 a7 fe ff ff       	call   f01013e1 <page_alloc>$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	85 c0                	test   %eax,%eax$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	74 5f                	je     f01015a0 <pgdir_walk+0xd0>$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	89 c2                	mov    %eax,%edx$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	2b 15 90 6b 18 f0    	sub    0xf0186b90,%edx$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	89 c2                	mov    %eax,%edx$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	3b 15 88 6b 18 f0    	cmp    0xf0186b88,%edx$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	72 15                	jb     f0101587 <pgdir_walk+0xb7>$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	50                   	push   %eax$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	68 a6 01 00 00       	push   $0x1a6$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	e8 19 eb ff ff       	call   f01000a0 <_panic>$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	8d 9c 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%ebx$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	eb 0c                	jmp    f01015a5 <pgdir_walk+0xd5>$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	eb 05                	jmp    f01015a5 <pgdir_walk+0xd5>$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	89 d8                	mov    %ebx,%eax$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	5b                   	pop    %ebx$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	5e                   	pop    %esi$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	5d                   	pop    %ebp$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	c3                   	ret    $/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae <boot_map_region>:$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	55                   	push   %ebp$/;"	l
f01015af	obj/kern/kernel.asm	/^f01015af:	89 e5                	mov    %esp,%ebp$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	57                   	push   %edi$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	56                   	push   %esi$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	53                   	push   %ebx$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	89 cf                	mov    %ecx,%edi$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	80 3d c0 5e 18 f0 00 	cmpb   $0x0,0xf0185ec0$/;"	l
f01015c6	obj/kern/kernel.asm	/^f01015c6:	0f 84 ad 00 00 00    	je     f0101679 <boot_map_region+0xcb>$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	89 d0                	mov    %edx,%eax$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	31 c8                	xor    %ecx,%eax$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	a9 ff ff 3f 00       	test   $0x3fffff,%eax$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	74 29                	je     f0101600 <boot_map_region+0x52>$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	e9 9d 00 00 00       	jmp    f0101679 <boot_map_region+0xcb>$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	6a 01                	push   $0x1$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	53                   	push   %ebx$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	e8 e6 fe ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	89 30                	mov    %esi,(%eax)$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	eb 10                	jmp    f0101610 <boot_map_region+0x62>$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	89 d3                	mov    %edx,%ebx$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	29 d1                	sub    %edx,%ecx$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	83 c8 01             	or     $0x1,%eax$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	89 c8                	mov    %ecx,%eax$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	8d 34 0b             	lea    (%ebx,%ecx,1),%esi$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	85 ff                	test   %edi,%edi$/;"	l
f010161a	obj/kern/kernel.asm	/^f010161a:	0f 84 97 00 00 00    	je     f01016b7 <boot_map_region+0x109>$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	f7 c3 ff ff 3f 00    	test   $0x3fffff,%ebx$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	75 b4                	jne    f01015dc <boot_map_region+0x2e>$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	89 fa                	mov    %edi,%edx$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	01 da                	add    %ebx,%edx$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	80 c9 81             	or     $0x81,%cl$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	89 c6                	mov    %eax,%esi$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	eb 11                	jmp    f010165f <boot_map_region+0xb1>$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	0b 45 e0             	or     -0x20(%ebp),%eax$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	89 04 8f             	mov    %eax,(%edi,%ecx,4)$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	81 c3 00 00 40 00    	add    $0x400000,%ebx$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	39 d3                	cmp    %edx,%ebx$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	75 e8                	jne    f010164e <boot_map_region+0xa0>$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	29 c7                	sub    %eax,%edi$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	01 f1                	add    %esi,%ecx$/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	89 d3                	mov    %edx,%ebx$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	29 d1                	sub    %edx,%ecx$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	eb 22                	jmp    f01016ad <boot_map_region+0xff>$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	6a 01                	push   $0x1$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	53                   	push   %ebx$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	e8 37 fe ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	89 30                	mov    %esi,(%eax)$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	8d 34 18             	lea    (%eax,%ebx,1),%esi$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	85 ff                	test   %edi,%edi$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	75 d4                	jne    f010168b <boot_map_region+0xdd>$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	5b                   	pop    %ebx$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	5e                   	pop    %esi$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	5f                   	pop    %edi$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	5d                   	pop    %ebp$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	c3                   	ret    $/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf <page_lookup>:$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	55                   	push   %ebp$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	53                   	push   %ebx$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	6a 00                	push   $0x0$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	e8 fa fd ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	85 c0                	test   %eax,%eax$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	74 37                	je     f0101714 <page_lookup+0x55>$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	74 39                	je     f010171b <page_lookup+0x5c>$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	85 db                	test   %ebx,%ebx$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	74 02                	je     f01016e8 <page_lookup+0x29>$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	89 03                	mov    %eax,(%ebx)$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	8b 00                	mov    (%eax),%eax$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01016ed	obj/kern/kernel.asm	/^f01016ed:	3b 05 88 6b 18 f0    	cmp    0xf0186b88,%eax$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	72 14                	jb     f0101709 <page_lookup+0x4a>$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	68 14 5a 10 f0       	push   $0xf0105a14$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	6a 4f                	push   $0x4f$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	e8 97 e9 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	8b 15 90 6b 18 f0    	mov    0xf0186b90,%edx$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	eb 0c                	jmp    f0101720 <page_lookup+0x61>$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	eb 05                	jmp    f0101720 <page_lookup+0x61>$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	c9                   	leave  $/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	c3                   	ret    $/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725 <page_remove>:$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	55                   	push   %ebp$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	89 e5                	mov    %esp,%ebp$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	53                   	push   %ebx$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	50                   	push   %eax$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	53                   	push   %ebx$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	e8 83 ff ff ff       	call   f01016bf <page_lookup>$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	85 c0                	test   %eax,%eax$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	74 18                	je     f010175b <page_remove+0x36>$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	50                   	push   %eax$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	e8 5d fd ff ff       	call   f01014a9 <page_decref>$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	0f 01 3b             	invlpg (%ebx)$/;"	l
f0101758	obj/kern/kernel.asm	/^f0101758:	83 c4 10             	add    $0x10,%esp$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	c9                   	leave  $/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	c3                   	ret    $/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760 <page_insert>:$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	55                   	push   %ebp$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	89 e5                	mov    %esp,%ebp$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	57                   	push   %edi$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	56                   	push   %esi$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	53                   	push   %ebx$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	6a 01                	push   $0x1$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	57                   	push   %edi$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	e8 56 fd ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	85 c0                	test   %eax,%eax$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	74 33                	je     f01017b4 <page_insert+0x54>$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	89 c6                	mov    %eax,%esi$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	57                   	push   %edi$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	e8 91 ff ff ff       	call   f0101725 <page_remove>$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	2b 1d 90 6b 18 f0    	sub    0xf0186b90,%ebx$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f010179d	obj/kern/kernel.asm	/^f010179d:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	83 c8 01             	or     $0x1,%eax$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	09 c3                	or     %eax,%ebx$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	89 1e                	mov    %ebx,(%esi)$/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	eb 05                	jmp    f01017b9 <page_insert+0x59>$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	5b                   	pop    %ebx$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	5e                   	pop    %esi$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	5f                   	pop    %edi$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	5d                   	pop    %ebp$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	c3                   	ret    $/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1 <mem_init>:$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	55                   	push   %ebp$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	57                   	push   %edi$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	56                   	push   %esi$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	53                   	push   %ebx$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	e8 be f7 ff ff       	call   f0100f92 <nvram_read>$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	89 c3                	mov    %eax,%ebx$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	e8 b2 f7 ff ff       	call   f0100f92 <nvram_read>$/;"	l
f01017e0	obj/kern/kernel.asm	/^f01017e0:	89 c6                	mov    %eax,%esi$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	e8 a6 f7 ff ff       	call   f0100f92 <nvram_read>$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	85 c0                	test   %eax,%eax$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	74 07                	je     f01017fa <mem_init+0x39>$/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	eb 0b                	jmp    f0101805 <mem_init+0x44>$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	85 f6                	test   %esi,%esi$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	89 c2                	mov    %eax,%edx$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	89 15 88 6b 18 f0    	mov    %edx,0xf0186b88$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	89 da                	mov    %ebx,%edx$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	89 15 c8 5e 18 f0    	mov    %edx,0xf0185ec8$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	89 c2                	mov    %eax,%edx$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	29 da                	sub    %ebx,%edx$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	52                   	push   %edx$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	53                   	push   %ebx$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	50                   	push   %eax$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	68 34 5a 10 f0       	push   $0xf0105a34$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	e8 a4 1e 00 00       	call   f01036d0 <cprintf>$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	0f a2                	cpuid  $/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	83 e2 08             	and    $0x8,%edx$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	0f 95 05 c0 5e 18 f0 	setne  0xf0185ec0$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	74 09                	je     f010184b <mem_init+0x8a>$/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	83 c8 10             	or     $0x10,%eax$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	e8 05 f7 ff ff       	call   f0100f5a <boot_alloc>$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	a3 8c 6b 18 f0       	mov    %eax,0xf0186b8c$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	6a 00                	push   $0x0$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	50                   	push   %eax$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	e8 b1 32 00 00       	call   f0104b1b <memset>$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	77 15                	ja     f010188e <mem_init+0xcd>$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	50                   	push   %eax$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	68 a9 00 00 00       	push   $0xa9$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	e8 12 e8 ff ff       	call   f01000a0 <_panic>$/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	a1 88 6b 18 f0       	mov    0xf0186b88,%eax$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	e8 b0 f6 ff ff       	call   f0100f5a <boot_alloc>$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	a3 90 6b 18 f0       	mov    %eax,0xf0186b90$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	8b 3d 88 6b 18 f0    	mov    0xf0186b88,%edi$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	8d 14 fd 00 00 00 00 	lea    0x0(,%edi,8),%edx$/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	52                   	push   %edx$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	6a 00                	push   $0x0$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	50                   	push   %eax$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	e8 53 32 00 00       	call   f0104b1b <memset>$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	b8 00 80 01 00       	mov    $0x18000,%eax$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	e8 88 f6 ff ff       	call   f0100f5a <boot_alloc>$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	a3 d0 5e 18 f0       	mov    %eax,0xf0185ed0$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	e8 4f fa ff ff       	call   f010132b <page_init>$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	e8 82 f7 ff ff       	call   f0101068 <check_page_free_list>$/;"	l
f01018e6	obj/kern/kernel.asm	/^f01018e6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	83 3d 90 6b 18 f0 00 	cmpl   $0x0,0xf0186b90$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	75 17                	jne    f0101909 <mem_init+0x148>$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	68 6d 61 10 f0       	push   $0xf010616d$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	68 cb 02 00 00       	push   $0x2cb$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	e8 97 e7 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	a1 c4 5e 18 f0       	mov    0xf0185ec4,%eax$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	eb 05                	jmp    f010191a <mem_init+0x159>$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101918	obj/kern/kernel.asm	/^f0101918:	8b 00                	mov    (%eax),%eax$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	85 c0                	test   %eax,%eax$/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	75 f7                	jne    f0101915 <mem_init+0x154>$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	6a 00                	push   $0x0$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	e8 b9 fa ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	89 c7                	mov    %eax,%edi$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	85 c0                	test   %eax,%eax$/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	75 19                	jne    f010194a <mem_init+0x189>$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	68 88 61 10 f0       	push   $0xf0106188$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	68 d3 02 00 00       	push   $0x2d3$/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101945	obj/kern/kernel.asm	/^f0101945:	e8 56 e7 ff ff       	call   f01000a0 <_panic>$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	6a 00                	push   $0x0$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	e8 8d fa ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	89 c6                	mov    %eax,%esi$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	85 c0                	test   %eax,%eax$/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	75 19                	jne    f0101976 <mem_init+0x1b5>$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	68 9e 61 10 f0       	push   $0xf010619e$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	68 d4 02 00 00       	push   $0x2d4$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	e8 2a e7 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	6a 00                	push   $0x0$/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	e8 61 fa ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	85 c0                	test   %eax,%eax$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	75 19                	jne    f01019a3 <mem_init+0x1e2>$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	68 b4 61 10 f0       	push   $0xf01061b4$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	68 d5 02 00 00       	push   $0x2d5$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	e8 fd e6 ff ff       	call   f01000a0 <_panic>$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	39 f7                	cmp    %esi,%edi$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	75 19                	jne    f01019c0 <mem_init+0x1ff>$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	68 ca 61 10 f0       	push   $0xf01061ca$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	68 d8 02 00 00       	push   $0x2d8$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	e8 e0 e6 ff ff       	call   f01000a0 <_panic>$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	39 c6                	cmp    %eax,%esi$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	74 04                	je     f01019cb <mem_init+0x20a>$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	39 c7                	cmp    %eax,%edi$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	75 19                	jne    f01019e4 <mem_init+0x223>$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	68 70 5a 10 f0       	push   $0xf0105a70$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	68 d9 02 00 00       	push   $0x2d9$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	e8 bc e6 ff ff       	call   f01000a0 <_panic>$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	8b 0d 90 6b 18 f0    	mov    0xf0186b90,%ecx$/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	8b 15 88 6b 18 f0    	mov    0xf0186b88,%edx$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	89 f8                	mov    %edi,%eax$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	29 c8                	sub    %ecx,%eax$/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	39 d0                	cmp    %edx,%eax$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	72 19                	jb     f0101a1a <mem_init+0x259>$/;"	l
f0101a01	obj/kern/kernel.asm	/^f0101a01:	68 dc 61 10 f0       	push   $0xf01061dc$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	68 da 02 00 00       	push   $0x2da$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	e8 86 e6 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101a1a	obj/kern/kernel.asm	/^f0101a1a:	89 f0                	mov    %esi,%eax$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	29 c8                	sub    %ecx,%eax$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	39 c2                	cmp    %eax,%edx$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	77 19                	ja     f0101a41 <mem_init+0x280>$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	68 f9 61 10 f0       	push   $0xf01061f9$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	68 db 02 00 00       	push   $0x2db$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	e8 5f e6 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	29 c8                	sub    %ecx,%eax$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	39 c2                	cmp    %eax,%edx$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	77 19                	ja     f0101a69 <mem_init+0x2a8>$/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	68 16 62 10 f0       	push   $0xf0106216$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	68 dc 02 00 00       	push   $0x2dc$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	e8 37 e6 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	a1 c4 5e 18 f0       	mov    0xf0185ec4,%eax$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	c7 05 c4 5e 18 f0 00 	movl   $0x0,0xf0185ec4$/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	00 00 00 $/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	6a 00                	push   $0x0$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	e8 5c f9 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a88	obj/kern/kernel.asm	/^f0101a88:	85 c0                	test   %eax,%eax$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	74 19                	je     f0101aa5 <mem_init+0x2e4>$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	68 33 62 10 f0       	push   $0xf0106233$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	68 e3 02 00 00       	push   $0x2e3$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	e8 fb e5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	57                   	push   %edi$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	e8 a3 f9 ff ff       	call   f0101451 <page_free>$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101ab1	obj/kern/kernel.asm	/^f0101ab1:	e8 9b f9 ff ff       	call   f0101451 <page_free>$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	e8 90 f9 ff ff       	call   f0101451 <page_free>$/;"	l
f0101ac1	obj/kern/kernel.asm	/^f0101ac1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101ac8	obj/kern/kernel.asm	/^f0101ac8:	e8 14 f9 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101acd	obj/kern/kernel.asm	/^f0101acd:	89 c6                	mov    %eax,%esi$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	85 c0                	test   %eax,%eax$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	75 19                	jne    f0101aef <mem_init+0x32e>$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	68 88 61 10 f0       	push   $0xf0106188$/;"	l
f0101adb	obj/kern/kernel.asm	/^f0101adb:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	68 ea 02 00 00       	push   $0x2ea$/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101aea	obj/kern/kernel.asm	/^f0101aea:	e8 b1 e5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	6a 00                	push   $0x0$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	e8 e8 f8 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	89 c7                	mov    %eax,%edi$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	85 c0                	test   %eax,%eax$/;"	l
f0101b00	obj/kern/kernel.asm	/^f0101b00:	75 19                	jne    f0101b1b <mem_init+0x35a>$/;"	l
f0101b02	obj/kern/kernel.asm	/^f0101b02:	68 9e 61 10 f0       	push   $0xf010619e$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	68 eb 02 00 00       	push   $0x2eb$/;"	l
f0101b11	obj/kern/kernel.asm	/^f0101b11:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	e8 85 e5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	6a 00                	push   $0x0$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	e8 bc f8 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	85 c0                	test   %eax,%eax$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	75 19                	jne    f0101b48 <mem_init+0x387>$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	68 b4 61 10 f0       	push   $0xf01061b4$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	68 ec 02 00 00       	push   $0x2ec$/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	e8 58 e5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	39 fe                	cmp    %edi,%esi$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	75 19                	jne    f0101b65 <mem_init+0x3a4>$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	68 ca 61 10 f0       	push   $0xf01061ca$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101b56	obj/kern/kernel.asm	/^f0101b56:	68 ee 02 00 00       	push   $0x2ee$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	e8 3b e5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	39 c7                	cmp    %eax,%edi$/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	74 04                	je     f0101b70 <mem_init+0x3af>$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	39 c6                	cmp    %eax,%esi$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	75 19                	jne    f0101b89 <mem_init+0x3c8>$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	68 70 5a 10 f0       	push   $0xf0105a70$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	68 ef 02 00 00       	push   $0x2ef$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	e8 17 e5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	6a 00                	push   $0x0$/;"	l
f0101b8e	obj/kern/kernel.asm	/^f0101b8e:	e8 4e f8 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b96	obj/kern/kernel.asm	/^f0101b96:	85 c0                	test   %eax,%eax$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	74 19                	je     f0101bb3 <mem_init+0x3f2>$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	68 33 62 10 f0       	push   $0xf0106233$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	68 f0 02 00 00       	push   $0x2f0$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	e8 ed e4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	89 f0                	mov    %esi,%eax$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	89 c2                	mov    %eax,%edx$/;"	l
f0101bc3	obj/kern/kernel.asm	/^f0101bc3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	3b 15 88 6b 18 f0    	cmp    0xf0186b88,%edx$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	72 12                	jb     f0101be0 <mem_init+0x41f>$/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	50                   	push   %eax$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	6a 56                	push   $0x56$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	e8 c0 e4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	6a 01                	push   $0x1$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	50                   	push   %eax$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	e8 26 2f 00 00       	call   f0104b1b <memset>$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	e8 54 f8 ff ff       	call   f0101451 <page_free>$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101c04	obj/kern/kernel.asm	/^f0101c04:	e8 d8 f7 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	85 c0                	test   %eax,%eax$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	75 19                	jne    f0101c29 <mem_init+0x468>$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	68 42 62 10 f0       	push   $0xf0106242$/;"	l
f0101c15	obj/kern/kernel.asm	/^f0101c15:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	68 f5 02 00 00       	push   $0x2f5$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101c24	obj/kern/kernel.asm	/^f0101c24:	e8 77 e4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	39 c6                	cmp    %eax,%esi$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	74 19                	je     f0101c46 <mem_init+0x485>$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	68 60 62 10 f0       	push   $0xf0106260$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101c37	obj/kern/kernel.asm	/^f0101c37:	68 f6 02 00 00       	push   $0x2f6$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	e8 5a e4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	89 f0                	mov    %esi,%eax$/;"	l
f0101c48	obj/kern/kernel.asm	/^f0101c48:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	89 c2                	mov    %eax,%edx$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	3b 15 88 6b 18 f0    	cmp    0xf0186b88,%edx$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	72 12                	jb     f0101c73 <mem_init+0x4b2>$/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	50                   	push   %eax$/;"	l
f0101c62	obj/kern/kernel.asm	/^f0101c62:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	6a 56                	push   $0x56$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	e8 2d e4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	74 19                	je     f0101c9d <mem_init+0x4dc>$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	68 70 62 10 f0       	push   $0xf0106270$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	68 f9 02 00 00       	push   $0x2f9$/;"	l
f0101c93	obj/kern/kernel.asm	/^f0101c93:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	e8 03 e4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ca2	obj/kern/kernel.asm	/^f0101ca2:	75 db                	jne    f0101c7f <mem_init+0x4be>$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101ca7	obj/kern/kernel.asm	/^f0101ca7:	a3 c4 5e 18 f0       	mov    %eax,0xf0185ec4$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	56                   	push   %esi$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	e8 9c f7 ff ff       	call   f0101451 <page_free>$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101cb8	obj/kern/kernel.asm	/^f0101cb8:	e8 94 f7 ff ff       	call   f0101451 <page_free>$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	e8 89 f7 ff ff       	call   f0101451 <page_free>$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	a1 c4 5e 18 f0       	mov    0xf0185ec4,%eax$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	eb 05                	jmp    f0101cd7 <mem_init+0x516>$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	8b 00                	mov    (%eax),%eax$/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	85 c0                	test   %eax,%eax$/;"	l
f0101cd9	obj/kern/kernel.asm	/^f0101cd9:	75 f7                	jne    f0101cd2 <mem_init+0x511>$/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	85 db                	test   %ebx,%ebx$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	74 19                	je     f0101cf8 <mem_init+0x537>$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	68 7a 62 10 f0       	push   $0xf010627a$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	68 06 03 00 00       	push   $0x306$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	e8 a8 e3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	68 90 5a 10 f0       	push   $0xf0105a90$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	e8 cb 19 00 00       	call   f01036d0 <cprintf>$/;"	l
f0101d05	obj/kern/kernel.asm	/^f0101d05:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	e8 d0 f6 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101d11	obj/kern/kernel.asm	/^f0101d11:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	85 c0                	test   %eax,%eax$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	75 19                	jne    f0101d34 <mem_init+0x573>$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	68 88 61 10 f0       	push   $0xf0106188$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101d25	obj/kern/kernel.asm	/^f0101d25:	68 68 03 00 00       	push   $0x368$/;"	l
f0101d2a	obj/kern/kernel.asm	/^f0101d2a:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101d2f	obj/kern/kernel.asm	/^f0101d2f:	e8 6c e3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101d34	obj/kern/kernel.asm	/^f0101d34:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	6a 00                	push   $0x0$/;"	l
f0101d39	obj/kern/kernel.asm	/^f0101d39:	e8 a3 f6 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	89 c3                	mov    %eax,%ebx$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	85 c0                	test   %eax,%eax$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	75 19                	jne    f0101d60 <mem_init+0x59f>$/;"	l
f0101d47	obj/kern/kernel.asm	/^f0101d47:	68 9e 61 10 f0       	push   $0xf010619e$/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	68 69 03 00 00       	push   $0x369$/;"	l
f0101d56	obj/kern/kernel.asm	/^f0101d56:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101d5b	obj/kern/kernel.asm	/^f0101d5b:	e8 40 e3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	6a 00                	push   $0x0$/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	e8 77 f6 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101d6a	obj/kern/kernel.asm	/^f0101d6a:	89 c6                	mov    %eax,%esi$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	85 c0                	test   %eax,%eax$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	75 19                	jne    f0101d8c <mem_init+0x5cb>$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	68 b4 61 10 f0       	push   $0xf01061b4$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	68 6a 03 00 00       	push   $0x36a$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101d87	obj/kern/kernel.asm	/^f0101d87:	e8 14 e3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0101d8f	obj/kern/kernel.asm	/^f0101d8f:	75 19                	jne    f0101daa <mem_init+0x5e9>$/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	68 ca 61 10 f0       	push   $0xf01061ca$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	68 6d 03 00 00       	push   $0x36d$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	e8 f6 e2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101daa	obj/kern/kernel.asm	/^f0101daa:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	74 05                	je     f0101db3 <mem_init+0x5f2>$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	75 19                	jne    f0101dcc <mem_init+0x60b>$/;"	l
f0101db3	obj/kern/kernel.asm	/^f0101db3:	68 70 5a 10 f0       	push   $0xf0105a70$/;"	l
f0101db8	obj/kern/kernel.asm	/^f0101db8:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	68 6e 03 00 00       	push   $0x36e$/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101dc7	obj/kern/kernel.asm	/^f0101dc7:	e8 d4 e2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101dcc	obj/kern/kernel.asm	/^f0101dcc:	a1 c4 5e 18 f0       	mov    0xf0185ec4,%eax$/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	c7 05 c4 5e 18 f0 00 	movl   $0x0,0xf0185ec4$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	00 00 00 $/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	6a 00                	push   $0x0$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	e8 f9 f5 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	85 c0                	test   %eax,%eax$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	74 19                	je     f0101e08 <mem_init+0x647>$/;"	l
f0101def	obj/kern/kernel.asm	/^f0101def:	68 33 62 10 f0       	push   $0xf0106233$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	68 75 03 00 00       	push   $0x375$/;"	l
f0101dfe	obj/kern/kernel.asm	/^f0101dfe:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101e03	obj/kern/kernel.asm	/^f0101e03:	e8 98 e2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101e08	obj/kern/kernel.asm	/^f0101e08:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	50                   	push   %eax$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	6a 00                	push   $0x0$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	e8 a3 f8 ff ff       	call   f01016bf <page_lookup>$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	85 c0                	test   %eax,%eax$/;"	l
f0101e21	obj/kern/kernel.asm	/^f0101e21:	74 19                	je     f0101e3c <mem_init+0x67b>$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	68 b0 5a 10 f0       	push   $0xf0105ab0$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	68 78 03 00 00       	push   $0x378$/;"	l
f0101e32	obj/kern/kernel.asm	/^f0101e32:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	e8 64 e2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101e3c	obj/kern/kernel.asm	/^f0101e3c:	6a 02                	push   $0x2$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	6a 00                	push   $0x0$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	53                   	push   %ebx$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	e8 14 f9 ff ff       	call   f0101760 <page_insert>$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	85 c0                	test   %eax,%eax$/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	78 19                	js     f0101e6c <mem_init+0x6ab>$/;"	l
f0101e53	obj/kern/kernel.asm	/^f0101e53:	68 e8 5a 10 f0       	push   $0xf0105ae8$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101e5d	obj/kern/kernel.asm	/^f0101e5d:	68 7b 03 00 00       	push   $0x37b$/;"	l
f0101e62	obj/kern/kernel.asm	/^f0101e62:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101e67	obj/kern/kernel.asm	/^f0101e67:	e8 34 e2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101e72	obj/kern/kernel.asm	/^f0101e72:	e8 da f5 ff ff       	call   f0101451 <page_free>$/;"	l
f0101e77	obj/kern/kernel.asm	/^f0101e77:	6a 02                	push   $0x2$/;"	l
f0101e79	obj/kern/kernel.asm	/^f0101e79:	6a 00                	push   $0x0$/;"	l
f0101e7b	obj/kern/kernel.asm	/^f0101e7b:	53                   	push   %ebx$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	e8 d9 f8 ff ff       	call   f0101760 <page_insert>$/;"	l
f0101e87	obj/kern/kernel.asm	/^f0101e87:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	85 c0                	test   %eax,%eax$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	74 19                	je     f0101ea7 <mem_init+0x6e6>$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	68 18 5b 10 f0       	push   $0xf0105b18$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101e98	obj/kern/kernel.asm	/^f0101e98:	68 7f 03 00 00       	push   $0x37f$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	e8 f9 e1 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101ea7	obj/kern/kernel.asm	/^f0101ea7:	8b 3d 8c 6b 18 f0    	mov    0xf0186b8c,%edi$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	a1 90 6b 18 f0       	mov    0xf0186b90,%eax$/;"	l
f0101eb2	obj/kern/kernel.asm	/^f0101eb2:	89 c1                	mov    %eax,%ecx$/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	8b 17                	mov    (%edi),%edx$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ec2	obj/kern/kernel.asm	/^f0101ec2:	29 c8                	sub    %ecx,%eax$/;"	l
f0101ec4	obj/kern/kernel.asm	/^f0101ec4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	39 c2                	cmp    %eax,%edx$/;"	l
f0101ecc	obj/kern/kernel.asm	/^f0101ecc:	74 19                	je     f0101ee7 <mem_init+0x726>$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	68 48 5b 10 f0       	push   $0xf0105b48$/;"	l
f0101ed3	obj/kern/kernel.asm	/^f0101ed3:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	68 80 03 00 00       	push   $0x380$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101ee2	obj/kern/kernel.asm	/^f0101ee2:	e8 b9 e1 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	89 f8                	mov    %edi,%eax$/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	e8 ff f0 ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	89 da                	mov    %ebx,%edx$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101ef8	obj/kern/kernel.asm	/^f0101ef8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	74 19                	je     f0101f1b <mem_init+0x75a>$/;"	l
f0101f02	obj/kern/kernel.asm	/^f0101f02:	68 70 5b 10 f0       	push   $0xf0105b70$/;"	l
f0101f07	obj/kern/kernel.asm	/^f0101f07:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	68 81 03 00 00       	push   $0x381$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101f16	obj/kern/kernel.asm	/^f0101f16:	e8 85 e1 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101f1b	obj/kern/kernel.asm	/^f0101f1b:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	74 19                	je     f0101f3b <mem_init+0x77a>$/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	68 85 62 10 f0       	push   $0xf0106285$/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	68 82 03 00 00       	push   $0x382$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101f36	obj/kern/kernel.asm	/^f0101f36:	e8 65 e1 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101f3b	obj/kern/kernel.asm	/^f0101f3b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	74 19                	je     f0101f5e <mem_init+0x79d>$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	68 96 62 10 f0       	push   $0xf0106296$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	68 83 03 00 00       	push   $0x383$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101f59	obj/kern/kernel.asm	/^f0101f59:	e8 42 e1 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101f5e	obj/kern/kernel.asm	/^f0101f5e:	6a 02                	push   $0x2$/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	56                   	push   %esi$/;"	l
f0101f66	obj/kern/kernel.asm	/^f0101f66:	57                   	push   %edi$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	e8 f4 f7 ff ff       	call   f0101760 <page_insert>$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	85 c0                	test   %eax,%eax$/;"	l
f0101f71	obj/kern/kernel.asm	/^f0101f71:	74 19                	je     f0101f8c <mem_init+0x7cb>$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	68 a0 5b 10 f0       	push   $0xf0105ba0$/;"	l
f0101f78	obj/kern/kernel.asm	/^f0101f78:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101f7d	obj/kern/kernel.asm	/^f0101f7d:	68 86 03 00 00       	push   $0x386$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101f87	obj/kern/kernel.asm	/^f0101f87:	e8 14 e1 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101f8c	obj/kern/kernel.asm	/^f0101f8c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f0101f96	obj/kern/kernel.asm	/^f0101f96:	e8 57 f0 ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0101f9b	obj/kern/kernel.asm	/^f0101f9b:	89 f2                	mov    %esi,%edx$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	2b 15 90 6b 18 f0    	sub    0xf0186b90,%edx$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	39 d0                	cmp    %edx,%eax$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	74 19                	je     f0101fc6 <mem_init+0x805>$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	68 dc 5b 10 f0       	push   $0xf0105bdc$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	68 87 03 00 00       	push   $0x387$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	e8 da e0 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101fc6	obj/kern/kernel.asm	/^f0101fc6:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101fcb	obj/kern/kernel.asm	/^f0101fcb:	74 19                	je     f0101fe6 <mem_init+0x825>$/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	68 a7 62 10 f0       	push   $0xf01062a7$/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0101fd7	obj/kern/kernel.asm	/^f0101fd7:	68 88 03 00 00       	push   $0x388$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	e8 ba e0 ff ff       	call   f01000a0 <_panic>$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	6a 00                	push   $0x0$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	e8 f1 f3 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3:	85 c0                	test   %eax,%eax$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	74 19                	je     f0102010 <mem_init+0x84f>$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	68 33 62 10 f0       	push   $0xf0106233$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102001	obj/kern/kernel.asm	/^f0102001:	68 8b 03 00 00       	push   $0x38b$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010200b	obj/kern/kernel.asm	/^f010200b:	e8 90 e0 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102010	obj/kern/kernel.asm	/^f0102010:	6a 02                	push   $0x2$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	56                   	push   %esi$/;"	l
f0102018	obj/kern/kernel.asm	/^f0102018:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	e8 3d f7 ff ff       	call   f0101760 <page_insert>$/;"	l
f0102023	obj/kern/kernel.asm	/^f0102023:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102026	obj/kern/kernel.asm	/^f0102026:	85 c0                	test   %eax,%eax$/;"	l
f0102028	obj/kern/kernel.asm	/^f0102028:	74 19                	je     f0102043 <mem_init+0x882>$/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	68 a0 5b 10 f0       	push   $0xf0105ba0$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	68 8e 03 00 00       	push   $0x38e$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010203e	obj/kern/kernel.asm	/^f010203e:	e8 5d e0 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	e8 a0 ef ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	89 f2                	mov    %esi,%edx$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	2b 15 90 6b 18 f0    	sub    0xf0186b90,%edx$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102060	obj/kern/kernel.asm	/^f0102060:	39 d0                	cmp    %edx,%eax$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	74 19                	je     f010207d <mem_init+0x8bc>$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	68 dc 5b 10 f0       	push   $0xf0105bdc$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	68 8f 03 00 00       	push   $0x38f$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	e8 23 e0 ff ff       	call   f01000a0 <_panic>$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	74 19                	je     f010209d <mem_init+0x8dc>$/;"	l
f0102084	obj/kern/kernel.asm	/^f0102084:	68 a7 62 10 f0       	push   $0xf01062a7$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	68 90 03 00 00       	push   $0x390$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	e8 03 e0 ff ff       	call   f01000a0 <_panic>$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020a0	obj/kern/kernel.asm	/^f01020a0:	6a 00                	push   $0x0$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	e8 3a f3 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f01020a7	obj/kern/kernel.asm	/^f01020a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	85 c0                	test   %eax,%eax$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	74 19                	je     f01020c7 <mem_init+0x906>$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	68 33 62 10 f0       	push   $0xf0106233$/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	68 94 03 00 00       	push   $0x394$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	e8 d9 df ff ff       	call   f01000a0 <_panic>$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	8b 15 8c 6b 18 f0    	mov    0xf0186b8c,%edx$/;"	l
f01020cd	obj/kern/kernel.asm	/^f01020cd:	8b 02                	mov    (%edx),%eax$/;"	l
f01020cf	obj/kern/kernel.asm	/^f01020cf:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01020d4	obj/kern/kernel.asm	/^f01020d4:	89 c1                	mov    %eax,%ecx$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	3b 0d 88 6b 18 f0    	cmp    0xf0186b88,%ecx$/;"	l
f01020df	obj/kern/kernel.asm	/^f01020df:	72 15                	jb     f01020f6 <mem_init+0x935>$/;"	l
f01020e1	obj/kern/kernel.asm	/^f01020e1:	50                   	push   %eax$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	68 97 03 00 00       	push   $0x397$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	e8 aa df ff ff       	call   f01000a0 <_panic>$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102101	obj/kern/kernel.asm	/^f0102101:	6a 00                	push   $0x0$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102108	obj/kern/kernel.asm	/^f0102108:	52                   	push   %edx$/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	e8 c2 f3 ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0102111	obj/kern/kernel.asm	/^f0102111:	8d 57 04             	lea    0x4(%edi),%edx$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	39 d0                	cmp    %edx,%eax$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	74 19                	je     f0102134 <mem_init+0x973>$/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	68 0c 5c 10 f0       	push   $0xf0105c0c$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102125	obj/kern/kernel.asm	/^f0102125:	68 98 03 00 00       	push   $0x398$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	e8 6c df ff ff       	call   f01000a0 <_panic>$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	6a 06                	push   $0x6$/;"	l
f0102136	obj/kern/kernel.asm	/^f0102136:	68 00 10 00 00       	push   $0x1000$/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	56                   	push   %esi$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	e8 19 f6 ff ff       	call   f0101760 <page_insert>$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	83 c4 10             	add    $0x10,%esp$/;"	l
f010214a	obj/kern/kernel.asm	/^f010214a:	85 c0                	test   %eax,%eax$/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	74 19                	je     f0102167 <mem_init+0x9a6>$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	68 4c 5c 10 f0       	push   $0xf0105c4c$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	68 9b 03 00 00       	push   $0x39b$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102162	obj/kern/kernel.asm	/^f0102162:	e8 39 df ff ff       	call   f01000a0 <_panic>$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	8b 3d 8c 6b 18 f0    	mov    0xf0186b8c,%edi$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	89 f8                	mov    %edi,%eax$/;"	l
f0102174	obj/kern/kernel.asm	/^f0102174:	e8 79 ee ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	89 f2                	mov    %esi,%edx$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	2b 15 90 6b 18 f0    	sub    0xf0186b90,%edx$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	39 d0                	cmp    %edx,%eax$/;"	l
f0102189	obj/kern/kernel.asm	/^f0102189:	74 19                	je     f01021a4 <mem_init+0x9e3>$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	68 dc 5b 10 f0       	push   $0xf0105bdc$/;"	l
f0102190	obj/kern/kernel.asm	/^f0102190:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102195	obj/kern/kernel.asm	/^f0102195:	68 9c 03 00 00       	push   $0x39c$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	e8 fc de ff ff       	call   f01000a0 <_panic>$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01021a9	obj/kern/kernel.asm	/^f01021a9:	74 19                	je     f01021c4 <mem_init+0xa03>$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	68 a7 62 10 f0       	push   $0xf01062a7$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	68 9d 03 00 00       	push   $0x39d$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01021bf	obj/kern/kernel.asm	/^f01021bf:	e8 dc de ff ff       	call   f01000a0 <_panic>$/;"	l
f01021c4	obj/kern/kernel.asm	/^f01021c4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	6a 00                	push   $0x0$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	68 00 10 00 00       	push   $0x1000$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	57                   	push   %edi$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	e8 fc f2 ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	75 19                	jne    f01021f5 <mem_init+0xa34>$/;"	l
f01021dc	obj/kern/kernel.asm	/^f01021dc:	68 8c 5c 10 f0       	push   $0xf0105c8c$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	68 9e 03 00 00       	push   $0x39e$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	e8 ab de ff ff       	call   f01000a0 <_panic>$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	75 19                	jne    f0102218 <mem_init+0xa57>$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	68 b8 62 10 f0       	push   $0xf01062b8$/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102209	obj/kern/kernel.asm	/^f0102209:	68 9f 03 00 00       	push   $0x39f$/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	e8 88 de ff ff       	call   f01000a0 <_panic>$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	6a 02                	push   $0x2$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	68 00 10 00 00       	push   $0x1000$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	56                   	push   %esi$/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	50                   	push   %eax$/;"	l
f0102221	obj/kern/kernel.asm	/^f0102221:	e8 3a f5 ff ff       	call   f0101760 <page_insert>$/;"	l
f0102226	obj/kern/kernel.asm	/^f0102226:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102229	obj/kern/kernel.asm	/^f0102229:	85 c0                	test   %eax,%eax$/;"	l
f010222b	obj/kern/kernel.asm	/^f010222b:	74 19                	je     f0102246 <mem_init+0xa85>$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	68 a0 5b 10 f0       	push   $0xf0105ba0$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	68 a2 03 00 00       	push   $0x3a2$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	e8 5a de ff ff       	call   f01000a0 <_panic>$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102249	obj/kern/kernel.asm	/^f0102249:	6a 00                	push   $0x0$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	e8 75 f2 ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f010225b	obj/kern/kernel.asm	/^f010225b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	75 19                	jne    f010227c <mem_init+0xabb>$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	68 c0 5c 10 f0       	push   $0xf0105cc0$/;"	l
f0102268	obj/kern/kernel.asm	/^f0102268:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f010226d	obj/kern/kernel.asm	/^f010226d:	68 a3 03 00 00       	push   $0x3a3$/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	e8 24 de ff ff       	call   f01000a0 <_panic>$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	6a 00                	push   $0x0$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f010228c	obj/kern/kernel.asm	/^f010228c:	e8 3f f2 ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	74 19                	je     f01022b2 <mem_init+0xaf1>$/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	68 f4 5c 10 f0       	push   $0xf0105cf4$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	68 a4 03 00 00       	push   $0x3a4$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01022ad	obj/kern/kernel.asm	/^f01022ad:	e8 ee dd ff ff       	call   f01000a0 <_panic>$/;"	l
f01022b2	obj/kern/kernel.asm	/^f01022b2:	6a 02                	push   $0x2$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	68 00 00 40 00       	push   $0x400000$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f01022c2	obj/kern/kernel.asm	/^f01022c2:	e8 99 f4 ff ff       	call   f0101760 <page_insert>$/;"	l
f01022c7	obj/kern/kernel.asm	/^f01022c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022ca	obj/kern/kernel.asm	/^f01022ca:	85 c0                	test   %eax,%eax$/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	78 19                	js     f01022e7 <mem_init+0xb26>$/;"	l
f01022ce	obj/kern/kernel.asm	/^f01022ce:	68 2c 5d 10 f0       	push   $0xf0105d2c$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	68 a7 03 00 00       	push   $0x3a7$/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	e8 b9 dd ff ff       	call   f01000a0 <_panic>$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	6a 02                	push   $0x2$/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	68 00 10 00 00       	push   $0x1000$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	53                   	push   %ebx$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	e8 66 f4 ff ff       	call   f0101760 <page_insert>$/;"	l
f01022fa	obj/kern/kernel.asm	/^f01022fa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	85 c0                	test   %eax,%eax$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	74 19                	je     f010231a <mem_init+0xb59>$/;"	l
f0102301	obj/kern/kernel.asm	/^f0102301:	68 64 5d 10 f0       	push   $0xf0105d64$/;"	l
f0102306	obj/kern/kernel.asm	/^f0102306:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	68 aa 03 00 00       	push   $0x3aa$/;"	l
f0102310	obj/kern/kernel.asm	/^f0102310:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102315	obj/kern/kernel.asm	/^f0102315:	e8 86 dd ff ff       	call   f01000a0 <_panic>$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	6a 00                	push   $0x0$/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102324	obj/kern/kernel.asm	/^f0102324:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	e8 a1 f1 ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102335	obj/kern/kernel.asm	/^f0102335:	74 19                	je     f0102350 <mem_init+0xb8f>$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	68 f4 5c 10 f0       	push   $0xf0105cf4$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	68 ab 03 00 00       	push   $0x3ab$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	e8 50 dd ff ff       	call   f01000a0 <_panic>$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	8b 3d 8c 6b 18 f0    	mov    0xf0186b8c,%edi$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	89 f8                	mov    %edi,%eax$/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	e8 90 ec ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	89 c1                	mov    %eax,%ecx$/;"	l
f0102364	obj/kern/kernel.asm	/^f0102364:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	89 d8                	mov    %ebx,%eax$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102372	obj/kern/kernel.asm	/^f0102372:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	39 c1                	cmp    %eax,%ecx$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	74 19                	je     f0102392 <mem_init+0xbd1>$/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	68 a0 5d 10 f0       	push   $0xf0105da0$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102383	obj/kern/kernel.asm	/^f0102383:	68 ae 03 00 00       	push   $0x3ae$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	e8 0e dd ff ff       	call   f01000a0 <_panic>$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	89 f8                	mov    %edi,%eax$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	e8 54 ec ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	74 19                	je     f01023bc <mem_init+0xbfb>$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	68 cc 5d 10 f0       	push   $0xf0105dcc$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	68 af 03 00 00       	push   $0x3af$/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01023b7	obj/kern/kernel.asm	/^f01023b7:	e8 e4 dc ff ff       	call   f01000a0 <_panic>$/;"	l
f01023bc	obj/kern/kernel.asm	/^f01023bc:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	74 19                	je     f01023dc <mem_init+0xc1b>$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	68 ce 62 10 f0       	push   $0xf01062ce$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	68 b1 03 00 00       	push   $0x3b1$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	e8 c4 dc ff ff       	call   f01000a0 <_panic>$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	74 19                	je     f01023fc <mem_init+0xc3b>$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	68 df 62 10 f0       	push   $0xf01062df$/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01023ed	obj/kern/kernel.asm	/^f01023ed:	68 b2 03 00 00       	push   $0x3b2$/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01023f7	obj/kern/kernel.asm	/^f01023f7:	e8 a4 dc ff ff       	call   f01000a0 <_panic>$/;"	l
f01023fc	obj/kern/kernel.asm	/^f01023fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01023ff	obj/kern/kernel.asm	/^f01023ff:	6a 00                	push   $0x0$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	e8 db ef ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0102406	obj/kern/kernel.asm	/^f0102406:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	85 c0                	test   %eax,%eax$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	74 04                	je     f0102411 <mem_init+0xc50>$/;"	l
f010240d	obj/kern/kernel.asm	/^f010240d:	39 c6                	cmp    %eax,%esi$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	74 19                	je     f010242a <mem_init+0xc69>$/;"	l
f0102411	obj/kern/kernel.asm	/^f0102411:	68 fc 5d 10 f0       	push   $0xf0105dfc$/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f010241b	obj/kern/kernel.asm	/^f010241b:	68 b5 03 00 00       	push   $0x3b5$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102425	obj/kern/kernel.asm	/^f0102425:	e8 76 dc ff ff       	call   f01000a0 <_panic>$/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010242d	obj/kern/kernel.asm	/^f010242d:	6a 00                	push   $0x0$/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	e8 eb f2 ff ff       	call   f0101725 <page_remove>$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	8b 3d 8c 6b 18 f0    	mov    0xf0186b8c,%edi$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102445	obj/kern/kernel.asm	/^f0102445:	89 f8                	mov    %edi,%eax$/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	e8 a6 eb ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102452	obj/kern/kernel.asm	/^f0102452:	74 19                	je     f010246d <mem_init+0xcac>$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	68 20 5e 10 f0       	push   $0xf0105e20$/;"	l
f0102459	obj/kern/kernel.asm	/^f0102459:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f010245e	obj/kern/kernel.asm	/^f010245e:	68 b9 03 00 00       	push   $0x3b9$/;"	l
f0102463	obj/kern/kernel.asm	/^f0102463:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	e8 33 dc ff ff       	call   f01000a0 <_panic>$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	89 f8                	mov    %edi,%eax$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	e8 79 eb ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0102479	obj/kern/kernel.asm	/^f0102479:	89 da                	mov    %ebx,%edx$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	2b 15 90 6b 18 f0    	sub    0xf0186b90,%edx$/;"	l
f0102481	obj/kern/kernel.asm	/^f0102481:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	39 d0                	cmp    %edx,%eax$/;"	l
f0102489	obj/kern/kernel.asm	/^f0102489:	74 19                	je     f01024a4 <mem_init+0xce3>$/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	68 cc 5d 10 f0       	push   $0xf0105dcc$/;"	l
f0102490	obj/kern/kernel.asm	/^f0102490:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	68 ba 03 00 00       	push   $0x3ba$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	e8 fc db ff ff       	call   f01000a0 <_panic>$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	74 19                	je     f01024c4 <mem_init+0xd03>$/;"	l
f01024ab	obj/kern/kernel.asm	/^f01024ab:	68 85 62 10 f0       	push   $0xf0106285$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01024b5	obj/kern/kernel.asm	/^f01024b5:	68 bb 03 00 00       	push   $0x3bb$/;"	l
f01024ba	obj/kern/kernel.asm	/^f01024ba:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01024bf	obj/kern/kernel.asm	/^f01024bf:	e8 dc db ff ff       	call   f01000a0 <_panic>$/;"	l
f01024c4	obj/kern/kernel.asm	/^f01024c4:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	74 19                	je     f01024e4 <mem_init+0xd23>$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	68 df 62 10 f0       	push   $0xf01062df$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	68 bc 03 00 00       	push   $0x3bc$/;"	l
f01024da	obj/kern/kernel.asm	/^f01024da:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	e8 bc db ff ff       	call   f01000a0 <_panic>$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	6a 00                	push   $0x0$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	68 00 10 00 00       	push   $0x1000$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	53                   	push   %ebx$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	57                   	push   %edi$/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	e8 6e f2 ff ff       	call   f0101760 <page_insert>$/;"	l
f01024f2	obj/kern/kernel.asm	/^f01024f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	85 c0                	test   %eax,%eax$/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	74 19                	je     f0102512 <mem_init+0xd51>$/;"	l
f01024f9	obj/kern/kernel.asm	/^f01024f9:	68 44 5e 10 f0       	push   $0xf0105e44$/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102503	obj/kern/kernel.asm	/^f0102503:	68 bf 03 00 00       	push   $0x3bf$/;"	l
f0102508	obj/kern/kernel.asm	/^f0102508:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	e8 8e db ff ff       	call   f01000a0 <_panic>$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	75 19                	jne    f0102532 <mem_init+0xd71>$/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	68 f0 62 10 f0       	push   $0xf01062f0$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102523	obj/kern/kernel.asm	/^f0102523:	68 c0 03 00 00       	push   $0x3c0$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010252d	obj/kern/kernel.asm	/^f010252d:	e8 6e db ff ff       	call   f01000a0 <_panic>$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	74 19                	je     f0102550 <mem_init+0xd8f>$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	68 fc 62 10 f0       	push   $0xf01062fc$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102541	obj/kern/kernel.asm	/^f0102541:	68 c1 03 00 00       	push   $0x3c1$/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	e8 50 db ff ff       	call   f01000a0 <_panic>$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f010255e	obj/kern/kernel.asm	/^f010255e:	e8 c2 f1 ff ff       	call   f0101725 <page_remove>$/;"	l
f0102563	obj/kern/kernel.asm	/^f0102563:	8b 3d 8c 6b 18 f0    	mov    0xf0186b8c,%edi$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010256e	obj/kern/kernel.asm	/^f010256e:	89 f8                	mov    %edi,%eax$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	e8 7d ea ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102578	obj/kern/kernel.asm	/^f0102578:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	74 19                	je     f0102596 <mem_init+0xdd5>$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	68 20 5e 10 f0       	push   $0xf0105e20$/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	68 c5 03 00 00       	push   $0x3c5$/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	e8 0a db ff ff       	call   f01000a0 <_panic>$/;"	l
f0102596	obj/kern/kernel.asm	/^f0102596:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	89 f8                	mov    %edi,%eax$/;"	l
f010259d	obj/kern/kernel.asm	/^f010259d:	e8 50 ea ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f01025a2	obj/kern/kernel.asm	/^f01025a2:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01025a5	obj/kern/kernel.asm	/^f01025a5:	74 19                	je     f01025c0 <mem_init+0xdff>$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	68 7c 5e 10 f0       	push   $0xf0105e7c$/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01025b1	obj/kern/kernel.asm	/^f01025b1:	68 c6 03 00 00       	push   $0x3c6$/;"	l
f01025b6	obj/kern/kernel.asm	/^f01025b6:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01025bb	obj/kern/kernel.asm	/^f01025bb:	e8 e0 da ff ff       	call   f01000a0 <_panic>$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01025c5	obj/kern/kernel.asm	/^f01025c5:	74 19                	je     f01025e0 <mem_init+0xe1f>$/;"	l
f01025c7	obj/kern/kernel.asm	/^f01025c7:	68 11 63 10 f0       	push   $0xf0106311$/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	68 c7 03 00 00       	push   $0x3c7$/;"	l
f01025d6	obj/kern/kernel.asm	/^f01025d6:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	e8 c0 da ff ff       	call   f01000a0 <_panic>$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01025e5	obj/kern/kernel.asm	/^f01025e5:	74 19                	je     f0102600 <mem_init+0xe3f>$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	68 df 62 10 f0       	push   $0xf01062df$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	68 c8 03 00 00       	push   $0x3c8$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	e8 a0 da ff ff       	call   f01000a0 <_panic>$/;"	l
f0102600	obj/kern/kernel.asm	/^f0102600:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	6a 00                	push   $0x0$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	e8 d7 ed ff ff       	call   f01013e1 <page_alloc>$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	75 04                	jne    f0102615 <mem_init+0xe54>$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	85 c0                	test   %eax,%eax$/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	75 19                	jne    f010262e <mem_init+0xe6d>$/;"	l
f0102615	obj/kern/kernel.asm	/^f0102615:	68 a4 5e 10 f0       	push   $0xf0105ea4$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	68 cb 03 00 00       	push   $0x3cb$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	e8 72 da ff ff       	call   f01000a0 <_panic>$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	6a 00                	push   $0x0$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	e8 a9 ed ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	83 c4 10             	add    $0x10,%esp$/;"	l
f010263b	obj/kern/kernel.asm	/^f010263b:	85 c0                	test   %eax,%eax$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	74 19                	je     f0102658 <mem_init+0xe97>$/;"	l
f010263f	obj/kern/kernel.asm	/^f010263f:	68 33 62 10 f0       	push   $0xf0106233$/;"	l
f0102644	obj/kern/kernel.asm	/^f0102644:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102649	obj/kern/kernel.asm	/^f0102649:	68 ce 03 00 00       	push   $0x3ce$/;"	l
f010264e	obj/kern/kernel.asm	/^f010264e:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	e8 48 da ff ff       	call   f01000a0 <_panic>$/;"	l
f0102658	obj/kern/kernel.asm	/^f0102658:	8b 0d 8c 6b 18 f0    	mov    0xf0186b8c,%ecx$/;"	l
f010265e	obj/kern/kernel.asm	/^f010265e:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102660	obj/kern/kernel.asm	/^f0102660:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102669	obj/kern/kernel.asm	/^f0102669:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f010266f	obj/kern/kernel.asm	/^f010266f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102672	obj/kern/kernel.asm	/^f0102672:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	39 c2                	cmp    %eax,%edx$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	74 19                	je     f0102692 <mem_init+0xed1>$/;"	l
f0102679	obj/kern/kernel.asm	/^f0102679:	68 48 5b 10 f0       	push   $0xf0105b48$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	68 d1 03 00 00       	push   $0x3d1$/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	e8 0e da ff ff       	call   f01000a0 <_panic>$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	74 19                	je     f01026bb <mem_init+0xefa>$/;"	l
f01026a2	obj/kern/kernel.asm	/^f01026a2:	68 96 62 10 f0       	push   $0xf0106296$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01026ac	obj/kern/kernel.asm	/^f01026ac:	68 d3 03 00 00       	push   $0x3d3$/;"	l
f01026b1	obj/kern/kernel.asm	/^f01026b1:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01026b6	obj/kern/kernel.asm	/^f01026b6:	e8 e5 d9 ff ff       	call   f01000a0 <_panic>$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01026c4	obj/kern/kernel.asm	/^f01026c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	50                   	push   %eax$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	e8 84 ed ff ff       	call   f0101451 <page_free>$/;"	l
f01026cd	obj/kern/kernel.asm	/^f01026cd:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01026d0	obj/kern/kernel.asm	/^f01026d0:	6a 01                	push   $0x1$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	68 00 10 40 00       	push   $0x401000$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f01026dd	obj/kern/kernel.asm	/^f01026dd:	e8 ee ed ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f01026e2	obj/kern/kernel.asm	/^f01026e2:	89 c7                	mov    %eax,%edi$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01026e7	obj/kern/kernel.asm	/^f01026e7:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	8b 0d 88 6b 18 f0    	mov    0xf0186b88,%ecx$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	89 c2                	mov    %eax,%edx$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	39 ca                	cmp    %ecx,%edx$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	72 15                	jb     f010271e <mem_init+0xf5d>$/;"	l
f0102709	obj/kern/kernel.asm	/^f0102709:	50                   	push   %eax$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	68 da 03 00 00       	push   $0x3da$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	e8 82 d9 ff ff       	call   f01000a0 <_panic>$/;"	l
f010271e	obj/kern/kernel.asm	/^f010271e:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	39 c7                	cmp    %eax,%edi$/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	74 19                	je     f0102740 <mem_init+0xf7f>$/;"	l
f0102727	obj/kern/kernel.asm	/^f0102727:	68 22 63 10 f0       	push   $0xf0106322$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102731	obj/kern/kernel.asm	/^f0102731:	68 db 03 00 00       	push   $0x3db$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	e8 60 d9 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102743	obj/kern/kernel.asm	/^f0102743:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f0102759	obj/kern/kernel.asm	/^f0102759:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	89 c2                	mov    %eax,%edx$/;"	l
f0102761	obj/kern/kernel.asm	/^f0102761:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	77 12                	ja     f010277a <mem_init+0xfb9>$/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	50                   	push   %eax$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	6a 56                	push   $0x56$/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0102775	obj/kern/kernel.asm	/^f0102775:	e8 26 d9 ff ff       	call   f01000a0 <_panic>$/;"	l
f010277a	obj/kern/kernel.asm	/^f010277a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010277d	obj/kern/kernel.asm	/^f010277d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102782	obj/kern/kernel.asm	/^f0102782:	68 ff 00 00 00       	push   $0xff$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010278c	obj/kern/kernel.asm	/^f010278c:	50                   	push   %eax$/;"	l
f010278d	obj/kern/kernel.asm	/^f010278d:	e8 89 23 00 00       	call   f0104b1b <memset>$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	e8 b4 ec ff ff       	call   f0101451 <page_free>$/;"	l
f010279d	obj/kern/kernel.asm	/^f010279d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01027a0	obj/kern/kernel.asm	/^f01027a0:	6a 01                	push   $0x1$/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	6a 00                	push   $0x0$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	e8 21 ed ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	89 fa                	mov    %edi,%edx$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	2b 15 90 6b 18 f0    	sub    0xf0186b90,%edx$/;"	l
f01027b7	obj/kern/kernel.asm	/^f01027b7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01027ba	obj/kern/kernel.asm	/^f01027ba:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01027bd	obj/kern/kernel.asm	/^f01027bd:	89 d0                	mov    %edx,%eax$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01027c2	obj/kern/kernel.asm	/^f01027c2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01027c5	obj/kern/kernel.asm	/^f01027c5:	3b 05 88 6b 18 f0    	cmp    0xf0186b88,%eax$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	72 12                	jb     f01027df <mem_init+0x101e>$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	52                   	push   %edx$/;"	l
f01027ce	obj/kern/kernel.asm	/^f01027ce:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	6a 56                	push   $0x56$/;"	l
f01027d5	obj/kern/kernel.asm	/^f01027d5:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	e8 c1 d8 ff ff       	call   f01000a0 <_panic>$/;"	l
f01027df	obj/kern/kernel.asm	/^f01027df:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01027e8	obj/kern/kernel.asm	/^f01027e8:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01027ee	obj/kern/kernel.asm	/^f01027ee:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	74 19                	je     f010280c <mem_init+0x104b>$/;"	l
f01027f3	obj/kern/kernel.asm	/^f01027f3:	68 3a 63 10 f0       	push   $0xf010633a$/;"	l
f01027f8	obj/kern/kernel.asm	/^f01027f8:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	68 e5 03 00 00       	push   $0x3e5$/;"	l
f0102802	obj/kern/kernel.asm	/^f0102802:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102807	obj/kern/kernel.asm	/^f0102807:	e8 94 d8 ff ff       	call   f01000a0 <_panic>$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	83 c0 04             	add    $0x4,%eax$/;"	l
f010280f	obj/kern/kernel.asm	/^f010280f:	39 c2                	cmp    %eax,%edx$/;"	l
f0102811	obj/kern/kernel.asm	/^f0102811:	75 db                	jne    f01027ee <mem_init+0x102d>$/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f0102818	obj/kern/kernel.asm	/^f0102818:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102821	obj/kern/kernel.asm	/^f0102821:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f010282a	obj/kern/kernel.asm	/^f010282a:	89 3d c4 5e 18 f0    	mov    %edi,0xf0185ec4$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	50                   	push   %eax$/;"	l
f0102834	obj/kern/kernel.asm	/^f0102834:	e8 18 ec ff ff       	call   f0101451 <page_free>$/;"	l
f0102839	obj/kern/kernel.asm	/^f0102839:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	e8 10 ec ff ff       	call   f0101451 <page_free>$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	e8 08 ec ff ff       	call   f0101451 <page_free>$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	c7 04 24 51 63 10 f0 	movl   $0xf0106351,(%esp)$/;"	l
f0102850	obj/kern/kernel.asm	/^f0102850:	e8 7b 0e 00 00       	call   f01036d0 <cprintf>$/;"	l
f0102855	obj/kern/kernel.asm	/^f0102855:	a1 90 6b 18 f0       	mov    0xf0186b90,%eax$/;"	l
f010285a	obj/kern/kernel.asm	/^f010285a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	77 15                	ja     f0102879 <mem_init+0x10b8>$/;"	l
f0102864	obj/kern/kernel.asm	/^f0102864:	50                   	push   %eax$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	68 d3 00 00 00       	push   $0xd3$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874:	e8 27 d8 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	8b 15 88 6b 18 f0    	mov    0xf0186b88,%edx$/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	6a 05                	push   $0x5$/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	50                   	push   %eax$/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f010289c	obj/kern/kernel.asm	/^f010289c:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f01028a1	obj/kern/kernel.asm	/^f01028a1:	e8 08 ed ff ff       	call   f01015ae <boot_map_region>$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	a1 d0 5e 18 f0       	mov    0xf0185ed0,%eax$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	83 c4 10             	add    $0x10,%esp$/;"	l
f01028ae	obj/kern/kernel.asm	/^f01028ae:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	77 15                	ja     f01028ca <mem_init+0x1109>$/;"	l
f01028b5	obj/kern/kernel.asm	/^f01028b5:	50                   	push   %eax$/;"	l
f01028b6	obj/kern/kernel.asm	/^f01028b6:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	68 de 00 00 00       	push   $0xde$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01028c5	obj/kern/kernel.asm	/^f01028c5:	e8 d6 d7 ff ff       	call   f01000a0 <_panic>$/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01028cd	obj/kern/kernel.asm	/^f01028cd:	6a 05                	push   $0x5$/;"	l
f01028cf	obj/kern/kernel.asm	/^f01028cf:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	50                   	push   %eax$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	b9 00 80 01 00       	mov    $0x18000,%ecx$/;"	l
f01028da	obj/kern/kernel.asm	/^f01028da:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f01028df	obj/kern/kernel.asm	/^f01028df:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f01028e4	obj/kern/kernel.asm	/^f01028e4:	e8 c5 ec ff ff       	call   f01015ae <boot_map_region>$/;"	l
f01028e9	obj/kern/kernel.asm	/^f01028e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	b8 00 20 11 f0       	mov    $0xf0112000,%eax$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01028f6	obj/kern/kernel.asm	/^f01028f6:	77 15                	ja     f010290d <mem_init+0x114c>$/;"	l
f01028f8	obj/kern/kernel.asm	/^f01028f8:	50                   	push   %eax$/;"	l
f01028f9	obj/kern/kernel.asm	/^f01028f9:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	68 ec 00 00 00       	push   $0xec$/;"	l
f0102903	obj/kern/kernel.asm	/^f0102903:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102908	obj/kern/kernel.asm	/^f0102908:	e8 93 d7 ff ff       	call   f01000a0 <_panic>$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	6a 03                	push   $0x3$/;"	l
f0102912	obj/kern/kernel.asm	/^f0102912:	68 00 20 11 00       	push   $0x112000$/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f010291c	obj/kern/kernel.asm	/^f010291c:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102921	obj/kern/kernel.asm	/^f0102921:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f0102926	obj/kern/kernel.asm	/^f0102926:	e8 83 ec ff ff       	call   f01015ae <boot_map_region>$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	83 c4 08             	add    $0x8,%esp$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	6a 03                	push   $0x3$/;"	l
f0102930	obj/kern/kernel.asm	/^f0102930:	6a 00                	push   $0x0$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f010293c	obj/kern/kernel.asm	/^f010293c:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f0102941	obj/kern/kernel.asm	/^f0102941:	e8 68 ec ff ff       	call   f01015ae <boot_map_region>$/;"	l
f0102946	obj/kern/kernel.asm	/^f0102946:	8b 1d 8c 6b 18 f0    	mov    0xf0186b8c,%ebx$/;"	l
f010294c	obj/kern/kernel.asm	/^f010294c:	a1 88 6b 18 f0       	mov    0xf0186b88,%eax$/;"	l
f0102951	obj/kern/kernel.asm	/^f0102951:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f010295b	obj/kern/kernel.asm	/^f010295b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102960	obj/kern/kernel.asm	/^f0102960:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102963	obj/kern/kernel.asm	/^f0102963:	8b 3d 90 6b 18 f0    	mov    0xf0186b90,%edi$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f010296c	obj/kern/kernel.asm	/^f010296c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	eb 55                	jmp    f01029cb <mem_init+0x120a>$/;"	l
f0102976	obj/kern/kernel.asm	/^f0102976:	8d 96 00 00 00 ef    	lea    -0x11000000(%esi),%edx$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	89 d8                	mov    %ebx,%eax$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	e8 6f e6 ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f010298a	obj/kern/kernel.asm	/^f010298a:	77 15                	ja     f01029a1 <mem_init+0x11e0>$/;"	l
f010298c	obj/kern/kernel.asm	/^f010298c:	57                   	push   %edi$/;"	l
f010298d	obj/kern/kernel.asm	/^f010298d:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f0102992	obj/kern/kernel.asm	/^f0102992:	68 1e 03 00 00       	push   $0x31e$/;"	l
f0102997	obj/kern/kernel.asm	/^f0102997:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f010299c	obj/kern/kernel.asm	/^f010299c:	e8 ff d6 ff ff       	call   f01000a0 <_panic>$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	8d 94 37 00 00 00 10 	lea    0x10000000(%edi,%esi,1),%edx$/;"	l
f01029a8	obj/kern/kernel.asm	/^f01029a8:	39 d0                	cmp    %edx,%eax$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	74 19                	je     f01029c5 <mem_init+0x1204>$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	68 c8 5e 10 f0       	push   $0xf0105ec8$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	68 1e 03 00 00       	push   $0x31e$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	e8 db d6 ff ff       	call   f01000a0 <_panic>$/;"	l
f01029c5	obj/kern/kernel.asm	/^f01029c5:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01029cb	obj/kern/kernel.asm	/^f01029cb:	39 75 d4             	cmp    %esi,-0x2c(%ebp)$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	77 a6                	ja     f0102976 <mem_init+0x11b5>$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	8b 3d d0 5e 18 f0    	mov    0xf0185ed0,%edi$/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	be 00 00 c0 ee       	mov    $0xeec00000,%esi$/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	89 f2                	mov    %esi,%edx$/;"	l
f01029e0	obj/kern/kernel.asm	/^f01029e0:	89 d8                	mov    %ebx,%eax$/;"	l
f01029e2	obj/kern/kernel.asm	/^f01029e2:	e8 0b e6 ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f01029ee	obj/kern/kernel.asm	/^f01029ee:	77 15                	ja     f0102a05 <mem_init+0x1244>$/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	57                   	push   %edi$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f01029f6	obj/kern/kernel.asm	/^f01029f6:	68 23 03 00 00       	push   $0x323$/;"	l
f01029fb	obj/kern/kernel.asm	/^f01029fb:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	e8 9b d6 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	8d 94 37 00 00 40 21 	lea    0x21400000(%edi,%esi,1),%edx$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	39 c2                	cmp    %eax,%edx$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	74 19                	je     f0102a29 <mem_init+0x1268>$/;"	l
f0102a10	obj/kern/kernel.asm	/^f0102a10:	68 fc 5e 10 f0       	push   $0xf0105efc$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102a1a	obj/kern/kernel.asm	/^f0102a1a:	68 23 03 00 00       	push   $0x323$/;"	l
f0102a1f	obj/kern/kernel.asm	/^f0102a1f:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	e8 77 d6 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102a29	obj/kern/kernel.asm	/^f0102a29:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102a2f	obj/kern/kernel.asm	/^f0102a2f:	81 fe 00 80 c1 ee    	cmp    $0xeec18000,%esi$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	75 a7                	jne    f01029de <mem_init+0x121d>$/;"	l
f0102a37	obj/kern/kernel.asm	/^f0102a37:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	eb 30                	jmp    f0102a74 <mem_init+0x12b3>$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	8d 96 00 00 00 f0    	lea    -0x10000000(%esi),%edx$/;"	l
f0102a4a	obj/kern/kernel.asm	/^f0102a4a:	89 d8                	mov    %ebx,%eax$/;"	l
f0102a4c	obj/kern/kernel.asm	/^f0102a4c:	e8 a1 e5 ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0102a51	obj/kern/kernel.asm	/^f0102a51:	39 c6                	cmp    %eax,%esi$/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	74 19                	je     f0102a6e <mem_init+0x12ad>$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	68 30 5f 10 f0       	push   $0xf0105f30$/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	68 27 03 00 00       	push   $0x327$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	e8 32 d6 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102a74	obj/kern/kernel.asm	/^f0102a74:	39 fe                	cmp    %edi,%esi$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	72 cc                	jb     f0102a44 <mem_init+0x1283>$/;"	l
f0102a78	obj/kern/kernel.asm	/^f0102a78:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	89 f2                	mov    %esi,%edx$/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	89 d8                	mov    %ebx,%eax$/;"	l
f0102a81	obj/kern/kernel.asm	/^f0102a81:	e8 6c e5 ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0102a86	obj/kern/kernel.asm	/^f0102a86:	8d 96 00 a0 11 10    	lea    0x1011a000(%esi),%edx$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	39 c2                	cmp    %eax,%edx$/;"	l
f0102a8e	obj/kern/kernel.asm	/^f0102a8e:	74 19                	je     f0102aa9 <mem_init+0x12e8>$/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	68 58 5f 10 f0       	push   $0xf0105f58$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	68 2b 03 00 00       	push   $0x32b$/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102aa4	obj/kern/kernel.asm	/^f0102aa4:	e8 f7 d5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102aa9	obj/kern/kernel.asm	/^f0102aa9:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	81 fe 00 00 00 f0    	cmp    $0xf0000000,%esi$/;"	l
f0102ab5	obj/kern/kernel.asm	/^f0102ab5:	75 c6                	jne    f0102a7d <mem_init+0x12bc>$/;"	l
f0102ab7	obj/kern/kernel.asm	/^f0102ab7:	ba 00 00 c0 ef       	mov    $0xefc00000,%edx$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	89 d8                	mov    %ebx,%eax$/;"	l
f0102abe	obj/kern/kernel.asm	/^f0102abe:	e8 2f e5 ff ff       	call   f0100ff2 <check_va2pa>$/;"	l
f0102ac3	obj/kern/kernel.asm	/^f0102ac3:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102ac6	obj/kern/kernel.asm	/^f0102ac6:	74 51                	je     f0102b19 <mem_init+0x1358>$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	68 a0 5f 10 f0       	push   $0xf0105fa0$/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102ad2	obj/kern/kernel.asm	/^f0102ad2:	68 2c 03 00 00       	push   $0x32c$/;"	l
f0102ad7	obj/kern/kernel.asm	/^f0102ad7:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102adc	obj/kern/kernel.asm	/^f0102adc:	e8 bf d5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	72 36                	jb     f0102b1e <mem_init+0x135d>$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	3d bd 03 00 00       	cmp    $0x3bd,%eax$/;"	l
f0102aed	obj/kern/kernel.asm	/^f0102aed:	76 07                	jbe    f0102af6 <mem_init+0x1335>$/;"	l
f0102aef	obj/kern/kernel.asm	/^f0102aef:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102af4	obj/kern/kernel.asm	/^f0102af4:	75 28                	jne    f0102b1e <mem_init+0x135d>$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	f6 04 83 01          	testb  $0x1,(%ebx,%eax,4)$/;"	l
f0102afa	obj/kern/kernel.asm	/^f0102afa:	0f 85 83 00 00 00    	jne    f0102b83 <mem_init+0x13c2>$/;"	l
f0102b00	obj/kern/kernel.asm	/^f0102b00:	68 6a 63 10 f0       	push   $0xf010636a$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102b0a	obj/kern/kernel.asm	/^f0102b0a:	68 35 03 00 00       	push   $0x335$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102b14	obj/kern/kernel.asm	/^f0102b14:	e8 87 d5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102b19	obj/kern/kernel.asm	/^f0102b19:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102b23	obj/kern/kernel.asm	/^f0102b23:	76 3f                	jbe    f0102b64 <mem_init+0x13a3>$/;"	l
f0102b25	obj/kern/kernel.asm	/^f0102b25:	8b 14 83             	mov    (%ebx,%eax,4),%edx$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	75 19                	jne    f0102b46 <mem_init+0x1385>$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	68 6a 63 10 f0       	push   $0xf010636a$/;"	l
f0102b32	obj/kern/kernel.asm	/^f0102b32:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	68 39 03 00 00       	push   $0x339$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	e8 5a d5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	75 38                	jne    f0102b83 <mem_init+0x13c2>$/;"	l
f0102b4b	obj/kern/kernel.asm	/^f0102b4b:	68 7b 63 10 f0       	push   $0xf010637b$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	68 3a 03 00 00       	push   $0x33a$/;"	l
f0102b5a	obj/kern/kernel.asm	/^f0102b5a:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	e8 3c d5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102b64	obj/kern/kernel.asm	/^f0102b64:	83 3c 83 00          	cmpl   $0x0,(%ebx,%eax,4)$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	74 19                	je     f0102b83 <mem_init+0x13c2>$/;"	l
f0102b6a	obj/kern/kernel.asm	/^f0102b6a:	68 8c 63 10 f0       	push   $0xf010638c$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	68 3c 03 00 00       	push   $0x33c$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	e8 1d d5 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	0f 86 50 ff ff ff    	jbe    f0102ae1 <mem_init+0x1320>$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	68 d0 5f 10 f0       	push   $0xf0105fd0$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	e8 32 0b 00 00       	call   f01036d0 <cprintf>$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f0102ba3	obj/kern/kernel.asm	/^f0102ba3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	77 15                	ja     f0102bc2 <mem_init+0x1401>$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	50                   	push   %eax$/;"	l
f0102bae	obj/kern/kernel.asm	/^f0102bae:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	68 04 01 00 00       	push   $0x104$/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	e8 de d4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102bc2	obj/kern/kernel.asm	/^f0102bc2:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102bc7	obj/kern/kernel.asm	/^f0102bc7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102bca	obj/kern/kernel.asm	/^f0102bca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	e8 94 e4 ff ff       	call   f0101068 <check_page_free_list>$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0102bda	obj/kern/kernel.asm	/^f0102bda:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0102be2	obj/kern/kernel.asm	/^f0102be2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102be5	obj/kern/kernel.asm	/^f0102be5:	6a 00                	push   $0x0$/;"	l
f0102be7	obj/kern/kernel.asm	/^f0102be7:	e8 f5 e7 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	89 c3                	mov    %eax,%ebx$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	85 c0                	test   %eax,%eax$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	75 19                	jne    f0102c0e <mem_init+0x144d>$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	68 88 61 10 f0       	push   $0xf0106188$/;"	l
f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	68 00 04 00 00       	push   $0x400$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	e8 92 d4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c11	obj/kern/kernel.asm	/^f0102c11:	6a 00                	push   $0x0$/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	e8 c9 e7 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	89 c7                	mov    %eax,%edi$/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c1d	obj/kern/kernel.asm	/^f0102c1d:	85 c0                	test   %eax,%eax$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	75 19                	jne    f0102c3a <mem_init+0x1479>$/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	68 9e 61 10 f0       	push   $0xf010619e$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	68 01 04 00 00       	push   $0x401$/;"	l
f0102c30	obj/kern/kernel.asm	/^f0102c30:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	e8 66 d4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	6a 00                	push   $0x0$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	e8 9d e7 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	89 c6                	mov    %eax,%esi$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c49	obj/kern/kernel.asm	/^f0102c49:	85 c0                	test   %eax,%eax$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	75 19                	jne    f0102c66 <mem_init+0x14a5>$/;"	l
f0102c4d	obj/kern/kernel.asm	/^f0102c4d:	68 b4 61 10 f0       	push   $0xf01061b4$/;"	l
f0102c52	obj/kern/kernel.asm	/^f0102c52:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	68 02 04 00 00       	push   $0x402$/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102c61	obj/kern/kernel.asm	/^f0102c61:	e8 3a d4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102c66	obj/kern/kernel.asm	/^f0102c66:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	53                   	push   %ebx$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	e8 e2 e7 ff ff       	call   f0101451 <page_free>$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	89 f8                	mov    %edi,%eax$/;"	l
f0102c71	obj/kern/kernel.asm	/^f0102c71:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	89 c2                	mov    %eax,%edx$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	3b 15 88 6b 18 f0    	cmp    0xf0186b88,%edx$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	72 12                	jb     f0102c9f <mem_init+0x14de>$/;"	l
f0102c8d	obj/kern/kernel.asm	/^f0102c8d:	50                   	push   %eax$/;"	l
f0102c8e	obj/kern/kernel.asm	/^f0102c8e:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	6a 56                	push   $0x56$/;"	l
f0102c95	obj/kern/kernel.asm	/^f0102c95:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	e8 01 d4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102c9f	obj/kern/kernel.asm	/^f0102c9f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102ca7	obj/kern/kernel.asm	/^f0102ca7:	6a 01                	push   $0x1$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	50                   	push   %eax$/;"	l
f0102caf	obj/kern/kernel.asm	/^f0102caf:	e8 67 1e 00 00       	call   f0104b1b <memset>$/;"	l
f0102cb4	obj/kern/kernel.asm	/^f0102cb4:	89 f0                	mov    %esi,%eax$/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f0102cbc	obj/kern/kernel.asm	/^f0102cbc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	89 c2                	mov    %eax,%edx$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	3b 15 88 6b 18 f0    	cmp    0xf0186b88,%edx$/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	72 12                	jb     f0102ce4 <mem_init+0x1523>$/;"	l
f0102cd2	obj/kern/kernel.asm	/^f0102cd2:	50                   	push   %eax$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	6a 56                	push   $0x56$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	e8 bc d3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	6a 02                	push   $0x2$/;"	l
f0102cee	obj/kern/kernel.asm	/^f0102cee:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	50                   	push   %eax$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	e8 22 1e 00 00       	call   f0104b1b <memset>$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	6a 02                	push   $0x2$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	57                   	push   %edi$/;"	l
f0102d01	obj/kern/kernel.asm	/^f0102d01:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f0102d07	obj/kern/kernel.asm	/^f0102d07:	e8 54 ea ff ff       	call   f0101760 <page_insert>$/;"	l
f0102d0c	obj/kern/kernel.asm	/^f0102d0c:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102d14	obj/kern/kernel.asm	/^f0102d14:	74 19                	je     f0102d2f <mem_init+0x156e>$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	68 85 62 10 f0       	push   $0xf0106285$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	68 07 04 00 00       	push   $0x407$/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	e8 71 d3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102d2f	obj/kern/kernel.asm	/^f0102d2f:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102d36	obj/kern/kernel.asm	/^f0102d36:	01 01 01 $/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	74 19                	je     f0102d54 <mem_init+0x1593>$/;"	l
f0102d3b	obj/kern/kernel.asm	/^f0102d3b:	68 f0 5f 10 f0       	push   $0xf0105ff0$/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102d45	obj/kern/kernel.asm	/^f0102d45:	68 08 04 00 00       	push   $0x408$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	e8 4c d3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	6a 02                	push   $0x2$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	56                   	push   %esi$/;"	l
f0102d5c	obj/kern/kernel.asm	/^f0102d5c:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	e8 f9 e9 ff ff       	call   f0101760 <page_insert>$/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d6a	obj/kern/kernel.asm	/^f0102d6a:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	02 02 02 $/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	74 19                	je     f0102d8f <mem_init+0x15ce>$/;"	l
f0102d76	obj/kern/kernel.asm	/^f0102d76:	68 14 60 10 f0       	push   $0xf0106014$/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	68 0a 04 00 00       	push   $0x40a$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	e8 11 d3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	74 19                	je     f0102daf <mem_init+0x15ee>$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	68 a7 62 10 f0       	push   $0xf01062a7$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102da0	obj/kern/kernel.asm	/^f0102da0:	68 0b 04 00 00       	push   $0x40b$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102daa	obj/kern/kernel.asm	/^f0102daa:	e8 f1 d2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102db4	obj/kern/kernel.asm	/^f0102db4:	74 19                	je     f0102dcf <mem_init+0x160e>$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	68 11 63 10 f0       	push   $0xf0106311$/;"	l
f0102dbb	obj/kern/kernel.asm	/^f0102dbb:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	68 0c 04 00 00       	push   $0x40c$/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	e8 d1 d2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102dd6	obj/kern/kernel.asm	/^f0102dd6:	03 03 03 $/;"	l
f0102dd9	obj/kern/kernel.asm	/^f0102dd9:	89 f0                	mov    %esi,%eax$/;"	l
f0102ddb	obj/kern/kernel.asm	/^f0102ddb:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102de7	obj/kern/kernel.asm	/^f0102de7:	89 c2                	mov    %eax,%edx$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102dec	obj/kern/kernel.asm	/^f0102dec:	3b 15 88 6b 18 f0    	cmp    0xf0186b88,%edx$/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	72 12                	jb     f0102e06 <mem_init+0x1645>$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	50                   	push   %eax$/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	6a 56                	push   $0x56$/;"	l
f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0102e01	obj/kern/kernel.asm	/^f0102e01:	e8 9a d2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	03 03 03 $/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	74 19                	je     f0102e2b <mem_init+0x166a>$/;"	l
f0102e12	obj/kern/kernel.asm	/^f0102e12:	68 38 60 10 f0       	push   $0xf0106038$/;"	l
f0102e17	obj/kern/kernel.asm	/^f0102e17:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	68 0e 04 00 00       	push   $0x40e$/;"	l
f0102e21	obj/kern/kernel.asm	/^f0102e21:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	e8 75 d2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102e2e	obj/kern/kernel.asm	/^f0102e2e:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102e33	obj/kern/kernel.asm	/^f0102e33:	ff 35 8c 6b 18 f0    	pushl  0xf0186b8c$/;"	l
f0102e39	obj/kern/kernel.asm	/^f0102e39:	e8 e7 e8 ff ff       	call   f0101725 <page_remove>$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e41	obj/kern/kernel.asm	/^f0102e41:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	74 19                	je     f0102e61 <mem_init+0x16a0>$/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	68 df 62 10 f0       	push   $0xf01062df$/;"	l
f0102e4d	obj/kern/kernel.asm	/^f0102e4d:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	68 10 04 00 00       	push   $0x410$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	e8 3f d2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	8b 0d 8c 6b 18 f0    	mov    0xf0186b8c,%ecx$/;"	l
f0102e67	obj/kern/kernel.asm	/^f0102e67:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102e6f	obj/kern/kernel.asm	/^f0102e6f:	89 d8                	mov    %ebx,%eax$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	2b 05 90 6b 18 f0    	sub    0xf0186b90,%eax$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102e7a	obj/kern/kernel.asm	/^f0102e7a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	39 c2                	cmp    %eax,%edx$/;"	l
f0102e7f	obj/kern/kernel.asm	/^f0102e7f:	74 19                	je     f0102e9a <mem_init+0x16d9>$/;"	l
f0102e81	obj/kern/kernel.asm	/^f0102e81:	68 48 5b 10 f0       	push   $0xf0105b48$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	68 13 04 00 00       	push   $0x413$/;"	l
f0102e90	obj/kern/kernel.asm	/^f0102e90:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102e95	obj/kern/kernel.asm	/^f0102e95:	e8 06 d2 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	74 19                	je     f0102ec0 <mem_init+0x16ff>$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	68 96 62 10 f0       	push   $0xf0106296$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	68 15 04 00 00       	push   $0x415$/;"	l
f0102eb6	obj/kern/kernel.asm	/^f0102eb6:	68 c5 60 10 f0       	push   $0xf01060c5$/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	e8 e0 d1 ff ff       	call   f01000a0 <_panic>$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	53                   	push   %ebx$/;"	l
f0102eca	obj/kern/kernel.asm	/^f0102eca:	e8 82 e5 ff ff       	call   f0101451 <page_free>$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	c7 04 24 64 60 10 f0 	movl   $0xf0106064,(%esp)$/;"	l
f0102ed6	obj/kern/kernel.asm	/^f0102ed6:	e8 f5 07 00 00       	call   f01036d0 <cprintf>$/;"	l
f0102edb	obj/kern/kernel.asm	/^f0102edb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	5b                   	pop    %ebx$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	5e                   	pop    %esi$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	5f                   	pop    %edi$/;"	l
f0102ee4	obj/kern/kernel.asm	/^f0102ee4:	5d                   	pop    %ebp$/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	c3                   	ret    $/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6 <tlb_invalidate>:$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	55                   	push   %ebp$/;"	l
f0102ee7	obj/kern/kernel.asm	/^f0102ee7:	89 e5                	mov    %esp,%ebp$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102eec	obj/kern/kernel.asm	/^f0102eec:	0f 01 38             	invlpg (%eax)$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	5d                   	pop    %ebp$/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	c3                   	ret    $/;"	l
f0102ef1	obj/kern/kernel.asm	/^f0102ef1 <user_mem_check>:$/;"	l
f0102ef1	obj/kern/kernel.asm	/^f0102ef1:	55                   	push   %ebp$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	89 e5                	mov    %esp,%ebp$/;"	l
f0102ef4	obj/kern/kernel.asm	/^f0102ef4:	57                   	push   %edi$/;"	l
f0102ef5	obj/kern/kernel.asm	/^f0102ef5:	56                   	push   %esi$/;"	l
f0102ef6	obj/kern/kernel.asm	/^f0102ef6:	53                   	push   %ebx$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0102f00	obj/kern/kernel.asm	/^f0102f00:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102f03	obj/kern/kernel.asm	/^f0102f03:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0102f0c	obj/kern/kernel.asm	/^f0102f0c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102f12	obj/kern/kernel.asm	/^f0102f12:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	76 6b                	jbe    f0102f87 <user_mem_check+0x96>$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	89 1d bc 5e 18 f0    	mov    %ebx,0xf0185ebc$/;"	l
f0102f22	obj/kern/kernel.asm	/^f0102f22:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102f27	obj/kern/kernel.asm	/^f0102f27:	eb 68                	jmp    f0102f91 <user_mem_check+0xa0>$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	76 1c                	jbe    f0102f4d <user_mem_check+0x5c>$/;"	l
f0102f31	obj/kern/kernel.asm	/^f0102f31:	81 7d 0c 00 00 80 ef 	cmpl   $0xef800000,0xc(%ebp)$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	b8 00 00 80 ef       	mov    $0xef800000,%eax$/;"	l
f0102f3d	obj/kern/kernel.asm	/^f0102f3d:	0f 43 45 0c          	cmovae 0xc(%ebp),%eax$/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	a3 bc 5e 18 f0       	mov    %eax,0xf0185ebc$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	eb 44                	jmp    f0102f91 <user_mem_check+0xa0>$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	6a 00                	push   $0x0$/;"	l
f0102f52	obj/kern/kernel.asm	/^f0102f52:	53                   	push   %ebx$/;"	l
f0102f53	obj/kern/kernel.asm	/^f0102f53:	ff 77 5c             	pushl  0x5c(%edi)$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	e8 75 e5 ff ff       	call   f01014d0 <pgdir_walk>$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	85 c0                	test   %eax,%eax$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	74 0c                	je     f0102f6e <user_mem_check+0x7d>$/;"	l
f0102f62	obj/kern/kernel.asm	/^f0102f62:	8b 00                	mov    (%eax),%eax$/;"	l
f0102f64	obj/kern/kernel.asm	/^f0102f64:	a8 01                	test   $0x1,%al$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	74 06                	je     f0102f6e <user_mem_check+0x7d>$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	21 f0                	and    %esi,%eax$/;"	l
f0102f6a	obj/kern/kernel.asm	/^f0102f6a:	39 c6                	cmp    %eax,%esi$/;"	l
f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	74 0d                	je     f0102f7b <user_mem_check+0x8a>$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	89 1d bc 5e 18 f0    	mov    %ebx,0xf0185ebc$/;"	l
f0102f74	obj/kern/kernel.asm	/^f0102f74:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	eb 16                	jmp    f0102f91 <user_mem_check+0xa0>$/;"	l
f0102f7b	obj/kern/kernel.asm	/^f0102f7b:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102f87	obj/kern/kernel.asm	/^f0102f87:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	72 9d                	jb     f0102f29 <user_mem_check+0x38>$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	5b                   	pop    %ebx$/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	5e                   	pop    %esi$/;"	l
f0102f96	obj/kern/kernel.asm	/^f0102f96:	5f                   	pop    %edi$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	5d                   	pop    %ebp$/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	c3                   	ret    $/;"	l
f0102f99	obj/kern/kernel.asm	/^f0102f99 <user_mem_assert>:$/;"	l
f0102f99	obj/kern/kernel.asm	/^f0102f99:	55                   	push   %ebp$/;"	l
f0102f9a	obj/kern/kernel.asm	/^f0102f9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	53                   	push   %ebx$/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	50                   	push   %eax$/;"	l
f0102faa	obj/kern/kernel.asm	/^f0102faa:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	53                   	push   %ebx$/;"	l
f0102fb1	obj/kern/kernel.asm	/^f0102fb1:	e8 3b ff ff ff       	call   f0102ef1 <user_mem_check>$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	85 c0                	test   %eax,%eax$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	79 21                	jns    f0102fde <user_mem_assert+0x45>$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	ff 35 bc 5e 18 f0    	pushl  0xf0185ebc$/;"	l
f0102fc6	obj/kern/kernel.asm	/^f0102fc6:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	68 90 60 10 f0       	push   $0xf0106090$/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	e8 fd 06 00 00       	call   f01036d0 <cprintf>$/;"	l
f0102fd3	obj/kern/kernel.asm	/^f0102fd3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102fd6	obj/kern/kernel.asm	/^f0102fd6:	e8 dc 05 00 00       	call   f01035b7 <env_destroy>$/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102fde	obj/kern/kernel.asm	/^f0102fde:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	c9                   	leave  $/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	c3                   	ret    $/;"	l
f0102fe3	obj/kern/kernel.asm	/^f0102fe3 <region_alloc>:$/;"	l
f0102fe3	obj/kern/kernel.asm	/^f0102fe3:	55                   	push   %ebp$/;"	l
f0102fe4	obj/kern/kernel.asm	/^f0102fe4:	89 e5                	mov    %esp,%ebp$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	57                   	push   %edi$/;"	l
f0102fe7	obj/kern/kernel.asm	/^f0102fe7:	56                   	push   %esi$/;"	l
f0102fe8	obj/kern/kernel.asm	/^f0102fe8:	53                   	push   %ebx$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	89 c7                	mov    %eax,%edi$/;"	l
f0102fee	obj/kern/kernel.asm	/^f0102fee:	89 d3                	mov    %edx,%ebx$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102ff6	obj/kern/kernel.asm	/^f0102ff6:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	eb 56                	jmp    f010305b <region_alloc+0x78>$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103008	obj/kern/kernel.asm	/^f0103008:	6a 00                	push   $0x0$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	e8 d2 e3 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103012	obj/kern/kernel.asm	/^f0103012:	85 c0                	test   %eax,%eax$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	75 17                	jne    f010302d <region_alloc+0x4a>$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	68 9a 63 10 f0       	push   $0xf010639a$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	68 21 01 00 00       	push   $0x121$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	e8 73 d0 ff ff       	call   f01000a0 <_panic>$/;"	l
f010302d	obj/kern/kernel.asm	/^f010302d:	6a 06                	push   $0x6$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	53                   	push   %ebx$/;"	l
f0103030	obj/kern/kernel.asm	/^f0103030:	50                   	push   %eax$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	ff 77 5c             	pushl  0x5c(%edi)$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	e8 27 e7 ff ff       	call   f0101760 <page_insert>$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	83 c4 10             	add    $0x10,%esp$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	85 c0                	test   %eax,%eax$/;"	l
f010303e	obj/kern/kernel.asm	/^f010303e:	74 15                	je     f0103055 <region_alloc+0x72>$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	50                   	push   %eax$/;"	l
f0103041	obj/kern/kernel.asm	/^f0103041:	68 c1 63 10 f0       	push   $0xf01063c1$/;"	l
f0103046	obj/kern/kernel.asm	/^f0103046:	68 24 01 00 00       	push   $0x124$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	e8 4b d0 ff ff       	call   f01000a0 <_panic>$/;"	l
f0103055	obj/kern/kernel.asm	/^f0103055:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	39 f3                	cmp    %esi,%ebx$/;"	l
f010305d	obj/kern/kernel.asm	/^f010305d:	75 a6                	jne    f0103005 <region_alloc+0x22>$/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103062	obj/kern/kernel.asm	/^f0103062:	5b                   	pop    %ebx$/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	5e                   	pop    %esi$/;"	l
f0103064	obj/kern/kernel.asm	/^f0103064:	5f                   	pop    %edi$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	5d                   	pop    %ebp$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	c3                   	ret    $/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067 <envid2env>:$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	55                   	push   %ebp$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	89 e5                	mov    %esp,%ebp$/;"	l
f010306a	obj/kern/kernel.asm	/^f010306a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	85 d2                	test   %edx,%edx$/;"	l
f0103072	obj/kern/kernel.asm	/^f0103072:	75 11                	jne    f0103085 <envid2env+0x1e>$/;"	l
f0103074	obj/kern/kernel.asm	/^f0103074:	a1 cc 5e 18 f0       	mov    0xf0185ecc,%eax$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010307c	obj/kern/kernel.asm	/^f010307c:	89 01                	mov    %eax,(%ecx)$/;"	l
f010307e	obj/kern/kernel.asm	/^f010307e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	eb 5e                	jmp    f01030e3 <envid2env+0x7c>$/;"	l
f0103085	obj/kern/kernel.asm	/^f0103085:	89 d0                	mov    %edx,%eax$/;"	l
f0103087	obj/kern/kernel.asm	/^f0103087:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f010308c	obj/kern/kernel.asm	/^f010308c:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	03 05 d0 5e 18 f0    	add    0xf0185ed0,%eax$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	83 78 54 00          	cmpl   $0x0,0x54(%eax)$/;"	l
f010309c	obj/kern/kernel.asm	/^f010309c:	74 05                	je     f01030a3 <envid2env+0x3c>$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	3b 50 48             	cmp    0x48(%eax),%edx$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	74 10                	je     f01030b3 <envid2env+0x4c>$/;"	l
f01030a3	obj/kern/kernel.asm	/^f01030a3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01030ac	obj/kern/kernel.asm	/^f01030ac:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	eb 30                	jmp    f01030e3 <envid2env+0x7c>$/;"	l
f01030b3	obj/kern/kernel.asm	/^f01030b3:	84 c9                	test   %cl,%cl$/;"	l
f01030b5	obj/kern/kernel.asm	/^f01030b5:	74 22                	je     f01030d9 <envid2env+0x72>$/;"	l
f01030b7	obj/kern/kernel.asm	/^f01030b7:	8b 15 cc 5e 18 f0    	mov    0xf0185ecc,%edx$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	39 d0                	cmp    %edx,%eax$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	74 18                	je     f01030d9 <envid2env+0x72>$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	8b 4a 48             	mov    0x48(%edx),%ecx$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	39 48 4c             	cmp    %ecx,0x4c(%eax)$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	74 10                	je     f01030d9 <envid2env+0x72>$/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01030d2	obj/kern/kernel.asm	/^f01030d2:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01030d7	obj/kern/kernel.asm	/^f01030d7:	eb 0a                	jmp    f01030e3 <envid2env+0x7c>$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01030dc	obj/kern/kernel.asm	/^f01030dc:	89 01                	mov    %eax,(%ecx)$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	5d                   	pop    %ebp$/;"	l
f01030e4	obj/kern/kernel.asm	/^f01030e4:	c3                   	ret    $/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5 <env_init_percpu>:$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	55                   	push   %ebp$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01030e8	obj/kern/kernel.asm	/^f01030e8:	b8 20 c3 11 f0       	mov    $0xf011c320,%eax$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01030f0	obj/kern/kernel.asm	/^f01030f0:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01030f5	obj/kern/kernel.asm	/^f01030f5:	8e e8                	mov    %eax,%gs$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	8e e0                	mov    %eax,%fs$/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01030fe	obj/kern/kernel.asm	/^f01030fe:	8e c0                	mov    %eax,%es$/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100:	8e d8                	mov    %eax,%ds$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	8e d0                	mov    %eax,%ss$/;"	l
f0103104	obj/kern/kernel.asm	/^f0103104:	ea 0b 31 10 f0 08 00 	ljmp   $0x8,$0xf010310b$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	0f 00 d0             	lldt   %ax$/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	5d                   	pop    %ebp$/;"	l
f0103114	obj/kern/kernel.asm	/^f0103114:	c3                   	ret    $/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115 <env_init>:$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	55                   	push   %ebp$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	89 e5                	mov    %esp,%ebp$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	56                   	push   %esi$/;"	l
f0103119	obj/kern/kernel.asm	/^f0103119:	53                   	push   %ebx$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	8b 35 d0 5e 18 f0    	mov    0xf0185ed0,%esi$/;"	l
f0103120	obj/kern/kernel.asm	/^f0103120:	8b 15 d4 5e 18 f0    	mov    0xf0185ed4,%edx$/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	8d 86 a0 7f 01 00    	lea    0x17fa0(%esi),%eax$/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	8d 5e a0             	lea    -0x60(%esi),%ebx$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	89 c1                	mov    %eax,%ecx$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f010313b	obj/kern/kernel.asm	/^f010313b:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%eax)$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%eax)$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%eax)$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	83 e8 60             	sub    $0x60,%eax$/;"	l
f010315a	obj/kern/kernel.asm	/^f010315a:	89 ca                	mov    %ecx,%edx$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	39 d8                	cmp    %ebx,%eax$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	75 cf                	jne    f010312f <env_init+0x1a>$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	89 35 d4 5e 18 f0    	mov    %esi,0xf0185ed4$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	e8 7a ff ff ff       	call   f01030e5 <env_init_percpu>$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	5b                   	pop    %ebx$/;"	l
f010316c	obj/kern/kernel.asm	/^f010316c:	5e                   	pop    %esi$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	5d                   	pop    %ebp$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	c3                   	ret    $/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f <env_alloc>:$/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f:	55                   	push   %ebp$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	89 e5                	mov    %esp,%ebp$/;"	l
f0103172	obj/kern/kernel.asm	/^f0103172:	53                   	push   %ebx$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	8b 1d d4 5e 18 f0    	mov    0xf0185ed4,%ebx$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	85 db                	test   %ebx,%ebx$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	0f 84 53 01 00 00    	je     f01032d7 <env_alloc+0x168>$/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	6a 01                	push   $0x1$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	e8 53 e2 ff ff       	call   f01013e1 <page_alloc>$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	85 c0                	test   %eax,%eax$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	0f 84 45 01 00 00    	je     f01032de <env_alloc+0x16f>$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	89 c2                	mov    %eax,%edx$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	2b 15 90 6b 18 f0    	sub    0xf0186b90,%edx$/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01031a4	obj/kern/kernel.asm	/^f01031a4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	89 d1                	mov    %edx,%ecx$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01031ac	obj/kern/kernel.asm	/^f01031ac:	3b 0d 88 6b 18 f0    	cmp    0xf0186b88,%ecx$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	72 12                	jb     f01031c6 <env_alloc+0x57>$/;"	l
f01031b4	obj/kern/kernel.asm	/^f01031b4:	52                   	push   %edx$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	6a 56                	push   $0x56$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	e8 da ce ff ff       	call   f01000a0 <_panic>$/;"	l
f01031c6	obj/kern/kernel.asm	/^f01031c6:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	89 53 5c             	mov    %edx,0x5c(%ebx)$/;"	l
f01031cf	obj/kern/kernel.asm	/^f01031cf:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01031d7	obj/kern/kernel.asm	/^f01031d7:	68 14 01 00 00       	push   $0x114$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	05 ec 0e 00 00       	add    $0xeec,%eax$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	50                   	push   %eax$/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	05 ec 0e 00 00       	add    $0xeec,%eax$/;"	l
f01031ef	obj/kern/kernel.asm	/^f01031ef:	50                   	push   %eax$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	e8 db 19 00 00       	call   f0104bd0 <memcpy>$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	77 15                	ja     f0103217 <env_alloc+0xa8>$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	50                   	push   %eax$/;"	l
f0103203	obj/kern/kernel.asm	/^f0103203:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f0103208	obj/kern/kernel.asm	/^f0103208:	68 c7 00 00 00       	push   $0xc7$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	e8 89 ce ff ff       	call   f01000a0 <_panic>$/;"	l
f0103217	obj/kern/kernel.asm	/^f0103217:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103220	obj/kern/kernel.asm	/^f0103220:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103226	obj/kern/kernel.asm	/^f0103226:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103233	obj/kern/kernel.asm	/^f0103233:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	89 da                	mov    %ebx,%edx$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	2b 15 d0 5e 18 f0    	sub    0xf0185ed0,%edx$/;"	l
f0103243	obj/kern/kernel.asm	/^f0103243:	c1 fa 05             	sar    $0x5,%edx$/;"	l
f0103246	obj/kern/kernel.asm	/^f0103246:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f010324c	obj/kern/kernel.asm	/^f010324c:	09 d0                	or     %edx,%eax$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103251	obj/kern/kernel.asm	/^f0103251:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103254	obj/kern/kernel.asm	/^f0103254:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103257	obj/kern/kernel.asm	/^f0103257:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	6a 44                	push   $0x44$/;"	l
f0103271	obj/kern/kernel.asm	/^f0103271:	6a 00                	push   $0x0$/;"	l
f0103273	obj/kern/kernel.asm	/^f0103273:	53                   	push   %ebx$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	e8 a2 18 00 00       	call   f0104b1b <memset>$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103285	obj/kern/kernel.asm	/^f0103285:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	a3 d4 5e 18 f0       	mov    %eax,0xf0185ed4$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01032a3	obj/kern/kernel.asm	/^f01032a3:	89 18                	mov    %ebx,(%eax)$/;"	l
f01032a5	obj/kern/kernel.asm	/^f01032a5:	8b 53 48             	mov    0x48(%ebx),%edx$/;"	l
f01032a8	obj/kern/kernel.asm	/^f01032a8:	a1 cc 5e 18 f0       	mov    0xf0185ecc,%eax$/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032b0	obj/kern/kernel.asm	/^f01032b0:	85 c0                	test   %eax,%eax$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	74 05                	je     f01032b9 <env_alloc+0x14a>$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01032b7	obj/kern/kernel.asm	/^f01032b7:	eb 05                	jmp    f01032be <env_alloc+0x14f>$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	52                   	push   %edx$/;"	l
f01032c2	obj/kern/kernel.asm	/^f01032c2:	50                   	push   %eax$/;"	l
f01032c3	obj/kern/kernel.asm	/^f01032c3:	68 d2 63 10 f0       	push   $0xf01063d2$/;"	l
f01032c8	obj/kern/kernel.asm	/^f01032c8:	e8 03 04 00 00       	call   f01036d0 <cprintf>$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032d0	obj/kern/kernel.asm	/^f01032d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01032d5	obj/kern/kernel.asm	/^f01032d5:	eb 0c                	jmp    f01032e3 <env_alloc+0x174>$/;"	l
f01032d7	obj/kern/kernel.asm	/^f01032d7:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	eb 05                	jmp    f01032e3 <env_alloc+0x174>$/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	c9                   	leave  $/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	c3                   	ret    $/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8 <env_create>:$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	55                   	push   %ebp$/;"	l
f01032e9	obj/kern/kernel.asm	/^f01032e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	57                   	push   %edi$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	56                   	push   %esi$/;"	l
f01032ed	obj/kern/kernel.asm	/^f01032ed:	53                   	push   %ebx$/;"	l
f01032ee	obj/kern/kernel.asm	/^f01032ee:	83 ec 34             	sub    $0x34,%esp$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	6a 00                	push   $0x0$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	50                   	push   %eax$/;"	l
f01032fa	obj/kern/kernel.asm	/^f01032fa:	e8 70 fe ff ff       	call   f010316f <env_alloc>$/;"	l
f01032ff	obj/kern/kernel.asm	/^f01032ff:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103302	obj/kern/kernel.asm	/^f0103302:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103308	obj/kern/kernel.asm	/^f0103308:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	74 15                	je     f0103325 <env_create+0x3d>$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	57                   	push   %edi$/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	68 0c 64 10 f0       	push   $0xf010640c$/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	68 61 01 00 00       	push   $0x161$/;"	l
f010331b	obj/kern/kernel.asm	/^f010331b:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f0103320	obj/kern/kernel.asm	/^f0103320:	e8 7b cd ff ff       	call   f01000a0 <_panic>$/;"	l
f0103325	obj/kern/kernel.asm	/^f0103325:	89 fb                	mov    %edi,%ebx$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f010332a	obj/kern/kernel.asm	/^f010332a:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103331	obj/kern/kernel.asm	/^f0103331:	01 de                	add    %ebx,%esi$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103336	obj/kern/kernel.asm	/^f0103336:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	77 15                	ja     f0103355 <env_create+0x6d>$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	50                   	push   %eax$/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	68 66 01 00 00       	push   $0x166$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f0103350	obj/kern/kernel.asm	/^f0103350:	e8 4b cd ff ff       	call   f01000a0 <_panic>$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010335a	obj/kern/kernel.asm	/^f010335a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	eb 44                	jmp    f01033a3 <env_create+0xbb>$/;"	l
f010335f	obj/kern/kernel.asm	/^f010335f:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	75 3c                	jne    f01033a0 <env_create+0xb8>$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103367	obj/kern/kernel.asm	/^f0103367:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010336d	obj/kern/kernel.asm	/^f010336d:	e8 71 fc ff ff       	call   f0102fe3 <region_alloc>$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103378	obj/kern/kernel.asm	/^f0103378:	89 f8                	mov    %edi,%eax$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d:	50                   	push   %eax$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	e8 4a 18 00 00       	call   f0104bd0 <memcpy>$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010338c	obj/kern/kernel.asm	/^f010338c:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f010338f	obj/kern/kernel.asm	/^f010338f:	29 c2                	sub    %eax,%edx$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	52                   	push   %edx$/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	6a 00                	push   $0x0$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0103397	obj/kern/kernel.asm	/^f0103397:	50                   	push   %eax$/;"	l
f0103398	obj/kern/kernel.asm	/^f0103398:	e8 7e 17 00 00       	call   f0104b1b <memset>$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033a0	obj/kern/kernel.asm	/^f01033a0:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01033a3	obj/kern/kernel.asm	/^f01033a3:	39 de                	cmp    %ebx,%esi$/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	77 b8                	ja     f010335f <env_create+0x77>$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01033b1	obj/kern/kernel.asm	/^f01033b1:	77 15                	ja     f01033c8 <env_create+0xe0>$/;"	l
f01033b3	obj/kern/kernel.asm	/^f01033b3:	50                   	push   %eax$/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	68 6f 01 00 00       	push   $0x16f$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f01033c3	obj/kern/kernel.asm	/^f01033c3:	e8 d8 cc ff ff       	call   f01000a0 <_panic>$/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01033d0	obj/kern/kernel.asm	/^f01033d0:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f01033d3	obj/kern/kernel.asm	/^f01033d3:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f01033e3	obj/kern/kernel.asm	/^f01033e3:	89 f8                	mov    %edi,%eax$/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	e8 f9 fb ff ff       	call   f0102fe3 <region_alloc>$/;"	l
f01033ea	obj/kern/kernel.asm	/^f01033ea:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01033ed	obj/kern/kernel.asm	/^f01033ed:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01033f0	obj/kern/kernel.asm	/^f01033f0:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f01033f3	obj/kern/kernel.asm	/^f01033f3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	5b                   	pop    %ebx$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	5e                   	pop    %esi$/;"	l
f01033f8	obj/kern/kernel.asm	/^f01033f8:	5f                   	pop    %edi$/;"	l
f01033f9	obj/kern/kernel.asm	/^f01033f9:	5d                   	pop    %ebp$/;"	l
f01033fa	obj/kern/kernel.asm	/^f01033fa:	c3                   	ret    $/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb <env_free>:$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	55                   	push   %ebp$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	57                   	push   %edi$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	56                   	push   %esi$/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	53                   	push   %ebx$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103404	obj/kern/kernel.asm	/^f0103404:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	8b 15 cc 5e 18 f0    	mov    0xf0185ecc,%edx$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	39 fa                	cmp    %edi,%edx$/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	75 29                	jne    f010343a <env_free+0x3f>$/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	a1 8c 6b 18 f0       	mov    0xf0186b8c,%eax$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	77 15                	ja     f0103432 <env_free+0x37>$/;"	l
f010341d	obj/kern/kernel.asm	/^f010341d:	50                   	push   %eax$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	68 98 01 00 00       	push   $0x198$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	e8 6e cc ff ff       	call   f01000a0 <_panic>$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	8b 4f 48             	mov    0x48(%edi),%ecx$/;"	l
f010343d	obj/kern/kernel.asm	/^f010343d:	85 d2                	test   %edx,%edx$/;"	l
f010343f	obj/kern/kernel.asm	/^f010343f:	74 05                	je     f0103446 <env_free+0x4b>$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	8b 42 48             	mov    0x48(%edx),%eax$/;"	l
f0103444	obj/kern/kernel.asm	/^f0103444:	eb 05                	jmp    f010344b <env_free+0x50>$/;"	l
f0103446	obj/kern/kernel.asm	/^f0103446:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010344b	obj/kern/kernel.asm	/^f010344b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	51                   	push   %ecx$/;"	l
f010344f	obj/kern/kernel.asm	/^f010344f:	50                   	push   %eax$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	68 e7 63 10 f0       	push   $0xf01063e7$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	e8 76 02 00 00       	call   f01036d0 <cprintf>$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	89 d0                	mov    %edx,%eax$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	0f 84 a8 00 00 00    	je     f0103529 <env_free+0x12e>$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103487	obj/kern/kernel.asm	/^f0103487:	89 f0                	mov    %esi,%eax$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010348f	obj/kern/kernel.asm	/^f010348f:	39 05 88 6b 18 f0    	cmp    %eax,0xf0186b88$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	77 15                	ja     f01034ac <env_free+0xb1>$/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	56                   	push   %esi$/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	68 b4 55 10 f0       	push   $0xf01055b4$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	68 a7 01 00 00       	push   $0x1a7$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f01034a7	obj/kern/kernel.asm	/^f01034a7:	e8 f4 cb ff ff       	call   f01000a0 <_panic>$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01034af	obj/kern/kernel.asm	/^f01034af:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	01 $/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	74 17                	je     f01034db <env_free+0xe0>$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	89 d8                	mov    %ebx,%eax$/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f01034cf	obj/kern/kernel.asm	/^f01034cf:	50                   	push   %eax$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	ff 77 5c             	pushl  0x5c(%edi)$/;"	l
f01034d3	obj/kern/kernel.asm	/^f01034d3:	e8 4d e2 ff ff       	call   f0101725 <page_remove>$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f01034e4	obj/kern/kernel.asm	/^f01034e4:	75 d4                	jne    f01034ba <env_free+0xbf>$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	3b 05 88 6b 18 f0    	cmp    0xf0186b88,%eax$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	72 14                	jb     f0103512 <env_free+0x117>$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	68 14 5a 10 f0       	push   $0xf0105a14$/;"	l
f0103506	obj/kern/kernel.asm	/^f0103506:	6a 4f                	push   $0x4f$/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	e8 8e cb ff ff       	call   f01000a0 <_panic>$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	a1 90 6b 18 f0       	mov    0xf0186b90,%eax$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	50                   	push   %eax$/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	e8 83 df ff ff       	call   f01014a9 <page_decref>$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103529	obj/kern/kernel.asm	/^f0103529:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0103535	obj/kern/kernel.asm	/^f0103535:	0f 85 29 ff ff ff    	jne    f0103464 <env_free+0x69>$/;"	l
f010353b	obj/kern/kernel.asm	/^f010353b:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	77 15                	ja     f010355a <env_free+0x15f>$/;"	l
f0103545	obj/kern/kernel.asm	/^f0103545:	50                   	push   %eax$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f010354b	obj/kern/kernel.asm	/^f010354b:	68 b5 01 00 00       	push   $0x1b5$/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	e8 46 cb ff ff       	call   f01000a0 <_panic>$/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	c7 47 5c 00 00 00 00 	movl   $0x0,0x5c(%edi)$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103566	obj/kern/kernel.asm	/^f0103566:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	3b 05 88 6b 18 f0    	cmp    0xf0186b88,%eax$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	72 14                	jb     f0103585 <env_free+0x18a>$/;"	l
f0103571	obj/kern/kernel.asm	/^f0103571:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	68 14 5a 10 f0       	push   $0xf0105a14$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	6a 4f                	push   $0x4f$/;"	l
f010357b	obj/kern/kernel.asm	/^f010357b:	68 23 53 10 f0       	push   $0xf0105323$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	e8 1b cb ff ff       	call   f01000a0 <_panic>$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	8b 15 90 6b 18 f0    	mov    0xf0186b90,%edx$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	50                   	push   %eax$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	e8 12 df ff ff       	call   f01014a9 <page_decref>$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	a1 d4 5e 18 f0       	mov    0xf0185ed4,%eax$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	89 3d d4 5e 18 f0    	mov    %edi,0xf0185ed4$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	5b                   	pop    %ebx$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	5e                   	pop    %esi$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	5f                   	pop    %edi$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	5d                   	pop    %ebp$/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	c3                   	ret    $/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7 <env_destroy>:$/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	55                   	push   %ebp$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01035ba	obj/kern/kernel.asm	/^f01035ba:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	e8 36 fe ff ff       	call   f01033fb <env_free>$/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	c7 04 24 30 64 10 f0 	movl   $0xf0106430,(%esp)$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	e8 ff 00 00 00       	call   f01036d0 <cprintf>$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	6a 00                	push   $0x0$/;"	l
f01035d9	obj/kern/kernel.asm	/^f01035d9:	e8 34 d8 ff ff       	call   f0100e12 <monitor>$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	eb f1                	jmp    f01035d4 <env_destroy+0x1d>$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3 <env_pop_tf>:$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	55                   	push   %ebp$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	89 e5                	mov    %esp,%ebp$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	61                   	popa   $/;"	l
f01035ed	obj/kern/kernel.asm	/^f01035ed:	07                   	pop    %es$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	1f                   	pop    %ds$/;"	l
f01035ef	obj/kern/kernel.asm	/^f01035ef:	83 c4 08             	add    $0x8,%esp$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	cf                   	iret   $/;"	l
f01035f3	obj/kern/kernel.asm	/^f01035f3:	68 fd 63 10 f0       	push   $0xf01063fd$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	68 de 01 00 00       	push   $0x1de$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	e8 99 ca ff ff       	call   f01000a0 <_panic>$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607 <env_run>:$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	55                   	push   %ebp$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	89 e5                	mov    %esp,%ebp$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103610	obj/kern/kernel.asm	/^f0103610:	8b 15 cc 5e 18 f0    	mov    0xf0185ecc,%edx$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	85 d2                	test   %edx,%edx$/;"	l
f0103618	obj/kern/kernel.asm	/^f0103618:	74 0d                	je     f0103627 <env_run+0x20>$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	83 7a 54 03          	cmpl   $0x3,0x54(%edx)$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	75 07                	jne    f0103627 <env_run+0x20>$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	c7 42 54 02 00 00 00 	movl   $0x2,0x54(%edx)$/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	a3 cc 5e 18 f0       	mov    %eax,0xf0185ecc$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	8b 50 5c             	mov    0x5c(%eax),%edx$/;"	l
f010363a	obj/kern/kernel.asm	/^f010363a:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	77 15                	ja     f0103657 <env_run+0x50>$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	52                   	push   %edx$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	68 88 59 10 f0       	push   $0xf0105988$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	68 01 02 00 00       	push   $0x201$/;"	l
f010364d	obj/kern/kernel.asm	/^f010364d:	68 b6 63 10 f0       	push   $0xf01063b6$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	e8 49 ca ff ff       	call   f01000a0 <_panic>$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	0f 22 da             	mov    %edx,%cr3$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	50                   	push   %eax$/;"	l
f0103664	obj/kern/kernel.asm	/^f0103664:	e8 7a ff ff ff       	call   f01035e3 <env_pop_tf>$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669 <mc146818_read>:$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	55                   	push   %ebp$/;"	l
f010366a	obj/kern/kernel.asm	/^f010366a:	89 e5                	mov    %esp,%ebp$/;"	l
f010366c	obj/kern/kernel.asm	/^f010366c:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103674	obj/kern/kernel.asm	/^f0103674:	ee                   	out    %al,(%dx)$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010367a	obj/kern/kernel.asm	/^f010367a:	ec                   	in     (%dx),%al$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	5d                   	pop    %ebp$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	c3                   	ret    $/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680 <mc146818_write>:$/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680:	55                   	push   %ebp$/;"	l
f0103681	obj/kern/kernel.asm	/^f0103681:	89 e5                	mov    %esp,%ebp$/;"	l
f0103683	obj/kern/kernel.asm	/^f0103683:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	ee                   	out    %al,(%dx)$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	ee                   	out    %al,(%dx)$/;"	l
f0103695	obj/kern/kernel.asm	/^f0103695:	5d                   	pop    %ebp$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	c3                   	ret    $/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697 <putch>:$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	55                   	push   %ebp$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	89 e5                	mov    %esp,%ebp$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	e8 68 cf ff ff       	call   f010060d <cputchar>$/;"	l
f01036a5	obj/kern/kernel.asm	/^f01036a5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	c9                   	leave  $/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	c3                   	ret    $/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa <vcprintf>:$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	55                   	push   %ebp$/;"	l
f01036ab	obj/kern/kernel.asm	/^f01036ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	50                   	push   %eax$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	68 97 36 10 f0       	push   $0xf0103697$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	e8 f3 0c 00 00       	call   f01043be <vprintfmt>$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	c9                   	leave  $/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	c3                   	ret    $/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0 <cprintf>:$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	55                   	push   %ebp$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	50                   	push   %eax$/;"	l
f01036da	obj/kern/kernel.asm	/^f01036da:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	e8 c8 ff ff ff       	call   f01036aa <vcprintf>$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	c9                   	leave  $/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	c3                   	ret    $/;"	l
f01036e4	obj/kern/kernel.asm	/^f01036e4 <trap_init_percpu>:$/;"	l
f01036e4	obj/kern/kernel.asm	/^f01036e4:	55                   	push   %ebp$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	b8 00 67 18 f0       	mov    $0xf0186700,%eax$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	c7 05 04 67 18 f0 00 	movl   $0xf0000000,0xf0186704$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	00 00 f0 $/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	66 c7 05 08 67 18 f0 	movw   $0x10,0xf0186708$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	10 00 $/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	66 c7 05 66 67 18 f0 	movw   $0x68,0xf0186766$/;"	l
f0103706	obj/kern/kernel.asm	/^f0103706:	68 00 $/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	66 c7 05 68 c3 11 f0 	movw   $0x67,0xf011c368$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	67 00 $/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	66 a3 6a c3 11 f0    	mov    %ax,0xf011c36a$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	89 c2                	mov    %eax,%edx$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010371c	obj/kern/kernel.asm	/^f010371c:	88 15 6c c3 11 f0    	mov    %dl,0xf011c36c$/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	c6 05 6e c3 11 f0 40 	movb   $0x40,0xf011c36e$/;"	l
f0103729	obj/kern/kernel.asm	/^f0103729:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	a2 6f c3 11 f0       	mov    %al,0xf011c36f$/;"	l
f0103731	obj/kern/kernel.asm	/^f0103731:	c6 05 6d c3 11 f0 89 	movb   $0x89,0xf011c36d$/;"	l
f0103738	obj/kern/kernel.asm	/^f0103738:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	0f 00 d8             	ltr    %ax$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	b8 70 c3 11 f0       	mov    $0xf011c370,%eax$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	0f 30                	wrmsr  $/;"	l
f0103759	obj/kern/kernel.asm	/^f0103759:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f010375e	obj/kern/kernel.asm	/^f010375e:	b9 75 01 00 00       	mov    $0x175,%ecx$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	0f 30                	wrmsr  $/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	b8 04 3e 10 f0       	mov    $0xf0103e04,%eax$/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	b9 76 01 00 00       	mov    $0x176,%ecx$/;"	l
f010376f	obj/kern/kernel.asm	/^f010376f:	0f 30                	wrmsr  $/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	5d                   	pop    %ebp$/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	c3                   	ret    $/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773 <trap_init>:$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	55                   	push   %ebp$/;"	l
f0103774	obj/kern/kernel.asm	/^f0103774:	89 e5                	mov    %esp,%ebp$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	57                   	push   %edi$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	56                   	push   %esi$/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	53                   	push   %ebx$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	e9 bb 00 00 00       	jmp    f0103841 <trap_init+0xce>$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	75 35                	jne    f01037c0 <trap_init+0x4d>$/;"	l
f010378b	obj/kern/kernel.asm	/^f010378b:	8b 35 82 c3 11 f0    	mov    0xf011c382,%esi$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	89 f7                	mov    %esi,%edi$/;"	l
f0103793	obj/kern/kernel.asm	/^f0103793:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	66 c7 45 f2 08 00    	movw   $0x8,-0xe(%ebp)$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	c6 45 f1 00          	movb   $0x0,-0xf(%ebp)$/;"	l
f01037a2	obj/kern/kernel.asm	/^f01037a2:	c6 45 f0 00          	movb   $0x0,-0x10(%ebp)$/;"	l
f01037a6	obj/kern/kernel.asm	/^f01037a6:	c6 45 ef 0f          	movb   $0xf,-0x11(%ebp)$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01037af	obj/kern/kernel.asm	/^f01037af:	ba 03 00 00 00       	mov    $0x3,%edx$/;"	l
f01037b4	obj/kern/kernel.asm	/^f01037b4:	c6 45 ee 01          	movb   $0x1,-0x12(%ebp)$/;"	l
f01037b8	obj/kern/kernel.asm	/^f01037b8:	c1 ee 10             	shr    $0x10,%esi$/;"	l
f01037bb	obj/kern/kernel.asm	/^f01037bb:	e9 0d 01 00 00       	jmp    f01038cd <trap_init+0x15a>$/;"	l
f01037c0	obj/kern/kernel.asm	/^f01037c0:	84 db                	test   %bl,%bl$/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	74 14                	je     f01037d8 <trap_init+0x65>$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	66 89 3d f8 5e 18 f0 	mov    %di,0xf0185ef8$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	0f b7 7d f2          	movzwl -0xe(%ebp),%edi$/;"	l
f01037cf	obj/kern/kernel.asm	/^f01037cf:	66 89 3d fa 5e 18 f0 	mov    %di,0xf0185efa$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	eb 04                	jmp    f01037dc <trap_init+0x69>$/;"	l
f01037d8	obj/kern/kernel.asm	/^f01037d8:	84 db                	test   %bl,%bl$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	74 12                	je     f01037ee <trap_init+0x7b>$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	0f b6 5d f0          	movzbl -0x10(%ebp),%ebx$/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	c1 e3 05             	shl    $0x5,%ebx$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	0a 5d f1             	or     -0xf(%ebp),%bl$/;"	l
f01037e6	obj/kern/kernel.asm	/^f01037e6:	88 1d fc 5e 18 f0    	mov    %bl,0xf0185efc$/;"	l
f01037ec	obj/kern/kernel.asm	/^f01037ec:	eb 04                	jmp    f01037f2 <trap_init+0x7f>$/;"	l
f01037ee	obj/kern/kernel.asm	/^f01037ee:	84 db                	test   %bl,%bl$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	74 1d                	je     f010380f <trap_init+0x9c>$/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	0f b6 1d fd 5e 18 f0 	movzbl 0xf0185efd,%ebx$/;"	l
f01037f9	obj/kern/kernel.asm	/^f01037f9:	83 e3 e0             	and    $0xffffffe0,%ebx$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	83 e1 01             	and    $0x1,%ecx$/;"	l
f01037ff	obj/kern/kernel.asm	/^f01037ff:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f0103802	obj/kern/kernel.asm	/^f0103802:	0a 5d ef             	or     -0x11(%ebp),%bl$/;"	l
f0103805	obj/kern/kernel.asm	/^f0103805:	09 d9                	or     %ebx,%ecx$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	88 0d fd 5e 18 f0    	mov    %cl,0xf0185efd$/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	eb 04                	jmp    f0103813 <trap_init+0xa0>$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	84 db                	test   %bl,%bl$/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	74 23                	je     f0103836 <trap_init+0xc3>$/;"	l
f0103813	obj/kern/kernel.asm	/^f0103813:	83 e2 03             	and    $0x3,%edx$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	0f b6 1d fd 5e 18 f0 	movzbl 0xf0185efd,%ebx$/;"	l
f0103820	obj/kern/kernel.asm	/^f0103820:	83 e3 1f             	and    $0x1f,%ebx$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	0f b6 4d ee          	movzbl -0x12(%ebp),%ecx$/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	c1 e1 07             	shl    $0x7,%ecx$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	09 da                	or     %ebx,%edx$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	09 ca                	or     %ecx,%edx$/;"	l
f010382e	obj/kern/kernel.asm	/^f010382e:	88 15 fd 5e 18 f0    	mov    %dl,0xf0185efd$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	eb 04                	jmp    f010383a <trap_init+0xc7>$/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	84 db                	test   %bl,%bl$/;"	l
f0103838	obj/kern/kernel.asm	/^f0103838:	74 07                	je     f0103841 <trap_init+0xce>$/;"	l
f010383a	obj/kern/kernel.asm	/^f010383a:	66 89 35 fe 5e 18 f0 	mov    %si,0xf0185efe$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	8b 14 85 76 c3 11 f0 	mov    -0xfee3c8a(,%eax,4),%edx$/;"	l
f0103848	obj/kern/kernel.asm	/^f0103848:	66 89 14 c5 e0 5e 18 	mov    %dx,-0xfe7a120(,%eax,8)$/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	f0 $/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	66 c7 04 c5 e2 5e 18 	movw   $0x8,-0xfe7a11e(,%eax,8)$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	f0 08 00 $/;"	l
f010385a	obj/kern/kernel.asm	/^f010385a:	c6 04 c5 e4 5e 18 f0 	movb   $0x0,-0xfe7a11c(,%eax,8)$/;"	l
f0103861	obj/kern/kernel.asm	/^f0103861:	00 $/;"	l
f0103862	obj/kern/kernel.asm	/^f0103862:	c6 04 c5 e5 5e 18 f0 	movb   $0x8f,-0xfe7a11b(,%eax,8)$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	8f $/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010386d	obj/kern/kernel.asm	/^f010386d:	66 89 14 c5 e6 5e 18 	mov    %dx,-0xfe7a11a(,%eax,8)$/;"	l
f0103874	obj/kern/kernel.asm	/^f0103874:	f0 $/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	0f b7 3d f8 5e 18 f0 	movzwl 0xf0185ef8,%edi$/;"	l
f010387c	obj/kern/kernel.asm	/^f010387c:	0f b7 35 fa 5e 18 f0 	movzwl 0xf0185efa,%esi$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	66 89 75 f2          	mov    %si,-0xe(%ebp)$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	0f b6 15 fc 5e 18 f0 	movzbl 0xf0185efc,%edx$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	89 d1                	mov    %edx,%ecx$/;"	l
f0103890	obj/kern/kernel.asm	/^f0103890:	83 e1 1f             	and    $0x1f,%ecx$/;"	l
f0103893	obj/kern/kernel.asm	/^f0103893:	88 4d f1             	mov    %cl,-0xf(%ebp)$/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	c0 ea 05             	shr    $0x5,%dl$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	88 55 f0             	mov    %dl,-0x10(%ebp)$/;"	l
f010389c	obj/kern/kernel.asm	/^f010389c:	0f b6 1d fd 5e 18 f0 	movzbl 0xf0185efd,%ebx$/;"	l
f01038a3	obj/kern/kernel.asm	/^f01038a3:	89 d9                	mov    %ebx,%ecx$/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	83 e1 0f             	and    $0xf,%ecx$/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	88 4d ef             	mov    %cl,-0x11(%ebp)$/;"	l
f01038ab	obj/kern/kernel.asm	/^f01038ab:	89 d9                	mov    %ebx,%ecx$/;"	l
f01038ad	obj/kern/kernel.asm	/^f01038ad:	c0 e9 04             	shr    $0x4,%cl$/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	83 e1 01             	and    $0x1,%ecx$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	89 da                	mov    %ebx,%edx$/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	c0 ea 05             	shr    $0x5,%dl$/;"	l
f01038b8	obj/kern/kernel.asm	/^f01038b8:	83 e2 03             	and    $0x3,%edx$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	c0 eb 07             	shr    $0x7,%bl$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	88 5d ee             	mov    %bl,-0x12(%ebp)$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	0f b7 35 fe 5e 18 f0 	movzwl 0xf0185efe,%esi$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01038cd	obj/kern/kernel.asm	/^f01038cd:	83 c0 01             	add    $0x1,%eax$/;"	l
f01038d0	obj/kern/kernel.asm	/^f01038d0:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	0f 8e ad fe ff ff    	jle    f0103786 <trap_init+0x13>$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	84 db                	test   %bl,%bl$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	74 13                	je     f01038f0 <trap_init+0x17d>$/;"	l
f01038dd	obj/kern/kernel.asm	/^f01038dd:	66 89 3d f8 5e 18 f0 	mov    %di,0xf0185ef8$/;"	l
f01038e4	obj/kern/kernel.asm	/^f01038e4:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
f01038e8	obj/kern/kernel.asm	/^f01038e8:	66 a3 fa 5e 18 f0    	mov    %ax,0xf0185efa$/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	eb 04                	jmp    f01038f4 <trap_init+0x181>$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	84 db                	test   %bl,%bl$/;"	l
f01038f2	obj/kern/kernel.asm	/^f01038f2:	74 11                	je     f0103905 <trap_init+0x192>$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	0a 45 f1             	or     -0xf(%ebp),%al$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	a2 fc 5e 18 f0       	mov    %al,0xf0185efc$/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903:	eb 04                	jmp    f0103909 <trap_init+0x196>$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	84 db                	test   %bl,%bl$/;"	l
f0103907	obj/kern/kernel.asm	/^f0103907:	74 1c                	je     f0103925 <trap_init+0x1b2>$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	0f b6 05 fd 5e 18 f0 	movzbl 0xf0185efd,%eax$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913:	83 e1 01             	and    $0x1,%ecx$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	0a 45 ef             	or     -0x11(%ebp),%al$/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	09 c8                	or     %ecx,%eax$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	a2 fd 5e 18 f0       	mov    %al,0xf0185efd$/;"	l
f0103923	obj/kern/kernel.asm	/^f0103923:	eb 04                	jmp    f0103929 <trap_init+0x1b6>$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	84 db                	test   %bl,%bl$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	74 24                	je     f010394d <trap_init+0x1da>$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	89 d0                	mov    %edx,%eax$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	83 e0 03             	and    $0x3,%eax$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	0f b6 15 fd 5e 18 f0 	movzbl 0xf0185efd,%edx$/;"	l
f0103938	obj/kern/kernel.asm	/^f0103938:	83 e2 1f             	and    $0x1f,%edx$/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	0f b6 5d ee          	movzbl -0x12(%ebp),%ebx$/;"	l
f010393f	obj/kern/kernel.asm	/^f010393f:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	09 d0                	or     %edx,%eax$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	09 d8                	or     %ebx,%eax$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	a2 fd 5e 18 f0       	mov    %al,0xf0185efd$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	eb 04                	jmp    f0103951 <trap_init+0x1de>$/;"	l
f010394d	obj/kern/kernel.asm	/^f010394d:	84 db                	test   %bl,%bl$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	74 07                	je     f0103958 <trap_init+0x1e5>$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	66 89 35 fe 5e 18 f0 	mov    %si,0xf0185efe$/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	a1 c6 c3 11 f0       	mov    0xf011c3c6,%eax$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	66 a3 60 60 18 f0    	mov    %ax,0xf0186060$/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	66 c7 05 62 60 18 f0 	movw   $0x8,0xf0186062$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	08 00 $/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	c6 05 64 60 18 f0 00 	movb   $0x0,0xf0186064$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	c6 05 65 60 18 f0 ef 	movb   $0xef,0xf0186065$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	66 a3 66 60 18 f0    	mov    %ax,0xf0186066$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	e8 5c fd ff ff       	call   f01036e4 <trap_init_percpu>$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	83 c4 08             	add    $0x8,%esp$/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	5b                   	pop    %ebx$/;"	l
f010398c	obj/kern/kernel.asm	/^f010398c:	5e                   	pop    %esi$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	5f                   	pop    %edi$/;"	l
f010398e	obj/kern/kernel.asm	/^f010398e:	5d                   	pop    %ebp$/;"	l
f010398f	obj/kern/kernel.asm	/^f010398f:	c3                   	ret    $/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990 <print_regs>:$/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990:	55                   	push   %ebp$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	89 e5                	mov    %esp,%ebp$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	53                   	push   %ebx$/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	ff 33                	pushl  (%ebx)$/;"	l
f010399c	obj/kern/kernel.asm	/^f010399c:	68 66 64 10 f0       	push   $0xf0106466$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	e8 2a fd ff ff       	call   f01036d0 <cprintf>$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f01039ac	obj/kern/kernel.asm	/^f01039ac:	68 75 64 10 f0       	push   $0xf0106475$/;"	l
f01039b1	obj/kern/kernel.asm	/^f01039b1:	e8 1a fd ff ff       	call   f01036d0 <cprintf>$/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	68 84 64 10 f0       	push   $0xf0106484$/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	e8 0a fd ff ff       	call   f01036d0 <cprintf>$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	68 93 64 10 f0       	push   $0xf0106493$/;"	l
f01039d1	obj/kern/kernel.asm	/^f01039d1:	e8 fa fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039d9	obj/kern/kernel.asm	/^f01039d9:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f01039dc	obj/kern/kernel.asm	/^f01039dc:	68 a2 64 10 f0       	push   $0xf01064a2$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	e8 ea fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	68 b1 64 10 f0       	push   $0xf01064b1$/;"	l
f01039f1	obj/kern/kernel.asm	/^f01039f1:	e8 da fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01039f9	obj/kern/kernel.asm	/^f01039f9:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f01039fc	obj/kern/kernel.asm	/^f01039fc:	68 c0 64 10 f0       	push   $0xf01064c0$/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	e8 ca fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	68 cf 64 10 f0       	push   $0xf01064cf$/;"	l
f0103a11	obj/kern/kernel.asm	/^f0103a11:	e8 ba fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103a16	obj/kern/kernel.asm	/^f0103a16:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	c9                   	leave  $/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	c3                   	ret    $/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e <print_trapframe>:$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	55                   	push   %ebp$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	56                   	push   %esi$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	53                   	push   %ebx$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103a26	obj/kern/kernel.asm	/^f0103a26:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103a29	obj/kern/kernel.asm	/^f0103a29:	53                   	push   %ebx$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	68 1e 66 10 f0       	push   $0xf010661e$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	e8 9c fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103a37	obj/kern/kernel.asm	/^f0103a37:	e8 54 ff ff ff       	call   f0103990 <print_regs>$/;"	l
f0103a3c	obj/kern/kernel.asm	/^f0103a3c:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103a43	obj/kern/kernel.asm	/^f0103a43:	50                   	push   %eax$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	68 20 65 10 f0       	push   $0xf0106520$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	e8 82 fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103a55	obj/kern/kernel.asm	/^f0103a55:	50                   	push   %eax$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	68 33 65 10 f0       	push   $0xf0106533$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	e8 70 fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a66	obj/kern/kernel.asm	/^f0103a66:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103a69	obj/kern/kernel.asm	/^f0103a69:	77 09                	ja     f0103a74 <print_trapframe+0x56>$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	8b 14 85 00 68 10 f0 	mov    -0xfef9800(,%eax,4),%edx$/;"	l
f0103a72	obj/kern/kernel.asm	/^f0103a72:	eb 10                	jmp    f0103a84 <print_trapframe+0x66>$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103a77	obj/kern/kernel.asm	/^f0103a77:	b9 ea 64 10 f0       	mov    $0xf01064ea,%ecx$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	ba de 64 10 f0       	mov    $0xf01064de,%edx$/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	0f 45 d1             	cmovne %ecx,%edx$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103a87	obj/kern/kernel.asm	/^f0103a87:	52                   	push   %edx$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	50                   	push   %eax$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	68 46 65 10 f0       	push   $0xf0106546$/;"	l
f0103a8e	obj/kern/kernel.asm	/^f0103a8e:	e8 3d fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	3b 1d e0 66 18 f0    	cmp    0xf01866e0,%ebx$/;"	l
f0103a9c	obj/kern/kernel.asm	/^f0103a9c:	75 1a                	jne    f0103ab8 <print_trapframe+0x9a>$/;"	l
f0103a9e	obj/kern/kernel.asm	/^f0103a9e:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	75 14                	jne    f0103ab8 <print_trapframe+0x9a>$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	50                   	push   %eax$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	68 58 65 10 f0       	push   $0xf0106558$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	e8 1b fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	68 67 65 10 f0       	push   $0xf0106567$/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	e8 08 fc ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103acb	obj/kern/kernel.asm	/^f0103acb:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103acf	obj/kern/kernel.asm	/^f0103acf:	75 49                	jne    f0103b1a <print_trapframe+0xfc>$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	89 c2                	mov    %eax,%edx$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	83 e2 01             	and    $0x1,%edx$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	ba 04 65 10 f0       	mov    $0xf0106504,%edx$/;"	l
f0103ade	obj/kern/kernel.asm	/^f0103ade:	b9 f9 64 10 f0       	mov    $0xf01064f9,%ecx$/;"	l
f0103ae3	obj/kern/kernel.asm	/^f0103ae3:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0103ae6	obj/kern/kernel.asm	/^f0103ae6:	89 c2                	mov    %eax,%edx$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	83 e2 02             	and    $0x2,%edx$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	ba 16 65 10 f0       	mov    $0xf0106516,%edx$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0:	be 10 65 10 f0       	mov    $0xf0106510,%esi$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f0103af8	obj/kern/kernel.asm	/^f0103af8:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103afb	obj/kern/kernel.asm	/^f0103afb:	be 49 66 10 f0       	mov    $0xf0106649,%esi$/;"	l
f0103b00	obj/kern/kernel.asm	/^f0103b00:	b8 1b 65 10 f0       	mov    $0xf010651b,%eax$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	51                   	push   %ecx$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	52                   	push   %edx$/;"	l
f0103b0a	obj/kern/kernel.asm	/^f0103b0a:	50                   	push   %eax$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	68 75 65 10 f0       	push   $0xf0106575$/;"	l
f0103b10	obj/kern/kernel.asm	/^f0103b10:	e8 bb fb ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b18	obj/kern/kernel.asm	/^f0103b18:	eb 10                	jmp    f0103b2a <print_trapframe+0x10c>$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	68 68 63 10 f0       	push   $0xf0106368$/;"	l
f0103b22	obj/kern/kernel.asm	/^f0103b22:	e8 a9 fb ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103b27	obj/kern/kernel.asm	/^f0103b27:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b2a	obj/kern/kernel.asm	/^f0103b2a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f0103b30	obj/kern/kernel.asm	/^f0103b30:	68 84 65 10 f0       	push   $0xf0106584$/;"	l
f0103b35	obj/kern/kernel.asm	/^f0103b35:	e8 96 fb ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	50                   	push   %eax$/;"	l
f0103b42	obj/kern/kernel.asm	/^f0103b42:	68 93 65 10 f0       	push   $0xf0106593$/;"	l
f0103b47	obj/kern/kernel.asm	/^f0103b47:	e8 84 fb ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103b4c	obj/kern/kernel.asm	/^f0103b4c:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0103b52	obj/kern/kernel.asm	/^f0103b52:	68 a6 65 10 f0       	push   $0xf01065a6$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	e8 74 fb ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	74 25                	je     f0103b8a <print_trapframe+0x16c>$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0103b6b	obj/kern/kernel.asm	/^f0103b6b:	68 b5 65 10 f0       	push   $0xf01065b5$/;"	l
f0103b70	obj/kern/kernel.asm	/^f0103b70:	e8 5b fb ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	50                   	push   %eax$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	68 c4 65 10 f0       	push   $0xf01065c4$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	e8 49 fb ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b8a	obj/kern/kernel.asm	/^f0103b8a:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103b8d	obj/kern/kernel.asm	/^f0103b8d:	5b                   	pop    %ebx$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	5e                   	pop    %esi$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	5d                   	pop    %ebp$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	c3                   	ret    $/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91 <page_fault_handler>:$/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	55                   	push   %ebp$/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b94	obj/kern/kernel.asm	/^f0103b94:	53                   	push   %ebx$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103b98	obj/kern/kernel.asm	/^f0103b98:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103b9e	obj/kern/kernel.asm	/^f0103b9e:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	75 17                	jne    f0103bbb <page_fault_handler+0x2a>$/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	68 d7 65 10 f0       	push   $0xf01065d7$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	68 f6 00 00 00       	push   $0xf6$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	68 f0 65 10 f0       	push   $0xf01065f0$/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	e8 e5 c4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f0103bbe	obj/kern/kernel.asm	/^f0103bbe:	50                   	push   %eax$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	a1 cc 5e 18 f0       	mov    0xf0185ecc,%eax$/;"	l
f0103bc4	obj/kern/kernel.asm	/^f0103bc4:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103bc7	obj/kern/kernel.asm	/^f0103bc7:	68 94 67 10 f0       	push   $0xf0106794$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	e8 ff fa ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	e8 45 fe ff ff       	call   f0103a1e <print_trapframe>$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103bdc	obj/kern/kernel.asm	/^f0103bdc:	ff 35 cc 5e 18 f0    	pushl  0xf0185ecc$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	e8 d0 f9 ff ff       	call   f01035b7 <env_destroy>$/;"	l
f0103be7	obj/kern/kernel.asm	/^f0103be7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	c9                   	leave  $/;"	l
f0103bee	obj/kern/kernel.asm	/^f0103bee:	c3                   	ret    $/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef <trap>:$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	55                   	push   %ebp$/;"	l
f0103bf0	obj/kern/kernel.asm	/^f0103bf0:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	57                   	push   %edi$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	56                   	push   %esi$/;"	l
f0103bf4	obj/kern/kernel.asm	/^f0103bf4:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103bf7	obj/kern/kernel.asm	/^f0103bf7:	fc                   	cld    $/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	9c                   	pushf  $/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	58                   	pop    %eax$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0103bfd	obj/kern/kernel.asm	/^f0103bfd:	74 19                	je     f0103c18 <trap+0x29>$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	68 fc 65 10 f0       	push   $0xf01065fc$/;"	l
f0103c04	obj/kern/kernel.asm	/^f0103c04:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0103c09	obj/kern/kernel.asm	/^f0103c09:	68 cd 00 00 00       	push   $0xcd$/;"	l
f0103c0e	obj/kern/kernel.asm	/^f0103c0e:	68 f0 65 10 f0       	push   $0xf01065f0$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	e8 88 c4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	56                   	push   %esi$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	68 15 66 10 f0       	push   $0xf0106615$/;"	l
f0103c21	obj/kern/kernel.asm	/^f0103c21:	e8 aa fa ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103c26	obj/kern/kernel.asm	/^f0103c26:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	83 e0 03             	and    $0x3,%eax$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	75 31                	jne    f0103c67 <trap+0x78>$/;"	l
f0103c36	obj/kern/kernel.asm	/^f0103c36:	a1 cc 5e 18 f0       	mov    0xf0185ecc,%eax$/;"	l
f0103c3b	obj/kern/kernel.asm	/^f0103c3b:	85 c0                	test   %eax,%eax$/;"	l
f0103c3d	obj/kern/kernel.asm	/^f0103c3d:	75 19                	jne    f0103c58 <trap+0x69>$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	68 30 66 10 f0       	push   $0xf0106630$/;"	l
f0103c44	obj/kern/kernel.asm	/^f0103c44:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	68 d3 00 00 00       	push   $0xd3$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	68 f0 65 10 f0       	push   $0xf01065f0$/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	e8 48 c4 ff ff       	call   f01000a0 <_panic>$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	89 c7                	mov    %eax,%edi$/;"	l
f0103c5f	obj/kern/kernel.asm	/^f0103c5f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103c61	obj/kern/kernel.asm	/^f0103c61:	8b 35 cc 5e 18 f0    	mov    0xf0185ecc,%esi$/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	89 35 e0 66 18 f0    	mov    %esi,0xf01866e0$/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0103c70	obj/kern/kernel.asm	/^f0103c70:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0103c73	obj/kern/kernel.asm	/^f0103c73:	75 11                	jne    f0103c86 <trap+0x97>$/;"	l
f0103c75	obj/kern/kernel.asm	/^f0103c75:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	56                   	push   %esi$/;"	l
f0103c79	obj/kern/kernel.asm	/^f0103c79:	e8 13 ff ff ff       	call   f0103b91 <page_fault_handler>$/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c81	obj/kern/kernel.asm	/^f0103c81:	e9 87 00 00 00       	jmp    f0103d0d <trap+0x11e>$/;"	l
f0103c86	obj/kern/kernel.asm	/^f0103c86:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	75 0e                	jne    f0103c99 <trap+0xaa>$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	56                   	push   %esi$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	e8 7e d1 ff ff       	call   f0100e12 <monitor>$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c97	obj/kern/kernel.asm	/^f0103c97:	eb 74                	jmp    f0103d0d <trap+0x11e>$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	75 0e                	jne    f0103cac <trap+0xbd>$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103ca1	obj/kern/kernel.asm	/^f0103ca1:	56                   	push   %esi$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	e8 6b d1 ff ff       	call   f0100e12 <monitor>$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	eb 61                	jmp    f0103d0d <trap+0x11e>$/;"	l
f0103cac	obj/kern/kernel.asm	/^f0103cac:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103caf	obj/kern/kernel.asm	/^f0103caf:	75 21                	jne    f0103cd2 <trap+0xe3>$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0103cb7	obj/kern/kernel.asm	/^f0103cb7:	ff 36                	pushl  (%esi)$/;"	l
f0103cb9	obj/kern/kernel.asm	/^f0103cb9:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f0103cbf	obj/kern/kernel.asm	/^f0103cbf:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	e8 5d 01 00 00       	call   f0103e27 <syscall>$/;"	l
f0103cca	obj/kern/kernel.asm	/^f0103cca:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0103ccd	obj/kern/kernel.asm	/^f0103ccd:	83 c4 20             	add    $0x20,%esp$/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	eb 3b                	jmp    f0103d0d <trap+0x11e>$/;"	l
f0103cd2	obj/kern/kernel.asm	/^f0103cd2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	56                   	push   %esi$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	e8 43 fd ff ff       	call   f0103a1e <print_trapframe>$/;"	l
f0103cdb	obj/kern/kernel.asm	/^f0103cdb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0103ce3	obj/kern/kernel.asm	/^f0103ce3:	75 17                	jne    f0103cfc <trap+0x10d>$/;"	l
f0103ce5	obj/kern/kernel.asm	/^f0103ce5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	68 37 66 10 f0       	push   $0xf0106637$/;"	l
f0103ced	obj/kern/kernel.asm	/^f0103ced:	68 bc 00 00 00       	push   $0xbc$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	68 f0 65 10 f0       	push   $0xf01065f0$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	e8 a4 c3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	ff 35 cc 5e 18 f0    	pushl  0xf0185ecc$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	e8 ad f8 ff ff       	call   f01035b7 <env_destroy>$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	a1 cc 5e 18 f0       	mov    0xf0185ecc,%eax$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	85 c0                	test   %eax,%eax$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	74 06                	je     f0103d1c <trap+0x12d>$/;"	l
f0103d16	obj/kern/kernel.asm	/^f0103d16:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	74 19                	je     f0103d35 <trap+0x146>$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	68 b8 67 10 f0       	push   $0xf01067b8$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	68 dd 60 10 f0       	push   $0xf01060dd$/;"	l
f0103d26	obj/kern/kernel.asm	/^f0103d26:	68 e5 00 00 00       	push   $0xe5$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	68 f0 65 10 f0       	push   $0xf01065f0$/;"	l
f0103d30	obj/kern/kernel.asm	/^f0103d30:	e8 6b c3 ff ff       	call   f01000a0 <_panic>$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	50                   	push   %eax$/;"	l
f0103d39	obj/kern/kernel.asm	/^f0103d39:	e8 c9 f8 ff ff       	call   f0103607 <env_run>$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e <divide_handler>:$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	6a 00                	push   $0x0$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	6a 00                	push   $0x0$/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	e9 83 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103d47	obj/kern/kernel.asm	/^f0103d47:	90                   	nop$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48 <debug_handler>:$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	6a 00                	push   $0x0$/;"	l
f0103d4a	obj/kern/kernel.asm	/^f0103d4a:	6a 01                	push   $0x1$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	e9 79 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	90                   	nop$/;"	l
f0103d52	obj/kern/kernel.asm	/^f0103d52 <nmi_handler>:$/;"	l
f0103d52	obj/kern/kernel.asm	/^f0103d52:	6a 00                	push   $0x0$/;"	l
f0103d54	obj/kern/kernel.asm	/^f0103d54:	6a 02                	push   $0x2$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	e9 6f 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	90                   	nop$/;"	l
f0103d5c	obj/kern/kernel.asm	/^f0103d5c <brkpt_handler>:$/;"	l
f0103d5c	obj/kern/kernel.asm	/^f0103d5c:	6a 00                	push   $0x0$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	6a 03                	push   $0x3$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	e9 65 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	90                   	nop$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66 <oflow_handler>:$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	6a 00                	push   $0x0$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	6a 04                	push   $0x4$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	e9 5b 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	90                   	nop$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70 <bound_handler>:$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	6a 00                	push   $0x0$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	6a 05                	push   $0x5$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	e9 51 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	90                   	nop$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a <illop_handler>:$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	6a 00                	push   $0x0$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	6a 06                	push   $0x6$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	e9 47 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	90                   	nop$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84 <device_handler>:$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	6a 00                	push   $0x0$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	6a 07                	push   $0x7$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	e9 3d 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	90                   	nop$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e <dblflt_handler>:$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	6a 08                	push   $0x8$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	e9 35 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	90                   	nop$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96 <coproc_handler>:$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	6a 00                	push   $0x0$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	6a 09                	push   $0x9$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	e9 2b 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	90                   	nop$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0 <tss_handler>:$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	6a 0a                	push   $0xa$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	e9 23 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	90                   	nop$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8 <segnp_handler>:$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	6a 0b                	push   $0xb$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	e9 1b 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	90                   	nop$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0 <stack_handler>:$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	6a 0c                	push   $0xc$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	e9 13 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	90                   	nop$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8 <gpflt_handler>:$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	6a 0d                	push   $0xd$/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	e9 0b 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103dbf	obj/kern/kernel.asm	/^f0103dbf:	90                   	nop$/;"	l
f0103dc0	obj/kern/kernel.asm	/^f0103dc0 <pgflt_handler>:$/;"	l
f0103dc0	obj/kern/kernel.asm	/^f0103dc0:	6a 0e                	push   $0xe$/;"	l
f0103dc2	obj/kern/kernel.asm	/^f0103dc2:	e9 03 86 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103dc7	obj/kern/kernel.asm	/^f0103dc7:	90                   	nop$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8 <res_handler>:$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	6a 00                	push   $0x0$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	6a 0f                	push   $0xf$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	e9 f9 85 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	90                   	nop$/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2 <fperr_handler>:$/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	6a 00                	push   $0x0$/;"	l
f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	6a 10                	push   $0x10$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	e9 ef 85 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	90                   	nop$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc <align_handler>:$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	6a 00                	push   $0x0$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	6a 11                	push   $0x11$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	e9 e5 85 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5:	90                   	nop$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6 <mchk_handler>:$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	6a 00                	push   $0x0$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	6a 12                	push   $0x12$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	e9 db 85 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	90                   	nop$/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0 <simderr_handler>:$/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0:	6a 00                	push   $0x0$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	6a 13                	push   $0x13$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	e9 d1 85 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	90                   	nop$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa <syscall_handler>:$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	6a 00                	push   $0x0$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	6a 30                	push   $0x30$/;"	l
f0103dfe	obj/kern/kernel.asm	/^f0103dfe:	e9 c7 85 01 00       	jmp    f011c3ca <_alltraps>$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	90                   	nop$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04 <sysenter_handler>:$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	56                   	push   %esi$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	55                   	push   %ebp$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	57                   	push   %edi$/;"	l
f0103e07	obj/kern/kernel.asm	/^f0103e07:	53                   	push   %ebx$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	51                   	push   %ecx$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	52                   	push   %edx$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	50                   	push   %eax$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	8e c0                	mov    %eax,%es$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	8e d8                	mov    %eax,%ds$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	e8 0f 00 00 00       	call   f0103e27 <syscall>$/;"	l
f0103e18	obj/kern/kernel.asm	/^f0103e18:	66 bb 20 00          	mov    $0x20,%bx$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	8e c3                	mov    %ebx,%es$/;"	l
f0103e1e	obj/kern/kernel.asm	/^f0103e1e:	8e db                	mov    %ebx,%ds$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	59                   	pop    %ecx$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	5a                   	pop    %edx$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	0f 35                	sysexit $/;"	l
f0103e27	obj/kern/kernel.asm	/^f0103e27 <syscall>:$/;"	l
f0103e27	obj/kern/kernel.asm	/^f0103e27:	55                   	push   %ebp$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	74 42                	je     f0103e77 <syscall+0x50>$/;"	l
f0103e35	obj/kern/kernel.asm	/^f0103e35:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	72 0f                	jb     f0103e49 <syscall+0x22>$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	74 3f                	je     f0103e7e <syscall+0x57>$/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	74 44                	je     f0103e88 <syscall+0x61>$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	e9 a4 00 00 00       	jmp    f0103eed <syscall+0xc6>$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	6a 04                	push   $0x4$/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103e51	obj/kern/kernel.asm	/^f0103e51:	ff 35 cc 5e 18 f0    	pushl  0xf0185ecc$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	e8 3d f1 ff ff       	call   f0102f99 <user_mem_assert>$/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103e5f	obj/kern/kernel.asm	/^f0103e5f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	68 50 68 10 f0       	push   $0xf0106850$/;"	l
f0103e6a	obj/kern/kernel.asm	/^f0103e6a:	e8 61 f8 ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103e6f	obj/kern/kernel.asm	/^f0103e6f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	eb 7b                	jmp    f0103ef2 <syscall+0xcb>$/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	e8 3f c6 ff ff       	call   f01004bb <cons_getc>$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	eb 74                	jmp    f0103ef2 <syscall+0xcb>$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	a1 cc 5e 18 f0       	mov    0xf0185ecc,%eax$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	eb 6a                	jmp    f0103ef2 <syscall+0xcb>$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	6a 01                	push   $0x1$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	50                   	push   %eax$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	e8 ce f1 ff ff       	call   f0103067 <envid2env>$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	85 c0                	test   %eax,%eax$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	78 52                	js     f0103ef2 <syscall+0xcb>$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	8b 15 cc 5e 18 f0    	mov    0xf0185ecc,%edx$/;"	l
f0103ea9	obj/kern/kernel.asm	/^f0103ea9:	39 d0                	cmp    %edx,%eax$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	75 15                	jne    f0103ec2 <syscall+0x9b>$/;"	l
f0103ead	obj/kern/kernel.asm	/^f0103ead:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	68 55 68 10 f0       	push   $0xf0106855$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	e8 13 f8 ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	eb 16                	jmp    f0103ed8 <syscall+0xb1>$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	ff 72 48             	pushl  0x48(%edx)$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	68 70 68 10 f0       	push   $0xf0106870$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0:	e8 fb f7 ff ff       	call   f01036d0 <cprintf>$/;"	l
f0103ed5	obj/kern/kernel.asm	/^f0103ed5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	e8 d4 f6 ff ff       	call   f01035b7 <env_destroy>$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	eb 05                	jmp    f0103ef2 <syscall+0xcb>$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	c9                   	leave  $/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	c3                   	ret    $/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4 <stab_binsearch>:$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	55                   	push   %ebp$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	57                   	push   %edi$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	56                   	push   %esi$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	53                   	push   %ebx$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	8b 01                	mov    (%ecx),%eax$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	eb 7f                	jmp    f0103f98 <stab_binsearch+0xa4>$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	01 d8                	add    %ebx,%eax$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	89 c6                	mov    %eax,%esi$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	01 c6                	add    %eax,%esi$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	d1 fe                	sar    %esi$/;"	d
f0103f27	obj/kern/kernel.asm	/^f0103f27:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	89 f0                	mov    %esi,%eax$/;"	l
f0103f32	obj/kern/kernel.asm	/^f0103f32:	eb 03                	jmp    f0103f37 <stab_binsearch+0x43>$/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103f37	obj/kern/kernel.asm	/^f0103f37:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	7f 0d                	jg     f0103f48 <stab_binsearch+0x54>$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103f42	obj/kern/kernel.asm	/^f0103f42:	39 f9                	cmp    %edi,%ecx$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	75 ee                	jne    f0103f34 <stab_binsearch+0x40>$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	eb 05                	jmp    f0103f4d <stab_binsearch+0x59>$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	eb 4b                	jmp    f0103f98 <stab_binsearch+0xa4>$/;"	l
f0103f4d	obj/kern/kernel.asm	/^f0103f4d:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	76 11                	jbe    f0103f6d <stab_binsearch+0x79>$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	89 03                	mov    %eax,(%ebx)$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	eb 2b                	jmp    f0103f98 <stab_binsearch+0xa4>$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	73 14                	jae    f0103f86 <stab_binsearch+0x92>$/;"	l
f0103f72	obj/kern/kernel.asm	/^f0103f72:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	89 06                	mov    %eax,(%esi)$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	eb 12                	jmp    f0103f98 <stab_binsearch+0xa4>$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	89 06                	mov    %eax,(%esi)$/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	89 c3                	mov    %eax,%ebx$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	0f 8e 78 ff ff ff    	jle    f0103f19 <stab_binsearch+0x25>$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	75 0f                	jne    f0103fb6 <stab_binsearch+0xc2>$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	8b 00                	mov    (%eax),%eax$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	89 06                	mov    %eax,(%esi)$/;"	l
f0103fb4	obj/kern/kernel.asm	/^f0103fb4:	eb 2c                	jmp    f0103fe2 <stab_binsearch+0xee>$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	8b 00                	mov    (%eax),%eax$/;"	l
f0103fbb	obj/kern/kernel.asm	/^f0103fbb:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103fc3	obj/kern/kernel.asm	/^f0103fc3:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	eb 03                	jmp    f0103fce <stab_binsearch+0xda>$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	39 c8                	cmp    %ecx,%eax$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	7e 0b                	jle    f0103fdd <stab_binsearch+0xe9>$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	39 df                	cmp    %ebx,%edi$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	75 ee                	jne    f0103fcb <stab_binsearch+0xd7>$/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	89 06                	mov    %eax,(%esi)$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	5b                   	pop    %ebx$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	5e                   	pop    %esi$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	5f                   	pop    %edi$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	5d                   	pop    %ebp$/;"	l
f0103fe9	obj/kern/kernel.asm	/^f0103fe9:	c3                   	ret    $/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea <debuginfo_eip>:$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	55                   	push   %ebp$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	57                   	push   %edi$/;"	l
f0103fee	obj/kern/kernel.asm	/^f0103fee:	56                   	push   %esi$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	53                   	push   %ebx$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	c7 03 88 68 10 f0    	movl   $0xf0106888,(%ebx)$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	c7 43 08 88 68 10 f0 	movl   $0xf0106888,0x8(%ebx)$/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f010401e	obj/kern/kernel.asm	/^f010401e:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0104024	obj/kern/kernel.asm	/^f0104024:	0f 87 81 00 00 00    	ja     f01040ab <debuginfo_eip+0xc1>$/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	6a 04                	push   $0x4$/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	6a 10                	push   $0x10$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	68 00 00 20 00       	push   $0x200000$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	ff 35 cc 5e 18 f0    	pushl  0xf0185ecc$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	e8 b3 ee ff ff       	call   f0102ef1 <user_mem_check>$/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041:	85 c0                	test   %eax,%eax$/;"	l
f0104043	obj/kern/kernel.asm	/^f0104043:	0f 88 1b 02 00 00    	js     f0104264 <debuginfo_eip+0x27a>$/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	89 c1                	mov    %eax,%ecx$/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f0104059	obj/kern/kernel.asm	/^f0104059:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0104061	obj/kern/kernel.asm	/^f0104061:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	6a 04                	push   $0x4$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	89 f8                	mov    %edi,%eax$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	29 c8                	sub    %ecx,%eax$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	50                   	push   %eax$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	51                   	push   %ecx$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	ff 35 cc 5e 18 f0    	pushl  0xf0185ecc$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	e8 74 ee ff ff       	call   f0102ef1 <user_mem_check>$/;"	l
f010407d	obj/kern/kernel.asm	/^f010407d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	85 c0                	test   %eax,%eax$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	0f 88 e3 01 00 00    	js     f010426b <debuginfo_eip+0x281>$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	6a 04                	push   $0x4$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	29 ca                	sub    %ecx,%edx$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	52                   	push   %edx$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	51                   	push   %ecx$/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	ff 35 cc 5e 18 f0    	pushl  0xf0185ecc$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	e8 52 ee ff ff       	call   f0102ef1 <user_mem_check>$/;"	l
f010409f	obj/kern/kernel.asm	/^f010409f:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	85 c0                	test   %eax,%eax$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	79 1f                	jns    f01040c5 <debuginfo_eip+0xdb>$/;"	l
f01040a6	obj/kern/kernel.asm	/^f01040a6:	e9 c7 01 00 00       	jmp    f0104272 <debuginfo_eip+0x288>$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	c7 45 bc a9 1a 11 f0 	movl   $0xf0111aa9,-0x44(%ebp)$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	c7 45 b8 01 ef 10 f0 	movl   $0xf010ef01,-0x48(%ebp)$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	bf 00 ef 10 f0       	mov    $0xf010ef00,%edi$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	c7 45 c0 a0 6a 10 f0 	movl   $0xf0106aa0,-0x40(%ebp)$/;"	l
f01040c5	obj/kern/kernel.asm	/^f01040c5:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	0f 83 a8 01 00 00    	jae    f0104279 <debuginfo_eip+0x28f>$/;"	l
f01040d1	obj/kern/kernel.asm	/^f01040d1:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	0f 85 a5 01 00 00    	jne    f0104280 <debuginfo_eip+0x296>$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	2b 7d c0             	sub    -0x40(%ebp),%edi$/;"	l
f01040e5	obj/kern/kernel.asm	/^f01040e5:	c1 ff 02             	sar    $0x2,%edi$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	69 c7 ab aa aa aa    	imul   $0xaaaaaaab,%edi,%eax$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	56                   	push   %esi$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	6a 64                	push   $0x64$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	89 d1                	mov    %edx,%ecx$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	89 f8                	mov    %edi,%eax$/;"	l
f0104107	obj/kern/kernel.asm	/^f0104107:	e8 e8 fd ff ff       	call   f0103ef4 <stab_binsearch>$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	85 c0                	test   %eax,%eax$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	0f 84 6d 01 00 00    	je     f0104287 <debuginfo_eip+0x29d>$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104126	obj/kern/kernel.asm	/^f0104126:	56                   	push   %esi$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	6a 24                	push   $0x24$/;"	l
f0104129	obj/kern/kernel.asm	/^f0104129:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	89 d1                	mov    %edx,%ecx$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0104131	obj/kern/kernel.asm	/^f0104131:	89 f8                	mov    %edi,%eax$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	e8 bc fd ff ff       	call   f0103ef4 <stab_binsearch>$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010413b	obj/kern/kernel.asm	/^f010413b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0104141	obj/kern/kernel.asm	/^f0104141:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	39 d0                	cmp    %edx,%eax$/;"	l
f0104146	obj/kern/kernel.asm	/^f0104146:	7f 2b                	jg     f0104173 <debuginfo_eip+0x189>$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010414b	obj/kern/kernel.asm	/^f010414b:	8d 0c 97             	lea    (%edi,%edx,4),%ecx$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	8b 11                	mov    (%ecx),%edx$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	2b 7d b8             	sub    -0x48(%ebp),%edi$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	39 fa                	cmp    %edi,%edx$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	73 06                	jae    f0104160 <debuginfo_eip+0x176>$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	03 55 b8             	add    -0x48(%ebp),%edx$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	89 53 08             	mov    %edx,0x8(%ebx)$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	8b 51 08             	mov    0x8(%ecx),%edx$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	89 53 10             	mov    %edx,0x10(%ebx)$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	29 d6                	sub    %edx,%esi$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104171	obj/kern/kernel.asm	/^f0104171:	eb 0f                	jmp    f0104182 <debuginfo_eip+0x198>$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0104176	obj/kern/kernel.asm	/^f0104176:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	6a 3a                	push   $0x3a$/;"	l
f0104187	obj/kern/kernel.asm	/^f0104187:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	e8 70 09 00 00       	call   f0104aff <strfind>$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	56                   	push   %esi$/;"	l
f0104199	obj/kern/kernel.asm	/^f0104199:	6a 44                	push   $0x44$/;"	l
f010419b	obj/kern/kernel.asm	/^f010419b:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01041a1	obj/kern/kernel.asm	/^f01041a1:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	89 f8                	mov    %edi,%eax$/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	e8 49 fd ff ff       	call   f0103ef4 <stab_binsearch>$/;"	l
f01041ab	obj/kern/kernel.asm	/^f01041ab:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01041b1	obj/kern/kernel.asm	/^f01041b1:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f01041b4	obj/kern/kernel.asm	/^f01041b4:	0f b7 4a 06          	movzwl 0x6(%edx),%ecx$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f01041bb	obj/kern/kernel.asm	/^f01041bb:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01041be	obj/kern/kernel.asm	/^f01041be:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041c1	obj/kern/kernel.asm	/^f01041c1:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f01041c5	obj/kern/kernel.asm	/^f01041c5:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	eb 0a                	jmp    f01041d4 <debuginfo_eip+0x1ea>$/;"	l
f01041ca	obj/kern/kernel.asm	/^f01041ca:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01041d0	obj/kern/kernel.asm	/^f01041d0:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	39 c7                	cmp    %eax,%edi$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	7e 05                	jle    f01041dd <debuginfo_eip+0x1f3>$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	eb 47                	jmp    f0104224 <debuginfo_eip+0x23a>$/;"	l
f01041dd	obj/kern/kernel.asm	/^f01041dd:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	75 0e                	jne    f01041f4 <debuginfo_eip+0x20a>$/;"	l
f01041e6	obj/kern/kernel.asm	/^f01041e6:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	74 1c                	je     f010420b <debuginfo_eip+0x221>$/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01041f2	obj/kern/kernel.asm	/^f01041f2:	eb 17                	jmp    f010420b <debuginfo_eip+0x221>$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f01041f7	obj/kern/kernel.asm	/^f01041f7:	75 d1                	jne    f01041ca <debuginfo_eip+0x1e0>$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	74 cb                	je     f01041ca <debuginfo_eip+0x1e0>$/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	74 03                	je     f010420b <debuginfo_eip+0x221>$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	8b 75 b8             	mov    -0x48(%ebp),%esi$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	29 f0                	sub    %esi,%eax$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c:	39 c2                	cmp    %eax,%edx$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	73 04                	jae    f0104224 <debuginfo_eip+0x23a>$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	01 f2                	add    %esi,%edx$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	89 13                	mov    %edx,(%ebx)$/;"	l
f0104224	obj/kern/kernel.asm	/^f0104224:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	39 f2                	cmp    %esi,%edx$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	7d 60                	jge    f0104293 <debuginfo_eip+0x2a9>$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	89 d0                	mov    %edx,%eax$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	eb 04                	jmp    f010424a <debuginfo_eip+0x260>$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	39 c6                	cmp    %eax,%esi$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	7e 40                	jle    f010428e <debuginfo_eip+0x2a4>$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	74 e9                	je     f0104246 <debuginfo_eip+0x25c>$/;"	l
f010425d	obj/kern/kernel.asm	/^f010425d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	eb 2f                	jmp    f0104293 <debuginfo_eip+0x2a9>$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104269	obj/kern/kernel.asm	/^f0104269:	eb 28                	jmp    f0104293 <debuginfo_eip+0x2a9>$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	eb 21                	jmp    f0104293 <debuginfo_eip+0x2a9>$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104277	obj/kern/kernel.asm	/^f0104277:	eb 1a                	jmp    f0104293 <debuginfo_eip+0x2a9>$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	eb 13                	jmp    f0104293 <debuginfo_eip+0x2a9>$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	eb 0c                	jmp    f0104293 <debuginfo_eip+0x2a9>$/;"	l
f0104287	obj/kern/kernel.asm	/^f0104287:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	eb 05                	jmp    f0104293 <debuginfo_eip+0x2a9>$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104293	obj/kern/kernel.asm	/^f0104293:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	5b                   	pop    %ebx$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	5e                   	pop    %esi$/;"	l
f0104298	obj/kern/kernel.asm	/^f0104298:	5f                   	pop    %edi$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	5d                   	pop    %ebp$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	c3                   	ret    $/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b <printnum>:$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	55                   	push   %ebp$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	89 e5                	mov    %esp,%ebp$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	57                   	push   %edi$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	56                   	push   %esi$/;"	l
f01042a0	obj/kern/kernel.asm	/^f01042a0:	53                   	push   %ebx$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	89 c7                	mov    %eax,%edi$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	89 d6                	mov    %edx,%esi$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01042b7	obj/kern/kernel.asm	/^f01042b7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01042bf	obj/kern/kernel.asm	/^f01042bf:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f01042c2	obj/kern/kernel.asm	/^f01042c2:	39 d3                	cmp    %edx,%ebx$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	72 05                	jb     f01042cb <printnum+0x30>$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	77 45                	ja     f0104310 <printnum+0x75>$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01042d4	obj/kern/kernel.asm	/^f01042d4:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	53                   	push   %ebx$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01042ea	obj/kern/kernel.asm	/^f01042ea:	e8 31 0a 00 00       	call   f0104d20 <__udivdi3>$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	83 c4 18             	add    $0x18,%esp$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	52                   	push   %edx$/;"	l
f01042f3	obj/kern/kernel.asm	/^f01042f3:	50                   	push   %eax$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	89 f2                	mov    %esi,%edx$/;"	l
f01042f6	obj/kern/kernel.asm	/^f01042f6:	89 f8                	mov    %edi,%eax$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	e8 9e ff ff ff       	call   f010429b <printnum>$/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	eb 18                	jmp    f010431a <printnum+0x7f>$/;"	l
f0104302	obj/kern/kernel.asm	/^f0104302:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	56                   	push   %esi$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	ff d7                	call   *%edi$/;"	l
f010430b	obj/kern/kernel.asm	/^f010430b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	eb 03                	jmp    f0104313 <printnum+0x78>$/;"	l
f0104310	obj/kern/kernel.asm	/^f0104310:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104313	obj/kern/kernel.asm	/^f0104313:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	85 db                	test   %ebx,%ebx$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	7f e8                	jg     f0104302 <printnum+0x67>$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010431d	obj/kern/kernel.asm	/^f010431d:	56                   	push   %esi$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0104327	obj/kern/kernel.asm	/^f0104327:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	e8 1e 0b 00 00       	call   f0104e50 <__umoddi3>$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	0f be 80 92 68 10 f0 	movsbl -0xfef976e(%eax),%eax$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	50                   	push   %eax$/;"	l
f010433d	obj/kern/kernel.asm	/^f010433d:	ff d7                	call   *%edi$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104342	obj/kern/kernel.asm	/^f0104342:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104345	obj/kern/kernel.asm	/^f0104345:	5b                   	pop    %ebx$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	5e                   	pop    %esi$/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	5f                   	pop    %edi$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	5d                   	pop    %ebp$/;"	l
f0104349	obj/kern/kernel.asm	/^f0104349:	c3                   	ret    $/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a <getuint>:$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	55                   	push   %ebp$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	89 e5                	mov    %esp,%ebp$/;"	l
f010434d	obj/kern/kernel.asm	/^f010434d:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	7e 0e                	jle    f0104360 <getuint+0x16>$/;"	l
f0104352	obj/kern/kernel.asm	/^f0104352:	8b 10                	mov    (%eax),%edx$/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	8b 02                	mov    (%edx),%eax$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f010435e	obj/kern/kernel.asm	/^f010435e:	eb 22                	jmp    f0104382 <getuint+0x38>$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	85 d2                	test   %edx,%edx$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	74 10                	je     f0104374 <getuint+0x2a>$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	8b 10                	mov    (%eax),%edx$/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	89 08                	mov    %ecx,(%eax)$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	8b 02                	mov    (%edx),%eax$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	eb 0e                	jmp    f0104382 <getuint+0x38>$/;"	l
f0104374	obj/kern/kernel.asm	/^f0104374:	8b 10                	mov    (%eax),%edx$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0104379	obj/kern/kernel.asm	/^f0104379:	89 08                	mov    %ecx,(%eax)$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	8b 02                	mov    (%edx),%eax$/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	5d                   	pop    %ebp$/;"	l
f0104383	obj/kern/kernel.asm	/^f0104383:	c3                   	ret    $/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384 <sprintputch>:$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	55                   	push   %ebp$/;"	l
f0104385	obj/kern/kernel.asm	/^f0104385:	89 e5                	mov    %esp,%ebp$/;"	l
f0104387	obj/kern/kernel.asm	/^f0104387:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	8b 10                	mov    (%eax),%edx$/;"	l
f0104390	obj/kern/kernel.asm	/^f0104390:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	73 0a                	jae    f010439f <sprintputch+0x1b>$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	89 08                	mov    %ecx,(%eax)$/;"	l
f010439a	obj/kern/kernel.asm	/^f010439a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	88 02                	mov    %al,(%edx)$/;"	l
f010439f	obj/kern/kernel.asm	/^f010439f:	5d                   	pop    %ebp$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	c3                   	ret    $/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1 <printfmt>:$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	55                   	push   %ebp$/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01043a4	obj/kern/kernel.asm	/^f01043a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	50                   	push   %eax$/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01043ae	obj/kern/kernel.asm	/^f01043ae:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	e8 05 00 00 00       	call   f01043be <vprintfmt>$/;"	l
f01043b9	obj/kern/kernel.asm	/^f01043b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043bc	obj/kern/kernel.asm	/^f01043bc:	c9                   	leave  $/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	c3                   	ret    $/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be <vprintfmt>:$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	55                   	push   %ebp$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	57                   	push   %edi$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	56                   	push   %esi$/;"	l
f01043c3	obj/kern/kernel.asm	/^f01043c3:	53                   	push   %ebx$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01043ca	obj/kern/kernel.asm	/^f01043ca:	89 df                	mov    %ebx,%edi$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	e9 16 01 00 00       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	85 c0                	test   %eax,%eax$/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	0f 84 78 04 00 00    	je     f0104854 <vprintfmt+0x496>$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	83 f8 1b             	cmp    $0x1b,%eax$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	0f 85 f8 00 00 00    	jne    f01044dd <vprintfmt+0x11f>$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	8d 73 02             	lea    0x2(%ebx),%esi$/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	0f b6 5b 01          	movzbl 0x1(%ebx),%ebx$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	83 fb 5b             	cmp    $0x5b,%ebx$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	0f 84 d8 00 00 00    	je     f01044cd <vprintfmt+0x10f>$/;"	l
f01043f5	obj/kern/kernel.asm	/^f01043f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	57                   	push   %edi$/;"	l
f01043f9	obj/kern/kernel.asm	/^f01043f9:	6a 1b                	push   $0x1b$/;"	l
f01043fb	obj/kern/kernel.asm	/^f01043fb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01043fe	obj/kern/kernel.asm	/^f01043fe:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	57                   	push   %edi$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	53                   	push   %ebx$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104406	obj/kern/kernel.asm	/^f0104406:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	89 f3                	mov    %esi,%ebx$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	e9 da 00 00 00       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	3c 33                	cmp    $0x33,%al$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	74 39                	je     f010444d <vprintfmt+0x8f>$/;"	l
f0104414	obj/kern/kernel.asm	/^f0104414:	3c 33                	cmp    $0x33,%al$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	77 09                	ja     f0104421 <vprintfmt+0x63>$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	3c 30                	cmp    $0x30,%al$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	74 16                	je     f0104432 <vprintfmt+0x74>$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	e9 c9 00 00 00       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	3c 34                	cmp    $0x34,%al$/;"	l
f0104423	obj/kern/kernel.asm	/^f0104423:	74 67                	je     f010448c <vprintfmt+0xce>$/;"	l
f0104425	obj/kern/kernel.asm	/^f0104425:	3c 3b                	cmp    $0x3b,%al$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	0f 84 9e 00 00 00    	je     f01044cb <vprintfmt+0x10d>$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	e9 b8 00 00 00       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	c7 05 00 c3 11 f0 00 	movl   $0x700,0xf011c300$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	07 00 00 $/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	c7 05 80 5c 18 f0 00 	movl   $0x0,0xf0185c80$/;"	l
f0104443	obj/kern/kernel.asm	/^f0104443:	00 00 00 $/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	89 de                	mov    %ebx,%esi$/;"	l
f0104448	obj/kern/kernel.asm	/^f0104448:	e9 80 00 00 00       	jmp    f01044cd <vprintfmt+0x10f>$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f0104451	obj/kern/kernel.asm	/^f0104451:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010445a	obj/kern/kernel.asm	/^f010445a:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	b9 37 00 00 00       	mov    $0x37,%ecx$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	0f 47 c1             	cmova  %ecx,%eax$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	83 e8 30             	sub    $0x30,%eax$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	89 c2                	mov    %eax,%edx$/;"	l
f010446a	obj/kern/kernel.asm	/^f010446a:	83 e2 04             	and    $0x4,%edx$/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0104470	obj/kern/kernel.asm	/^f0104470:	89 c1                	mov    %eax,%ecx$/;"	l
f0104472	obj/kern/kernel.asm	/^f0104472:	83 e1 01             	and    $0x1,%ecx$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	09 ca                	or     %ecx,%edx$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	83 e0 02             	and    $0x2,%eax$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	09 d0                	or     %edx,%eax$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	a3 00 c3 11 f0       	mov    %eax,0xf011c300$/;"	l
f0104487	obj/kern/kernel.asm	/^f0104487:	8d 76 02             	lea    0x2(%esi),%esi$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	eb 41                	jmp    f01044cd <vprintfmt+0x10f>$/;"	l
f010448c	obj/kern/kernel.asm	/^f010448c:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104499	obj/kern/kernel.asm	/^f0104499:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f010449c	obj/kern/kernel.asm	/^f010449c:	b9 30 00 00 00       	mov    $0x30,%ecx$/;"	l
f01044a1	obj/kern/kernel.asm	/^f01044a1:	0f 47 c1             	cmova  %ecx,%eax$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	83 e8 30             	sub    $0x30,%eax$/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7:	89 c2                	mov    %eax,%edx$/;"	l
f01044a9	obj/kern/kernel.asm	/^f01044a9:	83 e2 04             	and    $0x4,%edx$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	89 c1                	mov    %eax,%ecx$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	83 e1 01             	and    $0x1,%ecx$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	09 ca                	or     %ecx,%edx$/;"	l
f01044b9	obj/kern/kernel.asm	/^f01044b9:	83 e0 02             	and    $0x2,%eax$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	09 d0                	or     %edx,%eax$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01044c1	obj/kern/kernel.asm	/^f01044c1:	a3 80 5c 18 f0       	mov    %eax,0xf0185c80$/;"	l
f01044c6	obj/kern/kernel.asm	/^f01044c6:	8d 76 02             	lea    0x2(%esi),%esi$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	eb 02                	jmp    f01044cd <vprintfmt+0x10f>$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	89 de                	mov    %ebx,%esi$/;"	l
f01044cd	obj/kern/kernel.asm	/^f01044cd:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	3c 6d                	cmp    $0x6d,%al$/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5:	0f 85 35 ff ff ff    	jne    f0104410 <vprintfmt+0x52>$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	eb 0d                	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	57                   	push   %edi$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	50                   	push   %eax$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	89 f3                	mov    %esi,%ebx$/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	0f 85 db fe ff ff    	jne    f01043d4 <vprintfmt+0x16>$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f01044fd	obj/kern/kernel.asm	/^f01044fd:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f010450b	obj/kern/kernel.asm	/^f010450b:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104517	obj/kern/kernel.asm	/^f0104517:	eb 06                	jmp    f010451f <vprintfmt+0x161>$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	89 de                	mov    %ebx,%esi$/;"	l
f010451b	obj/kern/kernel.asm	/^f010451b:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	83 e8 23             	sub    $0x23,%eax$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	3c 55                	cmp    $0x55,%al$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	0f 87 03 03 00 00    	ja     f0104836 <vprintfmt+0x478>$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	ff 24 85 1c 69 10 f0 	jmp    *-0xfef96e4(,%eax,4)$/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	89 de                	mov    %ebx,%esi$/;"	l
f010453f	obj/kern/kernel.asm	/^f010453f:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	eb da                	jmp    f010451f <vprintfmt+0x161>$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	89 de                	mov    %ebx,%esi$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010454f	obj/kern/kernel.asm	/^f010454f:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax$/;"	l
f0104553	obj/kern/kernel.asm	/^f0104553:	0f be 0e             	movsbl (%esi),%ecx$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	77 36                	ja     f0104594 <vprintfmt+0x1d6>$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	83 c6 01             	add    $0x1,%esi$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	eb e9                	jmp    f010454c <vprintfmt+0x18e>$/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	8b 00                	mov    (%eax),%eax$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	89 de                	mov    %ebx,%esi$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	eb 22                	jmp    f0104597 <vprintfmt+0x1d9>$/;"	l
f0104575	obj/kern/kernel.asm	/^f0104575:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	85 c0                	test   %eax,%eax$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	0f 49 c8             	cmovns %eax,%ecx$/;"	l
f0104582	obj/kern/kernel.asm	/^f0104582:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	89 de                	mov    %ebx,%esi$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	eb 96                	jmp    f010451f <vprintfmt+0x161>$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	89 de                	mov    %ebx,%esi$/;"	l
f010458b	obj/kern/kernel.asm	/^f010458b:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	eb 8b                	jmp    f010451f <vprintfmt+0x161>$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104597	obj/kern/kernel.asm	/^f0104597:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010459b	obj/kern/kernel.asm	/^f010459b:	79 82                	jns    f010451f <vprintfmt+0x161>$/;"	l
f010459d	obj/kern/kernel.asm	/^f010459d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01045a0	obj/kern/kernel.asm	/^f01045a0:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01045a3	obj/kern/kernel.asm	/^f01045a3:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	e9 70 ff ff ff       	jmp    f010451f <vprintfmt+0x161>$/;"	l
f01045af	obj/kern/kernel.asm	/^f01045af:	83 c2 01             	add    $0x1,%edx$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	89 de                	mov    %ebx,%esi$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	e9 66 ff ff ff       	jmp    f010451f <vprintfmt+0x161>$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01045c2	obj/kern/kernel.asm	/^f01045c2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	57                   	push   %edi$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	ff 30                	pushl  (%eax)$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	e9 17 ff ff ff       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f01045d3	obj/kern/kernel.asm	/^f01045d3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	8b 00                	mov    (%eax),%eax$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	99                   	cltd   $/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	31 d0                	xor    %edx,%eax$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	29 d0                	sub    %edx,%eax$/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	7f 0b                	jg     f01045f3 <vprintfmt+0x235>$/;"	l
f01045e8	obj/kern/kernel.asm	/^f01045e8:	8b 14 85 74 6a 10 f0 	mov    -0xfef958c(,%eax,4),%edx$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	85 d2                	test   %edx,%edx$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	75 17                	jne    f010460a <vprintfmt+0x24c>$/;"	l
f01045f3	obj/kern/kernel.asm	/^f01045f3:	50                   	push   %eax$/;"	l
f01045f4	obj/kern/kernel.asm	/^f01045f4:	68 aa 68 10 f0       	push   $0xf01068aa$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	57                   	push   %edi$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	e8 9f fd ff ff       	call   f01043a1 <printfmt>$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	e9 e0 fe ff ff       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	52                   	push   %edx$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	68 ef 60 10 f0       	push   $0xf01060ef$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	57                   	push   %edi$/;"	l
f0104611	obj/kern/kernel.asm	/^f0104611:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	e8 88 fd ff ff       	call   f01043a1 <printfmt>$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	83 c4 10             	add    $0x10,%esp$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	e9 c9 fe ff ff       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	8b 30                	mov    (%eax),%esi$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	85 f6                	test   %esi,%esi$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	b8 a3 68 10 f0       	mov    $0xf01068a3,%eax$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010463a	obj/kern/kernel.asm	/^f010463a:	0f 8e 92 00 00 00    	jle    f01046d2 <vprintfmt+0x314>$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	0f 84 96 00 00 00    	je     f01046e0 <vprintfmt+0x322>$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	56                   	push   %esi$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	e8 5f 03 00 00       	call   f01049b5 <strnlen>$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0104659	obj/kern/kernel.asm	/^f0104659:	29 c1                	sub    %eax,%ecx$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0104668	obj/kern/kernel.asm	/^f0104668:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	89 cb                	mov    %ecx,%ebx$/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	89 c6                	mov    %eax,%esi$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	eb 0e                	jmp    f010467f <vprintfmt+0x2c1>$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	57                   	push   %edi$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	56                   	push   %esi$/;"	l
f0104676	obj/kern/kernel.asm	/^f0104676:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	85 db                	test   %ebx,%ebx$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	7f ee                	jg     f0104671 <vprintfmt+0x2b3>$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	85 c9                	test   %ecx,%ecx$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104690	obj/kern/kernel.asm	/^f0104690:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	29 c1                	sub    %eax,%ecx$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	89 cf                	mov    %ecx,%edi$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010469d	obj/kern/kernel.asm	/^f010469d:	eb 4d                	jmp    f01046ec <vprintfmt+0x32e>$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01046a3	obj/kern/kernel.asm	/^f01046a3:	74 1b                	je     f01046c0 <vprintfmt+0x302>$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	0f be c0             	movsbl %al,%eax$/;"	l
f01046a8	obj/kern/kernel.asm	/^f01046a8:	83 e8 20             	sub    $0x20,%eax$/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	76 10                	jbe    f01046c0 <vprintfmt+0x302>$/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	6a 3f                	push   $0x3f$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	eb 0d                	jmp    f01046cd <vprintfmt+0x30f>$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	52                   	push   %edx$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046cd	obj/kern/kernel.asm	/^f01046cd:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	eb 1a                	jmp    f01046ec <vprintfmt+0x32e>$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	eb 0c                	jmp    f01046ec <vprintfmt+0x32e>$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f01046e3	obj/kern/kernel.asm	/^f01046e3:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01046e9	obj/kern/kernel.asm	/^f01046e9:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01046ec	obj/kern/kernel.asm	/^f01046ec:	83 c6 01             	add    $0x1,%esi$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	0f b6 46 ff          	movzbl -0x1(%esi),%eax$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	0f be d0             	movsbl %al,%edx$/;"	l
f01046f6	obj/kern/kernel.asm	/^f01046f6:	85 d2                	test   %edx,%edx$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	74 25                	je     f010471f <vprintfmt+0x361>$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	85 db                	test   %ebx,%ebx$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	78 a1                	js     f010469f <vprintfmt+0x2e1>$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	79 9c                	jns    f010469f <vprintfmt+0x2e1>$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	89 f8                	mov    %edi,%eax$/;"	l
f0104705	obj/kern/kernel.asm	/^f0104705:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	89 c3                	mov    %eax,%ebx$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	eb 18                	jmp    f0104727 <vprintfmt+0x369>$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	57                   	push   %edi$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	6a 20                	push   $0x20$/;"	l
f0104715	obj/kern/kernel.asm	/^f0104715:	ff d6                	call   *%esi$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	eb 08                	jmp    f0104727 <vprintfmt+0x369>$/;"	l
f010471f	obj/kern/kernel.asm	/^f010471f:	89 fb                	mov    %edi,%ebx$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	85 db                	test   %ebx,%ebx$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	7f e4                	jg     f010470f <vprintfmt+0x351>$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	e9 b4 fd ff ff       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	7e 16                	jle    f0104751 <vprintfmt+0x393>$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0104741	obj/kern/kernel.asm	/^f0104741:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	8b 00                	mov    (%eax),%eax$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	eb 32                	jmp    f0104783 <vprintfmt+0x3c5>$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	85 d2                	test   %edx,%edx$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	74 18                	je     f010476d <vprintfmt+0x3af>$/;"	l
f0104755	obj/kern/kernel.asm	/^f0104755:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	8b 30                	mov    (%eax),%esi$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	89 f0                	mov    %esi,%eax$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	eb 16                	jmp    f0104783 <vprintfmt+0x3c5>$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104770	obj/kern/kernel.asm	/^f0104770:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	8b 30                	mov    (%eax),%esi$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f010477b	obj/kern/kernel.asm	/^f010477b:	89 f0                	mov    %esi,%eax$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	79 72                	jns    f0104806 <vprintfmt+0x448>$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	57                   	push   %edi$/;"	l
f0104798	obj/kern/kernel.asm	/^f0104798:	6a 2d                	push   $0x2d$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01047a3	obj/kern/kernel.asm	/^f01047a3:	f7 d8                	neg    %eax$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	83 d2 00             	adc    $0x0,%edx$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8:	f7 da                	neg    %edx$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad:	eb 57                	jmp    f0104806 <vprintfmt+0x448>$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01047b2	obj/kern/kernel.asm	/^f01047b2:	e8 93 fb ff ff       	call   f010434a <getuint>$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	eb 48                	jmp    f0104806 <vprintfmt+0x448>$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01047c1	obj/kern/kernel.asm	/^f01047c1:	e8 84 fb ff ff       	call   f010434a <getuint>$/;"	l
f01047c6	obj/kern/kernel.asm	/^f01047c6:	be 08 00 00 00       	mov    $0x8,%esi$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	eb 39                	jmp    f0104806 <vprintfmt+0x448>$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	57                   	push   %edi$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	6a 30                	push   $0x30$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	57                   	push   %edi$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	6a 78                	push   $0x78$/;"	l
f01047dc	obj/kern/kernel.asm	/^f01047dc:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	8b 00                	mov    (%eax),%eax$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f01047f7	obj/kern/kernel.asm	/^f01047f7:	eb 0d                	jmp    f0104806 <vprintfmt+0x448>$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	e8 49 fb ff ff       	call   f010434a <getuint>$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104809	obj/kern/kernel.asm	/^f0104809:	0f be 4d d8          	movsbl -0x28(%ebp),%ecx$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	51                   	push   %ecx$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0104811	obj/kern/kernel.asm	/^f0104811:	56                   	push   %esi$/;"	l
f0104812	obj/kern/kernel.asm	/^f0104812:	52                   	push   %edx$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	50                   	push   %eax$/;"	l
f0104814	obj/kern/kernel.asm	/^f0104814:	89 fa                	mov    %edi,%edx$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	e8 7d fa ff ff       	call   f010429b <printnum>$/;"	l
f010481e	obj/kern/kernel.asm	/^f010481e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104821	obj/kern/kernel.asm	/^f0104821:	e9 c4 fc ff ff       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	57                   	push   %edi$/;"	l
f010482a	obj/kern/kernel.asm	/^f010482a:	51                   	push   %ecx$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	e9 b4 fc ff ff       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104839	obj/kern/kernel.asm	/^f0104839:	57                   	push   %edi$/;"	l
f010483a	obj/kern/kernel.asm	/^f010483a:	6a 25                	push   $0x25$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010483f	obj/kern/kernel.asm	/^f010483f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	89 f3                	mov    %esi,%ebx$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	eb 03                	jmp    f0104849 <vprintfmt+0x48b>$/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104849	obj/kern/kernel.asm	/^f0104849:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f010484d	obj/kern/kernel.asm	/^f010484d:	75 f7                	jne    f0104846 <vprintfmt+0x488>$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	e9 96 fc ff ff       	jmp    f01044ea <vprintfmt+0x12c>$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104857	obj/kern/kernel.asm	/^f0104857:	5b                   	pop    %ebx$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	5e                   	pop    %esi$/;"	l
f0104859	obj/kern/kernel.asm	/^f0104859:	5f                   	pop    %edi$/;"	l
f010485a	obj/kern/kernel.asm	/^f010485a:	5d                   	pop    %ebp$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	c3                   	ret    $/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c <vsnprintf>:$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	55                   	push   %ebp$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	89 e5                	mov    %esp,%ebp$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010486b	obj/kern/kernel.asm	/^f010486b:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	85 c0                	test   %eax,%eax$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	74 26                	je     f01048a3 <vsnprintf+0x47>$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	85 d2                	test   %edx,%edx$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	7e 22                	jle    f01048a3 <vsnprintf+0x47>$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	50                   	push   %eax$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	68 84 43 10 f0       	push   $0xf0104384$/;"	l
f0104890	obj/kern/kernel.asm	/^f0104890:	e8 29 fb ff ff       	call   f01043be <vprintfmt>$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010489b	obj/kern/kernel.asm	/^f010489b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010489e	obj/kern/kernel.asm	/^f010489e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048a1	obj/kern/kernel.asm	/^f01048a1:	eb 05                	jmp    f01048a8 <vsnprintf+0x4c>$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	c9                   	leave  $/;"	l
f01048a9	obj/kern/kernel.asm	/^f01048a9:	c3                   	ret    $/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa <snprintf>:$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	55                   	push   %ebp$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01048ad	obj/kern/kernel.asm	/^f01048ad:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01048b0	obj/kern/kernel.asm	/^f01048b0:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	50                   	push   %eax$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	e8 9a ff ff ff       	call   f010485c <vsnprintf>$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	c9                   	leave  $/;"	l
f01048c3	obj/kern/kernel.asm	/^f01048c3:	c3                   	ret    $/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4 <readline>:$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	55                   	push   %ebp$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	57                   	push   %edi$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	56                   	push   %esi$/;"	l
f01048c9	obj/kern/kernel.asm	/^f01048c9:	53                   	push   %ebx$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01048cd	obj/kern/kernel.asm	/^f01048cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01048d0	obj/kern/kernel.asm	/^f01048d0:	85 c0                	test   %eax,%eax$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	74 11                	je     f01048e5 <readline+0x21>$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	50                   	push   %eax$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8:	68 ef 60 10 f0       	push   $0xf01060ef$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	e8 ee ed ff ff       	call   f01036d0 <cprintf>$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048e5	obj/kern/kernel.asm	/^f01048e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	6a 00                	push   $0x0$/;"	l
f01048ea	obj/kern/kernel.asm	/^f01048ea:	e8 3f bd ff ff       	call   f010062e <iscons>$/;"	l
f01048ef	obj/kern/kernel.asm	/^f01048ef:	89 c7                	mov    %eax,%edi$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	e8 1f bd ff ff       	call   f010061d <getchar>$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	89 c3                	mov    %eax,%ebx$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	85 c0                	test   %eax,%eax$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	79 18                	jns    f010491c <readline+0x58>$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	50                   	push   %eax$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	68 90 6a 10 f0       	push   $0xf0106a90$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	e8 be ed ff ff       	call   f01036d0 <cprintf>$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	eb 79                	jmp    f0104995 <readline+0xd1>$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	0f 94 c2             	sete   %dl$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	0f 94 c0             	sete   %al$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	08 c2                	or     %al,%dl$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	74 1a                	je     f0104946 <readline+0x82>$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	85 f6                	test   %esi,%esi$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	7e 16                	jle    f0104946 <readline+0x82>$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	85 ff                	test   %edi,%edi$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	74 0d                	je     f0104941 <readline+0x7d>$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104937	obj/kern/kernel.asm	/^f0104937:	6a 08                	push   $0x8$/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	e8 cf bc ff ff       	call   f010060d <cputchar>$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104941	obj/kern/kernel.asm	/^f0104941:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944:	eb b3                	jmp    f01048f9 <readline+0x35>$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0104949	obj/kern/kernel.asm	/^f0104949:	7e 23                	jle    f010496e <readline+0xaa>$/;"	l
f010494b	obj/kern/kernel.asm	/^f010494b:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	7f 1b                	jg     f010496e <readline+0xaa>$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	85 ff                	test   %edi,%edi$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	74 0c                	je     f0104963 <readline+0x9f>$/;"	l
f0104957	obj/kern/kernel.asm	/^f0104957:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	53                   	push   %ebx$/;"	l
f010495b	obj/kern/kernel.asm	/^f010495b:	e8 ad bc ff ff       	call   f010060d <cputchar>$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104963	obj/kern/kernel.asm	/^f0104963:	88 9e 80 67 18 f0    	mov    %bl,-0xfe79880(%esi)$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	eb 8b                	jmp    f01048f9 <readline+0x35>$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0104971	obj/kern/kernel.asm	/^f0104971:	74 05                	je     f0104978 <readline+0xb4>$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	75 81                	jne    f01048f9 <readline+0x35>$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	85 ff                	test   %edi,%edi$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	74 0d                	je     f0104989 <readline+0xc5>$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	6a 0a                	push   $0xa$/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	e8 87 bc ff ff       	call   f010060d <cputchar>$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	c6 86 80 67 18 f0 00 	movb   $0x0,-0xfe79880(%esi)$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	b8 80 67 18 f0       	mov    $0xf0186780,%eax$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	5b                   	pop    %ebx$/;"	l
f0104999	obj/kern/kernel.asm	/^f0104999:	5e                   	pop    %esi$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	5f                   	pop    %edi$/;"	l
f010499b	obj/kern/kernel.asm	/^f010499b:	5d                   	pop    %ebp$/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	c3                   	ret    $/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d <strlen>:$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	55                   	push   %ebp$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	89 e5                	mov    %esp,%ebp$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	eb 03                	jmp    f01049ad <strlen+0x10>$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	83 c0 01             	add    $0x1,%eax$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	75 f7                	jne    f01049aa <strlen+0xd>$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	5d                   	pop    %ebp$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	c3                   	ret    $/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5 <strnlen>:$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	55                   	push   %ebp$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01049be	obj/kern/kernel.asm	/^f01049be:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	eb 03                	jmp    f01049c8 <strnlen+0x13>$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	83 c2 01             	add    $0x1,%edx$/;"	l
f01049c8	obj/kern/kernel.asm	/^f01049c8:	39 c2                	cmp    %eax,%edx$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	74 08                	je     f01049d4 <strnlen+0x1f>$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	75 f3                	jne    f01049c5 <strnlen+0x10>$/;"	l
f01049d2	obj/kern/kernel.asm	/^f01049d2:	89 d0                	mov    %edx,%eax$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	5d                   	pop    %ebp$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	c3                   	ret    $/;"	l
f01049d6	obj/kern/kernel.asm	/^f01049d6 <strcpy>:$/;"	l
f01049d6	obj/kern/kernel.asm	/^f01049d6:	55                   	push   %ebp$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	53                   	push   %ebx$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	89 c2                	mov    %eax,%edx$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01049ef	obj/kern/kernel.asm	/^f01049ef:	84 db                	test   %bl,%bl$/;"	l
f01049f1	obj/kern/kernel.asm	/^f01049f1:	75 ef                	jne    f01049e2 <strcpy+0xc>$/;"	l
f01049f3	obj/kern/kernel.asm	/^f01049f3:	5b                   	pop    %ebx$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	5d                   	pop    %ebp$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	c3                   	ret    $/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6 <strcat>:$/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	55                   	push   %ebp$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	89 e5                	mov    %esp,%ebp$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	53                   	push   %ebx$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	53                   	push   %ebx$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	e8 9a ff ff ff       	call   f010499d <strlen>$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	01 d8                	add    %ebx,%eax$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	50                   	push   %eax$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	e8 c5 ff ff ff       	call   f01049d6 <strcpy>$/;"	l
f0104a11	obj/kern/kernel.asm	/^f0104a11:	89 d8                	mov    %ebx,%eax$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0104a16	obj/kern/kernel.asm	/^f0104a16:	c9                   	leave  $/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	c3                   	ret    $/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18 <strncpy>:$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	55                   	push   %ebp$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	56                   	push   %esi$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	53                   	push   %ebx$/;"	l
f0104a1d	obj/kern/kernel.asm	/^f0104a1d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	89 f3                	mov    %esi,%ebx$/;"	l
f0104a25	obj/kern/kernel.asm	/^f0104a25:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	89 f2                	mov    %esi,%edx$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	eb 0f                	jmp    f0104a3b <strncpy+0x23>$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f0104a35	obj/kern/kernel.asm	/^f0104a35:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	39 da                	cmp    %ebx,%edx$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	75 ed                	jne    f0104a2c <strncpy+0x14>$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	89 f0                	mov    %esi,%eax$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	5b                   	pop    %ebx$/;"	l
f0104a42	obj/kern/kernel.asm	/^f0104a42:	5e                   	pop    %esi$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	5d                   	pop    %ebp$/;"	l
f0104a44	obj/kern/kernel.asm	/^f0104a44:	c3                   	ret    $/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45 <strlcpy>:$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	55                   	push   %ebp$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	56                   	push   %esi$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	53                   	push   %ebx$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0104a53	obj/kern/kernel.asm	/^f0104a53:	89 f0                	mov    %esi,%eax$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	85 d2                	test   %edx,%edx$/;"	l
f0104a57	obj/kern/kernel.asm	/^f0104a57:	74 21                	je     f0104a7a <strlcpy+0x35>$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	89 f2                	mov    %esi,%edx$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	eb 09                	jmp    f0104a6a <strlcpy+0x25>$/;"	l
f0104a61	obj/kern/kernel.asm	/^f0104a61:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	39 c2                	cmp    %eax,%edx$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	74 09                	je     f0104a77 <strlcpy+0x32>$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0104a71	obj/kern/kernel.asm	/^f0104a71:	84 db                	test   %bl,%bl$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	75 ec                	jne    f0104a61 <strlcpy+0x1c>$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	89 d0                	mov    %edx,%eax$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	29 f0                	sub    %esi,%eax$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	5b                   	pop    %ebx$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	5e                   	pop    %esi$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	5d                   	pop    %ebp$/;"	l
f0104a7f	obj/kern/kernel.asm	/^f0104a7f:	c3                   	ret    $/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80 <strcmp>:$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	55                   	push   %ebp$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	eb 06                	jmp    f0104a91 <strcmp+0x11>$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	84 c0                	test   %al,%al$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	74 04                	je     f0104a9c <strcmp+0x1c>$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	3a 02                	cmp    (%edx),%al$/;"	l
f0104a9a	obj/kern/kernel.asm	/^f0104a9a:	74 ef                	je     f0104a8b <strcmp+0xb>$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104a9f	obj/kern/kernel.asm	/^f0104a9f:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	29 d0                	sub    %edx,%eax$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	5d                   	pop    %ebp$/;"	l
f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	c3                   	ret    $/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6 <strncmp>:$/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	55                   	push   %ebp$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	89 e5                	mov    %esp,%ebp$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	53                   	push   %ebx$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104aad	obj/kern/kernel.asm	/^f0104aad:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	89 c3                	mov    %eax,%ebx$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	eb 06                	jmp    f0104abd <strncmp+0x17>$/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104abf	obj/kern/kernel.asm	/^f0104abf:	74 15                	je     f0104ad6 <strncmp+0x30>$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	84 c9                	test   %cl,%cl$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	74 04                	je     f0104acc <strncmp+0x26>$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	74 eb                	je     f0104ab7 <strncmp+0x11>$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	29 d0                	sub    %edx,%eax$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	eb 05                	jmp    f0104adb <strncmp+0x35>$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	5b                   	pop    %ebx$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	5d                   	pop    %ebp$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	c3                   	ret    $/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade <strchr>:$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	55                   	push   %ebp$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	eb 07                	jmp    f0104af1 <strchr+0x13>$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	38 ca                	cmp    %cl,%dl$/;"	l
f0104aec	obj/kern/kernel.asm	/^f0104aec:	74 0f                	je     f0104afd <strchr+0x1f>$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104af1	obj/kern/kernel.asm	/^f0104af1:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	84 d2                	test   %dl,%dl$/;"	l
f0104af6	obj/kern/kernel.asm	/^f0104af6:	75 f2                	jne    f0104aea <strchr+0xc>$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	5d                   	pop    %ebp$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	c3                   	ret    $/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff <strfind>:$/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff:	55                   	push   %ebp$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0104b09	obj/kern/kernel.asm	/^f0104b09:	eb 03                	jmp    f0104b0e <strfind+0xf>$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104b11	obj/kern/kernel.asm	/^f0104b11:	38 ca                	cmp    %cl,%dl$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	74 04                	je     f0104b19 <strfind+0x1a>$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	84 d2                	test   %dl,%dl$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	75 f2                	jne    f0104b0b <strfind+0xc>$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	5d                   	pop    %ebp$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	c3                   	ret    $/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b <memset>:$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	55                   	push   %ebp$/;"	l
f0104b1c	obj/kern/kernel.asm	/^f0104b1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	57                   	push   %edi$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	56                   	push   %esi$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	53                   	push   %ebx$/;"	l
f0104b21	obj/kern/kernel.asm	/^f0104b21:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104b24	obj/kern/kernel.asm	/^f0104b24:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	85 c9                	test   %ecx,%ecx$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	74 36                	je     f0104b61 <memset+0x46>$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	75 28                	jne    f0104b5b <memset+0x40>$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	75 23                	jne    f0104b5b <memset+0x40>$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	89 d3                	mov    %edx,%ebx$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0104b41	obj/kern/kernel.asm	/^f0104b41:	89 d6                	mov    %edx,%esi$/;"	l
f0104b43	obj/kern/kernel.asm	/^f0104b43:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	89 d0                	mov    %edx,%eax$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	09 f0                	or     %esi,%eax$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	09 c2                	or     %eax,%edx$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	89 d8                	mov    %ebx,%eax$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	09 d0                	or     %edx,%eax$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	fc                   	cld    $/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	eb 06                	jmp    f0104b61 <memset+0x46>$/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	fc                   	cld    $/;"	l
f0104b5f	obj/kern/kernel.asm	/^f0104b5f:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	89 f8                	mov    %edi,%eax$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	5b                   	pop    %ebx$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	5e                   	pop    %esi$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	5f                   	pop    %edi$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	5d                   	pop    %ebp$/;"	l
f0104b67	obj/kern/kernel.asm	/^f0104b67:	c3                   	ret    $/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68 <memmove>:$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	55                   	push   %ebp$/;"	l
f0104b69	obj/kern/kernel.asm	/^f0104b69:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	57                   	push   %edi$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	56                   	push   %esi$/;"	l
f0104b6d	obj/kern/kernel.asm	/^f0104b6d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104b73	obj/kern/kernel.asm	/^f0104b73:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	39 c6                	cmp    %eax,%esi$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	73 35                	jae    f0104baf <memmove+0x47>$/;"	l
f0104b7a	obj/kern/kernel.asm	/^f0104b7a:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0104b7d	obj/kern/kernel.asm	/^f0104b7d:	39 d0                	cmp    %edx,%eax$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	73 2e                	jae    f0104baf <memmove+0x47>$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0104b84	obj/kern/kernel.asm	/^f0104b84:	89 d6                	mov    %edx,%esi$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	09 fe                	or     %edi,%esi$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	75 13                	jne    f0104ba3 <memmove+0x3b>$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	75 0e                	jne    f0104ba3 <memmove+0x3b>$/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104b9e	obj/kern/kernel.asm	/^f0104b9e:	fd                   	std    $/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	eb 09                	jmp    f0104bac <memmove+0x44>$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0104ba9	obj/kern/kernel.asm	/^f0104ba9:	fd                   	std    $/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	fc                   	cld    $/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	eb 1d                	jmp    f0104bcc <memmove+0x64>$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	89 f2                	mov    %esi,%edx$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	09 c2                	or     %eax,%edx$/;"	l
f0104bb3	obj/kern/kernel.asm	/^f0104bb3:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0104bb6	obj/kern/kernel.asm	/^f0104bb6:	75 0f                	jne    f0104bc7 <memmove+0x5f>$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104bbb	obj/kern/kernel.asm	/^f0104bbb:	75 0a                	jne    f0104bc7 <memmove+0x5f>$/;"	l
f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	89 c7                	mov    %eax,%edi$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	fc                   	cld    $/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104bc5	obj/kern/kernel.asm	/^f0104bc5:	eb 05                	jmp    f0104bcc <memmove+0x64>$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	89 c7                	mov    %eax,%edi$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	fc                   	cld    $/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	5e                   	pop    %esi$/;"	l
f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	5f                   	pop    %edi$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	5d                   	pop    %ebp$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	c3                   	ret    $/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0 <memcpy>:$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	55                   	push   %ebp$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	e8 87 ff ff ff       	call   f0104b68 <memmove>$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	c9                   	leave  $/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	c3                   	ret    $/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3 <memcmp>:$/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3:	55                   	push   %ebp$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	89 e5                	mov    %esp,%ebp$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	56                   	push   %esi$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	53                   	push   %ebx$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	89 c6                	mov    %eax,%esi$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0104bf3	obj/kern/kernel.asm	/^f0104bf3:	eb 1a                	jmp    f0104c0f <memcmp+0x2c>$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0104bf8	obj/kern/kernel.asm	/^f0104bf8:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0104bfb	obj/kern/kernel.asm	/^f0104bfb:	38 d9                	cmp    %bl,%cl$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	74 0a                	je     f0104c09 <memcmp+0x26>$/;"	l
f0104bff	obj/kern/kernel.asm	/^f0104bff:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	29 d8                	sub    %ebx,%eax$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	eb 0f                	jmp    f0104c18 <memcmp+0x35>$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104c0f	obj/kern/kernel.asm	/^f0104c0f:	39 f0                	cmp    %esi,%eax$/;"	l
f0104c11	obj/kern/kernel.asm	/^f0104c11:	75 e2                	jne    f0104bf5 <memcmp+0x12>$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	5b                   	pop    %ebx$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	5e                   	pop    %esi$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	5d                   	pop    %ebp$/;"	l
f0104c1b	obj/kern/kernel.asm	/^f0104c1b:	c3                   	ret    $/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c <memfind>:$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	55                   	push   %ebp$/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c1f	obj/kern/kernel.asm	/^f0104c1f:	53                   	push   %ebx$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	89 c1                	mov    %eax,%ecx$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	eb 0a                	jmp    f0104c38 <memfind+0x1c>$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	39 da                	cmp    %ebx,%edx$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	74 07                	je     f0104c3c <memfind+0x20>$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	39 c8                	cmp    %ecx,%eax$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	72 f2                	jb     f0104c2e <memfind+0x12>$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	5b                   	pop    %ebx$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	5d                   	pop    %ebp$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	c3                   	ret    $/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f <strtol>:$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	55                   	push   %ebp$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	57                   	push   %edi$/;"	l
f0104c43	obj/kern/kernel.asm	/^f0104c43:	56                   	push   %esi$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	53                   	push   %ebx$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104c4b	obj/kern/kernel.asm	/^f0104c4b:	eb 03                	jmp    f0104c50 <strtol+0x11>$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	3c 20                	cmp    $0x20,%al$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	74 f6                	je     f0104c4d <strtol+0xe>$/;"	l
f0104c57	obj/kern/kernel.asm	/^f0104c57:	3c 09                	cmp    $0x9,%al$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	74 f2                	je     f0104c4d <strtol+0xe>$/;"	l
f0104c5b	obj/kern/kernel.asm	/^f0104c5b:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	75 0a                	jne    f0104c69 <strtol+0x2a>$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	eb 11                	jmp    f0104c7a <strtol+0x3b>$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	75 08                	jne    f0104c7a <strtol+0x3b>$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	75 15                	jne    f0104c97 <strtol+0x58>$/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	75 10                	jne    f0104c97 <strtol+0x58>$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	75 7c                	jne    f0104d09 <strtol+0xca>$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0104c95	obj/kern/kernel.asm	/^f0104c95:	eb 16                	jmp    f0104cad <strtol+0x6e>$/;"	l
f0104c97	obj/kern/kernel.asm	/^f0104c97:	85 db                	test   %ebx,%ebx$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	75 12                	jne    f0104cad <strtol+0x6e>$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	75 08                	jne    f0104cad <strtol+0x6e>$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0104cb5	obj/kern/kernel.asm	/^f0104cb5:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	89 f3                	mov    %esi,%ebx$/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0104cc0	obj/kern/kernel.asm	/^f0104cc0:	77 08                	ja     f0104cca <strtol+0x8b>$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	eb 22                	jmp    f0104cec <strtol+0xad>$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0104ccd	obj/kern/kernel.asm	/^f0104ccd:	89 f3                	mov    %esi,%ebx$/;"	l
f0104ccf	obj/kern/kernel.asm	/^f0104ccf:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	77 08                	ja     f0104cdc <strtol+0x9d>$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104cd7	obj/kern/kernel.asm	/^f0104cd7:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	eb 10                	jmp    f0104cec <strtol+0xad>$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	89 f3                	mov    %esi,%ebx$/;"	l
f0104ce1	obj/kern/kernel.asm	/^f0104ce1:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	77 16                	ja     f0104cfc <strtol+0xbd>$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0104cef	obj/kern/kernel.asm	/^f0104cef:	7d 0b                	jge    f0104cfc <strtol+0xbd>$/;"	l
f0104cf1	obj/kern/kernel.asm	/^f0104cf1:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	01 d0                	add    %edx,%eax$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	eb b9                	jmp    f0104cb5 <strtol+0x76>$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	74 0d                	je     f0104d0f <strtol+0xd0>$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104d05	obj/kern/kernel.asm	/^f0104d05:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	eb 06                	jmp    f0104d0f <strtol+0xd0>$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	85 db                	test   %ebx,%ebx$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	74 98                	je     f0104ca5 <strtol+0x66>$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	eb 9e                	jmp    f0104cad <strtol+0x6e>$/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	89 c2                	mov    %eax,%edx$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	f7 da                	neg    %edx$/;"	l
f0104d13	obj/kern/kernel.asm	/^f0104d13:	85 ff                	test   %edi,%edi$/;"	l
f0104d15	obj/kern/kernel.asm	/^f0104d15:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	5b                   	pop    %ebx$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	5e                   	pop    %esi$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	5f                   	pop    %edi$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	5d                   	pop    %ebp$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	c3                   	ret    $/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	66 90                	xchg   %ax,%ax$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	90                   	nop$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20 <__udivdi3>:$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	55                   	push   %ebp$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	57                   	push   %edi$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	56                   	push   %esi$/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	53                   	push   %ebx$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0104d33	obj/kern/kernel.asm	/^f0104d33:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	85 f6                	test   %esi,%esi$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	89 ca                	mov    %ecx,%edx$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	89 f8                	mov    %edi,%eax$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	75 3d                	jne    f0104d80 <__udivdi3+0x60>$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	39 cf                	cmp    %ecx,%edi$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	0f 87 c5 00 00 00    	ja     f0104e10 <__udivdi3+0xf0>$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	85 ff                	test   %edi,%edi$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	89 fd                	mov    %edi,%ebp$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	75 0b                	jne    f0104d5c <__udivdi3+0x3c>$/;"	l
f0104d51	obj/kern/kernel.asm	/^f0104d51:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	31 d2                	xor    %edx,%edx$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	f7 f7                	div    %edi$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	89 c5                	mov    %eax,%ebp$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	89 c8                	mov    %ecx,%eax$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	31 d2                	xor    %edx,%edx$/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	f7 f5                	div    %ebp$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	89 c1                	mov    %eax,%ecx$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	89 d8                	mov    %ebx,%eax$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	89 cf                	mov    %ecx,%edi$/;"	l
f0104d68	obj/kern/kernel.asm	/^f0104d68:	f7 f5                	div    %ebp$/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	89 c3                	mov    %eax,%ebx$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	89 d8                	mov    %ebx,%eax$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	89 fa                	mov    %edi,%edx$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	5b                   	pop    %ebx$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	5e                   	pop    %esi$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	5f                   	pop    %edi$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	5d                   	pop    %ebp$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	c3                   	ret    $/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	90                   	nop$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	39 ce                	cmp    %ecx,%esi$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	77 74                	ja     f0104df8 <__udivdi3+0xd8>$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0104d87	obj/kern/kernel.asm	/^f0104d87:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	0f 84 98 00 00 00    	je     f0104e28 <__udivdi3+0x108>$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	89 f9                	mov    %edi,%ecx$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	89 c5                	mov    %eax,%ebp$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	29 fb                	sub    %edi,%ebx$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	d3 e6                	shl    %cl,%esi$/;"	d
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	89 d9                	mov    %ebx,%ecx$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0104da1	obj/kern/kernel.asm	/^f0104da1:	89 f9                	mov    %edi,%ecx$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	d3 e0                	shl    %cl,%eax$/;"	d
f0104da5	obj/kern/kernel.asm	/^f0104da5:	09 ee                	or     %ebp,%esi$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	89 d9                	mov    %ebx,%ecx$/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	89 d5                	mov    %edx,%ebp$/;"	l
f0104daf	obj/kern/kernel.asm	/^f0104daf:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0104db3	obj/kern/kernel.asm	/^f0104db3:	d3 ed                	shr    %cl,%ebp$/;"	d
f0104db5	obj/kern/kernel.asm	/^f0104db5:	89 f9                	mov    %edi,%ecx$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	d3 e2                	shl    %cl,%edx$/;"	d
f0104db9	obj/kern/kernel.asm	/^f0104db9:	89 d9                	mov    %ebx,%ecx$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	d3 e8                	shr    %cl,%eax$/;"	d
f0104dbd	obj/kern/kernel.asm	/^f0104dbd:	09 c2                	or     %eax,%edx$/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	89 d0                	mov    %edx,%eax$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	89 ea                	mov    %ebp,%edx$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	f7 f6                	div    %esi$/;"	l
f0104dc5	obj/kern/kernel.asm	/^f0104dc5:	89 d5                	mov    %edx,%ebp$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	89 c3                	mov    %eax,%ebx$/;"	l
f0104dc9	obj/kern/kernel.asm	/^f0104dc9:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0104dcd	obj/kern/kernel.asm	/^f0104dcd:	39 d5                	cmp    %edx,%ebp$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	72 10                	jb     f0104de1 <__udivdi3+0xc1>$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0104dd5	obj/kern/kernel.asm	/^f0104dd5:	89 f9                	mov    %edi,%ecx$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	d3 e6                	shl    %cl,%esi$/;"	d
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	39 c6                	cmp    %eax,%esi$/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	73 07                	jae    f0104de4 <__udivdi3+0xc4>$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	39 d5                	cmp    %edx,%ebp$/;"	l
f0104ddf	obj/kern/kernel.asm	/^f0104ddf:	75 03                	jne    f0104de4 <__udivdi3+0xc4>$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	31 ff                	xor    %edi,%edi$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	89 d8                	mov    %ebx,%eax$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	89 fa                	mov    %edi,%edx$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	5b                   	pop    %ebx$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	5e                   	pop    %esi$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	5f                   	pop    %edi$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	5d                   	pop    %ebp$/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	c3                   	ret    $/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	31 ff                	xor    %edi,%edi$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	31 db                	xor    %ebx,%ebx$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	89 d8                	mov    %ebx,%eax$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	89 fa                	mov    %edi,%edx$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03:	5b                   	pop    %ebx$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	5e                   	pop    %esi$/;"	l
f0104e05	obj/kern/kernel.asm	/^f0104e05:	5f                   	pop    %edi$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	5d                   	pop    %ebp$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	c3                   	ret    $/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	90                   	nop$/;"	l
f0104e09	obj/kern/kernel.asm	/^f0104e09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	89 d8                	mov    %ebx,%eax$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	f7 f7                	div    %edi$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	31 ff                	xor    %edi,%edi$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	89 c3                	mov    %eax,%ebx$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	89 d8                	mov    %ebx,%eax$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	89 fa                	mov    %edi,%edx$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	5b                   	pop    %ebx$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	5e                   	pop    %esi$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	5f                   	pop    %edi$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	5d                   	pop    %ebp$/;"	l
f0104e23	obj/kern/kernel.asm	/^f0104e23:	c3                   	ret    $/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	39 ce                	cmp    %ecx,%esi$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	72 0c                	jb     f0104e38 <__udivdi3+0x118>$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	31 db                	xor    %ebx,%ebx$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0104e32	obj/kern/kernel.asm	/^f0104e32:	0f 87 34 ff ff ff    	ja     f0104d6c <__udivdi3+0x4c>$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	e9 2a ff ff ff       	jmp    f0104d6c <__udivdi3+0x4c>$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	66 90                	xchg   %ax,%ax$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	66 90                	xchg   %ax,%ax$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	66 90                	xchg   %ax,%ax$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	66 90                	xchg   %ax,%ax$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	66 90                	xchg   %ax,%ax$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	66 90                	xchg   %ax,%ax$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	66 90                	xchg   %ax,%ax$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50 <__umoddi3>:$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	55                   	push   %ebp$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	57                   	push   %edi$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	56                   	push   %esi$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	53                   	push   %ebx$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f0104e5f	obj/kern/kernel.asm	/^f0104e5f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	85 d2                	test   %edx,%edx$/;"	l
f0104e69	obj/kern/kernel.asm	/^f0104e69:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	89 f3                	mov    %esi,%ebx$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	75 1c                	jne    f0104e98 <__umoddi3+0x48>$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	39 f7                	cmp    %esi,%edi$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	76 50                	jbe    f0104ed0 <__umoddi3+0x80>$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	89 c8                	mov    %ecx,%eax$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	89 f2                	mov    %esi,%edx$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	f7 f7                	div    %edi$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	89 d0                	mov    %edx,%eax$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	31 d2                	xor    %edx,%edx$/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	5b                   	pop    %ebx$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	5e                   	pop    %esi$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	5f                   	pop    %edi$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	5d                   	pop    %ebp$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	c3                   	ret    $/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98:	39 f2                	cmp    %esi,%edx$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	89 d0                	mov    %edx,%eax$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	77 52                	ja     f0104ef0 <__umoddi3+0xa0>$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	75 5a                	jne    f0104f00 <__umoddi3+0xb0>$/;"	l
f0104ea6	obj/kern/kernel.asm	/^f0104ea6:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	0f 82 e0 00 00 00    	jb     f0104f90 <__umoddi3+0x140>$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	0f 86 d7 00 00 00    	jbe    f0104f90 <__umoddi3+0x140>$/;"	l
f0104eb9	obj/kern/kernel.asm	/^f0104eb9:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	5b                   	pop    %ebx$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	5e                   	pop    %esi$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	5f                   	pop    %edi$/;"	l
f0104ec7	obj/kern/kernel.asm	/^f0104ec7:	5d                   	pop    %ebp$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	c3                   	ret    $/;"	l
f0104ec9	obj/kern/kernel.asm	/^f0104ec9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0:	85 ff                	test   %edi,%edi$/;"	l
f0104ed2	obj/kern/kernel.asm	/^f0104ed2:	89 fd                	mov    %edi,%ebp$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	75 0b                	jne    f0104ee1 <__umoddi3+0x91>$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	31 d2                	xor    %edx,%edx$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	f7 f7                	div    %edi$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	89 c5                	mov    %eax,%ebp$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	89 f0                	mov    %esi,%eax$/;"	l
f0104ee3	obj/kern/kernel.asm	/^f0104ee3:	31 d2                	xor    %edx,%edx$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	f7 f5                	div    %ebp$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	89 c8                	mov    %ecx,%eax$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	f7 f5                	div    %ebp$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	89 d0                	mov    %edx,%eax$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	eb 99                	jmp    f0104e88 <__umoddi3+0x38>$/;"	l
f0104eef	obj/kern/kernel.asm	/^f0104eef:	90                   	nop$/;"	l
f0104ef0	obj/kern/kernel.asm	/^f0104ef0:	89 c8                	mov    %ecx,%eax$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	89 f2                	mov    %esi,%edx$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	5b                   	pop    %ebx$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	5e                   	pop    %esi$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	5f                   	pop    %edi$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	5d                   	pop    %ebp$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	c3                   	ret    $/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	29 ef                	sub    %ebp,%edi$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	d3 e0                	shl    %cl,%eax$/;"	d
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	89 f9                	mov    %edi,%ecx$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	89 f2                	mov    %esi,%edx$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	d3 ea                	shr    %cl,%edx$/;"	d
f0104f14	obj/kern/kernel.asm	/^f0104f14:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	09 c2                	or     %eax,%edx$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	89 d8                	mov    %ebx,%eax$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	89 f2                	mov    %esi,%edx$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	d3 e2                	shl    %cl,%edx$/;"	d
f0104f21	obj/kern/kernel.asm	/^f0104f21:	89 f9                	mov    %edi,%ecx$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0104f2b	obj/kern/kernel.asm	/^f0104f2b:	d3 e8                	shr    %cl,%eax$/;"	d
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	89 c6                	mov    %eax,%esi$/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31:	d3 e3                	shl    %cl,%ebx$/;"	d
f0104f33	obj/kern/kernel.asm	/^f0104f33:	89 f9                	mov    %edi,%ecx$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	89 d0                	mov    %edx,%eax$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	d3 e8                	shr    %cl,%eax$/;"	d
f0104f39	obj/kern/kernel.asm	/^f0104f39:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	09 d8                	or     %ebx,%eax$/;"	l
f0104f3d	obj/kern/kernel.asm	/^f0104f3d:	89 d3                	mov    %edx,%ebx$/;"	l
f0104f3f	obj/kern/kernel.asm	/^f0104f3f:	89 f2                	mov    %esi,%edx$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	f7 34 24             	divl   (%esp)$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	89 d6                	mov    %edx,%esi$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	d3 e3                	shl    %cl,%ebx$/;"	d
f0104f48	obj/kern/kernel.asm	/^f0104f48:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c:	39 d6                	cmp    %edx,%esi$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	89 d1                	mov    %edx,%ecx$/;"	l
f0104f54	obj/kern/kernel.asm	/^f0104f54:	89 c3                	mov    %eax,%ebx$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	72 08                	jb     f0104f60 <__umoddi3+0x110>$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	75 11                	jne    f0104f6b <__umoddi3+0x11b>$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	73 0b                	jae    f0104f6b <__umoddi3+0x11b>$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	89 d1                	mov    %edx,%ecx$/;"	l
f0104f69	obj/kern/kernel.asm	/^f0104f69:	89 c3                	mov    %eax,%ebx$/;"	l
f0104f6b	obj/kern/kernel.asm	/^f0104f6b:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	29 da                	sub    %ebx,%edx$/;"	l
f0104f71	obj/kern/kernel.asm	/^f0104f71:	19 ce                	sbb    %ecx,%esi$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	89 f9                	mov    %edi,%ecx$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	89 f0                	mov    %esi,%eax$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	d3 e0                	shl    %cl,%eax$/;"	d
f0104f79	obj/kern/kernel.asm	/^f0104f79:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	d3 ea                	shr    %cl,%edx$/;"	d
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	d3 ee                	shr    %cl,%esi$/;"	d
f0104f81	obj/kern/kernel.asm	/^f0104f81:	09 d0                	or     %edx,%eax$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	89 f2                	mov    %esi,%edx$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	5b                   	pop    %ebx$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	5e                   	pop    %esi$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	5f                   	pop    %edi$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	5d                   	pop    %ebp$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	c3                   	ret    $/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	29 f9                	sub    %edi,%ecx$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	19 d6                	sbb    %edx,%esi$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104f98	obj/kern/kernel.asm	/^f0104f98:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	e9 18 ff ff ff       	jmp    f0104eb9 <__umoddi3+0x69>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idttable	kern/trapentry.S	/^idttable:$/;"	l
idttable	obj/kern/kernel.asm	/^idttable:$/;"	l
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/kern/kernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/badsegment.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/breakpoint.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/buggyhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/buggyhello2.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/divzero.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/evilhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultread.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultreadkernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultwrite.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultwritekernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/hello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/singlestep.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/singlestep.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/singlestep.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/softint.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testbss.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/singlestep.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/singlestep.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_chperm	kern/monitor.c	/^mon_chperm(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_continue	kern/monitor.c	/^mon_continue(int argc, char **argv, struct Trapframe *tf) {$/;"	f
mon_dumpmem	kern/monitor.c	/^mon_dumpmem(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_showmappings	kern/monitor.c	/^mon_showmappings(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_step	kern/monitor.c	/^mon_step(int argc, char **argv, struct Trapframe *tf) {$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/singlestep.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/singlestep.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/singlestep.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/singlestep.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/singlestep.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/kern/kernel.asm	/^			offset = PGOFF(i);$/;"	d
offsetof	inc/types.h	73;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/singlestep.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/singlestep.asm	/^			padc = '-';$/;"	d
padc	obj/user/singlestep.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgnum	obj/kern/kernel.asm	/^			pgnum = i >> PGSHIFT;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *)((uint8_t *)elfhdr + elfhdr->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pn	obj/kern/kernel.asm	/^		pn = pn >> PGSHIFT;$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/singlestep.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/singlestep.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/singlestep.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/singlestep.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte_p	obj/kern/kernel.asm	/^			pte_p = pgdir_walk(pgdir, (void *) va, true);$/;"	d
pte_p	obj/kern/kernel.asm	/^		pte_p = pgdir_walk(kern_pgdir, (void *) va, 0);$/;"	d
pte_p	obj/kern/kernel.asm	/^		pte_p = pgdir_walk(pgdir, (void *) va, true);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/singlestep.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rdmsr	inc/x86.h	6;"	d
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/singlestep.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/singlestep.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/singlestep.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/singlestep.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int32_t$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int32_t$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int32_t$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int32_t$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int32_t$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/singlestep.asm	/^static int32_t$/;"	l
static	obj/user/singlestep.asm	/^static long long$/;"	l
static	obj/user/singlestep.asm	/^static unsigned long long$/;"	l
static	obj/user/singlestep.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int32_t$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int32_t$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
sysenter	lib/syscall.c	/^sysenter(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4)$/;"	f	file:
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/singlestep.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/singlestep.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = MAX((size_t) va, ULIM);$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = curva;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^		user_mem_check_addr = curva;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^			va = (unsigned char *)(page2kva(&pages[pgnum]) + offset);$/;"	d
va	obj/kern/kernel.asm	/^		va = (uintptr_t) page2kva(&pages[pn]);$/;"	d
va	obj/kern/kernel.asm	/^		va = (uintptr_t) pn << PGSHIFT;$/;"	d
va	obj/kern/kernel.asm	/^		va = PDX(va) << PDXSHIFT;$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/singlestep.asm	/^void *$/;"	l
void	obj/user/singlestep.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/singlestep.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/singlestep.asm	/^				width = 0;$/;"	d
width	obj/user/singlestep.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/singlestep.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
wrmsr	inc/x86.h	11;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
