!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon5
ALT	kern/console.c	226;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/singlestep.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	293;"	d	file:
CAPSLOCK	kern/console.c	228;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	17;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	396;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon7
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon7
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon7
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	225;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/singlestep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	232;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon2
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon2
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon2
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon2
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon2
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon1
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon1
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon1
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon1
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IA32_SYSENTER_CS	inc/x86.h	17;"	d
IA32_SYSENTER_EIP	inc/x86.h	19;"	d
IA32_SYSENTER_ESP	inc/x86.h	18;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	39;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	297;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	222;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon4
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	229;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	84;"	d
O_CREAT	inc/lib.h	86;"	d
O_EXCL	inc/lib.h	88;"	d
O_MKDIR	inc/lib.h	89;"	d
O_RDONLY	inc/lib.h	81;"	d
O_RDWR	inc/lib.h	83;"	d
O_TRUNC	inc/lib.h	87;"	d
O_WRONLY	inc/lib.h	82;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Oct 8 21:31:51 PDT 2018$/;"	m
PADDR	kern/pmap.h	27;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PS_enabled	kern/pmap.c	/^bool PS_enabled;$/;"	v
PS_enabled	obj/kern/kernel.asm	/^	PS_enabled = !!(edx & (1 << 3));$/;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	74;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	230;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	224;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon4
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon4
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon4
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon4
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon4
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon4
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon4
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon4
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon4
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon4
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon4
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon4
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon4
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	296;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/singlestep.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/singlestep.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/singlestep.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/singlestep.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/singlestep.asm	/^			base = 10;$/;"	d
base	obj/user/singlestep.asm	/^			base = 16;$/;"	d
base	obj/user/singlestep.asm	/^			base = 8;$/;"	d
base	obj/user/singlestep.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/singlestep.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
broken	obj/kern/kernel.asm	/^					broken = false;$/;"	d
broken	obj/user/badsegment.asm	/^					broken = false;$/;"	d
broken	obj/user/breakpoint.asm	/^					broken = false;$/;"	d
broken	obj/user/buggyhello.asm	/^					broken = false;$/;"	d
broken	obj/user/buggyhello2.asm	/^					broken = false;$/;"	d
broken	obj/user/divzero.asm	/^					broken = false;$/;"	d
broken	obj/user/dumbfork.asm	/^					broken = false;$/;"	d
broken	obj/user/evilhello.asm	/^					broken = false;$/;"	d
broken	obj/user/fairness.asm	/^					broken = false;$/;"	d
broken	obj/user/faultalloc.asm	/^					broken = false;$/;"	d
broken	obj/user/faultallocbad.asm	/^					broken = false;$/;"	d
broken	obj/user/faultbadhandler.asm	/^					broken = false;$/;"	d
broken	obj/user/faultdie.asm	/^					broken = false;$/;"	d
broken	obj/user/faultevilhandler.asm	/^					broken = false;$/;"	d
broken	obj/user/faultnostack.asm	/^					broken = false;$/;"	d
broken	obj/user/faultread.asm	/^					broken = false;$/;"	d
broken	obj/user/faultreadkernel.asm	/^					broken = false;$/;"	d
broken	obj/user/faultregs.asm	/^					broken = false;$/;"	d
broken	obj/user/faultwrite.asm	/^					broken = false;$/;"	d
broken	obj/user/faultwritekernel.asm	/^					broken = false;$/;"	d
broken	obj/user/forktree.asm	/^					broken = false;$/;"	d
broken	obj/user/hello.asm	/^					broken = false;$/;"	d
broken	obj/user/idle.asm	/^					broken = false;$/;"	d
broken	obj/user/pingpong.asm	/^					broken = false;$/;"	d
broken	obj/user/pingpongs.asm	/^					broken = false;$/;"	d
broken	obj/user/primes.asm	/^					broken = false;$/;"	d
broken	obj/user/sendpage.asm	/^					broken = false;$/;"	d
broken	obj/user/singlestep.asm	/^					broken = false;$/;"	d
broken	obj/user/softint.asm	/^					broken = false;$/;"	d
broken	obj/user/spin.asm	/^					broken = false;$/;"	d
broken	obj/user/stresssched.asm	/^					broken = false;$/;"	d
broken	obj/user/testbss.asm	/^					broken = false;$/;"	d
broken	obj/user/yield.asm	/^					broken = false;$/;"	d
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/singlestep.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/kern/kernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/kern/kernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/badsegment.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/badsegment.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/breakpoint.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/breakpoint.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello2.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/buggyhello2.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/divzero.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/divzero.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/dumbfork.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/dumbfork.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/evilhello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/evilhello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/fairness.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/fairness.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultalloc.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultalloc.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultallocbad.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultallocbad.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultbadhandler.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultbadhandler.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultdie.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultdie.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultevilhandler.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultevilhandler.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultnostack.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultnostack.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultread.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultread.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultreadkernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultreadkernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultregs.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultregs.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwrite.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwrite.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwritekernel.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/faultwritekernel.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/forktree.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/forktree.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/hello.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/hello.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/idle.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/idle.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpong.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpong.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpongs.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/pingpongs.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/primes.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/primes.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/sendpage.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/sendpage.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/singlestep.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/singlestep.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/singlestep.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/singlestep.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/softint.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/softint.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/spin.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/spin.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/stresssched.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/stresssched.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/testbss.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/testbss.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^							ch = '0';	\/\/ Reset to default$/;"	d
ch	obj/user/yield.asm	/^							ch = '7';	\/\/ Reset to default$/;"	d
ch	obj/user/yield.asm	/^						ch = *(unsigned char *) fmt++;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/singlestep.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
clr	obj/kern/kernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/badsegment.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/breakpoint.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/buggyhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/buggyhello2.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/divzero.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/dumbfork.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/evilhello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/fairness.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultalloc.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultallocbad.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultbadhandler.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultdie.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultevilhandler.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultnostack.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultread.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultreadkernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultregs.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultwrite.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/faultwritekernel.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/forktree.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/hello.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/idle.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/pingpong.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/pingpongs.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/primes.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/sendpage.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/singlestep.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/softint.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/spin.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/stresssched.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/testbss.asm	/^						clr = ch - '0';$/;"	d
clr	obj/user/yield.asm	/^						clr = ch - '0';$/;"	d
clr_b	obj/kern/kernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/badsegment.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/breakpoint.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/buggyhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/buggyhello2.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/divzero.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/dumbfork.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/evilhello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/fairness.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultalloc.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultallocbad.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultbadhandler.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultdie.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultevilhandler.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultnostack.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultread.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultreadkernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultregs.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultwrite.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/faultwritekernel.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/forktree.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/hello.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/idle.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/pingpong.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/pingpongs.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/primes.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/sendpage.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/singlestep.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/softint.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/spin.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/stresssched.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/testbss.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_b	obj/user/yield.asm	/^						clr_b = (clr & 1) << 2;$/;"	d
clr_g	obj/kern/kernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/badsegment.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/breakpoint.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/buggyhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/buggyhello2.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/divzero.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/dumbfork.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/evilhello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/fairness.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultalloc.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultallocbad.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultbadhandler.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultdie.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultevilhandler.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultnostack.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultread.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultreadkernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultregs.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultwrite.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/faultwritekernel.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/forktree.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/hello.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/idle.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/pingpong.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/pingpongs.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/primes.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/sendpage.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/singlestep.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/softint.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/spin.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/stresssched.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/testbss.asm	/^						clr_g = clr & 2;$/;"	d
clr_g	obj/user/yield.asm	/^						clr_g = clr & 2;$/;"	d
clr_r	obj/kern/kernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/badsegment.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/breakpoint.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/buggyhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/buggyhello2.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/divzero.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/dumbfork.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/evilhello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/fairness.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultalloc.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultallocbad.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultbadhandler.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultdie.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultevilhandler.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultnostack.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultread.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultreadkernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultregs.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultwrite.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/faultwritekernel.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/forktree.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/hello.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/idle.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/pingpong.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/pingpongs.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/primes.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/sendpage.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/singlestep.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/softint.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/spin.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/stresssched.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/testbss.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
clr_r	obj/user/yield.asm	/^						clr_r = (clr & 4) >> 2;$/;"	d
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/singlestep.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon6	file:
cons_bgclr	kern/console.c	/^int cons_bgclr = 0;$/;"	v
cons_bgclr	lib/printf.c	/^int cons_bgclr = 0;$/;"	v
cons_bgclr	obj/kern/kernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/kern/kernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/badsegment.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/badsegment.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/breakpoint.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/breakpoint.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/buggyhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/buggyhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/buggyhello2.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/buggyhello2.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/divzero.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/divzero.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/dumbfork.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/dumbfork.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/evilhello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/evilhello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/fairness.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/fairness.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultalloc.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultalloc.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultallocbad.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultallocbad.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultbadhandler.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultbadhandler.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultdie.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultdie.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultevilhandler.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultevilhandler.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultnostack.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultnostack.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultread.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultread.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultreadkernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultreadkernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultregs.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultregs.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultwrite.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultwrite.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/faultwritekernel.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/faultwritekernel.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/forktree.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/forktree.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/hello.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/hello.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/idle.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/idle.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/pingpong.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/pingpong.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/pingpongs.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/pingpongs.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/primes.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/primes.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/sendpage.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/sendpage.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/singlestep.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/singlestep.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/softint.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/softint.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/spin.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/spin.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/stresssched.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/stresssched.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/testbss.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/testbss.asm	/^						cons_bgclr = 0;$/;"	d
cons_bgclr	obj/user/yield.asm	/^						cons_bgclr = (clr_r | clr_g | clr_b) << 12;$/;"	d
cons_bgclr	obj/user/yield.asm	/^						cons_bgclr = 0;$/;"	d
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
cons_textclr	kern/console.c	/^int cons_textclr = 0x0700;$/;"	v
cons_textclr	lib/printf.c	/^int cons_textclr = 0x0700;$/;"	v
cons_textclr	obj/kern/kernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/kern/kernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/badsegment.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/breakpoint.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/buggyhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/buggyhello2.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/divzero.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/divzero.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/divzero.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/dumbfork.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/evilhello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/fairness.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/fairness.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/fairness.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultalloc.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultallocbad.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultbadhandler.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultdie.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultevilhandler.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultnostack.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultread.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultread.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultread.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultreadkernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultregs.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultwrite.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/faultwritekernel.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/forktree.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/forktree.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/forktree.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/hello.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/hello.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/hello.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/idle.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/idle.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/idle.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/pingpong.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/pingpongs.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/primes.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/primes.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/primes.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/sendpage.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/singlestep.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/softint.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/softint.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/softint.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/spin.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/spin.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/spin.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/stresssched.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/testbss.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/testbss.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/testbss.asm	/^			cons_textclr = num;$/;"	d
cons_textclr	obj/user/yield.asm	/^						cons_textclr = (clr_r | clr_g | clr_b) << 8;$/;"	d
cons_textclr	obj/user/yield.asm	/^						cons_textclr = 0x0700;$/;"	d
cons_textclr	obj/user/yield.asm	/^			cons_textclr = num;$/;"	d
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/singlestep.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/singlestep.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr4	obj/kern/kernel.asm	/^		cr4 = rcr4();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
cur_env_id	obj/kern/kernel.asm	/^		cur_env_id = ENVX(curenv->env_id);$/;"	d
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
curva	obj/kern/kernel.asm	/^		curva = ROUNDDOWN(curva, PGSIZE);$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/singlestep.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/singlestep.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
detect_PS_support	kern/pmap.c	/^detect_PS_support()$/;"	f	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/singlestep.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/singlestep.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebp	obj/kern/kernel.asm	/^        ebp = (unsigned int*)(*ebp);$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
enable_PS_percpu	kern/pmap.c	/^void enable_PS_percpu()$/;"	f
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/singlestep.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/singlestep.asm	/^				err = -err;$/;"	d
err	obj/user/singlestep.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 f0 11 00       	mov    $0x11f000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 f0 11 f0       	mov    $0xf011f000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 5c 00 00 00       	call   f010009a <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d 80 5e 23 f0 00 	cmpl   $0x0,0xf0235e80$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	75 3a                	jne    f010008b <_panic+0x4b>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	89 35 80 5e 23 f0    	mov    %esi,0xf0235e80$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	fa                   	cli    $/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	fc                   	cld    $/;"	l
f0100059	obj/kern/kernel.asm	/^f0100059:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	e8 89 5f 00 00       	call   f0105fea <cpunum>$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	50                   	push   %eax$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	68 80 66 10 f0       	push   $0xf0106680$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	e8 b8 3d 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	53                   	push   %ebx$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	56                   	push   %esi$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	e8 88 3d 00 00       	call   f0103e04 <vcprintf>$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	c7 04 24 3f 7c 10 f0 	movl   $0xf0107c3f,(%esp)$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	e8 a2 3d 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	6a 00                	push   $0x0$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	e8 ca 0e 00 00       	call   f0100f5f <monitor>$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	eb f1                	jmp    f010008b <_panic+0x4b>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a <i386_init>:$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	55                   	push   %ebp$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	89 e5                	mov    %esp,%ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	53                   	push   %ebx$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 7f 05 00 00       	call   f0100625 <cons_init>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	68 ec 66 10 f0       	push   $0xf01066ec$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	e8 72 3d 00 00       	call   f0103e2a <cprintf>$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	e8 51 19 00 00       	call   f0101a0e <mem_init>$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	e8 98 35 00 00       	call   f010365a <env_init>$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	e8 7e 3e 00 00       	call   f0103f45 <trap_init>$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	e8 14 5c 00 00       	call   f0105ce0 <mp_init>$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 34 5f 00 00       	call   f0106005 <lapic_init>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 7b 3c 00 00       	call   f0103d51 <pic_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 04 24 20 14 12 f0 	movl   $0xf0121420,(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	e8 76 61 00 00       	call   f0106258 <spin_lock>$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	83 3d 8c 5e 23 f0 07 	cmpl   $0x7,0xf0235e8c$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	77 16                	ja     f0100104 <i386_init+0x6a>$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	68 00 70 00 00       	push   $0x7000$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	6a 50                	push   $0x50$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	68 07 67 10 f0       	push   $0xf0106707$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	e8 3c ff ff ff       	call   f0100040 <_panic>$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	b8 46 5c 10 f0       	mov    $0xf0105c46,%eax$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	2d cc 5b 10 f0       	sub    $0xf0105bcc,%eax$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	50                   	push   %eax$/;"	l
f0100112	obj/kern/kernel.asm	/^f0100112:	68 cc 5b 10 f0       	push   $0xf0105bcc$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	e8 f4 58 00 00       	call   f0105a15 <memmove>$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	bb 20 60 23 f0       	mov    $0xf0236020,%ebx$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	eb 4d                	jmp    f0100178 <i386_init+0xde>$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	e8 ba 5e 00 00       	call   f0105fea <cpunum>$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	05 20 60 23 f0       	add    $0xf0236020,%eax$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	39 c3                	cmp    %eax,%ebx$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	74 39                	je     f0100175 <i386_init+0xdb>$/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	89 d8                	mov    %ebx,%eax$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	2d 20 60 23 f0       	sub    $0xf0236020,%eax$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100146	obj/kern/kernel.asm	/^f0100146:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	05 00 f0 23 f0       	add    $0xf023f000,%eax$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	a3 84 5e 23 f0       	mov    %eax,0xf0235e84$/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	50                   	push   %eax$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	e8 e9 5f 00 00       	call   f0106153 <lapic_startap>$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	75 f8                	jne    f010016d <i386_init+0xd3>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	6b 05 c4 63 23 f0 74 	imul   $0x74,0xf02363c4,%eax$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	05 20 60 23 f0       	add    $0xf0236020,%eax$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	72 a3                	jb     f010012b <i386_init+0x91>$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	6a 00                	push   $0x0$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	68 88 95 20 f0       	push   $0xf0209588$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	e8 b5 36 00 00       	call   f010384c <env_create>$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	e8 22 47 00 00       	call   f01048be <sched_yield>$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c <mp_main>:$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	55                   	push   %ebp$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	89 e5                	mov    %esp,%ebp$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	e8 10 13 00 00       	call   f01014b7 <enable_PS_percpu>$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	77 12                	ja     f01001c5 <mp_main+0x29>$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	50                   	push   %eax$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	6a 69                	push   $0x69$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	68 07 67 10 f0       	push   $0xf0106707$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	e8 7b fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	e8 18 5e 00 00       	call   f0105fea <cpunum>$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	50                   	push   %eax$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	68 13 67 10 f0       	push   $0xf0106713$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	e8 4a 3c 00 00       	call   f0103e2a <cprintf>$/;"	l
f01001e0	obj/kern/kernel.asm	/^f01001e0:	e8 20 5e 00 00       	call   f0106005 <lapic_init>$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	e8 40 34 00 00       	call   f010362a <env_init_percpu>$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	e8 4f 3c 00 00       	call   f0103e3e <trap_init_percpu>$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	e8 f6 5d 00 00       	call   f0105fea <cpunum>$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	81 c2 20 60 23 f0    	add    $0xf0236020,%edx$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	c7 04 24 20 14 12 f0 	movl   $0xf0121420,(%esp)$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	e8 46 60 00 00       	call   f0106258 <spin_lock>$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	e8 a7 46 00 00       	call   f01048be <sched_yield>$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217 <_warn>:$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	55                   	push   %ebp$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	89 e5                	mov    %esp,%ebp$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	53                   	push   %ebx$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	68 29 67 10 f0       	push   $0xf0106729$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	e8 f9 3b 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	53                   	push   %ebx$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	e8 c7 3b 00 00       	call   f0103e04 <vcprintf>$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	c7 04 24 3f 7c 10 f0 	movl   $0xf0107c3f,(%esp)$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	e8 e1 3b 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	83 c4 10             	add    $0x10,%esp$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	c9                   	leave  $/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	c3                   	ret    $/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251 <serial_proc_data>:$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	55                   	push   %ebp$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	89 e5                	mov    %esp,%ebp$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	ec                   	in     (%dx),%al$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	a8 01                	test   $0x1,%al$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	74 0b                	je     f0100269 <serial_proc_data+0x18>$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	ec                   	in     (%dx),%al$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	eb 05                	jmp    f010026e <serial_proc_data+0x1d>$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	5d                   	pop    %ebp$/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	c3                   	ret    $/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270 <cons_intr>:$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	55                   	push   %ebp$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	89 e5                	mov    %esp,%ebp$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	53                   	push   %ebx$/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	89 c3                	mov    %eax,%ebx$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	eb 2b                	jmp    f01002a6 <cons_intr+0x36>$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	85 c0                	test   %eax,%eax$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	74 27                	je     f01002a6 <cons_intr+0x36>$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	8b 0d 24 52 23 f0    	mov    0xf0235224,%ecx$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	89 15 24 52 23 f0    	mov    %edx,0xf0235224$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	88 81 20 50 23 f0    	mov    %al,-0xfdcafe0(%ecx)$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	75 0a                	jne    f01002a6 <cons_intr+0x36>$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	c7 05 24 52 23 f0 00 	movl   $0x0,0xf0235224$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	00 00 00 $/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	ff d3                	call   *%ebx$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	75 ce                	jne    f010027b <cons_intr+0xb>$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	83 c4 04             	add    $0x4,%esp$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	5b                   	pop    %ebx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	5d                   	pop    %ebp$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	c3                   	ret    $/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3 <kbd_proc_data>:$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	ec                   	in     (%dx),%al$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	a8 01                	test   $0x1,%al$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	0f 84 f8 00 00 00    	je     f01003b9 <kbd_proc_data+0x106>$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	a8 20                	test   $0x20,%al$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	0f 85 f6 00 00 00    	jne    f01003bf <kbd_proc_data+0x10c>$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	ec                   	in     (%dx),%al$/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	89 c2                	mov    %eax,%edx$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	3c e0                	cmp    $0xe0,%al$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	75 0d                	jne    f01002e2 <kbd_proc_data+0x2f>$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	83 0d 04 50 23 f0 40 	orl    $0x40,0xf0235004$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	c3                   	ret    $/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	55                   	push   %ebp$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	53                   	push   %ebx$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	84 c0                	test   %al,%al$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	79 36                	jns    f0100323 <kbd_proc_data+0x70>$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	8b 0d 04 50 23 f0    	mov    0xf0235004,%ecx$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	89 cb                	mov    %ecx,%ebx$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	83 e3 40             	and    $0x40,%ebx$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	85 db                	test   %ebx,%ebx$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	0f b6 82 a0 68 10 f0 	movzbl -0xfef9760(%edx),%eax$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	83 c8 40             	or     $0x40,%eax$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	f7 d0                	not    %eax$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	21 c8                	and    %ecx,%eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	a3 04 50 23 f0       	mov    %eax,0xf0235004$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	e9 a4 00 00 00       	jmp    f01003c7 <kbd_proc_data+0x114>$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	8b 0d 04 50 23 f0    	mov    0xf0235004,%ecx$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	74 0e                	je     f010033c <kbd_proc_data+0x89>$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	89 c2                	mov    %eax,%edx$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	89 0d 04 50 23 f0    	mov    %ecx,0xf0235004$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	0f b6 82 a0 68 10 f0 	movzbl -0xfef9760(%edx),%eax$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	0b 05 04 50 23 f0    	or     0xf0235004,%eax$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	0f b6 8a a0 67 10 f0 	movzbl -0xfef9860(%edx),%ecx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	31 c8                	xor    %ecx,%eax$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	a3 04 50 23 f0       	mov    %eax,0xf0235004$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	89 c1                	mov    %eax,%ecx$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	8b 0c 8d 80 67 10 f0 	mov    -0xfef9880(,%ecx,4),%ecx$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	a8 08                	test   $0x8,%al$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	74 1b                	je     f010038c <kbd_proc_data+0xd9>$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	89 da                	mov    %ebx,%edx$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	77 05                	ja     f0100380 <kbd_proc_data+0xcd>$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	eb 0c                	jmp    f010038c <kbd_proc_data+0xd9>$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	f7 d0                	not    %eax$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	a8 06                	test   $0x6,%al$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	75 33                	jne    f01003c5 <kbd_proc_data+0x112>$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	75 2b                	jne    f01003c5 <kbd_proc_data+0x112>$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	68 43 67 10 f0       	push   $0xf0106743$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	e8 83 3a 00 00       	call   f0103e2a <cprintf>$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	ee                   	out    %al,(%dx)$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	89 d8                	mov    %ebx,%eax$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	eb 0e                	jmp    f01003c7 <kbd_proc_data+0x114>$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	c3                   	ret    $/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	c3                   	ret    $/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	89 d8                	mov    %ebx,%eax$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	c9                   	leave  $/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	c3                   	ret    $/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc <cons_putc>:$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	55                   	push   %ebp$/;"	l
f01003cd	obj/kern/kernel.asm	/^f01003cd:	89 e5                	mov    %esp,%ebp$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	57                   	push   %edi$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	56                   	push   %esi$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	53                   	push   %ebx$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	89 c6                	mov    %eax,%esi$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	eb 09                	jmp    f01003f1 <cons_putc+0x25>$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	89 ca                	mov    %ecx,%edx$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	ec                   	in     (%dx),%al$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	ec                   	in     (%dx),%al$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	ec                   	in     (%dx),%al$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	ec                   	in     (%dx),%al$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	89 fa                	mov    %edi,%edx$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	ec                   	in     (%dx),%al$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	a8 20                	test   $0x20,%al$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	75 08                	jne    f0100400 <cons_putc+0x34>$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	7e e8                	jle    f01003e8 <cons_putc+0x1c>$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	89 f0                	mov    %esi,%eax$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	ee                   	out    %al,(%dx)$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	eb 09                	jmp    f0100422 <cons_putc+0x56>$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	89 ca                	mov    %ecx,%edx$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	ec                   	in     (%dx),%al$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	ec                   	in     (%dx),%al$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	ec                   	in     (%dx),%al$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	ec                   	in     (%dx),%al$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	89 fa                	mov    %edi,%edx$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	ec                   	in     (%dx),%al$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	7f 04                	jg     f0100431 <cons_putc+0x65>$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	84 c0                	test   %al,%al$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	79 e8                	jns    f0100419 <cons_putc+0x4d>$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	89 f0                	mov    %esi,%eax$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	ee                   	out    %al,(%dx)$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	ee                   	out    %al,(%dx)$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	ee                   	out    %al,(%dx)$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	a1 00 13 12 f0       	mov    0xf0121300,%eax$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	0b 05 00 50 23 f0    	or     0xf0235000,%eax$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	09 f0                	or     %esi,%eax$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	89 c1                	mov    %eax,%ecx$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	74 76                	je     f01004d7 <cons_putc+0x10b>$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	7f 0a                	jg     f0100470 <cons_putc+0xa4>$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	74 14                	je     f010047f <cons_putc+0xb3>$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	e9 9b 00 00 00       	jmp    f010050b <cons_putc+0x13f>$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	74 3c                	je     f01004b1 <cons_putc+0xe5>$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	74 3f                	je     f01004b9 <cons_putc+0xed>$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	e9 8c 00 00 00       	jmp    f010050b <cons_putc+0x13f>$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	0f b7 05 28 52 23 f0 	movzwl 0xf0235228,%eax$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	66 85 c0             	test   %ax,%ax$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	0f 84 e8 00 00 00    	je     f0100577 <cons_putc+0x1ab>$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	66 a3 28 52 23 f0    	mov    %ax,0xf0235228$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	89 ce                	mov    %ecx,%esi$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	66 81 e6 00 ff       	and    $0xff00,%si$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	83 ce 20             	or     $0x20,%esi$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	8b 15 2c 52 23 f0    	mov    0xf023522c,%edx$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	eb 78                	jmp    f0100529 <cons_putc+0x15d>$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	66 83 05 28 52 23 f0 	addw   $0x50,0xf0235228$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	50 $/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	0f b7 05 28 52 23 f0 	movzwl 0xf0235228,%eax$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	66 a3 28 52 23 f0    	mov    %ax,0xf0235228$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	eb 52                	jmp    f0100529 <cons_putc+0x15d>$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	e8 eb fe ff ff       	call   f01003cc <cons_putc>$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	e8 e1 fe ff ff       	call   f01003cc <cons_putc>$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	e8 d7 fe ff ff       	call   f01003cc <cons_putc>$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	e8 cd fe ff ff       	call   f01003cc <cons_putc>$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	e8 c3 fe ff ff       	call   f01003cc <cons_putc>$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	eb 1e                	jmp    f0100529 <cons_putc+0x15d>$/;"	l
f010050b	obj/kern/kernel.asm	/^f010050b:	0f b7 05 28 52 23 f0 	movzwl 0xf0235228,%eax$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	66 89 15 28 52 23 f0 	mov    %dx,0xf0235228$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	8b 15 2c 52 23 f0    	mov    0xf023522c,%edx$/;"	l
f0100525	obj/kern/kernel.asm	/^f0100525:	66 89 0c 42          	mov    %cx,(%edx,%eax,2)$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	66 81 3d 28 52 23 f0 	cmpw   $0x7cf,0xf0235228$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	cf 07 $/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	76 43                	jbe    f0100577 <cons_putc+0x1ab>$/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	a1 2c 52 23 f0       	mov    0xf023522c,%eax$/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	68 00 0f 00 00       	push   $0xf00$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	52                   	push   %edx$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	50                   	push   %eax$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	e8 c7 54 00 00       	call   f0105a15 <memmove>$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	8b 15 2c 52 23 f0    	mov    0xf023522c,%edx$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	83 c0 02             	add    $0x2,%eax$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	39 d0                	cmp    %edx,%eax$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	75 f4                	jne    f0100563 <cons_putc+0x197>$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	66 83 2d 28 52 23 f0 	subw   $0x50,0xf0235228$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	50 $/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	8b 0d 30 52 23 f0    	mov    0xf0235230,%ecx$/;"	l
f010057d	obj/kern/kernel.asm	/^f010057d:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	89 ca                	mov    %ecx,%edx$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	ee                   	out    %al,(%dx)$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	0f b7 1d 28 52 23 f0 	movzwl 0xf0235228,%ebx$/;"	l
f010058c	obj/kern/kernel.asm	/^f010058c:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	89 f2                	mov    %esi,%edx$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	ee                   	out    %al,(%dx)$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	89 ca                	mov    %ecx,%edx$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	ee                   	out    %al,(%dx)$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	89 d8                	mov    %ebx,%eax$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	89 f2                	mov    %esi,%edx$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	ee                   	out    %al,(%dx)$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	5b                   	pop    %ebx$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	5e                   	pop    %esi$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	5f                   	pop    %edi$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	5d                   	pop    %ebp$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	c3                   	ret    $/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad <serial_intr>:$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	80 3d 34 52 23 f0 00 	cmpb   $0x0,0xf0235234$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	74 11                	je     f01005c7 <serial_intr+0x1a>$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	55                   	push   %ebp$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	b8 51 02 10 f0       	mov    $0xf0100251,%eax$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	e8 aa fc ff ff       	call   f0100270 <cons_intr>$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	c9                   	leave  $/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	f3 c3                	repz ret $/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9 <kbd_intr>:$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	55                   	push   %ebp$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	b8 b3 02 10 f0       	mov    $0xf01002b3,%eax$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	e8 97 fc ff ff       	call   f0100270 <cons_intr>$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	c9                   	leave  $/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	c3                   	ret    $/;"	l
f01005db	obj/kern/kernel.asm	/^f01005db <cons_getc>:$/;"	l
f01005db	obj/kern/kernel.asm	/^f01005db:	55                   	push   %ebp$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	e8 c7 ff ff ff       	call   f01005ad <serial_intr>$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	e8 de ff ff ff       	call   f01005c9 <kbd_intr>$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	a1 20 52 23 f0       	mov    0xf0235220,%eax$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	3b 05 24 52 23 f0    	cmp    0xf0235224,%eax$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	74 26                	je     f010061e <cons_getc+0x43>$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	89 15 20 52 23 f0    	mov    %edx,0xf0235220$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	0f b6 88 20 50 23 f0 	movzbl -0xfdcafe0(%eax),%ecx$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	89 c8                	mov    %ecx,%eax$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	75 11                	jne    f0100623 <cons_getc+0x48>$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	c7 05 20 52 23 f0 00 	movl   $0x0,0xf0235220$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	00 00 00 $/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	eb 05                	jmp    f0100623 <cons_getc+0x48>$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	c9                   	leave  $/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	c3                   	ret    $/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625 <cons_init>:$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	55                   	push   %ebp$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	89 e5                	mov    %esp,%ebp$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	57                   	push   %edi$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	56                   	push   %esi$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	53                   	push   %ebx$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	5a a5 $/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	74 11                	je     f010065c <cons_init+0x37>$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	c7 05 30 52 23 f0 b4 	movl   $0x3b4,0xf0235230$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	03 00 00 $/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	eb 16                	jmp    f0100672 <cons_init+0x4d>$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	c7 05 30 52 23 f0 d4 	movl   $0x3d4,0xf0235230$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	03 00 00 $/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	8b 3d 30 52 23 f0    	mov    0xf0235230,%edi$/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	89 fa                	mov    %edi,%edx$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	ee                   	out    %al,(%dx)$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	89 da                	mov    %ebx,%edx$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	ec                   	in     (%dx),%al$/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	89 fa                	mov    %edi,%edx$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	ee                   	out    %al,(%dx)$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	89 da                	mov    %ebx,%edx$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	ec                   	in     (%dx),%al$/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697:	89 35 2c 52 23 f0    	mov    %esi,0xf023522c$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	09 c8                	or     %ecx,%eax$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	66 a3 28 52 23 f0    	mov    %ax,0xf0235228$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	e8 1c ff ff ff       	call   f01005c9 <kbd_intr>$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	0f b7 05 a8 13 12 f0 	movzwl 0xf01213a8,%eax$/;"	l
f01006b7	obj/kern/kernel.asm	/^f01006b7:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	50                   	push   %eax$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	e8 17 36 00 00       	call   f0103cd9 <irq_setmask_8259A>$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	89 f2                	mov    %esi,%edx$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	ee                   	out    %al,(%dx)$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	ee                   	out    %al,(%dx)$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	89 da                	mov    %ebx,%edx$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	ee                   	out    %al,(%dx)$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	ee                   	out    %al,(%dx)$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	ee                   	out    %al,(%dx)$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	ee                   	out    %al,(%dx)$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	ee                   	out    %al,(%dx)$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	ec                   	in     (%dx),%al$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	89 c1                	mov    %eax,%ecx$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	3c ff                	cmp    $0xff,%al$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	0f 95 05 34 52 23 f0 	setne  0xf0235234$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	89 f2                	mov    %esi,%edx$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	ec                   	in     (%dx),%al$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	89 da                	mov    %ebx,%edx$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	ec                   	in     (%dx),%al$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	75 10                	jne    f0100742 <cons_init+0x11d>$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	68 4f 67 10 f0       	push   $0xf010674f$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	e8 eb 36 00 00       	call   f0103e2a <cprintf>$/;"	l
f010073f	obj/kern/kernel.asm	/^f010073f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	5b                   	pop    %ebx$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	5e                   	pop    %esi$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	5f                   	pop    %edi$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	5d                   	pop    %ebp$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	c3                   	ret    $/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a <cputchar>:$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	55                   	push   %ebp$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	89 e5                	mov    %esp,%ebp$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	e8 74 fc ff ff       	call   f01003cc <cons_putc>$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	c9                   	leave  $/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	c3                   	ret    $/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a <getchar>:$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	55                   	push   %ebp$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	89 e5                	mov    %esp,%ebp$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	e8 76 fe ff ff       	call   f01005db <cons_getc>$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	85 c0                	test   %eax,%eax$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	74 f7                	je     f0100760 <getchar+0x6>$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	c9                   	leave  $/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	c3                   	ret    $/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b <iscons>:$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	55                   	push   %ebp$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	89 e5                	mov    %esp,%ebp$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	5d                   	pop    %ebp$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	c3                   	ret    $/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775 <mon_help>:$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	55                   	push   %ebp$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	89 e5                	mov    %esp,%ebp$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	56                   	push   %esi$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	53                   	push   %ebx$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	bb 64 6f 10 f0       	mov    $0xf0106f64,%ebx$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	be c4 6f 10 f0       	mov    $0xf0106fc4,%esi$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	ff 33                	pushl  (%ebx)$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	ff 73 fc             	pushl  -0x4(%ebx)$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	68 a0 69 10 f0       	push   $0xf01069a0$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	e8 94 36 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	83 c4 10             	add    $0x10,%esp$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	39 f3                	cmp    %esi,%ebx$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	75 e4                	jne    f0100784 <mon_help+0xf>$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	5b                   	pop    %ebx$/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	5e                   	pop    %esi$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	5d                   	pop    %ebp$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	c3                   	ret    $/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac <mon_kerninfo>:$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	55                   	push   %ebp$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	68 a9 69 10 f0       	push   $0xf01069a9$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	e8 6e 36 00 00       	call   f0103e2a <cprintf>$/;"	l
f01007bc	obj/kern/kernel.asm	/^f01007bc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	68 84 6b 10 f0       	push   $0xf0106b84$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	e8 5c 36 00 00       	call   f0103e2a <cprintf>$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	68 ac 6b 10 f0       	push   $0xf0106bac$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	e8 45 36 00 00       	call   f0103e2a <cprintf>$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	68 71 66 10 00       	push   $0x106671$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	68 71 66 10 f0       	push   $0xf0106671$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	68 d0 6b 10 f0       	push   $0xf0106bd0$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	e8 2e 36 00 00       	call   f0103e2a <cprintf>$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	68 00 50 23 00       	push   $0x235000$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	68 00 50 23 f0       	push   $0xf0235000$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	68 f4 6b 10 f0       	push   $0xf0106bf4$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	e8 17 36 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	68 08 70 27 00       	push   $0x277008$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	68 08 70 27 f0       	push   $0xf0277008$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	68 18 6c 10 f0       	push   $0xf0106c18$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	e8 00 36 00 00       	call   f0103e2a <cprintf>$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	b8 07 74 27 f0       	mov    $0xf0277407,%eax$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	85 c0                	test   %eax,%eax$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	50                   	push   %eax$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	68 3c 6c 10 f0       	push   $0xf0106c3c$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	e8 d5 35 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	c9                   	leave  $/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	c3                   	ret    $/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c <mon_backtrace>:$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	55                   	push   %ebp$/;"	l
f010085d	obj/kern/kernel.asm	/^f010085d:	89 e5                	mov    %esp,%ebp$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	57                   	push   %edi$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	56                   	push   %esi$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	53                   	push   %ebx$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	89 ee                	mov    %ebp,%esi$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	e8 b9 35 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	eb 78                	jmp    f01008ee <mon_backtrace+0x92>$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	89 c7                	mov    %eax,%edi$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	8d 55 d0             	lea    -0x30(%ebp),%edx$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	52                   	push   %edx$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	50                   	push   %eax$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	e8 e6 45 00 00       	call   f0104e71 <debuginfo_eip>$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	57                   	push   %edi$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	56                   	push   %esi$/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	68 d4 69 10 f0       	push   $0xf01069d4$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	e8 90 35 00 00       	call   f0103e2a <cprintf>$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	ff 33                	pushl  (%ebx)$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	68 eb 69 10 f0       	push   $0xf01069eb$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	e8 78 35 00 00       	call   f0103e2a <cprintf>$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	39 fb                	cmp    %edi,%ebx$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	75 e7                	jne    f01008a3 <mon_backtrace+0x47>$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	68 3f 7c 10 f0       	push   $0xf0107c3f$/;"	l
f01008c4	obj/kern/kernel.asm	/^f01008c4:	e8 61 35 00 00       	call   f0103e2a <cprintf>$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	83 c4 08             	add    $0x8,%esp$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	50                   	push   %eax$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	68 f1 69 10 f0       	push   $0xf01069f1$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	e8 41 35 00 00       	call   f0103e2a <cprintf>$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	8b 36                	mov    (%esi),%esi$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	83 c4 20             	add    $0x20,%esp$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	85 f6                	test   %esi,%esi$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	75 84                	jne    f0100876 <mon_backtrace+0x1a>$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	5b                   	pop    %ebx$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	5e                   	pop    %esi$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	5f                   	pop    %edi$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	5d                   	pop    %ebp$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	c3                   	ret    $/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff <mon_showmappings>:$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	55                   	push   %ebp$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	89 e5                	mov    %esp,%ebp$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	57                   	push   %edi$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	56                   	push   %esi$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	53                   	push   %ebx$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	74 26                	je     f0100934 <mon_showmappings+0x35>$/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	68 02 6a 10 f0       	push   $0xf0106a02$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	e8 0f 35 00 00       	call   f0103e2a <cprintf>$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	c7 04 24 68 6c 10 f0 	movl   $0xf0106c68,(%esp)$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	e8 03 35 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	83 c4 10             	add    $0x10,%esp$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	e9 8a 01 00 00       	jmp    f0100abe <mon_showmappings+0x1bf>$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	6a 00                	push   $0x0$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	6a 00                	push   $0x0$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	e8 a6 51 00 00       	call   f0105aec <strtol>$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	89 c3                	mov    %eax,%ebx$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	6a 00                	push   $0x0$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	6a 00                	push   $0x0$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	e8 92 51 00 00       	call   f0105aec <strtol>$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	89 c7                	mov    %eax,%edi$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	6a 00                	push   $0x0$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	53                   	push   %ebx$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	e8 10 0d 00 00       	call   f010167d <pgdir_walk>$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	85 c0                	test   %eax,%eax$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	75 08                	jne    f010097c <mon_showmappings+0x7d>$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	eb 1a                	jmp    f0100996 <mon_showmappings+0x97>$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	8b 00                	mov    (%eax),%eax$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
f0100983	obj/kern/kernel.asm	/^f0100983:	89 da                	mov    %ebx,%edx$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	81 e2 00 00 c0 ff    	and    $0xffc00000,%edx$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	85 c0                	test   %eax,%eax$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	0f 45 da             	cmovne %edx,%ebx$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	68 90 6c 10 f0       	push   $0xf0106c90$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	e8 87 34 00 00       	call   f0103e2a <cprintf>$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	e9 f1 00 00 00       	jmp    f0100a9c <mon_showmappings+0x19d>$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	6a 00                	push   $0x0$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	53                   	push   %ebx$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	e8 c1 0c 00 00       	call   f010167d <pgdir_walk>$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	89 c6                	mov    %eax,%esi$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	83 c4 08             	add    $0x8,%esp$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	53                   	push   %ebx$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	68 1e 6a 10 f0       	push   $0xf0106a1e$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	e8 5e 34 00 00       	call   f0103e2a <cprintf>$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	85 f6                	test   %esi,%esi$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	74 06                	je     f01009d9 <mon_showmappings+0xda>$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	8b 06                	mov    (%esi),%eax$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	a8 01                	test   $0x1,%al$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	75 29                	jne    f0100a02 <mon_showmappings+0x103>$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	68 26 6a 10 f0       	push   $0xf0106a26$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	e8 44 34 00 00       	call   f0103e2a <cprintf>$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	8d 83 00 00 40 00    	lea    0x400000(%ebx),%eax$/;"	l
f01009ec	obj/kern/kernel.asm	/^f01009ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	39 c3                	cmp    %eax,%ebx$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	0f 83 b4 00 00 00    	jae    f0100aab <mon_showmappings+0x1ac>$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	e9 9a 00 00 00       	jmp    f0100a9c <mon_showmappings+0x19d>$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	50                   	push   %eax$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	68 1e 6a 10 f0       	push   $0xf0106a1e$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	e8 15 34 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	8b 06                	mov    (%esi),%eax$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	89 c2                	mov    %eax,%edx$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	83 e2 06             	and    $0x6,%edx$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0100a22	obj/kern/kernel.asm	/^f0100a22:	b9 2d 00 00 00       	mov    $0x2d,%ecx$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	89 c2                	mov    %eax,%edx$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	19 d2                	sbb    %edx,%edx$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100a42	obj/kern/kernel.asm	/^f0100a42:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	19 c0                	sbb    %eax,%eax$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	51                   	push   %ecx$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	52                   	push   %edx$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	50                   	push   %eax$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	68 35 6a 10 f0       	push   $0xf0106a35$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	e8 d0 33 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	f6 06 80             	testb  $0x80,(%esi)$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	74 1e                	je     f0100a80 <mon_showmappings+0x181>$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	68 3e 6a 10 f0       	push   $0xf0106a3e$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	e8 bb 33 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	8d 83 00 00 40 00    	lea    0x400000(%ebx),%eax$/;"	l
f0100a75	obj/kern/kernel.asm	/^f0100a75:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	73 36                	jae    f0100ab2 <mon_showmappings+0x1b3>$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	eb 1c                	jmp    f0100a9c <mon_showmappings+0x19d>$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	68 45 6a 10 f0       	push   $0xf0106a45$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	e8 9d 33 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	73 1f                	jae    f0100ab9 <mon_showmappings+0x1ba>$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	0f 86 07 ff ff ff    	jbe    f01009ab <mon_showmappings+0xac>$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	eb 13                	jmp    f0100abe <mon_showmappings+0x1bf>$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	eb 0c                	jmp    f0100abe <mon_showmappings+0x1bf>$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	eb 05                	jmp    f0100abe <mon_showmappings+0x1bf>$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	5b                   	pop    %ebx$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	5e                   	pop    %esi$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	5f                   	pop    %edi$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	5d                   	pop    %ebp$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	c3                   	ret    $/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6 <mon_chperm>:$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	55                   	push   %ebp$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	57                   	push   %edi$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	56                   	push   %esi$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	53                   	push   %ebx$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	74 26                	je     f0100afb <mon_chperm+0x35>$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	68 02 6a 10 f0       	push   $0xf0106a02$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	e8 48 33 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	c7 04 24 bc 6c 10 f0 	movl   $0xf0106cbc,(%esp)$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	e8 3c 33 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	e9 40 02 00 00       	jmp    f0100d3b <mon_chperm+0x275>$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	80 38 2d             	cmpb   $0x2d,(%eax)$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	75 0e                	jne    f0100b14 <mon_chperm+0x4e>$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	0f b6 58 01          	movzbl 0x1(%eax),%ebx$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	80 fb 70             	cmp    $0x70,%bl$/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	74 2c                	je     f0100b3b <mon_chperm+0x75>$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	80 fb 76             	cmp    $0x76,%bl$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	74 27                	je     f0100b3b <mon_chperm+0x75>$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	50                   	push   %eax$/;"	l
f0100b18	obj/kern/kernel.asm	/^f0100b18:	68 4c 6a 10 f0       	push   $0xf0106a4c$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	e8 08 33 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	c7 04 24 bc 6c 10 f0 	movl   $0xf0106cbc,(%esp)$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	e8 fc 32 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	e9 00 02 00 00       	jmp    f0100d3b <mon_chperm+0x275>$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	0f b6 78 02          	movzbl 0x2(%eax),%edi$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	6a 00                	push   $0x0$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	6a 00                	push   $0x0$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	ff 70 08             	pushl  0x8(%eax)$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	e8 9b 4f 00 00       	call   f0105aec <strtol>$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	89 c2                	mov    %eax,%edx$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	89 f9                	mov    %edi,%ecx$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	80 f9 70             	cmp    $0x70,%cl$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	89 c6                	mov    %eax,%esi$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	80 fb 70             	cmp    $0x70,%bl$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	75 25                	jne    f0100b90 <mon_chperm+0xca>$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	89 f2                	mov    %esi,%edx$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	3b 15 8c 5e 23 f0    	cmp    0xf0235e8c,%edx$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	72 12                	jb     f0100b8a <mon_chperm+0xc4>$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	56                   	push   %esi$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	6a 5a                	push   $0x5a$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	e8 b6 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	8d b6 00 00 00 f0    	lea    -0x10000000(%esi),%esi$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	6a 00                	push   $0x0$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	56                   	push   %esi$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	e8 dc 0a 00 00       	call   f010167d <pgdir_walk>$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	89 c7                	mov    %eax,%edi$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	8b 18                	mov    (%eax),%ebx$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	f6 c3 01             	test   $0x1,%bl$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	75 1a                	jne    f0100bc7 <mon_chperm+0x101>$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	68 f4 6c 10 f0       	push   $0xf0106cf4$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	e8 70 32 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bbd	obj/kern/kernel.asm	/^f0100bbd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	e9 74 01 00 00       	jmp    f0100d3b <mon_chperm+0x275>$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	89 da                	mov    %ebx,%edx$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	81 e2 80 00 00 00    	and    $0x80,%edx$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	89 f0                	mov    %esi,%eax$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	85 d2                	test   %edx,%edx$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	0f 45 f0             	cmovne %eax,%esi$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100bde	obj/kern/kernel.asm	/^f0100bde:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	80 f9 07             	cmp    $0x7,%cl$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	77 36                	ja     f0100c22 <mon_chperm+0x15c>$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	6a 00                	push   $0x0$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	6a 00                	push   $0x0$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	52                   	push   %edx$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	e8 f3 4e 00 00       	call   f0105aec <strtol>$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	89 da                	mov    %ebx,%edx$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	83 e2 f8             	and    $0xfffffff8,%edx$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	09 d0                	or     %edx,%eax$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	a8 01                	test   $0x1,%al$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	74 04                	je     f0100c0b <mon_chperm+0x145>$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	eb 65                	jmp    f0100c70 <mon_chperm+0x1aa>$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	83 c8 01             	or     $0x1,%eax$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	68 28 6d 10 f0       	push   $0xf0106d28$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	e8 0d 32 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	eb 4e                	jmp    f0100c70 <mon_chperm+0x1aa>$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	3c 55                	cmp    $0x55,%al$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	75 09                	jne    f0100c2f <mon_chperm+0x169>$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	83 c8 04             	or     $0x4,%eax$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	eb 0b                	jmp    f0100c3a <mon_chperm+0x174>$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	75 07                	jne    f0100c3a <mon_chperm+0x174>$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	83 e0 fb             	and    $0xfffffffb,%eax$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	89 07                	mov    %eax,(%edi)$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	0f b6 40 01          	movzbl 0x1(%eax),%eax$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	3c 57                	cmp    $0x57,%al$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	75 05                	jne    f0100c4d <mon_chperm+0x187>$/;"	l
f0100c48	obj/kern/kernel.asm	/^f0100c48:	83 0f 02             	orl    $0x2,(%edi)$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	eb 07                	jmp    f0100c54 <mon_chperm+0x18e>$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	75 03                	jne    f0100c54 <mon_chperm+0x18e>$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	83 27 fd             	andl   $0xfffffffd,(%edi)$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	80 78 02 2d          	cmpb   $0x2d,0x2(%eax)$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	75 10                	jne    f0100c70 <mon_chperm+0x1aa>$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	68 28 6d 10 f0       	push   $0xf0106d28$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	e8 bd 31 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	56                   	push   %esi$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	68 71 6a 10 f0       	push   $0xf0106a71$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	e8 ac 31 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	8b 07                	mov    (%edi),%eax$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	50                   	push   %eax$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	68 82 6a 10 f0       	push   $0xf0106a82$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	e8 97 31 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	c7 04 24 4c 6d 10 f0 	movl   $0xf0106d4c,(%esp)$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	e8 8b 31 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	83 e0 06             	and    $0x6,%eax$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ca7	obj/kern/kernel.asm	/^f0100ca7:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	b9 57 00 00 00       	mov    $0x57,%ecx$/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	0f 45 c8             	cmovne %eax,%ecx$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	89 d8                	mov    %ebx,%eax$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	83 e0 04             	and    $0x4,%eax$/;"	l
f0100cbc	obj/kern/kernel.asm	/^f0100cbc:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	19 d2                	sbb    %edx,%edx$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	83 e3 02             	and    $0x2,%ebx$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	19 c0                	sbb    %eax,%eax$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	51                   	push   %ecx$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	52                   	push   %edx$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	50                   	push   %eax$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	68 93 6a 10 f0       	push   $0xf0106a93$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	e8 48 31 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	c7 04 24 70 6d 10 f0 	movl   $0xf0106d70,(%esp)$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	e8 3c 31 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	8b 07                	mov    (%edi),%eax$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	89 c2                	mov    %eax,%edx$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	83 e2 06             	and    $0x6,%edx$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	b9 2d 00 00 00       	mov    $0x2d,%ecx$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	89 c2                	mov    %eax,%edx$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	83 e2 04             	and    $0x4,%edx$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	19 d2                	sbb    %edx,%edx$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	83 e2 db             	and    $0xffffffdb,%edx$/;"	l
f0100d15	obj/kern/kernel.asm	/^f0100d15:	83 c2 52             	add    $0x52,%edx$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	19 c0                	sbb    %eax,%eax$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	83 e0 d6             	and    $0xffffffd6,%eax$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	83 c0 57             	add    $0x57,%eax$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	51                   	push   %ecx$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	52                   	push   %edx$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	50                   	push   %eax$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	68 93 6a 10 f0       	push   $0xf0106a93$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	e8 f7 30 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	5b                   	pop    %ebx$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	5e                   	pop    %esi$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	5f                   	pop    %edi$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	5d                   	pop    %ebp$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	c3                   	ret    $/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43 <mon_continue>:$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	55                   	push   %ebp$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	85 c0                	test   %eax,%eax$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	74 1d                	je     f0100d6d <mon_continue+0x2a>$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	81 60 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%eax)$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	e8 8e 52 00 00       	call   f0105fea <cpunum>$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100d62	obj/kern/kernel.asm	/^f0100d62:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	e8 7b 2e 00 00       	call   f0103be8 <env_run>$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	68 9d 6a 10 f0       	push   $0xf0106a9d$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	e8 b0 30 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	c9                   	leave  $/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	c3                   	ret    $/;"	l
f0100d81	obj/kern/kernel.asm	/^f0100d81 <mon_step>:$/;"	l
f0100d81	obj/kern/kernel.asm	/^f0100d81:	55                   	push   %ebp$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	85 c0                	test   %eax,%eax$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	74 1d                	je     f0100dab <mon_step+0x2a>$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	81 48 38 00 01 00 00 	orl    $0x100,0x38(%eax)$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	e8 50 52 00 00       	call   f0105fea <cpunum>$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100da0	obj/kern/kernel.asm	/^f0100da0:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	e8 3d 2e 00 00       	call   f0103be8 <env_run>$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	68 9d 6a 10 f0       	push   $0xf0106a9d$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	e8 72 30 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	c9                   	leave  $/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	c3                   	ret    $/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf <mon_dumpmem>:$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	55                   	push   %ebp$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	57                   	push   %edi$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	56                   	push   %esi$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	53                   	push   %ebx$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	74 26                	je     f0100df7 <mon_dumpmem+0x38>$/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	68 02 6a 10 f0       	push   $0xf0106a02$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	e8 4c 30 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	c7 04 24 90 6d 10 f0 	movl   $0xf0106d90,(%esp)$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	e8 40 30 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	e9 60 01 00 00       	jmp    f0100f57 <mon_dumpmem+0x198>$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	80 38 2d             	cmpb   $0x2d,(%eax)$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	75 0e                	jne    f0100e0d <mon_dumpmem+0x4e>$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	0f b6 50 01          	movzbl 0x1(%eax),%edx$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	80 fa 70             	cmp    $0x70,%dl$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	74 2c                	je     f0100e34 <mon_dumpmem+0x75>$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	80 fa 76             	cmp    $0x76,%dl$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	74 27                	je     f0100e34 <mon_dumpmem+0x75>$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	50                   	push   %eax$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	68 4c 6a 10 f0       	push   $0xf0106a4c$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	e8 0f 30 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	c7 04 24 90 6d 10 f0 	movl   $0xf0106d90,(%esp)$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	e8 03 30 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	e9 23 01 00 00       	jmp    f0100f57 <mon_dumpmem+0x198>$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	6a 00                	push   $0x0$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	6a 00                	push   $0x0$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	e8 a9 4c 00 00       	call   f0105aec <strtol>$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	89 c3                	mov    %eax,%ebx$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	6a 00                	push   $0x0$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	6a 00                	push   $0x0$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	ff 77 0c             	pushl  0xc(%edi)$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	e8 98 4c 00 00       	call   f0105aec <strtol>$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	89 c6                	mov    %eax,%esi$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	80 78 01 70          	cmpb   $0x70,0x1(%eax)$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	0f 85 93 00 00 00    	jne    f0100ef9 <mon_dumpmem+0x13a>$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	74 73                	je     f0100ede <mon_dumpmem+0x11f>$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	53                   	push   %ebx$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	68 ba 6a 10 f0       	push   $0xf0106aba$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	e8 b1 2f 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	eb 60                	jmp    f0100ede <mon_dumpmem+0x11f>$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	75 11                	jne    f0100e94 <mon_dumpmem+0xd5>$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	53                   	push   %ebx$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	68 b9 6a 10 f0       	push   $0xf0106ab9$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	e8 99 2f 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	89 da                	mov    %ebx,%edx$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	89 d8                	mov    %ebx,%eax$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	89 c1                	mov    %eax,%ecx$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	3b 0d 8c 5e 23 f0    	cmp    0xf0235e8c,%ecx$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	72 12                	jb     f0100ec2 <mon_dumpmem+0x103>$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	50                   	push   %eax$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	6a 5a                	push   $0x5a$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	e8 7e f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	0f b6 84 02 00 00 00 	movzbl -0x10000000(%edx,%eax,1),%eax$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	f0 $/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	50                   	push   %eax$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	68 c3 6a 10 f0       	push   $0xf0106ac3$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	e8 52 2f 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	72 9c                	jb     f0100e7e <mon_dumpmem+0xbf>$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	68 3f 7c 10 f0       	push   $0xf0107c3f$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	e8 3b 2f 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	eb 5e                	jmp    f0100f57 <mon_dumpmem+0x198>$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	74 40                	je     f0100f3e <mon_dumpmem+0x17f>$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	53                   	push   %ebx$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	68 ba 6a 10 f0       	push   $0xf0106aba$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	e8 1e 2f 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	eb 2d                	jmp    f0100f3e <mon_dumpmem+0x17f>$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	f6 c3 0f             	test   $0xf,%bl$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	75 11                	jne    f0100f27 <mon_dumpmem+0x168>$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	53                   	push   %ebx$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	68 b9 6a 10 f0       	push   $0xf0106ab9$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	e8 06 2f 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	50                   	push   %eax$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	68 c3 6a 10 f0       	push   $0xf0106ac3$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	e8 f2 2e 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	72 cf                	jb     f0100f11 <mon_dumpmem+0x152>$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	68 3f 7c 10 f0       	push   $0xf0107c3f$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	e8 db 2e 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	5b                   	pop    %ebx$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	5e                   	pop    %esi$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	5f                   	pop    %edi$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	5d                   	pop    %ebp$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	c3                   	ret    $/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f <monitor>:$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	55                   	push   %ebp$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	57                   	push   %edi$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	56                   	push   %esi$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	53                   	push   %ebx$/;"	l
f0100f65	obj/kern/kernel.asm	/^f0100f65:	83 ec 58             	sub    $0x58,%esp$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	68 bc 6d 10 f0       	push   $0xf0106dbc$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	e8 b8 2e 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	c7 04 24 e0 6d 10 f0 	movl   $0xf0106de0,(%esp)$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	e8 ac 2e 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	74 0e                	je     f0100f95 <monitor+0x36>$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	e8 5e 32 00 00       	call   f01041f0 <print_trapframe>$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	68 c9 6a 10 f0       	push   $0xf0106ac9$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	e8 cf 47 00 00       	call   f0105771 <readline>$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	89 c3                	mov    %eax,%ebx$/;"	l
f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	85 c0                	test   %eax,%eax$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	74 ea                	je     f0100f95 <monitor+0x36>$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	eb 0a                	jmp    f0100fc3 <monitor+0x64>$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	89 f7                	mov    %esi,%edi$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	89 fe                	mov    %edi,%esi$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	84 c0                	test   %al,%al$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	74 63                	je     f010102d <monitor+0xce>$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	0f be c0             	movsbl %al,%eax$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	50                   	push   %eax$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	68 cd 6a 10 f0       	push   $0xf0106acd$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	e8 b0 49 00 00       	call   f010598b <strchr>$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	85 c0                	test   %eax,%eax$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	75 d7                	jne    f0100fb9 <monitor+0x5a>$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	74 46                	je     f010102d <monitor+0xce>$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	75 14                	jne    f0101000 <monitor+0xa1>$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	6a 10                	push   $0x10$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	68 d2 6a 10 f0       	push   $0xf0106ad2$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	e8 2f 2e 00 00       	call   f0103e2a <cprintf>$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	eb 95                	jmp    f0100f95 <monitor+0x36>$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	eb 03                	jmp    f010100c <monitor+0xad>$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	84 c0                	test   %al,%al$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	74 ae                	je     f0100fc1 <monitor+0x62>$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	0f be c0             	movsbl %al,%eax$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	50                   	push   %eax$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	68 cd 6a 10 f0       	push   $0xf0106acd$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	e8 67 49 00 00       	call   f010598b <strchr>$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	85 c0                	test   %eax,%eax$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	74 de                	je     f0101009 <monitor+0xaa>$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	eb 94                	jmp    f0100fc1 <monitor+0x62>$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	00 $/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	85 f6                	test   %esi,%esi$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	0f 84 58 ff ff ff    	je     f0100f95 <monitor+0x36>$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0101048	obj/kern/kernel.asm	/^f0101048:	ff 34 85 60 6f 10 f0 	pushl  -0xfef90a0(,%eax,4)$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	e8 d6 48 00 00       	call   f010592d <strcmp>$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	83 c4 10             	add    $0x10,%esp$/;"	l
f010105a	obj/kern/kernel.asm	/^f010105a:	85 c0                	test   %eax,%eax$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	75 21                	jne    f010107f <monitor+0x120>$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101061	obj/kern/kernel.asm	/^f0101061:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	52                   	push   %edx$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	56                   	push   %esi$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	ff 14 85 68 6f 10 f0 	call   *-0xfef9098(,%eax,4)$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	85 c0                	test   %eax,%eax$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	78 25                	js     f010109f <monitor+0x140>$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	e9 16 ff ff ff       	jmp    f0100f95 <monitor+0x36>$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	83 fb 08             	cmp    $0x8,%ebx$/;"	l
f0101085	obj/kern/kernel.asm	/^f0101085:	75 bb                	jne    f0101042 <monitor+0xe3>$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	68 ef 6a 10 f0       	push   $0xf0106aef$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	e8 93 2d 00 00       	call   f0103e2a <cprintf>$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	83 c4 10             	add    $0x10,%esp$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	e9 f6 fe ff ff       	jmp    f0100f95 <monitor+0x36>$/;"	l
f010109f	obj/kern/kernel.asm	/^f010109f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	5b                   	pop    %ebx$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	5e                   	pop    %esi$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	5f                   	pop    %edi$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	5d                   	pop    %ebp$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	c3                   	ret    $/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7 <boot_alloc>:$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	55                   	push   %ebp$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	89 c2                	mov    %eax,%edx$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	83 3d 38 52 23 f0 00 	cmpl   $0x0,0xf0235238$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	75 0f                	jne    f01010c4 <boot_alloc+0x1d>$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	b8 07 80 27 f0       	mov    $0xf0278007,%eax$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	a3 38 52 23 f0       	mov    %eax,0xf0235238$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	a1 38 52 23 f0       	mov    0xf0235238,%eax$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	01 c2                	add    %eax,%edx$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	89 15 38 52 23 f0    	mov    %edx,0xf0235238$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	5d                   	pop    %ebp$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	c3                   	ret    $/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df <nvram_read>:$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	55                   	push   %ebp$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	89 e5                	mov    %esp,%ebp$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	56                   	push   %esi$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	53                   	push   %ebx$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	89 c3                	mov    %eax,%ebx$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	50                   	push   %eax$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	e8 bc 2b 00 00       	call   f0103cab <mc146818_read>$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	89 c6                	mov    %eax,%esi$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	e8 af 2b 00 00       	call   f0103cab <mc146818_read>$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	09 f0                	or     %esi,%eax$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	5b                   	pop    %ebx$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	5e                   	pop    %esi$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	5d                   	pop    %ebp$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	c3                   	ret    $/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108 <page2kva>:$/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	89 c2                	mov    %eax,%edx$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	39 15 8c 5e 23 f0    	cmp    %edx,0xf0235e8c$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	77 18                	ja     f0101139 <page2kva+0x31>$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	55                   	push   %ebp$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	89 e5                	mov    %esp,%ebp$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	50                   	push   %eax$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	6a 5a                	push   $0x5a$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	e8 07 ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	c3                   	ret    $/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f <check_va2pa>:$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	89 d1                	mov    %edx,%ecx$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	a8 01                	test   $0x1,%al$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	74 64                	je     f01011af <check_va2pa+0x70>$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	a8 80                	test   $0x80,%al$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	74 0e                	je     f010115d <check_va2pa+0x1e>$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	81 e2 00 f0 3f 00    	and    $0x3ff000,%edx$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	09 d0                	or     %edx,%eax$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	c3                   	ret    $/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	89 c1                	mov    %eax,%ecx$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	3b 0d 8c 5e 23 f0    	cmp    0xf0235e8c,%ecx$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	72 1b                	jb     f010118a <check_va2pa+0x4b>$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	55                   	push   %ebp$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	89 e5                	mov    %esp,%ebp$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	50                   	push   %eax$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	68 b7 03 00 00       	push   $0x3b7$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	e8 b6 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	89 c2                	mov    %eax,%edx$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	83 e2 01             	and    $0x1,%edx$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	85 d2                	test   %edx,%edx$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	c3                   	ret    $/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	c3                   	ret    $/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5 <check_page_free_list>:$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	55                   	push   %ebp$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	57                   	push   %edi$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	56                   	push   %esi$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	53                   	push   %ebx$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	84 c0                	test   %al,%al$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	0f 85 a0 02 00 00    	jne    f0101466 <check_page_free_list+0x2b1>$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	e9 ad 02 00 00       	jmp    f0101478 <check_page_free_list+0x2c3>$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	68 c0 6f 10 f0       	push   $0xf0106fc0$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	68 e6 02 00 00       	push   $0x2e6$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	e8 5e ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	89 c2                	mov    %eax,%edx$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	2b 15 94 5e 23 f0    	sub    0xf0235e94,%edx$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	0f 95 c2             	setne  %dl$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	89 01                	mov    %eax,(%ecx)$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	8b 00                	mov    (%eax),%eax$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	85 c0                	test   %eax,%eax$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	75 dc                	jne    f01011ee <check_page_free_list+0x39>$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	89 10                	mov    %edx,(%eax)$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	a3 40 52 23 f0       	mov    %eax,0xf0235240$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	8b 1d 40 52 23 f0    	mov    0xf0235240,%ebx$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	eb 53                	jmp    f010128b <check_page_free_list+0xd6>$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	89 d8                	mov    %ebx,%eax$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	89 c2                	mov    %eax,%edx$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	39 f2                	cmp    %esi,%edx$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	73 3a                	jae    f0101289 <check_page_free_list+0xd4>$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	89 c2                	mov    %eax,%edx$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	3b 15 8c 5e 23 f0    	cmp    0xf0235e8c,%edx$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	72 12                	jb     f010126e <check_page_free_list+0xb9>$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	50                   	push   %eax$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	6a 5a                	push   $0x5a$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	e8 d2 ed ff ff       	call   f0100040 <_panic>$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	68 80 00 00 00       	push   $0x80$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	68 97 00 00 00       	push   $0x97$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	50                   	push   %eax$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	e8 42 47 00 00       	call   f01059c8 <memset>$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	85 db                	test   %ebx,%ebx$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	75 a9                	jne    f0101238 <check_page_free_list+0x83>$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	e8 0e fe ff ff       	call   f01010a7 <boot_alloc>$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	8b 15 40 52 23 f0    	mov    0xf0235240,%edx$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	8b 0d 94 5e 23 f0    	mov    0xf0235e94,%ecx$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	a1 8c 5e 23 f0       	mov    0xf0235e8c,%eax$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	e9 52 01 00 00       	jmp    f0101415 <check_page_free_list+0x260>$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	39 ca                	cmp    %ecx,%edx$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	73 19                	jae    f01012e0 <check_page_free_list+0x12b>$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	68 79 79 10 f0       	push   $0xf0107979$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	68 00 03 00 00       	push   $0x300$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	e8 60 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	72 19                	jb     f01012fe <check_page_free_list+0x149>$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	68 9a 79 10 f0       	push   $0xf010799a$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	68 01 03 00 00       	push   $0x301$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	e8 42 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	89 d0                	mov    %edx,%eax$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	a8 07                	test   $0x7,%al$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	74 19                	je     f0101320 <check_page_free_list+0x16b>$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	68 e4 6f 10 f0       	push   $0xf0106fe4$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	68 02 03 00 00       	push   $0x302$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	e8 20 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	85 c0                	test   %eax,%eax$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	75 19                	jne    f0101343 <check_page_free_list+0x18e>$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	68 ae 79 10 f0       	push   $0xf01079ae$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	68 05 03 00 00       	push   $0x305$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	e8 fd ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	75 19                	jne    f0101363 <check_page_free_list+0x1ae>$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	68 bf 79 10 f0       	push   $0xf01079bf$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	68 06 03 00 00       	push   $0x306$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	e8 dd ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	75 19                	jne    f0101383 <check_page_free_list+0x1ce>$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	68 18 70 10 f0       	push   $0xf0107018$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	68 07 03 00 00       	push   $0x307$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	e8 bd ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	75 19                	jne    f01013a3 <check_page_free_list+0x1ee>$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	68 d8 79 10 f0       	push   $0xf01079d8$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	68 08 03 00 00       	push   $0x308$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	e8 9d ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	0f 86 f1 00 00 00    	jbe    f010149f <check_page_free_list+0x2ea>$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	89 c7                	mov    %eax,%edi$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	77 12                	ja     f01013ca <check_page_free_list+0x215>$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	50                   	push   %eax$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	6a 5a                	push   $0x5a$/;"	l
f01013c0	obj/kern/kernel.asm	/^f01013c0:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	e8 76 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	0f 86 b6 00 00 00    	jbe    f010148f <check_page_free_list+0x2da>$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	68 3c 70 10 f0       	push   $0xf010703c$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	68 09 03 00 00       	push   $0x309$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	e8 4e ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	68 f2 79 10 f0       	push   $0xf01079f2$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	68 0b 03 00 00       	push   $0x30b$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	e8 35 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	83 c6 01             	add    $0x1,%esi$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	eb 03                	jmp    f0101413 <check_page_free_list+0x25e>$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	8b 12                	mov    (%edx),%edx$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	85 d2                	test   %edx,%edx$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	0f 85 a6 fe ff ff    	jne    f01012c3 <check_page_free_list+0x10e>$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	85 f6                	test   %esi,%esi$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	7f 19                	jg     f010143a <check_page_free_list+0x285>$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	68 0f 7a 10 f0       	push   $0xf0107a0f$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	68 13 03 00 00       	push   $0x313$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	e8 06 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	85 db                	test   %ebx,%ebx$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	7f 19                	jg     f0101457 <check_page_free_list+0x2a2>$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	68 21 7a 10 f0       	push   $0xf0107a21$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	68 14 03 00 00       	push   $0x314$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	e8 e9 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	68 84 70 10 f0       	push   $0xf0107084$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	e8 c6 29 00 00       	call   f0103e2a <cprintf>$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	eb 49                	jmp    f01014af <check_page_free_list+0x2fa>$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	a1 40 52 23 f0       	mov    0xf0235240,%eax$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	85 c0                	test   %eax,%eax$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	0f 85 6f fd ff ff    	jne    f01011e2 <check_page_free_list+0x2d>$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	e9 53 fd ff ff       	jmp    f01011cb <check_page_free_list+0x16>$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	83 3d 40 52 23 f0 00 	cmpl   $0x0,0xf0235240$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	0f 84 46 fd ff ff    	je     f01011cb <check_page_free_list+0x16>$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	e9 a1 fd ff ff       	jmp    f0101230 <check_page_free_list+0x7b>$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	0f 85 76 ff ff ff    	jne    f0101410 <check_page_free_list+0x25b>$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	e9 53 ff ff ff       	jmp    f01013f2 <check_page_free_list+0x23d>$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	0f 85 61 ff ff ff    	jne    f010140b <check_page_free_list+0x256>$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	e9 43 ff ff ff       	jmp    f01013f2 <check_page_free_list+0x23d>$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	5b                   	pop    %ebx$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	5e                   	pop    %esi$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	5f                   	pop    %edi$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	5d                   	pop    %ebp$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	c3                   	ret    $/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7 <enable_PS_percpu>:$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	55                   	push   %ebp$/;"	l
f01014b8	obj/kern/kernel.asm	/^f01014b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	80 3d 88 5e 23 f0 00 	cmpb   $0x0,0xf0235e88$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	74 0f                	je     f01014d2 <enable_PS_percpu+0x1b>$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	83 c8 10             	or     $0x10,%eax$/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	0f 20 d8             	mov    %cr3,%eax$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	5d                   	pop    %ebp$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	c3                   	ret    $/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4 <page_init>:$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	55                   	push   %ebp$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	57                   	push   %edi$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	56                   	push   %esi$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	53                   	push   %ebx$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	e8 c0 fb ff ff       	call   f01010a7 <boot_alloc>$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	77 15                	ja     f0101503 <page_init+0x2f>$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	50                   	push   %eax$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	68 62 01 00 00       	push   $0x162$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	e8 3d eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	c7 05 40 52 23 f0 00 	movl   $0x0,0xf0235240$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	00 00 00 $/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	8b 3d 44 52 23 f0    	mov    0xf0235244,%edi$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	eb 47                	jmp    f0101572 <page_init+0x9e>$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	8d 1c d5 00 00 00 00 	lea    0x0(,%edx,8),%ebx$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	03 0d 94 5e 23 f0    	add    0xf0235e94,%ecx$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	85 d2                	test   %edx,%edx$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	74 25                	je     f0101569 <page_init+0x95>$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	74 04                	je     f010154d <page_init+0x79>$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	39 fa                	cmp    %edi,%edx$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	72 0c                	jb     f0101559 <page_init+0x85>$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	81 fa ff 00 00 00    	cmp    $0xff,%edx$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	76 14                	jbe    f0101569 <page_init+0x95>$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	39 c2                	cmp    %eax,%edx$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	72 10                	jb     f0101569 <page_init+0x95>$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	89 31                	mov    %esi,(%ecx)$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	89 de                	mov    %ebx,%esi$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	03 35 94 5e 23 f0    	add    0xf0235e94,%esi$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	c6 45 e7 01          	movb   $0x1,-0x19(%ebp)$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	eb 06                	jmp    f010156f <page_init+0x9b>$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	3b 15 8c 5e 23 f0    	cmp    0xf0235e8c,%edx$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	72 b1                	jb     f010152b <page_init+0x57>$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	74 06                	je     f0101586 <page_init+0xb2>$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	89 35 40 52 23 f0    	mov    %esi,0xf0235240$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	5b                   	pop    %ebx$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	5e                   	pop    %esi$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	5f                   	pop    %edi$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	5d                   	pop    %ebp$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	c3                   	ret    $/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e <page_alloc>:$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	55                   	push   %ebp$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	53                   	push   %ebx$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	8b 1d 40 52 23 f0    	mov    0xf0235240,%ebx$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	85 db                	test   %ebx,%ebx$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	74 58                	je     f01015f7 <page_alloc+0x69>$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	8b 03                	mov    (%ebx),%eax$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	a3 40 52 23 f0       	mov    %eax,0xf0235240$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	74 45                	je     f01015f7 <page_alloc+0x69>$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	89 d8                	mov    %ebx,%eax$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	89 c2                	mov    %eax,%edx$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	3b 15 8c 5e 23 f0    	cmp    0xf0235e8c,%edx$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	72 12                	jb     f01015df <page_alloc+0x51>$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	50                   	push   %eax$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	6a 5a                	push   $0x5a$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	e8 61 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	68 00 10 00 00       	push   $0x1000$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	6a 00                	push   $0x0$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	50                   	push   %eax$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	e8 d4 43 00 00       	call   f01059c8 <memset>$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	89 d8                	mov    %ebx,%eax$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	c9                   	leave  $/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	c3                   	ret    $/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe <page_free>:$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	55                   	push   %ebp$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	74 1a                	je     f0101628 <page_free+0x2a>$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	e8 f5 fa ff ff       	call   f0101108 <page2kva>$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	50                   	push   %eax$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	68 a8 70 10 f0       	push   $0xf01070a8$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	68 98 01 00 00       	push   $0x198$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	e8 18 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	74 1a                	je     f0101647 <page_free+0x49>$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	e8 d6 fa ff ff       	call   f0101108 <page2kva>$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	50                   	push   %eax$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	68 dc 70 10 f0       	push   $0xf01070dc$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	68 9b 01 00 00       	push   $0x19b$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	e8 f9 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	8b 15 40 52 23 f0    	mov    0xf0235240,%edx$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	89 10                	mov    %edx,(%eax)$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	a3 40 52 23 f0       	mov    %eax,0xf0235240$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	c9                   	leave  $/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	c3                   	ret    $/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656 <page_decref>:$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	55                   	push   %ebp$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	89 e5                	mov    %esp,%ebp$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f010166a	obj/kern/kernel.asm	/^f010166a:	66 85 c0             	test   %ax,%ax$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	75 0c                	jne    f010167b <page_decref+0x25>$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	52                   	push   %edx$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	e8 86 ff ff ff       	call   f01015fe <page_free>$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	83 c4 10             	add    $0x10,%esp$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	c9                   	leave  $/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	c3                   	ret    $/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d <pgdir_walk>:$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	55                   	push   %ebp$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	56                   	push   %esi$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	53                   	push   %ebx$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	89 f3                	mov    %esi,%ebx$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	a8 01                	test   $0x1,%al$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	74 41                	je     f01016d7 <pgdir_walk+0x5a>$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	a8 80                	test   $0x80,%al$/;"	l
f0101698	obj/kern/kernel.asm	/^f0101698:	0f 85 b4 00 00 00    	jne    f0101752 <pgdir_walk+0xd5>$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	89 c2                	mov    %eax,%edx$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	39 15 8c 5e 23 f0    	cmp    %edx,0xf0235e8c$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	77 15                	ja     f01016c5 <pgdir_walk+0x48>$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	50                   	push   %eax$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	68 c9 01 00 00       	push   $0x1c9$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	e8 7b e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	8d 9c 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%ebx$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	eb 7b                	jmp    f0101752 <pgdir_walk+0xd5>$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	74 69                	je     f0101746 <pgdir_walk+0xc9>$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	6a 01                	push   $0x1$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	e8 a7 fe ff ff       	call   f010158e <page_alloc>$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	85 c0                	test   %eax,%eax$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	74 5f                	je     f010174d <pgdir_walk+0xd0>$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	89 c2                	mov    %eax,%edx$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	2b 15 94 5e 23 f0    	sub    0xf0235e94,%edx$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	89 c2                	mov    %eax,%edx$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	3b 15 8c 5e 23 f0    	cmp    0xf0235e8c,%edx$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	72 15                	jb     f0101734 <pgdir_walk+0xb7>$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	50                   	push   %eax$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	68 d4 01 00 00       	push   $0x1d4$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	e8 0c e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	8d 9c 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%ebx$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	eb 0c                	jmp    f0101752 <pgdir_walk+0xd5>$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	eb 05                	jmp    f0101752 <pgdir_walk+0xd5>$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	89 d8                	mov    %ebx,%eax$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	5b                   	pop    %ebx$/;"	l
f0101758	obj/kern/kernel.asm	/^f0101758:	5e                   	pop    %esi$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	5d                   	pop    %ebp$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	c3                   	ret    $/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b <boot_map_region>:$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	55                   	push   %ebp$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	89 e5                	mov    %esp,%ebp$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	57                   	push   %edi$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	56                   	push   %esi$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	53                   	push   %ebx$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	89 cf                	mov    %ecx,%edi$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	80 3d 88 5e 23 f0 00 	cmpb   $0x0,0xf0235e88$/;"	l
f0101773	obj/kern/kernel.asm	/^f0101773:	0f 84 ad 00 00 00    	je     f0101826 <boot_map_region+0xcb>$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	89 d0                	mov    %edx,%eax$/;"	l
f010177b	obj/kern/kernel.asm	/^f010177b:	31 c8                	xor    %ecx,%eax$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	a9 ff ff 3f 00       	test   $0x3fffff,%eax$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	74 29                	je     f01017ad <boot_map_region+0x52>$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	e9 9d 00 00 00       	jmp    f0101826 <boot_map_region+0xcb>$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	6a 01                	push   $0x1$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	53                   	push   %ebx$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	e8 e6 fe ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	89 30                	mov    %esi,(%eax)$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	eb 10                	jmp    f01017bd <boot_map_region+0x62>$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	89 d3                	mov    %edx,%ebx$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	29 d1                	sub    %edx,%ecx$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	83 c8 01             	or     $0x1,%eax$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	89 c8                	mov    %ecx,%eax$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	8d 34 0b             	lea    (%ebx,%ecx,1),%esi$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	85 ff                	test   %edi,%edi$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	0f 84 97 00 00 00    	je     f0101864 <boot_map_region+0x109>$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	f7 c3 ff ff 3f 00    	test   $0x3fffff,%ebx$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	75 b4                	jne    f0101789 <boot_map_region+0x2e>$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	89 fa                	mov    %edi,%edx$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f01017e0	obj/kern/kernel.asm	/^f01017e0:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	01 da                	add    %ebx,%edx$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	80 c9 81             	or     $0x81,%cl$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	89 c6                	mov    %eax,%esi$/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	eb 11                	jmp    f010180c <boot_map_region+0xb1>$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	89 d9                	mov    %ebx,%ecx$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	0b 45 e0             	or     -0x20(%ebp),%eax$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	89 04 8f             	mov    %eax,(%edi,%ecx,4)$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	81 c3 00 00 40 00    	add    $0x400000,%ebx$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	39 d3                	cmp    %edx,%ebx$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	75 e8                	jne    f01017fb <boot_map_region+0xa0>$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	29 c7                	sub    %eax,%edi$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	01 f1                	add    %esi,%ecx$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	89 d3                	mov    %edx,%ebx$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	29 d1                	sub    %edx,%ecx$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	eb 22                	jmp    f010185a <boot_map_region+0xff>$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	6a 01                	push   $0x1$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	53                   	push   %ebx$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	e8 37 fe ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	89 30                	mov    %esi,(%eax)$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	83 c4 10             	add    $0x10,%esp$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	8d 34 18             	lea    (%eax,%ebx,1),%esi$/;"	l
f0101860	obj/kern/kernel.asm	/^f0101860:	85 ff                	test   %edi,%edi$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	75 d4                	jne    f0101838 <boot_map_region+0xdd>$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	5b                   	pop    %ebx$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	5e                   	pop    %esi$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	5f                   	pop    %edi$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	5d                   	pop    %ebp$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	c3                   	ret    $/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c <page_lookup>:$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	55                   	push   %ebp$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	89 e5                	mov    %esp,%ebp$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	53                   	push   %ebx$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	6a 00                	push   $0x0$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	e8 fa fd ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	85 c0                	test   %eax,%eax$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	74 37                	je     f01018c1 <page_lookup+0x55>$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	74 39                	je     f01018c8 <page_lookup+0x5c>$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	85 db                	test   %ebx,%ebx$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	74 02                	je     f0101895 <page_lookup+0x29>$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	8b 00                	mov    (%eax),%eax$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	3b 05 8c 5e 23 f0    	cmp    0xf0235e8c,%eax$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	72 14                	jb     f01018b6 <page_lookup+0x4a>$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	68 10 71 10 f0       	push   $0xf0107110$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	6a 53                	push   $0x53$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	e8 8a e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018b6	obj/kern/kernel.asm	/^f01018b6:	8b 15 94 5e 23 f0    	mov    0xf0235e94,%edx$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	eb 0c                	jmp    f01018cd <page_lookup+0x61>$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	eb 05                	jmp    f01018cd <page_lookup+0x61>$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	c9                   	leave  $/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	c3                   	ret    $/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2 <tlb_invalidate>:$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	55                   	push   %ebp$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	e8 0d 47 00 00       	call   f0105fea <cpunum>$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	83 b8 28 60 23 f0 00 	cmpl   $0x0,-0xfdc9fd8(%eax)$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	74 16                	je     f01018ff <tlb_invalidate+0x2d>$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	e8 fc 46 00 00       	call   f0105fea <cpunum>$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	75 06                	jne    f0101905 <tlb_invalidate+0x33>$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	0f 01 38             	invlpg (%eax)$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	c9                   	leave  $/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	c3                   	ret    $/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907 <page_remove>:$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	55                   	push   %ebp$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	89 e5                	mov    %esp,%ebp$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	56                   	push   %esi$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	53                   	push   %ebx$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101918	obj/kern/kernel.asm	/^f0101918:	50                   	push   %eax$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	56                   	push   %esi$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	53                   	push   %ebx$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	e8 4c ff ff ff       	call   f010186c <page_lookup>$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	85 c0                	test   %eax,%eax$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	74 1f                	je     f0101946 <page_remove+0x3f>$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	50                   	push   %eax$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	e8 26 fd ff ff       	call   f0101656 <page_decref>$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	83 c4 08             	add    $0x8,%esp$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	56                   	push   %esi$/;"	l
f010193d	obj/kern/kernel.asm	/^f010193d:	53                   	push   %ebx$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	e8 8f ff ff ff       	call   f01018d2 <tlb_invalidate>$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	5b                   	pop    %ebx$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	5e                   	pop    %esi$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	5d                   	pop    %ebp$/;"	l
f010194c	obj/kern/kernel.asm	/^f010194c:	c3                   	ret    $/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d <page_insert>:$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	55                   	push   %ebp$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	57                   	push   %edi$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	56                   	push   %esi$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	53                   	push   %ebx$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	6a 01                	push   $0x1$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	57                   	push   %edi$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	e8 16 fd ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	83 c4 10             	add    $0x10,%esp$/;"	l
f010196a	obj/kern/kernel.asm	/^f010196a:	85 c0                	test   %eax,%eax$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	74 33                	je     f01019a1 <page_insert+0x54>$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	89 c6                	mov    %eax,%esi$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	57                   	push   %edi$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	e8 86 ff ff ff       	call   f0101907 <page_remove>$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	2b 1d 94 5e 23 f0    	sub    0xf0235e94,%ebx$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	09 c3                	or     %eax,%ebx$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	83 c4 10             	add    $0x10,%esp$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	eb 05                	jmp    f01019a6 <page_insert+0x59>$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	5b                   	pop    %ebx$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	5e                   	pop    %esi$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	5f                   	pop    %edi$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	5d                   	pop    %ebp$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	c3                   	ret    $/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae <mmio_map_region>:$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	55                   	push   %ebp$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	89 e5                	mov    %esp,%ebp$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	56                   	push   %esi$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	53                   	push   %ebx$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	8b 35 04 13 12 f0    	mov    0xf0121304,%esi$/;"	l
f01019b9	obj/kern/kernel.asm	/^f01019b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	8d 04 1e             	lea    (%esi,%ebx,1),%eax$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	76 17                	jbe    f01019e9 <mmio_map_region+0x3b>$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	68 30 71 10 f0       	push   $0xf0107130$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	68 8f 02 00 00       	push   $0x28f$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	e8 57 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	6a 1a                	push   $0x1a$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	89 d9                	mov    %ebx,%ecx$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	89 f2                	mov    %esi,%edx$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	e8 5c fd ff ff       	call   f010175b <boot_map_region>$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	01 1d 04 13 12 f0    	add    %ebx,0xf0121304$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	89 f0                	mov    %esi,%eax$/;"	l
f0101a07	obj/kern/kernel.asm	/^f0101a07:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	5b                   	pop    %ebx$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	5e                   	pop    %esi$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	5d                   	pop    %ebp$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	c3                   	ret    $/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e <mem_init>:$/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	55                   	push   %ebp$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	57                   	push   %edi$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	56                   	push   %esi$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	53                   	push   %ebx$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	e8 be f6 ff ff       	call   f01010df <nvram_read>$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	89 c3                	mov    %eax,%ebx$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	e8 b2 f6 ff ff       	call   f01010df <nvram_read>$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	89 c6                	mov    %eax,%esi$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	e8 a6 f6 ff ff       	call   f01010df <nvram_read>$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	85 c0                	test   %eax,%eax$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	74 07                	je     f0101a47 <mem_init+0x39>$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	eb 0b                	jmp    f0101a52 <mem_init+0x44>$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	85 f6                	test   %esi,%esi$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	89 c2                	mov    %eax,%edx$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	89 15 8c 5e 23 f0    	mov    %edx,0xf0235e8c$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	89 da                	mov    %ebx,%edx$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	89 15 44 52 23 f0    	mov    %edx,0xf0235244$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	89 c2                	mov    %eax,%edx$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	29 da                	sub    %ebx,%edx$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	52                   	push   %edx$/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	53                   	push   %ebx$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	50                   	push   %eax$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	68 54 71 10 f0       	push   $0xf0107154$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	e8 b1 23 00 00       	call   f0103e2a <cprintf>$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	0f a2                	cpuid  $/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	c1 ea 03             	shr    $0x3,%edx$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	83 e2 01             	and    $0x1,%edx$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	88 15 88 5e 23 f0    	mov    %dl,0xf0235e88$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	e8 26 fa ff ff       	call   f01014b7 <enable_PS_percpu>$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	e8 0c f6 ff ff       	call   f01010a7 <boot_alloc>$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	a3 90 5e 23 f0       	mov    %eax,0xf0235e90$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	6a 00                	push   $0x0$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	50                   	push   %eax$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	e8 18 3f 00 00       	call   f01059c8 <memset>$/;"	l
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd:	77 15                	ja     f0101ad4 <mem_init+0xc6>$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	50                   	push   %eax$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	68 b1 00 00 00       	push   $0xb1$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	e8 6c e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	a1 8c 5e 23 f0       	mov    0xf0235e8c,%eax$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	e8 b7 f5 ff ff       	call   f01010a7 <boot_alloc>$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	a3 94 5e 23 f0       	mov    %eax,0xf0235e94$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	8b 0d 8c 5e 23 f0    	mov    0xf0235e8c,%ecx$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f0101b05	obj/kern/kernel.asm	/^f0101b05:	52                   	push   %edx$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	6a 00                	push   $0x0$/;"	l
f0101b08	obj/kern/kernel.asm	/^f0101b08:	50                   	push   %eax$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	e8 ba 3e 00 00       	call   f01059c8 <memset>$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	e8 8f f5 ff ff       	call   f01010a7 <boot_alloc>$/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	a3 48 52 23 f0       	mov    %eax,0xf0235248$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	e8 b2 f9 ff ff       	call   f01014d4 <page_init>$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	e8 89 f6 ff ff       	call   f01011b5 <check_page_free_list>$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	83 3d 94 5e 23 f0 00 	cmpl   $0x0,0xf0235e94$/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	75 17                	jne    f0101b4f <mem_init+0x141>$/;"	l
f0101b38	obj/kern/kernel.asm	/^f0101b38:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	68 32 7a 10 f0       	push   $0xf0107a32$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	68 27 03 00 00       	push   $0x327$/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	e8 f1 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	a1 40 52 23 f0       	mov    0xf0235240,%eax$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	eb 05                	jmp    f0101b60 <mem_init+0x152>$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	85 c0                	test   %eax,%eax$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	75 f7                	jne    f0101b5b <mem_init+0x14d>$/;"	l
f0101b64	obj/kern/kernel.asm	/^f0101b64:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	6a 00                	push   $0x0$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	e8 20 fa ff ff       	call   f010158e <page_alloc>$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	89 c7                	mov    %eax,%edi$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	85 c0                	test   %eax,%eax$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	75 19                	jne    f0101b90 <mem_init+0x182>$/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	68 4d 7a 10 f0       	push   $0xf0107a4d$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	68 2f 03 00 00       	push   $0x32f$/;"	l
f0101b86	obj/kern/kernel.asm	/^f0101b86:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	e8 b0 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	6a 00                	push   $0x0$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	e8 f4 f9 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	89 c6                	mov    %eax,%esi$/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	85 c0                	test   %eax,%eax$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	75 19                	jne    f0101bbc <mem_init+0x1ae>$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	68 63 7a 10 f0       	push   $0xf0107a63$/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	68 30 03 00 00       	push   $0x330$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	e8 84 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	6a 00                	push   $0x0$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	e8 c8 f9 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101bc9	obj/kern/kernel.asm	/^f0101bc9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	85 c0                	test   %eax,%eax$/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	75 19                	jne    f0101be9 <mem_init+0x1db>$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	68 79 7a 10 f0       	push   $0xf0107a79$/;"	l
f0101bd5	obj/kern/kernel.asm	/^f0101bd5:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	68 31 03 00 00       	push   $0x331$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	e8 57 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	39 f7                	cmp    %esi,%edi$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	75 19                	jne    f0101c06 <mem_init+0x1f8>$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	68 8f 7a 10 f0       	push   $0xf0107a8f$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	68 34 03 00 00       	push   $0x334$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	e8 3a e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	39 c6                	cmp    %eax,%esi$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	74 04                	je     f0101c11 <mem_init+0x203>$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	39 c7                	cmp    %eax,%edi$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	75 19                	jne    f0101c2a <mem_init+0x21c>$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	68 90 71 10 f0       	push   $0xf0107190$/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	68 35 03 00 00       	push   $0x335$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	e8 16 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	8b 0d 94 5e 23 f0    	mov    0xf0235e94,%ecx$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	8b 15 8c 5e 23 f0    	mov    0xf0235e8c,%edx$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	89 f8                	mov    %edi,%eax$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	29 c8                	sub    %ecx,%eax$/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	72 19                	jb     f0101c60 <mem_init+0x252>$/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	68 a1 7a 10 f0       	push   $0xf0107aa1$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	68 36 03 00 00       	push   $0x336$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	e8 e0 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	89 f0                	mov    %esi,%eax$/;"	l
f0101c62	obj/kern/kernel.asm	/^f0101c62:	29 c8                	sub    %ecx,%eax$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	39 c2                	cmp    %eax,%edx$/;"	l
f0101c6c	obj/kern/kernel.asm	/^f0101c6c:	77 19                	ja     f0101c87 <mem_init+0x279>$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	68 be 7a 10 f0       	push   $0xf0107abe$/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	68 37 03 00 00       	push   $0x337$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	e8 b9 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c87	obj/kern/kernel.asm	/^f0101c87:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	29 c8                	sub    %ecx,%eax$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	39 c2                	cmp    %eax,%edx$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	77 19                	ja     f0101caf <mem_init+0x2a1>$/;"	l
f0101c96	obj/kern/kernel.asm	/^f0101c96:	68 db 7a 10 f0       	push   $0xf0107adb$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	68 38 03 00 00       	push   $0x338$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101caa	obj/kern/kernel.asm	/^f0101caa:	e8 91 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	a1 40 52 23 f0       	mov    0xf0235240,%eax$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	c7 05 40 52 23 f0 00 	movl   $0x0,0xf0235240$/;"	l
f0101cbe	obj/kern/kernel.asm	/^f0101cbe:	00 00 00 $/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	6a 00                	push   $0x0$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	e8 c3 f8 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	85 c0                	test   %eax,%eax$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	74 19                	je     f0101ceb <mem_init+0x2dd>$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	68 f8 7a 10 f0       	push   $0xf0107af8$/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101cdc	obj/kern/kernel.asm	/^f0101cdc:	68 3f 03 00 00       	push   $0x33f$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	e8 55 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	57                   	push   %edi$/;"	l
f0101cef	obj/kern/kernel.asm	/^f0101cef:	e8 0a f9 ff ff       	call   f01015fe <page_free>$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	e8 02 f9 ff ff       	call   f01015fe <page_free>$/;"	l
f0101cfc	obj/kern/kernel.asm	/^f0101cfc:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	e8 f7 f8 ff ff       	call   f01015fe <page_free>$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d0e	obj/kern/kernel.asm	/^f0101d0e:	e8 7b f8 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101d13	obj/kern/kernel.asm	/^f0101d13:	89 c6                	mov    %eax,%esi$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	85 c0                	test   %eax,%eax$/;"	l
f0101d1a	obj/kern/kernel.asm	/^f0101d1a:	75 19                	jne    f0101d35 <mem_init+0x327>$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	68 4d 7a 10 f0       	push   $0xf0107a4d$/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	68 46 03 00 00       	push   $0x346$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	e8 0b e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	6a 00                	push   $0x0$/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	e8 4f f8 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	89 c7                	mov    %eax,%edi$/;"	l
f0101d41	obj/kern/kernel.asm	/^f0101d41:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	85 c0                	test   %eax,%eax$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	75 19                	jne    f0101d61 <mem_init+0x353>$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	68 63 7a 10 f0       	push   $0xf0107a63$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	68 47 03 00 00       	push   $0x347$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	e8 df e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d61	obj/kern/kernel.asm	/^f0101d61:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	6a 00                	push   $0x0$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	e8 23 f8 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101d6b	obj/kern/kernel.asm	/^f0101d6b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	85 c0                	test   %eax,%eax$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	75 19                	jne    f0101d8e <mem_init+0x380>$/;"	l
f0101d75	obj/kern/kernel.asm	/^f0101d75:	68 79 7a 10 f0       	push   $0xf0107a79$/;"	l
f0101d7a	obj/kern/kernel.asm	/^f0101d7a:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101d7f	obj/kern/kernel.asm	/^f0101d7f:	68 48 03 00 00       	push   $0x348$/;"	l
f0101d84	obj/kern/kernel.asm	/^f0101d84:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	e8 b2 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	39 fe                	cmp    %edi,%esi$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	75 19                	jne    f0101dab <mem_init+0x39d>$/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	68 8f 7a 10 f0       	push   $0xf0107a8f$/;"	l
f0101d97	obj/kern/kernel.asm	/^f0101d97:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	68 4a 03 00 00       	push   $0x34a$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	e8 95 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dab	obj/kern/kernel.asm	/^f0101dab:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	39 c7                	cmp    %eax,%edi$/;"	l
f0101db0	obj/kern/kernel.asm	/^f0101db0:	74 04                	je     f0101db6 <mem_init+0x3a8>$/;"	l
f0101db2	obj/kern/kernel.asm	/^f0101db2:	39 c6                	cmp    %eax,%esi$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	75 19                	jne    f0101dcf <mem_init+0x3c1>$/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	68 90 71 10 f0       	push   $0xf0107190$/;"	l
f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	68 4b 03 00 00       	push   $0x34b$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	e8 71 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	6a 00                	push   $0x0$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	e8 b5 f7 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	85 c0                	test   %eax,%eax$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	74 19                	je     f0101df9 <mem_init+0x3eb>$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	68 f8 7a 10 f0       	push   $0xf0107af8$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	68 4c 03 00 00       	push   $0x34c$/;"	l
f0101def	obj/kern/kernel.asm	/^f0101def:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	e8 47 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	89 f0                	mov    %esi,%eax$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e07	obj/kern/kernel.asm	/^f0101e07:	89 c2                	mov    %eax,%edx$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	3b 15 8c 5e 23 f0    	cmp    0xf0235e8c,%edx$/;"	l
f0101e12	obj/kern/kernel.asm	/^f0101e12:	72 12                	jb     f0101e26 <mem_init+0x418>$/;"	l
f0101e14	obj/kern/kernel.asm	/^f0101e14:	50                   	push   %eax$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	6a 5a                	push   $0x5a$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0101e21	obj/kern/kernel.asm	/^f0101e21:	e8 1a e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e26	obj/kern/kernel.asm	/^f0101e26:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	6a 01                	push   $0x1$/;"	l
f0101e30	obj/kern/kernel.asm	/^f0101e30:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	50                   	push   %eax$/;"	l
f0101e36	obj/kern/kernel.asm	/^f0101e36:	e8 8d 3b 00 00       	call   f01059c8 <memset>$/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	e8 bb f7 ff ff       	call   f01015fe <page_free>$/;"	l
f0101e43	obj/kern/kernel.asm	/^f0101e43:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	e8 3f f7 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	85 c0                	test   %eax,%eax$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	75 19                	jne    f0101e6f <mem_init+0x461>$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	68 07 7b 10 f0       	push   $0xf0107b07$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	68 51 03 00 00       	push   $0x351$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101e6a	obj/kern/kernel.asm	/^f0101e6a:	e8 d1 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	39 c6                	cmp    %eax,%esi$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	74 19                	je     f0101e8c <mem_init+0x47e>$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	68 25 7b 10 f0       	push   $0xf0107b25$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	68 52 03 00 00       	push   $0x352$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101e87	obj/kern/kernel.asm	/^f0101e87:	e8 b4 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	89 f0                	mov    %esi,%eax$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	89 c2                	mov    %eax,%edx$/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	3b 15 8c 5e 23 f0    	cmp    0xf0235e8c,%edx$/;"	l
f0101ea5	obj/kern/kernel.asm	/^f0101ea5:	72 12                	jb     f0101eb9 <mem_init+0x4ab>$/;"	l
f0101ea7	obj/kern/kernel.asm	/^f0101ea7:	50                   	push   %eax$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	6a 5a                	push   $0x5a$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	e8 87 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	74 19                	je     f0101ee3 <mem_init+0x4d5>$/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	68 35 7b 10 f0       	push   $0xf0107b35$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	68 55 03 00 00       	push   $0x355$/;"	l
f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	e8 5d e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ee8	obj/kern/kernel.asm	/^f0101ee8:	75 db                	jne    f0101ec5 <mem_init+0x4b7>$/;"	l
f0101eea	obj/kern/kernel.asm	/^f0101eea:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	a3 40 52 23 f0       	mov    %eax,0xf0235240$/;"	l
f0101ef2	obj/kern/kernel.asm	/^f0101ef2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	56                   	push   %esi$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	e8 03 f7 ff ff       	call   f01015fe <page_free>$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	e8 fb f6 ff ff       	call   f01015fe <page_free>$/;"	l
f0101f03	obj/kern/kernel.asm	/^f0101f03:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101f06	obj/kern/kernel.asm	/^f0101f06:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	e8 f0 f6 ff ff       	call   f01015fe <page_free>$/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	a1 40 52 23 f0       	mov    0xf0235240,%eax$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f16	obj/kern/kernel.asm	/^f0101f16:	eb 05                	jmp    f0101f1d <mem_init+0x50f>$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101f1b	obj/kern/kernel.asm	/^f0101f1b:	8b 00                	mov    (%eax),%eax$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	85 c0                	test   %eax,%eax$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	75 f7                	jne    f0101f18 <mem_init+0x50a>$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	85 db                	test   %ebx,%ebx$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	74 19                	je     f0101f3e <mem_init+0x530>$/;"	l
f0101f25	obj/kern/kernel.asm	/^f0101f25:	68 3f 7b 10 f0       	push   $0xf0107b3f$/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101f2f	obj/kern/kernel.asm	/^f0101f2f:	68 62 03 00 00       	push   $0x362$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	e8 02 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	68 b0 71 10 f0       	push   $0xf01071b0$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	e8 df 1e 00 00       	call   f0103e2a <cprintf>$/;"	l
f0101f4b	obj/kern/kernel.asm	/^f0101f4b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f52	obj/kern/kernel.asm	/^f0101f52:	e8 37 f6 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101f5a	obj/kern/kernel.asm	/^f0101f5a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	85 c0                	test   %eax,%eax$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	75 19                	jne    f0101f7a <mem_init+0x56c>$/;"	l
f0101f61	obj/kern/kernel.asm	/^f0101f61:	68 4d 7a 10 f0       	push   $0xf0107a4d$/;"	l
f0101f66	obj/kern/kernel.asm	/^f0101f66:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101f6b	obj/kern/kernel.asm	/^f0101f6b:	68 cc 03 00 00       	push   $0x3cc$/;"	l
f0101f70	obj/kern/kernel.asm	/^f0101f70:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101f75	obj/kern/kernel.asm	/^f0101f75:	e8 c6 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f7d	obj/kern/kernel.asm	/^f0101f7d:	6a 00                	push   $0x0$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	e8 0a f6 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	89 c3                	mov    %eax,%ebx$/;"	l
f0101f86	obj/kern/kernel.asm	/^f0101f86:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f89	obj/kern/kernel.asm	/^f0101f89:	85 c0                	test   %eax,%eax$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	75 19                	jne    f0101fa6 <mem_init+0x598>$/;"	l
f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	68 63 7a 10 f0       	push   $0xf0107a63$/;"	l
f0101f92	obj/kern/kernel.asm	/^f0101f92:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101f97	obj/kern/kernel.asm	/^f0101f97:	68 cd 03 00 00       	push   $0x3cd$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	e8 9a e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	6a 00                	push   $0x0$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	e8 de f5 ff ff       	call   f010158e <page_alloc>$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	89 c6                	mov    %eax,%esi$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	85 c0                	test   %eax,%eax$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	75 19                	jne    f0101fd2 <mem_init+0x5c4>$/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	68 79 7a 10 f0       	push   $0xf0107a79$/;"	l
f0101fbe	obj/kern/kernel.asm	/^f0101fbe:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	68 ce 03 00 00       	push   $0x3ce$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	e8 6e e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	75 19                	jne    f0101ff0 <mem_init+0x5e2>$/;"	l
f0101fd7	obj/kern/kernel.asm	/^f0101fd7:	68 8f 7a 10 f0       	push   $0xf0107a8f$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	68 d1 03 00 00       	push   $0x3d1$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	e8 50 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	74 05                	je     f0101ff9 <mem_init+0x5eb>$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	75 19                	jne    f0102012 <mem_init+0x604>$/;"	l
f0101ff9	obj/kern/kernel.asm	/^f0101ff9:	68 90 71 10 f0       	push   $0xf0107190$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	68 d2 03 00 00       	push   $0x3d2$/;"	l
f0102008	obj/kern/kernel.asm	/^f0102008:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010200d	obj/kern/kernel.asm	/^f010200d:	e8 2e e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	a1 40 52 23 f0       	mov    0xf0235240,%eax$/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010201a	obj/kern/kernel.asm	/^f010201a:	c7 05 40 52 23 f0 00 	movl   $0x0,0xf0235240$/;"	l
f0102021	obj/kern/kernel.asm	/^f0102021:	00 00 00 $/;"	l
f0102024	obj/kern/kernel.asm	/^f0102024:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	6a 00                	push   $0x0$/;"	l
f0102029	obj/kern/kernel.asm	/^f0102029:	e8 60 f5 ff ff       	call   f010158e <page_alloc>$/;"	l
f010202e	obj/kern/kernel.asm	/^f010202e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	85 c0                	test   %eax,%eax$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	74 19                	je     f010204e <mem_init+0x640>$/;"	l
f0102035	obj/kern/kernel.asm	/^f0102035:	68 f8 7a 10 f0       	push   $0xf0107af8$/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010203f	obj/kern/kernel.asm	/^f010203f:	68 d9 03 00 00       	push   $0x3d9$/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	e8 f2 df ff ff       	call   f0100040 <_panic>$/;"	l
f010204e	obj/kern/kernel.asm	/^f010204e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	50                   	push   %eax$/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	6a 00                	push   $0x0$/;"	l
f0102057	obj/kern/kernel.asm	/^f0102057:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	e8 0a f8 ff ff       	call   f010186c <page_lookup>$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102065	obj/kern/kernel.asm	/^f0102065:	85 c0                	test   %eax,%eax$/;"	l
f0102067	obj/kern/kernel.asm	/^f0102067:	74 19                	je     f0102082 <mem_init+0x674>$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	68 d0 71 10 f0       	push   $0xf01071d0$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	68 dc 03 00 00       	push   $0x3dc$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	e8 be df ff ff       	call   f0100040 <_panic>$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	6a 02                	push   $0x2$/;"	l
f0102084	obj/kern/kernel.asm	/^f0102084:	6a 00                	push   $0x0$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	53                   	push   %ebx$/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f010208d	obj/kern/kernel.asm	/^f010208d:	e8 bb f8 ff ff       	call   f010194d <page_insert>$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	85 c0                	test   %eax,%eax$/;"	l
f0102097	obj/kern/kernel.asm	/^f0102097:	78 19                	js     f01020b2 <mem_init+0x6a4>$/;"	l
f0102099	obj/kern/kernel.asm	/^f0102099:	68 08 72 10 f0       	push   $0xf0107208$/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	68 df 03 00 00       	push   $0x3df$/;"	l
f01020a8	obj/kern/kernel.asm	/^f01020a8:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	e8 8e df ff ff       	call   f0100040 <_panic>$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	e8 41 f5 ff ff       	call   f01015fe <page_free>$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	6a 02                	push   $0x2$/;"	l
f01020bf	obj/kern/kernel.asm	/^f01020bf:	6a 00                	push   $0x0$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	53                   	push   %ebx$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f01020c8	obj/kern/kernel.asm	/^f01020c8:	e8 80 f8 ff ff       	call   f010194d <page_insert>$/;"	l
f01020cd	obj/kern/kernel.asm	/^f01020cd:	83 c4 20             	add    $0x20,%esp$/;"	l
f01020d0	obj/kern/kernel.asm	/^f01020d0:	85 c0                	test   %eax,%eax$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	74 19                	je     f01020ed <mem_init+0x6df>$/;"	l
f01020d4	obj/kern/kernel.asm	/^f01020d4:	68 38 72 10 f0       	push   $0xf0107238$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	68 e3 03 00 00       	push   $0x3e3$/;"	l
f01020e3	obj/kern/kernel.asm	/^f01020e3:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01020e8	obj/kern/kernel.asm	/^f01020e8:	e8 53 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	8b 3d 90 5e 23 f0    	mov    0xf0235e90,%edi$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	a1 94 5e 23 f0       	mov    0xf0235e94,%eax$/;"	l
f01020f8	obj/kern/kernel.asm	/^f01020f8:	89 c1                	mov    %eax,%ecx$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01020fd	obj/kern/kernel.asm	/^f01020fd:	8b 17                	mov    (%edi),%edx$/;"	l
f01020ff	obj/kern/kernel.asm	/^f01020ff:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102108	obj/kern/kernel.asm	/^f0102108:	29 c8                	sub    %ecx,%eax$/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010210d	obj/kern/kernel.asm	/^f010210d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	39 c2                	cmp    %eax,%edx$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	74 19                	je     f010212d <mem_init+0x71f>$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	68 68 72 10 f0       	push   $0xf0107268$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	68 e4 03 00 00       	push   $0x3e4$/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	e8 13 df ff ff       	call   f0100040 <_panic>$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102132	obj/kern/kernel.asm	/^f0102132:	89 f8                	mov    %edi,%eax$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	e8 06 f0 ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	89 da                	mov    %ebx,%edx$/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	39 d0                	cmp    %edx,%eax$/;"	l
f0102146	obj/kern/kernel.asm	/^f0102146:	74 19                	je     f0102161 <mem_init+0x753>$/;"	l
f0102148	obj/kern/kernel.asm	/^f0102148:	68 90 72 10 f0       	push   $0xf0107290$/;"	l
f010214d	obj/kern/kernel.asm	/^f010214d:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	68 e5 03 00 00       	push   $0x3e5$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	e8 df de ff ff       	call   f0100040 <_panic>$/;"	l
f0102161	obj/kern/kernel.asm	/^f0102161:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	74 19                	je     f0102181 <mem_init+0x773>$/;"	l
f0102168	obj/kern/kernel.asm	/^f0102168:	68 4a 7b 10 f0       	push   $0xf0107b4a$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	68 e6 03 00 00       	push   $0x3e6$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	e8 bf de ff ff       	call   f0100040 <_panic>$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102189	obj/kern/kernel.asm	/^f0102189:	74 19                	je     f01021a4 <mem_init+0x796>$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	68 5b 7b 10 f0       	push   $0xf0107b5b$/;"	l
f0102190	obj/kern/kernel.asm	/^f0102190:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102195	obj/kern/kernel.asm	/^f0102195:	68 e7 03 00 00       	push   $0x3e7$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	e8 9c de ff ff       	call   f0100040 <_panic>$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	6a 02                	push   $0x2$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	68 00 10 00 00       	push   $0x1000$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	56                   	push   %esi$/;"	l
f01021ac	obj/kern/kernel.asm	/^f01021ac:	57                   	push   %edi$/;"	l
f01021ad	obj/kern/kernel.asm	/^f01021ad:	e8 9b f7 ff ff       	call   f010194d <page_insert>$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	85 c0                	test   %eax,%eax$/;"	l
f01021b7	obj/kern/kernel.asm	/^f01021b7:	74 19                	je     f01021d2 <mem_init+0x7c4>$/;"	l
f01021b9	obj/kern/kernel.asm	/^f01021b9:	68 c0 72 10 f0       	push   $0xf01072c0$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	68 ea 03 00 00       	push   $0x3ea$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	e8 6e de ff ff       	call   f0100040 <_panic>$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f01021dc	obj/kern/kernel.asm	/^f01021dc:	e8 5e ef ff ff       	call   f010113f <check_va2pa>$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	89 f2                	mov    %esi,%edx$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	2b 15 94 5e 23 f0    	sub    0xf0235e94,%edx$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01021ec	obj/kern/kernel.asm	/^f01021ec:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	39 d0                	cmp    %edx,%eax$/;"	l
f01021f1	obj/kern/kernel.asm	/^f01021f1:	74 19                	je     f010220c <mem_init+0x7fe>$/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	68 fc 72 10 f0       	push   $0xf01072fc$/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	68 eb 03 00 00       	push   $0x3eb$/;"	l
f0102202	obj/kern/kernel.asm	/^f0102202:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	e8 34 de ff ff       	call   f0100040 <_panic>$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102211	obj/kern/kernel.asm	/^f0102211:	74 19                	je     f010222c <mem_init+0x81e>$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	68 6c 7b 10 f0       	push   $0xf0107b6c$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	68 ec 03 00 00       	push   $0x3ec$/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	e8 14 de ff ff       	call   f0100040 <_panic>$/;"	l
f010222c	obj/kern/kernel.asm	/^f010222c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	6a 00                	push   $0x0$/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	e8 58 f3 ff ff       	call   f010158e <page_alloc>$/;"	l
f0102236	obj/kern/kernel.asm	/^f0102236:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	85 c0                	test   %eax,%eax$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	74 19                	je     f0102256 <mem_init+0x848>$/;"	l
f010223d	obj/kern/kernel.asm	/^f010223d:	68 f8 7a 10 f0       	push   $0xf0107af8$/;"	l
f0102242	obj/kern/kernel.asm	/^f0102242:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	e8 ea dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	6a 02                	push   $0x2$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	68 00 10 00 00       	push   $0x1000$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	56                   	push   %esi$/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0102264	obj/kern/kernel.asm	/^f0102264:	e8 e4 f6 ff ff       	call   f010194d <page_insert>$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	83 c4 10             	add    $0x10,%esp$/;"	l
f010226c	obj/kern/kernel.asm	/^f010226c:	85 c0                	test   %eax,%eax$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	74 19                	je     f0102289 <mem_init+0x87b>$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	68 c0 72 10 f0       	push   $0xf01072c0$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	68 f2 03 00 00       	push   $0x3f2$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	e8 b7 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	e8 a7 ee ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	89 f2                	mov    %esi,%edx$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	2b 15 94 5e 23 f0    	sub    0xf0235e94,%edx$/;"	l
f01022a0	obj/kern/kernel.asm	/^f01022a0:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022a6	obj/kern/kernel.asm	/^f01022a6:	39 d0                	cmp    %edx,%eax$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	74 19                	je     f01022c3 <mem_init+0x8b5>$/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	68 fc 72 10 f0       	push   $0xf01072fc$/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	68 f3 03 00 00       	push   $0x3f3$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	e8 7d dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	74 19                	je     f01022e3 <mem_init+0x8d5>$/;"	l
f01022ca	obj/kern/kernel.asm	/^f01022ca:	68 6c 7b 10 f0       	push   $0xf0107b6c$/;"	l
f01022cf	obj/kern/kernel.asm	/^f01022cf:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	68 f4 03 00 00       	push   $0x3f4$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	e8 5d dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022e3	obj/kern/kernel.asm	/^f01022e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01022e6	obj/kern/kernel.asm	/^f01022e6:	6a 00                	push   $0x0$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	e8 a1 f2 ff ff       	call   f010158e <page_alloc>$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	85 c0                	test   %eax,%eax$/;"	l
f01022f2	obj/kern/kernel.asm	/^f01022f2:	74 19                	je     f010230d <mem_init+0x8ff>$/;"	l
f01022f4	obj/kern/kernel.asm	/^f01022f4:	68 f8 7a 10 f0       	push   $0xf0107af8$/;"	l
f01022f9	obj/kern/kernel.asm	/^f01022f9:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	68 f8 03 00 00       	push   $0x3f8$/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	e8 33 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	8b 15 90 5e 23 f0    	mov    0xf0235e90,%edx$/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	8b 02                	mov    (%edx),%eax$/;"	l
f0102315	obj/kern/kernel.asm	/^f0102315:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	89 c1                	mov    %eax,%ecx$/;"	l
f010231c	obj/kern/kernel.asm	/^f010231c:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	3b 0d 8c 5e 23 f0    	cmp    0xf0235e8c,%ecx$/;"	l
f0102325	obj/kern/kernel.asm	/^f0102325:	72 15                	jb     f010233c <mem_init+0x92e>$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	50                   	push   %eax$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f010232d	obj/kern/kernel.asm	/^f010232d:	68 fb 03 00 00       	push   $0x3fb$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	e8 04 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102347	obj/kern/kernel.asm	/^f0102347:	6a 00                	push   $0x0$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	68 00 10 00 00       	push   $0x1000$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	52                   	push   %edx$/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	e8 29 f3 ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102357	obj/kern/kernel.asm	/^f0102357:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f010235a	obj/kern/kernel.asm	/^f010235a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	39 d0                	cmp    %edx,%eax$/;"	l
f010235f	obj/kern/kernel.asm	/^f010235f:	74 19                	je     f010237a <mem_init+0x96c>$/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	68 2c 73 10 f0       	push   $0xf010732c$/;"	l
f0102366	obj/kern/kernel.asm	/^f0102366:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010236b	obj/kern/kernel.asm	/^f010236b:	68 fc 03 00 00       	push   $0x3fc$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	e8 c6 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	6a 06                	push   $0x6$/;"	l
f010237c	obj/kern/kernel.asm	/^f010237c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	56                   	push   %esi$/;"	l
f0102382	obj/kern/kernel.asm	/^f0102382:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	e8 c0 f5 ff ff       	call   f010194d <page_insert>$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	85 c0                	test   %eax,%eax$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	74 19                	je     f01023ad <mem_init+0x99f>$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	68 6c 73 10 f0       	push   $0xf010736c$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	68 ff 03 00 00       	push   $0x3ff$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	e8 93 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	8b 3d 90 5e 23 f0    	mov    0xf0235e90,%edi$/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	89 f8                	mov    %edi,%eax$/;"	l
f01023ba	obj/kern/kernel.asm	/^f01023ba:	e8 80 ed ff ff       	call   f010113f <check_va2pa>$/;"	l
f01023bf	obj/kern/kernel.asm	/^f01023bf:	89 f2                	mov    %esi,%edx$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	2b 15 94 5e 23 f0    	sub    0xf0235e94,%edx$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	39 d0                	cmp    %edx,%eax$/;"	l
f01023cf	obj/kern/kernel.asm	/^f01023cf:	74 19                	je     f01023ea <mem_init+0x9dc>$/;"	l
f01023d1	obj/kern/kernel.asm	/^f01023d1:	68 fc 72 10 f0       	push   $0xf01072fc$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	68 00 04 00 00       	push   $0x400$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	e8 56 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	74 19                	je     f010240a <mem_init+0x9fc>$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	68 6c 7b 10 f0       	push   $0xf0107b6c$/;"	l
f01023f6	obj/kern/kernel.asm	/^f01023f6:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	68 01 04 00 00       	push   $0x401$/;"	l
f0102400	obj/kern/kernel.asm	/^f0102400:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	e8 36 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010240d	obj/kern/kernel.asm	/^f010240d:	6a 00                	push   $0x0$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	57                   	push   %edi$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	e8 63 f2 ff ff       	call   f010167d <pgdir_walk>$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010241d	obj/kern/kernel.asm	/^f010241d:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	75 19                	jne    f010243b <mem_init+0xa2d>$/;"	l
f0102422	obj/kern/kernel.asm	/^f0102422:	68 ac 73 10 f0       	push   $0xf01073ac$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010242c	obj/kern/kernel.asm	/^f010242c:	68 02 04 00 00       	push   $0x402$/;"	l
f0102431	obj/kern/kernel.asm	/^f0102431:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102436	obj/kern/kernel.asm	/^f0102436:	e8 05 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	75 19                	jne    f010245e <mem_init+0xa50>$/;"	l
f0102445	obj/kern/kernel.asm	/^f0102445:	68 7d 7b 10 f0       	push   $0xf0107b7d$/;"	l
f010244a	obj/kern/kernel.asm	/^f010244a:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	68 03 04 00 00       	push   $0x403$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102459	obj/kern/kernel.asm	/^f0102459:	e8 e2 db ff ff       	call   f0100040 <_panic>$/;"	l
f010245e	obj/kern/kernel.asm	/^f010245e:	6a 02                	push   $0x2$/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	56                   	push   %esi$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	50                   	push   %eax$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	e8 e1 f4 ff ff       	call   f010194d <page_insert>$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	85 c0                	test   %eax,%eax$/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	74 19                	je     f010248c <mem_init+0xa7e>$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	68 c0 72 10 f0       	push   $0xf01072c0$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	68 06 04 00 00       	push   $0x406$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	e8 b4 db ff ff       	call   f0100040 <_panic>$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	6a 00                	push   $0x0$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	e8 dc f1 ff ff       	call   f010167d <pgdir_walk>$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f01024a7	obj/kern/kernel.asm	/^f01024a7:	75 19                	jne    f01024c2 <mem_init+0xab4>$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	68 e0 73 10 f0       	push   $0xf01073e0$/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	68 07 04 00 00       	push   $0x407$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	e8 7e db ff ff       	call   f0100040 <_panic>$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	6a 00                	push   $0x0$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	68 00 10 00 00       	push   $0x1000$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f01024d2	obj/kern/kernel.asm	/^f01024d2:	e8 a6 f1 ff ff       	call   f010167d <pgdir_walk>$/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024da	obj/kern/kernel.asm	/^f01024da:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	74 19                	je     f01024f8 <mem_init+0xaea>$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	68 14 74 10 f0       	push   $0xf0107414$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	68 08 04 00 00       	push   $0x408$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	e8 48 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	6a 02                	push   $0x2$/;"	l
f01024fa	obj/kern/kernel.asm	/^f01024fa:	68 00 00 40 00       	push   $0x400000$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102502	obj/kern/kernel.asm	/^f0102502:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0102508	obj/kern/kernel.asm	/^f0102508:	e8 40 f4 ff ff       	call   f010194d <page_insert>$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	85 c0                	test   %eax,%eax$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	78 19                	js     f010252d <mem_init+0xb1f>$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	68 4c 74 10 f0       	push   $0xf010744c$/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	68 0b 04 00 00       	push   $0x40b$/;"	l
f0102523	obj/kern/kernel.asm	/^f0102523:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	e8 13 db ff ff       	call   f0100040 <_panic>$/;"	l
f010252d	obj/kern/kernel.asm	/^f010252d:	6a 02                	push   $0x2$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102534	obj/kern/kernel.asm	/^f0102534:	53                   	push   %ebx$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	e8 0d f4 ff ff       	call   f010194d <page_insert>$/;"	l
f0102540	obj/kern/kernel.asm	/^f0102540:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	85 c0                	test   %eax,%eax$/;"	l
f0102545	obj/kern/kernel.asm	/^f0102545:	74 19                	je     f0102560 <mem_init+0xb52>$/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	68 84 74 10 f0       	push   $0xf0107484$/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	68 0e 04 00 00       	push   $0x40e$/;"	l
f0102556	obj/kern/kernel.asm	/^f0102556:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010255b	obj/kern/kernel.asm	/^f010255b:	e8 e0 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102563	obj/kern/kernel.asm	/^f0102563:	6a 00                	push   $0x0$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	68 00 10 00 00       	push   $0x1000$/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	e8 08 f1 ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102578	obj/kern/kernel.asm	/^f0102578:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	74 19                	je     f0102596 <mem_init+0xb88>$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	68 14 74 10 f0       	push   $0xf0107414$/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	68 0f 04 00 00       	push   $0x40f$/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	e8 aa da ff ff       	call   f0100040 <_panic>$/;"	l
f0102596	obj/kern/kernel.asm	/^f0102596:	8b 3d 90 5e 23 f0    	mov    0xf0235e90,%edi$/;"	l
f010259c	obj/kern/kernel.asm	/^f010259c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01025a1	obj/kern/kernel.asm	/^f01025a1:	89 f8                	mov    %edi,%eax$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	e8 97 eb ff ff       	call   f010113f <check_va2pa>$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	89 c1                	mov    %eax,%ecx$/;"	l
f01025aa	obj/kern/kernel.asm	/^f01025aa:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	89 d8                	mov    %ebx,%eax$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f01025b5	obj/kern/kernel.asm	/^f01025b5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01025b8	obj/kern/kernel.asm	/^f01025b8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01025bb	obj/kern/kernel.asm	/^f01025bb:	39 c1                	cmp    %eax,%ecx$/;"	l
f01025bd	obj/kern/kernel.asm	/^f01025bd:	74 19                	je     f01025d8 <mem_init+0xbca>$/;"	l
f01025bf	obj/kern/kernel.asm	/^f01025bf:	68 c0 74 10 f0       	push   $0xf01074c0$/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	68 12 04 00 00       	push   $0x412$/;"	l
f01025ce	obj/kern/kernel.asm	/^f01025ce:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	e8 68 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	89 f8                	mov    %edi,%eax$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	e8 5b eb ff ff       	call   f010113f <check_va2pa>$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	74 19                	je     f0102602 <mem_init+0xbf4>$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	68 ec 74 10 f0       	push   $0xf01074ec$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01025f3	obj/kern/kernel.asm	/^f01025f3:	68 13 04 00 00       	push   $0x413$/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	e8 3e da ff ff       	call   f0100040 <_panic>$/;"	l
f0102602	obj/kern/kernel.asm	/^f0102602:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0102607	obj/kern/kernel.asm	/^f0102607:	74 19                	je     f0102622 <mem_init+0xc14>$/;"	l
f0102609	obj/kern/kernel.asm	/^f0102609:	68 93 7b 10 f0       	push   $0xf0107b93$/;"	l
f010260e	obj/kern/kernel.asm	/^f010260e:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	68 15 04 00 00       	push   $0x415$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010261d	obj/kern/kernel.asm	/^f010261d:	e8 1e da ff ff       	call   f0100040 <_panic>$/;"	l
f0102622	obj/kern/kernel.asm	/^f0102622:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	74 19                	je     f0102642 <mem_init+0xc34>$/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	68 a4 7b 10 f0       	push   $0xf0107ba4$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	68 16 04 00 00       	push   $0x416$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	e8 fe d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	6a 00                	push   $0x0$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	e8 42 ef ff ff       	call   f010158e <page_alloc>$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010264f	obj/kern/kernel.asm	/^f010264f:	85 c0                	test   %eax,%eax$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	74 04                	je     f0102657 <mem_init+0xc49>$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	39 c6                	cmp    %eax,%esi$/;"	l
f0102655	obj/kern/kernel.asm	/^f0102655:	74 19                	je     f0102670 <mem_init+0xc62>$/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	68 1c 75 10 f0       	push   $0xf010751c$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	68 19 04 00 00       	push   $0x419$/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	e8 d0 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	6a 00                	push   $0x0$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	e8 87 f2 ff ff       	call   f0101907 <page_remove>$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	8b 3d 90 5e 23 f0    	mov    0xf0235e90,%edi$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	89 f8                	mov    %edi,%eax$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	e8 ad ea ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	74 19                	je     f01026b3 <mem_init+0xca5>$/;"	l
f010269a	obj/kern/kernel.asm	/^f010269a:	68 40 75 10 f0       	push   $0xf0107540$/;"	l
f010269f	obj/kern/kernel.asm	/^f010269f:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	68 1d 04 00 00       	push   $0x41d$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01026ae	obj/kern/kernel.asm	/^f01026ae:	e8 8d d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	89 f8                	mov    %edi,%eax$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	e8 80 ea ff ff       	call   f010113f <check_va2pa>$/;"	l
f01026bf	obj/kern/kernel.asm	/^f01026bf:	89 da                	mov    %ebx,%edx$/;"	l
f01026c1	obj/kern/kernel.asm	/^f01026c1:	2b 15 94 5e 23 f0    	sub    0xf0235e94,%edx$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01026cd	obj/kern/kernel.asm	/^f01026cd:	39 d0                	cmp    %edx,%eax$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	74 19                	je     f01026ea <mem_init+0xcdc>$/;"	l
f01026d1	obj/kern/kernel.asm	/^f01026d1:	68 ec 74 10 f0       	push   $0xf01074ec$/;"	l
f01026d6	obj/kern/kernel.asm	/^f01026d6:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01026db	obj/kern/kernel.asm	/^f01026db:	68 1e 04 00 00       	push   $0x41e$/;"	l
f01026e0	obj/kern/kernel.asm	/^f01026e0:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01026e5	obj/kern/kernel.asm	/^f01026e5:	e8 56 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026ea	obj/kern/kernel.asm	/^f01026ea:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	74 19                	je     f010270a <mem_init+0xcfc>$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	68 4a 7b 10 f0       	push   $0xf0107b4a$/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	68 1f 04 00 00       	push   $0x41f$/;"	l
f0102700	obj/kern/kernel.asm	/^f0102700:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	e8 36 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	74 19                	je     f010272a <mem_init+0xd1c>$/;"	l
f0102711	obj/kern/kernel.asm	/^f0102711:	68 a4 7b 10 f0       	push   $0xf0107ba4$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	68 20 04 00 00       	push   $0x420$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	e8 16 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	6a 00                	push   $0x0$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102731	obj/kern/kernel.asm	/^f0102731:	53                   	push   %ebx$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	57                   	push   %edi$/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	e8 15 f2 ff ff       	call   f010194d <page_insert>$/;"	l
f0102738	obj/kern/kernel.asm	/^f0102738:	83 c4 10             	add    $0x10,%esp$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	85 c0                	test   %eax,%eax$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	74 19                	je     f0102758 <mem_init+0xd4a>$/;"	l
f010273f	obj/kern/kernel.asm	/^f010273f:	68 64 75 10 f0       	push   $0xf0107564$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	68 23 04 00 00       	push   $0x423$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	e8 e8 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	75 19                	jne    f0102778 <mem_init+0xd6a>$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	68 b5 7b 10 f0       	push   $0xf0107bb5$/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	68 24 04 00 00       	push   $0x424$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102773	obj/kern/kernel.asm	/^f0102773:	e8 c8 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	74 19                	je     f0102796 <mem_init+0xd88>$/;"	l
f010277d	obj/kern/kernel.asm	/^f010277d:	68 c1 7b 10 f0       	push   $0xf0107bc1$/;"	l
f0102782	obj/kern/kernel.asm	/^f0102782:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	68 25 04 00 00       	push   $0x425$/;"	l
f010278c	obj/kern/kernel.asm	/^f010278c:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102791	obj/kern/kernel.asm	/^f0102791:	e8 aa d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102796	obj/kern/kernel.asm	/^f0102796:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	68 00 10 00 00       	push   $0x1000$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	e8 5e f1 ff ff       	call   f0101907 <page_remove>$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	8b 3d 90 5e 23 f0    	mov    0xf0235e90,%edi$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	89 f8                	mov    %edi,%eax$/;"	l
f01027b6	obj/kern/kernel.asm	/^f01027b6:	e8 84 e9 ff ff       	call   f010113f <check_va2pa>$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01027be	obj/kern/kernel.asm	/^f01027be:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01027c1	obj/kern/kernel.asm	/^f01027c1:	74 19                	je     f01027dc <mem_init+0xdce>$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	68 40 75 10 f0       	push   $0xf0107540$/;"	l
f01027c8	obj/kern/kernel.asm	/^f01027c8:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	68 29 04 00 00       	push   $0x429$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	e8 64 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027dc	obj/kern/kernel.asm	/^f01027dc:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01027e1	obj/kern/kernel.asm	/^f01027e1:	89 f8                	mov    %edi,%eax$/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	e8 57 e9 ff ff       	call   f010113f <check_va2pa>$/;"	l
f01027e8	obj/kern/kernel.asm	/^f01027e8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	74 19                	je     f0102806 <mem_init+0xdf8>$/;"	l
f01027ed	obj/kern/kernel.asm	/^f01027ed:	68 9c 75 10 f0       	push   $0xf010759c$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	68 2a 04 00 00       	push   $0x42a$/;"	l
f01027fc	obj/kern/kernel.asm	/^f01027fc:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	e8 3a d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	74 19                	je     f0102826 <mem_init+0xe18>$/;"	l
f010280d	obj/kern/kernel.asm	/^f010280d:	68 d6 7b 10 f0       	push   $0xf0107bd6$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	68 2b 04 00 00       	push   $0x42b$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102821	obj/kern/kernel.asm	/^f0102821:	e8 1a d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102826	obj/kern/kernel.asm	/^f0102826:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	74 19                	je     f0102846 <mem_init+0xe38>$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	68 a4 7b 10 f0       	push   $0xf0107ba4$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	68 2c 04 00 00       	push   $0x42c$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	e8 fa d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	6a 00                	push   $0x0$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	e8 3e ed ff ff       	call   f010158e <page_alloc>$/;"	l
f0102850	obj/kern/kernel.asm	/^f0102850:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102853	obj/kern/kernel.asm	/^f0102853:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102855	obj/kern/kernel.asm	/^f0102855:	75 04                	jne    f010285b <mem_init+0xe4d>$/;"	l
f0102857	obj/kern/kernel.asm	/^f0102857:	85 c0                	test   %eax,%eax$/;"	l
f0102859	obj/kern/kernel.asm	/^f0102859:	75 19                	jne    f0102874 <mem_init+0xe66>$/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	68 c4 75 10 f0       	push   $0xf01075c4$/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	68 2f 04 00 00       	push   $0x42f$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	e8 cc d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	6a 00                	push   $0x0$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	e8 10 ed ff ff       	call   f010158e <page_alloc>$/;"	l
f010287e	obj/kern/kernel.asm	/^f010287e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102881	obj/kern/kernel.asm	/^f0102881:	85 c0                	test   %eax,%eax$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	74 19                	je     f010289e <mem_init+0xe90>$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	68 f8 7a 10 f0       	push   $0xf0107af8$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	68 32 04 00 00       	push   $0x432$/;"	l
f0102894	obj/kern/kernel.asm	/^f0102894:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102899	obj/kern/kernel.asm	/^f0102899:	e8 a2 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	8b 0d 90 5e 23 f0    	mov    0xf0235e90,%ecx$/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	8b 11                	mov    (%ecx),%edx$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01028af	obj/kern/kernel.asm	/^f01028af:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f01028b5	obj/kern/kernel.asm	/^f01028b5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01028b8	obj/kern/kernel.asm	/^f01028b8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	39 c2                	cmp    %eax,%edx$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	74 19                	je     f01028d8 <mem_init+0xeca>$/;"	l
f01028bf	obj/kern/kernel.asm	/^f01028bf:	68 68 72 10 f0       	push   $0xf0107268$/;"	l
f01028c4	obj/kern/kernel.asm	/^f01028c4:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	68 35 04 00 00       	push   $0x435$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	e8 68 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028d8	obj/kern/kernel.asm	/^f01028d8:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01028e1	obj/kern/kernel.asm	/^f01028e1:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f01028e6	obj/kern/kernel.asm	/^f01028e6:	74 19                	je     f0102901 <mem_init+0xef3>$/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	68 5b 7b 10 f0       	push   $0xf0107b5b$/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	68 37 04 00 00       	push   $0x437$/;"	l
f01028f7	obj/kern/kernel.asm	/^f01028f7:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	e8 3f d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102904	obj/kern/kernel.asm	/^f0102904:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010290a	obj/kern/kernel.asm	/^f010290a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	50                   	push   %eax$/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	e8 eb ec ff ff       	call   f01015fe <page_free>$/;"	l
f0102913	obj/kern/kernel.asm	/^f0102913:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102916	obj/kern/kernel.asm	/^f0102916:	6a 01                	push   $0x1$/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	68 00 10 40 00       	push   $0x401000$/;"	l
f010291d	obj/kern/kernel.asm	/^f010291d:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0102923	obj/kern/kernel.asm	/^f0102923:	e8 55 ed ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	89 c7                	mov    %eax,%edi$/;"	l
f010292a	obj/kern/kernel.asm	/^f010292a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010292d	obj/kern/kernel.asm	/^f010292d:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102935	obj/kern/kernel.asm	/^f0102935:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010293d	obj/kern/kernel.asm	/^f010293d:	8b 0d 8c 5e 23 f0    	mov    0xf0235e8c,%ecx$/;"	l
f0102943	obj/kern/kernel.asm	/^f0102943:	89 c2                	mov    %eax,%edx$/;"	l
f0102945	obj/kern/kernel.asm	/^f0102945:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	83 c4 10             	add    $0x10,%esp$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	39 ca                	cmp    %ecx,%edx$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	72 15                	jb     f0102964 <mem_init+0xf56>$/;"	l
f010294f	obj/kern/kernel.asm	/^f010294f:	50                   	push   %eax$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	68 3e 04 00 00       	push   $0x43e$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010295f	obj/kern/kernel.asm	/^f010295f:	e8 dc d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	39 c7                	cmp    %eax,%edi$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	74 19                	je     f0102986 <mem_init+0xf78>$/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	68 e7 7b 10 f0       	push   $0xf0107be7$/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102977	obj/kern/kernel.asm	/^f0102977:	68 3f 04 00 00       	push   $0x43f$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	e8 ba d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01029a5	obj/kern/kernel.asm	/^f01029a5:	89 c2                	mov    %eax,%edx$/;"	l
f01029a7	obj/kern/kernel.asm	/^f01029a7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	39 d1                	cmp    %edx,%ecx$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	77 12                	ja     f01029c0 <mem_init+0xfb2>$/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	50                   	push   %eax$/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	6a 5a                	push   $0x5a$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	e8 80 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01029c3	obj/kern/kernel.asm	/^f01029c3:	68 00 10 00 00       	push   $0x1000$/;"	l
f01029c8	obj/kern/kernel.asm	/^f01029c8:	68 ff 00 00 00       	push   $0xff$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01029d2	obj/kern/kernel.asm	/^f01029d2:	50                   	push   %eax$/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	e8 f0 2f 00 00       	call   f01059c8 <memset>$/;"	l
f01029d8	obj/kern/kernel.asm	/^f01029d8:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	e8 1b ec ff ff       	call   f01015fe <page_free>$/;"	l
f01029e3	obj/kern/kernel.asm	/^f01029e3:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01029e6	obj/kern/kernel.asm	/^f01029e6:	6a 01                	push   $0x1$/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	6a 00                	push   $0x0$/;"	l
f01029ea	obj/kern/kernel.asm	/^f01029ea:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	e8 88 ec ff ff       	call   f010167d <pgdir_walk>$/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	89 fa                	mov    %edi,%edx$/;"	l
f01029f7	obj/kern/kernel.asm	/^f01029f7:	2b 15 94 5e 23 f0    	sub    0xf0235e94,%edx$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102a03	obj/kern/kernel.asm	/^f0102a03:	89 d0                	mov    %edx,%eax$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a0b	obj/kern/kernel.asm	/^f0102a0b:	3b 05 8c 5e 23 f0    	cmp    0xf0235e8c,%eax$/;"	l
f0102a11	obj/kern/kernel.asm	/^f0102a11:	72 12                	jb     f0102a25 <mem_init+0x1017>$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	52                   	push   %edx$/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	6a 5a                	push   $0x5a$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	e8 1b d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102a2e	obj/kern/kernel.asm	/^f0102a2e:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102a34	obj/kern/kernel.asm	/^f0102a34:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102a37	obj/kern/kernel.asm	/^f0102a37:	74 19                	je     f0102a52 <mem_init+0x1044>$/;"	l
f0102a39	obj/kern/kernel.asm	/^f0102a39:	68 ff 7b 10 f0       	push   $0xf0107bff$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	68 49 04 00 00       	push   $0x449$/;"	l
f0102a48	obj/kern/kernel.asm	/^f0102a48:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	e8 ee d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a52	obj/kern/kernel.asm	/^f0102a52:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	75 db                	jne    f0102a34 <mem_init+0x1026>$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0102a5e	obj/kern/kernel.asm	/^f0102a5e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102a67	obj/kern/kernel.asm	/^f0102a67:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102a6d	obj/kern/kernel.asm	/^f0102a6d:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	89 0d 40 52 23 f0    	mov    %ecx,0xf0235240$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a79	obj/kern/kernel.asm	/^f0102a79:	50                   	push   %eax$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	e8 7f eb ff ff       	call   f01015fe <page_free>$/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	e8 77 eb ff ff       	call   f01015fe <page_free>$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102a8a	obj/kern/kernel.asm	/^f0102a8a:	e8 6f eb ff ff       	call   f01015fe <page_free>$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	68 01 10 00 00       	push   $0x1001$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	6a 00                	push   $0x0$/;"	l
f0102a99	obj/kern/kernel.asm	/^f0102a99:	e8 10 ef ff ff       	call   f01019ae <mmio_map_region>$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	89 c3                	mov    %eax,%ebx$/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102aa3	obj/kern/kernel.asm	/^f0102aa3:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	6a 00                	push   $0x0$/;"	l
f0102aaa	obj/kern/kernel.asm	/^f0102aaa:	e8 ff ee ff ff       	call   f01019ae <mmio_map_region>$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	89 c6                	mov    %eax,%esi$/;"	l
f0102ab1	obj/kern/kernel.asm	/^f0102ab1:	8d 83 00 20 00 00    	lea    0x2000(%ebx),%eax$/;"	l
f0102ab7	obj/kern/kernel.asm	/^f0102ab7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102aba	obj/kern/kernel.asm	/^f0102aba:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102ac0	obj/kern/kernel.asm	/^f0102ac0:	76 07                	jbe    f0102ac9 <mem_init+0x10bb>$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	76 19                	jbe    f0102ae2 <mem_init+0x10d4>$/;"	l
f0102ac9	obj/kern/kernel.asm	/^f0102ac9:	68 e8 75 10 f0       	push   $0xf01075e8$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102ad3	obj/kern/kernel.asm	/^f0102ad3:	68 59 04 00 00       	push   $0x459$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	e8 5e d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	8d 96 00 20 00 00    	lea    0x2000(%esi),%edx$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	77 08                	ja     f0102af8 <mem_init+0x10ea>$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	77 19                	ja     f0102b11 <mem_init+0x1103>$/;"	l
f0102af8	obj/kern/kernel.asm	/^f0102af8:	68 10 76 10 f0       	push   $0xf0107610$/;"	l
f0102afd	obj/kern/kernel.asm	/^f0102afd:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	68 5a 04 00 00       	push   $0x45a$/;"	l
f0102b07	obj/kern/kernel.asm	/^f0102b07:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	e8 2f d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	89 da                	mov    %ebx,%edx$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	09 f2                	or     %esi,%edx$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	74 19                	je     f0102b36 <mem_init+0x1128>$/;"	l
f0102b1d	obj/kern/kernel.asm	/^f0102b1d:	68 38 76 10 f0       	push   $0xf0107638$/;"	l
f0102b22	obj/kern/kernel.asm	/^f0102b22:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	68 5c 04 00 00       	push   $0x45c$/;"	l
f0102b2c	obj/kern/kernel.asm	/^f0102b2c:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102b31	obj/kern/kernel.asm	/^f0102b31:	e8 0a d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b36	obj/kern/kernel.asm	/^f0102b36:	39 c6                	cmp    %eax,%esi$/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	73 19                	jae    f0102b53 <mem_init+0x1145>$/;"	l
f0102b3a	obj/kern/kernel.asm	/^f0102b3a:	68 16 7c 10 f0       	push   $0xf0107c16$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	68 5e 04 00 00       	push   $0x45e$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	e8 ed d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b53	obj/kern/kernel.asm	/^f0102b53:	8b 3d 90 5e 23 f0    	mov    0xf0235e90,%edi$/;"	l
f0102b59	obj/kern/kernel.asm	/^f0102b59:	89 da                	mov    %ebx,%edx$/;"	l
f0102b5b	obj/kern/kernel.asm	/^f0102b5b:	89 f8                	mov    %edi,%eax$/;"	l
f0102b5d	obj/kern/kernel.asm	/^f0102b5d:	e8 dd e5 ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102b62	obj/kern/kernel.asm	/^f0102b62:	85 c0                	test   %eax,%eax$/;"	l
f0102b64	obj/kern/kernel.asm	/^f0102b64:	74 19                	je     f0102b7f <mem_init+0x1171>$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	68 60 76 10 f0       	push   $0xf0107660$/;"	l
f0102b6b	obj/kern/kernel.asm	/^f0102b6b:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	68 60 04 00 00       	push   $0x460$/;"	l
f0102b75	obj/kern/kernel.asm	/^f0102b75:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102b7a	obj/kern/kernel.asm	/^f0102b7a:	e8 c1 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	89 c2                	mov    %eax,%edx$/;"	l
f0102b8a	obj/kern/kernel.asm	/^f0102b8a:	89 f8                	mov    %edi,%eax$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	e8 ae e5 ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	74 19                	je     f0102bb1 <mem_init+0x11a3>$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	68 84 76 10 f0       	push   $0xf0107684$/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	68 61 04 00 00       	push   $0x461$/;"	l
f0102ba7	obj/kern/kernel.asm	/^f0102ba7:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102bac	obj/kern/kernel.asm	/^f0102bac:	e8 8f d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	89 f2                	mov    %esi,%edx$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	89 f8                	mov    %edi,%eax$/;"	l
f0102bb5	obj/kern/kernel.asm	/^f0102bb5:	e8 85 e5 ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	85 c0                	test   %eax,%eax$/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	74 19                	je     f0102bd7 <mem_init+0x11c9>$/;"	l
f0102bbe	obj/kern/kernel.asm	/^f0102bbe:	68 b4 76 10 f0       	push   $0xf01076b4$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102bc8	obj/kern/kernel.asm	/^f0102bc8:	68 62 04 00 00       	push   $0x462$/;"	l
f0102bcd	obj/kern/kernel.asm	/^f0102bcd:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	e8 69 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102bdd	obj/kern/kernel.asm	/^f0102bdd:	89 f8                	mov    %edi,%eax$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	e8 5b e5 ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102be7	obj/kern/kernel.asm	/^f0102be7:	74 19                	je     f0102c02 <mem_init+0x11f4>$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	68 d8 76 10 f0       	push   $0xf01076d8$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	68 63 04 00 00       	push   $0x463$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	e8 3e d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c02	obj/kern/kernel.asm	/^f0102c02:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c05	obj/kern/kernel.asm	/^f0102c05:	6a 00                	push   $0x0$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	53                   	push   %ebx$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	57                   	push   %edi$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	e8 6f ea ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c11	obj/kern/kernel.asm	/^f0102c11:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102c14	obj/kern/kernel.asm	/^f0102c14:	75 19                	jne    f0102c2f <mem_init+0x1221>$/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	68 04 77 10 f0       	push   $0xf0107704$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20:	68 65 04 00 00       	push   $0x465$/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	e8 11 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c2f	obj/kern/kernel.asm	/^f0102c2f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	6a 00                	push   $0x0$/;"	l
f0102c34	obj/kern/kernel.asm	/^f0102c34:	53                   	push   %ebx$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	e8 3d ea ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0102c40	obj/kern/kernel.asm	/^f0102c40:	8b 00                	mov    (%eax),%eax$/;"	l
f0102c42	obj/kern/kernel.asm	/^f0102c42:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c45	obj/kern/kernel.asm	/^f0102c45:	83 e0 04             	and    $0x4,%eax$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	74 19                	je     f0102c66 <mem_init+0x1258>$/;"	l
f0102c4d	obj/kern/kernel.asm	/^f0102c4d:	68 48 77 10 f0       	push   $0xf0107748$/;"	l
f0102c52	obj/kern/kernel.asm	/^f0102c52:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	68 66 04 00 00       	push   $0x466$/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102c61	obj/kern/kernel.asm	/^f0102c61:	e8 da d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c66	obj/kern/kernel.asm	/^f0102c66:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	6a 00                	push   $0x0$/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	53                   	push   %ebx$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	e8 06 ea ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	6a 00                	push   $0x0$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	e8 ed e9 ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102c96	obj/kern/kernel.asm	/^f0102c96:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	6a 00                	push   $0x0$/;"	l
f0102c9b	obj/kern/kernel.asm	/^f0102c9b:	56                   	push   %esi$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	e8 d6 e9 ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0102ca7	obj/kern/kernel.asm	/^f0102ca7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102cad	obj/kern/kernel.asm	/^f0102cad:	c7 04 24 28 7c 10 f0 	movl   $0xf0107c28,(%esp)$/;"	l
f0102cb4	obj/kern/kernel.asm	/^f0102cb4:	e8 71 11 00 00       	call   f0103e2a <cprintf>$/;"	l
f0102cb9	obj/kern/kernel.asm	/^f0102cb9:	a1 94 5e 23 f0       	mov    0xf0235e94,%eax$/;"	l
f0102cbe	obj/kern/kernel.asm	/^f0102cbe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cc1	obj/kern/kernel.asm	/^f0102cc1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102cc6	obj/kern/kernel.asm	/^f0102cc6:	77 15                	ja     f0102cdd <mem_init+0x12cf>$/;"	l
f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	50                   	push   %eax$/;"	l
f0102cc9	obj/kern/kernel.asm	/^f0102cc9:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	68 db 00 00 00       	push   $0xdb$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	e8 63 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	8b 15 8c 5e 23 f0    	mov    0xf0235e8c,%edx$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102cf0	obj/kern/kernel.asm	/^f0102cf0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	6a 05                	push   $0x5$/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102cfa	obj/kern/kernel.asm	/^f0102cfa:	50                   	push   %eax$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0102d05	obj/kern/kernel.asm	/^f0102d05:	e8 51 ea ff ff       	call   f010175b <boot_map_region>$/;"	l
f0102d0a	obj/kern/kernel.asm	/^f0102d0a:	a1 48 52 23 f0       	mov    0xf0235248,%eax$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d12	obj/kern/kernel.asm	/^f0102d12:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	77 15                	ja     f0102d2e <mem_init+0x1320>$/;"	l
f0102d19	obj/kern/kernel.asm	/^f0102d19:	50                   	push   %eax$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	68 e6 00 00 00       	push   $0xe6$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	e8 12 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102d31	obj/kern/kernel.asm	/^f0102d31:	6a 05                	push   $0x5$/;"	l
f0102d33	obj/kern/kernel.asm	/^f0102d33:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	50                   	push   %eax$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	e8 0e ea ff ff       	call   f010175b <boot_map_region>$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d50	obj/kern/kernel.asm	/^f0102d50:	b8 00 70 11 f0       	mov    $0xf0117000,%eax$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	77 15                	ja     f0102d71 <mem_init+0x1363>$/;"	l
f0102d5c	obj/kern/kernel.asm	/^f0102d5c:	50                   	push   %eax$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	68 f4 00 00 00       	push   $0xf4$/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	e8 cf d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	6a 03                	push   $0x3$/;"	l
f0102d76	obj/kern/kernel.asm	/^f0102d76:	68 00 70 11 00       	push   $0x117000$/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	e8 cc e9 ff ff       	call   f010175b <boot_map_region>$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102d92	obj/kern/kernel.asm	/^f0102d92:	6a 03                	push   $0x3$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	6a 00                	push   $0x0$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102da0	obj/kern/kernel.asm	/^f0102da0:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	e8 b1 e9 ff ff       	call   f010175b <boot_map_region>$/;"	l
f0102daa	obj/kern/kernel.asm	/^f0102daa:	c7 45 c4 00 70 23 f0 	movl   $0xf0237000,-0x3c(%ebp)$/;"	l
f0102db1	obj/kern/kernel.asm	/^f0102db1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102db4	obj/kern/kernel.asm	/^f0102db4:	bb 00 70 23 f0       	mov    $0xf0237000,%ebx$/;"	l
f0102db9	obj/kern/kernel.asm	/^f0102db9:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102dbe	obj/kern/kernel.asm	/^f0102dbe:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	77 15                	ja     f0102ddb <mem_init+0x13cd>$/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	53                   	push   %ebx$/;"	l
f0102dc7	obj/kern/kernel.asm	/^f0102dc7:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	68 37 01 00 00       	push   $0x137$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102dd6	obj/kern/kernel.asm	/^f0102dd6:	e8 65 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ddb	obj/kern/kernel.asm	/^f0102ddb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102dde	obj/kern/kernel.asm	/^f0102dde:	6a 03                	push   $0x3$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	50                   	push   %eax$/;"	l
f0102de7	obj/kern/kernel.asm	/^f0102de7:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102dec	obj/kern/kernel.asm	/^f0102dec:	89 f2                	mov    %esi,%edx$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	e8 63 e9 ff ff       	call   f010175b <boot_map_region>$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102dfe	obj/kern/kernel.asm	/^f0102dfe:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102e04	obj/kern/kernel.asm	/^f0102e04:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	b8 00 70 27 f0       	mov    $0xf0277000,%eax$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102e0e	obj/kern/kernel.asm	/^f0102e0e:	75 ae                	jne    f0102dbe <mem_init+0x13b0>$/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	8b 3d 90 5e 23 f0    	mov    0xf0235e90,%edi$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	a1 8c 5e 23 f0       	mov    0xf0235e8c,%eax$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102e25	obj/kern/kernel.asm	/^f0102e25:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	8b 35 94 5e 23 f0    	mov    0xf0235e94,%esi$/;"	l
f0102e33	obj/kern/kernel.asm	/^f0102e33:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e3b	obj/kern/kernel.asm	/^f0102e3b:	eb 55                	jmp    f0102e92 <mem_init+0x1484>$/;"	l
f0102e3d	obj/kern/kernel.asm	/^f0102e3d:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102e43	obj/kern/kernel.asm	/^f0102e43:	89 f8                	mov    %edi,%eax$/;"	l
f0102e45	obj/kern/kernel.asm	/^f0102e45:	e8 f5 e2 ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51:	77 15                	ja     f0102e68 <mem_init+0x145a>$/;"	l
f0102e53	obj/kern/kernel.asm	/^f0102e53:	56                   	push   %esi$/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0102e59	obj/kern/kernel.asm	/^f0102e59:	68 7a 03 00 00       	push   $0x37a$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	e8 d8 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e68	obj/kern/kernel.asm	/^f0102e68:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f0102e6f	obj/kern/kernel.asm	/^f0102e6f:	39 c2                	cmp    %eax,%edx$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	74 19                	je     f0102e8c <mem_init+0x147e>$/;"	l
f0102e73	obj/kern/kernel.asm	/^f0102e73:	68 7c 77 10 f0       	push   $0xf010777c$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	68 7a 03 00 00       	push   $0x37a$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	e8 b4 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102e92	obj/kern/kernel.asm	/^f0102e92:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0102e95	obj/kern/kernel.asm	/^f0102e95:	77 a6                	ja     f0102e3d <mem_init+0x142f>$/;"	l
f0102e97	obj/kern/kernel.asm	/^f0102e97:	8b 35 48 52 23 f0    	mov    0xf0235248,%esi$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	89 da                	mov    %ebx,%edx$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	89 f8                	mov    %edi,%eax$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	e8 91 e2 ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	77 15                	ja     f0102ecc <mem_init+0x14be>$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	56                   	push   %esi$/;"	l
f0102eb8	obj/kern/kernel.asm	/^f0102eb8:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	68 7f 03 00 00       	push   $0x37f$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102ec7	obj/kern/kernel.asm	/^f0102ec7:	e8 74 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ecc	obj/kern/kernel.asm	/^f0102ecc:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f0102ed3	obj/kern/kernel.asm	/^f0102ed3:	39 d0                	cmp    %edx,%eax$/;"	l
f0102ed5	obj/kern/kernel.asm	/^f0102ed5:	74 19                	je     f0102ef0 <mem_init+0x14e2>$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	68 b0 77 10 f0       	push   $0xf01077b0$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	68 7f 03 00 00       	push   $0x37f$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	e8 50 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ef6	obj/kern/kernel.asm	/^f0102ef6:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f0102efc	obj/kern/kernel.asm	/^f0102efc:	75 a7                	jne    f0102ea5 <mem_init+0x1497>$/;"	l
f0102efe	obj/kern/kernel.asm	/^f0102efe:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102f09	obj/kern/kernel.asm	/^f0102f09:	eb 30                	jmp    f0102f3b <mem_init+0x152d>$/;"	l
f0102f0b	obj/kern/kernel.asm	/^f0102f0b:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	89 f8                	mov    %edi,%eax$/;"	l
f0102f13	obj/kern/kernel.asm	/^f0102f13:	e8 27 e2 ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	74 19                	je     f0102f35 <mem_init+0x1527>$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	68 e4 77 10 f0       	push   $0xf01077e4$/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102f26	obj/kern/kernel.asm	/^f0102f26:	68 83 03 00 00       	push   $0x383$/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102f30	obj/kern/kernel.asm	/^f0102f30:	e8 0b d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102f3d	obj/kern/kernel.asm	/^f0102f3d:	72 cc                	jb     f0102f0b <mem_init+0x14fd>$/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f0102f53	obj/kern/kernel.asm	/^f0102f53:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	89 c3                	mov    %eax,%ebx$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	89 da                	mov    %ebx,%edx$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	89 f8                	mov    %edi,%eax$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	e8 d3 e1 ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	77 15                	ja     f0102f89 <mem_init+0x157b>$/;"	l
f0102f74	obj/kern/kernel.asm	/^f0102f74:	56                   	push   %esi$/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	68 8b 03 00 00       	push   $0x38b$/;"	l
f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	e8 b7 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f89	obj/kern/kernel.asm	/^f0102f89:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	8d 94 0b 00 70 23 f0 	lea    -0xfdc9000(%ebx,%ecx,1),%edx$/;"	l
f0102f93	obj/kern/kernel.asm	/^f0102f93:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	74 19                	je     f0102fb0 <mem_init+0x15a2>$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	68 0c 78 10 f0       	push   $0xf010780c$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	68 8b 03 00 00       	push   $0x38b$/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	e8 90 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	75 a8                	jne    f0102f63 <mem_init+0x1555>$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f0102fc4	obj/kern/kernel.asm	/^f0102fc4:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	89 c6                	mov    %eax,%esi$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	89 da                	mov    %ebx,%edx$/;"	l
f0102fcb	obj/kern/kernel.asm	/^f0102fcb:	89 f8                	mov    %edi,%eax$/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	e8 6d e1 ff ff       	call   f010113f <check_va2pa>$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	74 19                	je     f0102ff0 <mem_init+0x15e2>$/;"	l
f0102fd7	obj/kern/kernel.asm	/^f0102fd7:	68 54 78 10 f0       	push   $0xf0107854$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	68 8d 03 00 00       	push   $0x38d$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0102feb	obj/kern/kernel.asm	/^f0102feb:	e8 50 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ff6	obj/kern/kernel.asm	/^f0102ff6:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	75 cf                	jne    f0102fc9 <mem_init+0x15bb>$/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f0103004	obj/kern/kernel.asm	/^f0103004:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f010300b	obj/kern/kernel.asm	/^f010300b:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f0103011	obj/kern/kernel.asm	/^f0103011:	b8 00 70 27 f0       	mov    $0xf0277000,%eax$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	39 f0                	cmp    %esi,%eax$/;"	l
f0103018	obj/kern/kernel.asm	/^f0103018:	0f 85 2c ff ff ff    	jne    f0102f4a <mem_init+0x153c>$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	eb 2a                	jmp    f010304f <mem_init+0x1641>$/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	77 1f                	ja     f010304f <mem_init+0x1641>$/;"	l
f0103030	obj/kern/kernel.asm	/^f0103030:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	75 7e                	jne    f01030b4 <mem_init+0x16a6>$/;"	l
f0103036	obj/kern/kernel.asm	/^f0103036:	68 41 7c 10 f0       	push   $0xf0107c41$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	68 98 03 00 00       	push   $0x398$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	e8 f1 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	76 3f                	jbe    f0103095 <mem_init+0x1687>$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	f6 c2 01             	test   $0x1,%dl$/;"	l
f010305c	obj/kern/kernel.asm	/^f010305c:	75 19                	jne    f0103077 <mem_init+0x1669>$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	68 41 7c 10 f0       	push   $0xf0107c41$/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	68 9c 03 00 00       	push   $0x39c$/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0103072	obj/kern/kernel.asm	/^f0103072:	e8 c9 cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	f6 c2 02             	test   $0x2,%dl$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	75 38                	jne    f01030b4 <mem_init+0x16a6>$/;"	l
f010307c	obj/kern/kernel.asm	/^f010307c:	68 52 7c 10 f0       	push   $0xf0107c52$/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	68 9d 03 00 00       	push   $0x39d$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	e8 ab cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	74 19                	je     f01030b4 <mem_init+0x16a6>$/;"	l
f010309b	obj/kern/kernel.asm	/^f010309b:	68 63 7c 10 f0       	push   $0xf0107c63$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	68 9f 03 00 00       	push   $0x39f$/;"	l
f01030aa	obj/kern/kernel.asm	/^f01030aa:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	e8 8c cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01030b7	obj/kern/kernel.asm	/^f01030b7:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc:	0f 86 63 ff ff ff    	jbe    f0103025 <mem_init+0x1617>$/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	68 78 78 10 f0       	push   $0xf0107878$/;"	l
f01030ca	obj/kern/kernel.asm	/^f01030ca:	e8 5b 0d 00 00       	call   f0103e2a <cprintf>$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030d7	obj/kern/kernel.asm	/^f01030d7:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030dc	obj/kern/kernel.asm	/^f01030dc:	77 15                	ja     f01030f3 <mem_init+0x16e5>$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	50                   	push   %eax$/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f01030e4	obj/kern/kernel.asm	/^f01030e4:	68 0f 01 00 00       	push   $0x10f$/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	e8 4d cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01030fb	obj/kern/kernel.asm	/^f01030fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100:	e8 b0 e0 ff ff       	call   f01011b5 <check_page_free_list>$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	6a 00                	push   $0x0$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	e8 71 e4 ff ff       	call   f010158e <page_alloc>$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	89 c3                	mov    %eax,%ebx$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	85 c0                	test   %eax,%eax$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	75 19                	jne    f010313f <mem_init+0x1731>$/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	68 4d 7a 10 f0       	push   $0xf0107a4d$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0103130	obj/kern/kernel.asm	/^f0103130:	68 7b 04 00 00       	push   $0x47b$/;"	l
f0103135	obj/kern/kernel.asm	/^f0103135:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010313a	obj/kern/kernel.asm	/^f010313a:	e8 01 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	6a 00                	push   $0x0$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	e8 45 e4 ff ff       	call   f010158e <page_alloc>$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	89 c7                	mov    %eax,%edi$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010314e	obj/kern/kernel.asm	/^f010314e:	85 c0                	test   %eax,%eax$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	75 19                	jne    f010316b <mem_init+0x175d>$/;"	l
f0103152	obj/kern/kernel.asm	/^f0103152:	68 63 7a 10 f0       	push   $0xf0107a63$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	68 7c 04 00 00       	push   $0x47c$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	e8 d5 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	6a 00                	push   $0x0$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	e8 19 e4 ff ff       	call   f010158e <page_alloc>$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	89 c6                	mov    %eax,%esi$/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	83 c4 10             	add    $0x10,%esp$/;"	l
f010317a	obj/kern/kernel.asm	/^f010317a:	85 c0                	test   %eax,%eax$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	75 19                	jne    f0103197 <mem_init+0x1789>$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	68 79 7a 10 f0       	push   $0xf0107a79$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	68 7d 04 00 00       	push   $0x47d$/;"	l
f010318d	obj/kern/kernel.asm	/^f010318d:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	e8 a9 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	53                   	push   %ebx$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	e8 5e e4 ff ff       	call   f01015fe <page_free>$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	89 f8                	mov    %edi,%eax$/;"	l
f01031a2	obj/kern/kernel.asm	/^f01031a2:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	89 c2                	mov    %eax,%edx$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01031b3	obj/kern/kernel.asm	/^f01031b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031b6	obj/kern/kernel.asm	/^f01031b6:	3b 15 8c 5e 23 f0    	cmp    0xf0235e8c,%edx$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	72 12                	jb     f01031d0 <mem_init+0x17c2>$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	50                   	push   %eax$/;"	l
f01031bf	obj/kern/kernel.asm	/^f01031bf:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	6a 5a                	push   $0x5a$/;"	l
f01031c6	obj/kern/kernel.asm	/^f01031c6:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	e8 70 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	68 00 10 00 00       	push   $0x1000$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	6a 01                	push   $0x1$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	50                   	push   %eax$/;"	l
f01031e0	obj/kern/kernel.asm	/^f01031e0:	e8 e3 27 00 00       	call   f01059c8 <memset>$/;"	l
f01031e5	obj/kern/kernel.asm	/^f01031e5:	89 f0                	mov    %esi,%eax$/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	89 c2                	mov    %eax,%edx$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	3b 15 8c 5e 23 f0    	cmp    0xf0235e8c,%edx$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	72 12                	jb     f0103215 <mem_init+0x1807>$/;"	l
f0103203	obj/kern/kernel.asm	/^f0103203:	50                   	push   %eax$/;"	l
f0103204	obj/kern/kernel.asm	/^f0103204:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	6a 5a                	push   $0x5a$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	e8 2b ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103215	obj/kern/kernel.asm	/^f0103215:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	68 00 10 00 00       	push   $0x1000$/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	6a 02                	push   $0x2$/;"	l
f010321f	obj/kern/kernel.asm	/^f010321f:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	50                   	push   %eax$/;"	l
f0103225	obj/kern/kernel.asm	/^f0103225:	e8 9e 27 00 00       	call   f01059c8 <memset>$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	6a 02                	push   $0x2$/;"	l
f010322c	obj/kern/kernel.asm	/^f010322c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	57                   	push   %edi$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	e8 10 e7 ff ff       	call   f010194d <page_insert>$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	83 c4 20             	add    $0x20,%esp$/;"	l
f0103240	obj/kern/kernel.asm	/^f0103240:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	74 19                	je     f0103260 <mem_init+0x1852>$/;"	l
f0103247	obj/kern/kernel.asm	/^f0103247:	68 4a 7b 10 f0       	push   $0xf0107b4a$/;"	l
f010324c	obj/kern/kernel.asm	/^f010324c:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0103251	obj/kern/kernel.asm	/^f0103251:	68 82 04 00 00       	push   $0x482$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010325b	obj/kern/kernel.asm	/^f010325b:	e8 e0 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	01 01 01 $/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	74 19                	je     f0103285 <mem_init+0x1877>$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	68 98 78 10 f0       	push   $0xf0107898$/;"	l
f0103271	obj/kern/kernel.asm	/^f0103271:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0103276	obj/kern/kernel.asm	/^f0103276:	68 83 04 00 00       	push   $0x483$/;"	l
f010327b	obj/kern/kernel.asm	/^f010327b:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	e8 bb cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103285	obj/kern/kernel.asm	/^f0103285:	6a 02                	push   $0x2$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	68 00 10 00 00       	push   $0x1000$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	56                   	push   %esi$/;"	l
f010328d	obj/kern/kernel.asm	/^f010328d:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	e8 b5 e6 ff ff       	call   f010194d <page_insert>$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	83 c4 10             	add    $0x10,%esp$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01032a2	obj/kern/kernel.asm	/^f01032a2:	02 02 02 $/;"	l
f01032a5	obj/kern/kernel.asm	/^f01032a5:	74 19                	je     f01032c0 <mem_init+0x18b2>$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	68 bc 78 10 f0       	push   $0xf01078bc$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	68 85 04 00 00       	push   $0x485$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	e8 80 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032c0	obj/kern/kernel.asm	/^f01032c0:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	74 19                	je     f01032e0 <mem_init+0x18d2>$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	68 6c 7b 10 f0       	push   $0xf0107b6c$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	68 86 04 00 00       	push   $0x486$/;"	l
f01032d6	obj/kern/kernel.asm	/^f01032d6:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	e8 60 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	74 19                	je     f0103300 <mem_init+0x18f2>$/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	68 d6 7b 10 f0       	push   $0xf0107bd6$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	68 87 04 00 00       	push   $0x487$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	e8 40 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103307	obj/kern/kernel.asm	/^f0103307:	03 03 03 $/;"	l
f010330a	obj/kern/kernel.asm	/^f010330a:	89 f0                	mov    %esi,%eax$/;"	l
f010330c	obj/kern/kernel.asm	/^f010330c:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f0103312	obj/kern/kernel.asm	/^f0103312:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	89 c2                	mov    %eax,%edx$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	3b 15 8c 5e 23 f0    	cmp    0xf0235e8c,%edx$/;"	l
f0103323	obj/kern/kernel.asm	/^f0103323:	72 12                	jb     f0103337 <mem_init+0x1929>$/;"	l
f0103325	obj/kern/kernel.asm	/^f0103325:	50                   	push   %eax$/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	6a 5a                	push   $0x5a$/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	e8 09 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	03 03 03 $/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	74 19                	je     f010335c <mem_init+0x194e>$/;"	l
f0103343	obj/kern/kernel.asm	/^f0103343:	68 e0 78 10 f0       	push   $0xf01078e0$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010334d	obj/kern/kernel.asm	/^f010334d:	68 89 04 00 00       	push   $0x489$/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f0103357	obj/kern/kernel.asm	/^f0103357:	e8 e4 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010335f	obj/kern/kernel.asm	/^f010335f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	ff 35 90 5e 23 f0    	pushl  0xf0235e90$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	e8 98 e5 ff ff       	call   f0101907 <page_remove>$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	74 19                	je     f0103392 <mem_init+0x1984>$/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	68 a4 7b 10 f0       	push   $0xf0107ba4$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	68 8b 04 00 00       	push   $0x48b$/;"	l
f0103388	obj/kern/kernel.asm	/^f0103388:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	e8 ae cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	8b 0d 90 5e 23 f0    	mov    0xf0235e90,%ecx$/;"	l
f0103398	obj/kern/kernel.asm	/^f0103398:	8b 11                	mov    (%ecx),%edx$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01033a0	obj/kern/kernel.asm	/^f01033a0:	89 d8                	mov    %ebx,%eax$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	2b 05 94 5e 23 f0    	sub    0xf0235e94,%eax$/;"	l
f01033a8	obj/kern/kernel.asm	/^f01033a8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01033ab	obj/kern/kernel.asm	/^f01033ab:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	39 c2                	cmp    %eax,%edx$/;"	l
f01033b0	obj/kern/kernel.asm	/^f01033b0:	74 19                	je     f01033cb <mem_init+0x19bd>$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	68 68 72 10 f0       	push   $0xf0107268$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01033bc	obj/kern/kernel.asm	/^f01033bc:	68 8e 04 00 00       	push   $0x48e$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	e8 75 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033cb	obj/kern/kernel.asm	/^f01033cb:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	74 19                	je     f01033f1 <mem_init+0x19e3>$/;"	l
f01033d8	obj/kern/kernel.asm	/^f01033d8:	68 5b 7b 10 f0       	push   $0xf0107b5b$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	68 90 04 00 00       	push   $0x490$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	68 6d 79 10 f0       	push   $0xf010796d$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	e8 4f cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033f1	obj/kern/kernel.asm	/^f01033f1:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033fa	obj/kern/kernel.asm	/^f01033fa:	53                   	push   %ebx$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	e8 fe e1 ff ff       	call   f01015fe <page_free>$/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	c7 04 24 0c 79 10 f0 	movl   $0xf010790c,(%esp)$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	e8 1e 0a 00 00       	call   f0103e2a <cprintf>$/;"	l
f010340c	obj/kern/kernel.asm	/^f010340c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	5b                   	pop    %ebx$/;"	l
f0103413	obj/kern/kernel.asm	/^f0103413:	5e                   	pop    %esi$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	5f                   	pop    %edi$/;"	l
f0103415	obj/kern/kernel.asm	/^f0103415:	5d                   	pop    %ebp$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	c3                   	ret    $/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417 <user_mem_check>:$/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	55                   	push   %ebp$/;"	l
f0103418	obj/kern/kernel.asm	/^f0103418:	89 e5                	mov    %esp,%ebp$/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	57                   	push   %edi$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	56                   	push   %esi$/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c:	53                   	push   %ebx$/;"	l
f010341d	obj/kern/kernel.asm	/^f010341d:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f010342c	obj/kern/kernel.asm	/^f010342c:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010343b	obj/kern/kernel.asm	/^f010343b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010343e	obj/kern/kernel.asm	/^f010343e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	76 6b                	jbe    f01034ad <user_mem_check+0x96>$/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	89 1d 3c 52 23 f0    	mov    %ebx,0xf023523c$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	eb 68                	jmp    f01034b7 <user_mem_check+0xa0>$/;"	l
f010344f	obj/kern/kernel.asm	/^f010344f:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	76 1c                	jbe    f0103473 <user_mem_check+0x5c>$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	81 7d 0c 00 00 80 ef 	cmpl   $0xef800000,0xc(%ebp)$/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	b8 00 00 80 ef       	mov    $0xef800000,%eax$/;"	l
f0103463	obj/kern/kernel.asm	/^f0103463:	0f 43 45 0c          	cmovae 0xc(%ebp),%eax$/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	a3 3c 52 23 f0       	mov    %eax,0xf023523c$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103471	obj/kern/kernel.asm	/^f0103471:	eb 44                	jmp    f01034b7 <user_mem_check+0xa0>$/;"	l
f0103473	obj/kern/kernel.asm	/^f0103473:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	6a 00                	push   $0x0$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	53                   	push   %ebx$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	e8 fc e1 ff ff       	call   f010167d <pgdir_walk>$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	85 c0                	test   %eax,%eax$/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	74 0c                	je     f0103494 <user_mem_check+0x7d>$/;"	l
f0103488	obj/kern/kernel.asm	/^f0103488:	8b 00                	mov    (%eax),%eax$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	a8 01                	test   $0x1,%al$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	74 06                	je     f0103494 <user_mem_check+0x7d>$/;"	l
f010348e	obj/kern/kernel.asm	/^f010348e:	21 f0                	and    %esi,%eax$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	39 c6                	cmp    %eax,%esi$/;"	l
f0103492	obj/kern/kernel.asm	/^f0103492:	74 0d                	je     f01034a1 <user_mem_check+0x8a>$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	89 1d 3c 52 23 f0    	mov    %ebx,0xf023523c$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010349f	obj/kern/kernel.asm	/^f010349f:	eb 16                	jmp    f01034b7 <user_mem_check+0xa0>$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01034a7	obj/kern/kernel.asm	/^f01034a7:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	72 9d                	jb     f010344f <user_mem_check+0x38>$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01034b7	obj/kern/kernel.asm	/^f01034b7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	5b                   	pop    %ebx$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb:	5e                   	pop    %esi$/;"	l
f01034bc	obj/kern/kernel.asm	/^f01034bc:	5f                   	pop    %edi$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	5d                   	pop    %ebp$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	c3                   	ret    $/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf <user_mem_assert>:$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	55                   	push   %ebp$/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	53                   	push   %ebx$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	83 c8 04             	or     $0x4,%eax$/;"	l
f01034cf	obj/kern/kernel.asm	/^f01034cf:	50                   	push   %eax$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01034d3	obj/kern/kernel.asm	/^f01034d3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	53                   	push   %ebx$/;"	l
f01034d7	obj/kern/kernel.asm	/^f01034d7:	e8 3b ff ff ff       	call   f0103417 <user_mem_check>$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034df	obj/kern/kernel.asm	/^f01034df:	85 c0                	test   %eax,%eax$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	79 21                	jns    f0103504 <user_mem_assert+0x45>$/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	ff 35 3c 52 23 f0    	pushl  0xf023523c$/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	68 38 79 10 f0       	push   $0xf0107938$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	e8 31 09 00 00       	call   f0103e2a <cprintf>$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	e8 39 06 00 00       	call   f0103b3a <env_destroy>$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103504	obj/kern/kernel.asm	/^f0103504:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103507	obj/kern/kernel.asm	/^f0103507:	c9                   	leave  $/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	c3                   	ret    $/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509 <region_alloc>:$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	55                   	push   %ebp$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	89 e5                	mov    %esp,%ebp$/;"	l
f010350c	obj/kern/kernel.asm	/^f010350c:	57                   	push   %edi$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	56                   	push   %esi$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	53                   	push   %ebx$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	89 c7                	mov    %eax,%edi$/;"	l
f0103514	obj/kern/kernel.asm	/^f0103514:	89 d3                	mov    %edx,%ebx$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103529	obj/kern/kernel.asm	/^f0103529:	eb 56                	jmp    f0103581 <region_alloc+0x78>$/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010352e	obj/kern/kernel.asm	/^f010352e:	6a 00                	push   $0x0$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	e8 59 e0 ff ff       	call   f010158e <page_alloc>$/;"	l
f0103535	obj/kern/kernel.asm	/^f0103535:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103538	obj/kern/kernel.asm	/^f0103538:	85 c0                	test   %eax,%eax$/;"	l
f010353a	obj/kern/kernel.asm	/^f010353a:	75 17                	jne    f0103553 <region_alloc+0x4a>$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	68 71 7c 10 f0       	push   $0xf0107c71$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	68 2d 01 00 00       	push   $0x12d$/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	e8 ed ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	6a 06                	push   $0x6$/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	53                   	push   %ebx$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	50                   	push   %eax$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	e8 ee e3 ff ff       	call   f010194d <page_insert>$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103562	obj/kern/kernel.asm	/^f0103562:	85 c0                	test   %eax,%eax$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	74 15                	je     f010357b <region_alloc+0x72>$/;"	l
f0103566	obj/kern/kernel.asm	/^f0103566:	50                   	push   %eax$/;"	l
f0103567	obj/kern/kernel.asm	/^f0103567:	68 98 7c 10 f0       	push   $0xf0107c98$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	68 30 01 00 00       	push   $0x130$/;"	l
f0103571	obj/kern/kernel.asm	/^f0103571:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	e8 c5 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010357b	obj/kern/kernel.asm	/^f010357b:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	75 a6                	jne    f010352b <region_alloc+0x22>$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	5b                   	pop    %ebx$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	5e                   	pop    %esi$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	5f                   	pop    %edi$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	5d                   	pop    %ebp$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	c3                   	ret    $/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d <envid2env>:$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	55                   	push   %ebp$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	56                   	push   %esi$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	53                   	push   %ebx$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	85 c0                	test   %eax,%eax$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	75 1a                	jne    f01035b6 <envid2env+0x29>$/;"	l
f010359c	obj/kern/kernel.asm	/^f010359c:	e8 49 2a 00 00       	call   f0105fea <cpunum>$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01035a4	obj/kern/kernel.asm	/^f01035a4:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	89 01                	mov    %eax,(%ecx)$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	eb 70                	jmp    f0103626 <envid2env+0x99>$/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	89 c3                	mov    %eax,%ebx$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	03 1d 48 52 23 f0    	add    0xf0235248,%ebx$/;"	l
f01035c7	obj/kern/kernel.asm	/^f01035c7:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	74 05                	je     f01035d2 <envid2env+0x45>$/;"	l
f01035cd	obj/kern/kernel.asm	/^f01035cd:	3b 43 48             	cmp    0x48(%ebx),%eax$/;"	l
f01035d0	obj/kern/kernel.asm	/^f01035d0:	74 10                	je     f01035e2 <envid2env+0x55>$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01035db	obj/kern/kernel.asm	/^f01035db:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	eb 44                	jmp    f0103626 <envid2env+0x99>$/;"	l
f01035e2	obj/kern/kernel.asm	/^f01035e2:	84 d2                	test   %dl,%dl$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	74 36                	je     f010361c <envid2env+0x8f>$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	e8 ff 29 00 00       	call   f0105fea <cpunum>$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	3b 98 28 60 23 f0    	cmp    -0xfdc9fd8(%eax),%ebx$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	74 26                	je     f010361c <envid2env+0x8f>$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	e8 ec 29 00 00       	call   f0105fea <cpunum>$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	74 10                	je     f010361c <envid2env+0x8f>$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103615	obj/kern/kernel.asm	/^f0103615:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	eb 0a                	jmp    f0103626 <envid2env+0x99>$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	5b                   	pop    %ebx$/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	5e                   	pop    %esi$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	5d                   	pop    %ebp$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	c3                   	ret    $/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a <env_init_percpu>:$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	55                   	push   %ebp$/;"	l
f010362b	obj/kern/kernel.asm	/^f010362b:	89 e5                	mov    %esp,%ebp$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	b8 20 13 12 f0       	mov    $0xf0121320,%eax$/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f010363a	obj/kern/kernel.asm	/^f010363a:	8e e8                	mov    %eax,%gs$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	8e e0                	mov    %eax,%fs$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	8e c0                	mov    %eax,%es$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	8e d8                	mov    %eax,%ds$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	8e d0                	mov    %eax,%ss$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	ea 50 36 10 f0 08 00 	ljmp   $0x8,$0xf0103650$/;"	l
f0103650	obj/kern/kernel.asm	/^f0103650:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	0f 00 d0             	lldt   %ax$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	5d                   	pop    %ebp$/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659:	c3                   	ret    $/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a <env_init>:$/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a:	55                   	push   %ebp$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	89 e5                	mov    %esp,%ebp$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	56                   	push   %esi$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	53                   	push   %ebx$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	8b 35 48 52 23 f0    	mov    0xf0235248,%esi$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	8b 15 4c 52 23 f0    	mov    0xf023524c,%edx$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	8d 5e 84             	lea    -0x7c(%esi),%ebx$/;"	l
f0103674	obj/kern/kernel.asm	/^f0103674:	89 c1                	mov    %eax,%ecx$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%eax)$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%eax)$/;"	l
f0103695	obj/kern/kernel.asm	/^f0103695:	c7 40 60 00 00 00 00 	movl   $0x0,0x60(%eax)$/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	89 ca                	mov    %ecx,%edx$/;"	l
f01036a1	obj/kern/kernel.asm	/^f01036a1:	39 d8                	cmp    %ebx,%eax$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	75 cf                	jne    f0103674 <env_init+0x1a>$/;"	l
f01036a5	obj/kern/kernel.asm	/^f01036a5:	89 35 4c 52 23 f0    	mov    %esi,0xf023524c$/;"	l
f01036ab	obj/kern/kernel.asm	/^f01036ab:	e8 7a ff ff ff       	call   f010362a <env_init_percpu>$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	5b                   	pop    %ebx$/;"	l
f01036b1	obj/kern/kernel.asm	/^f01036b1:	5e                   	pop    %esi$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	5d                   	pop    %ebp$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	c3                   	ret    $/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4 <env_alloc>:$/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	55                   	push   %ebp$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	53                   	push   %ebx$/;"	l
f01036b8	obj/kern/kernel.asm	/^f01036b8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	8b 1d 4c 52 23 f0    	mov    0xf023524c,%ebx$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	85 db                	test   %ebx,%ebx$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	0f 84 72 01 00 00    	je     f010383b <env_alloc+0x187>$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	6a 01                	push   $0x1$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	e8 bb de ff ff       	call   f010158e <page_alloc>$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	85 c0                	test   %eax,%eax$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	0f 84 64 01 00 00    	je     f0103842 <env_alloc+0x18e>$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	89 c2                	mov    %eax,%edx$/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	2b 15 94 5e 23 f0    	sub    0xf0235e94,%edx$/;"	l
f01036e6	obj/kern/kernel.asm	/^f01036e6:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01036e9	obj/kern/kernel.asm	/^f01036e9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	89 d1                	mov    %edx,%ecx$/;"	l
f01036ee	obj/kern/kernel.asm	/^f01036ee:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	3b 0d 8c 5e 23 f0    	cmp    0xf0235e8c,%ecx$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	72 12                	jb     f010370b <env_alloc+0x57>$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	52                   	push   %edx$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	6a 5a                	push   $0x5a$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0103706	obj/kern/kernel.asm	/^f0103706:	e8 35 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0103714	obj/kern/kernel.asm	/^f0103714:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010371c	obj/kern/kernel.asm	/^f010371c:	68 14 01 00 00       	push   $0x114$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	05 ec 0e 00 00       	add    $0xeec,%eax$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	50                   	push   %eax$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f010372f	obj/kern/kernel.asm	/^f010372f:	05 ec 0e 00 00       	add    $0xeec,%eax$/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	50                   	push   %eax$/;"	l
f0103735	obj/kern/kernel.asm	/^f0103735:	e8 43 23 00 00       	call   f0105a7d <memcpy>$/;"	l
f010373a	obj/kern/kernel.asm	/^f010373a:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	77 15                	ja     f010375c <env_alloc+0xa8>$/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	50                   	push   %eax$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	68 ca 00 00 00       	push   $0xca$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	e8 e4 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010377d	obj/kern/kernel.asm	/^f010377d:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103780	obj/kern/kernel.asm	/^f0103780:	89 da                	mov    %ebx,%edx$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	2b 15 48 52 23 f0    	sub    0xf0235248,%edx$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010378b	obj/kern/kernel.asm	/^f010378b:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	09 d0                	or     %edx,%eax$/;"	l
f0103793	obj/kern/kernel.asm	/^f0103793:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103799	obj/kern/kernel.asm	/^f0103799:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f01037a3	obj/kern/kernel.asm	/^f01037a3:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f01037b1	obj/kern/kernel.asm	/^f01037b1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01037b4	obj/kern/kernel.asm	/^f01037b4:	6a 44                	push   $0x44$/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	6a 00                	push   $0x0$/;"	l
f01037b8	obj/kern/kernel.asm	/^f01037b8:	53                   	push   %ebx$/;"	l
f01037b9	obj/kern/kernel.asm	/^f01037b9:	e8 0a 22 00 00       	call   f01059c8 <memset>$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f01037ca	obj/kern/kernel.asm	/^f01037ca:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f01037dd	obj/kern/kernel.asm	/^f01037dd:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	a3 4c 52 23 f0       	mov    %eax,0xf023524c$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	89 18                	mov    %ebx,(%eax)$/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	e8 ed 27 00 00       	call   f0105fea <cpunum>$/;"	l
f01037fd	obj/kern/kernel.asm	/^f01037fd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	83 b8 28 60 23 f0 00 	cmpl   $0x0,-0xfdc9fd8(%eax)$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	74 11                	je     f0103822 <env_alloc+0x16e>$/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	e8 d4 27 00 00       	call   f0105fea <cpunum>$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f010381f	obj/kern/kernel.asm	/^f010381f:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103825	obj/kern/kernel.asm	/^f0103825:	53                   	push   %ebx$/;"	l
f0103826	obj/kern/kernel.asm	/^f0103826:	52                   	push   %edx$/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	68 a9 7c 10 f0       	push   $0xf0107ca9$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	e8 f9 05 00 00       	call   f0103e2a <cprintf>$/;"	l
f0103831	obj/kern/kernel.asm	/^f0103831:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	eb 0c                	jmp    f0103847 <env_alloc+0x193>$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	eb 05                	jmp    f0103847 <env_alloc+0x193>$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103847	obj/kern/kernel.asm	/^f0103847:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010384a	obj/kern/kernel.asm	/^f010384a:	c9                   	leave  $/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	c3                   	ret    $/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c <env_create>:$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	55                   	push   %ebp$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	89 e5                	mov    %esp,%ebp$/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	57                   	push   %edi$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	56                   	push   %esi$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	53                   	push   %ebx$/;"	l
f0103852	obj/kern/kernel.asm	/^f0103852:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0103855	obj/kern/kernel.asm	/^f0103855:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	6a 00                	push   $0x0$/;"	l
f010385a	obj/kern/kernel.asm	/^f010385a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010385d	obj/kern/kernel.asm	/^f010385d:	50                   	push   %eax$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	e8 51 fe ff ff       	call   f01036b4 <env_alloc>$/;"	l
f0103863	obj/kern/kernel.asm	/^f0103863:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	83 c4 10             	add    $0x10,%esp$/;"	l
f010386c	obj/kern/kernel.asm	/^f010386c:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	74 15                	je     f0103889 <env_create+0x3d>$/;"	l
f0103874	obj/kern/kernel.asm	/^f0103874:	57                   	push   %edi$/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	68 e0 7c 10 f0       	push   $0xf0107ce0$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	68 6d 01 00 00       	push   $0x16d$/;"	l
f010387f	obj/kern/kernel.asm	/^f010387f:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	e8 b7 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	89 fb                	mov    %edi,%ebx$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103892	obj/kern/kernel.asm	/^f0103892:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	01 de                	add    %ebx,%esi$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	77 15                	ja     f01038b9 <env_create+0x6d>$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	50                   	push   %eax$/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f01038aa	obj/kern/kernel.asm	/^f01038aa:	68 72 01 00 00       	push   $0x172$/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f01038b4	obj/kern/kernel.asm	/^f01038b4:	e8 87 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038b9	obj/kern/kernel.asm	/^f01038b9:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	eb 44                	jmp    f0103907 <env_create+0xbb>$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f01038c6	obj/kern/kernel.asm	/^f01038c6:	75 3c                	jne    f0103904 <env_create+0xb8>$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f01038cb	obj/kern/kernel.asm	/^f01038cb:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	e8 33 fc ff ff       	call   f0103509 <region_alloc>$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	89 f8                	mov    %edi,%eax$/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	50                   	push   %eax$/;"	l
f01038e2	obj/kern/kernel.asm	/^f01038e2:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01038e5	obj/kern/kernel.asm	/^f01038e5:	e8 93 21 00 00       	call   f0105a7d <memcpy>$/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	29 c2                	sub    %eax,%edx$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	52                   	push   %edx$/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	6a 00                	push   $0x0$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	50                   	push   %eax$/;"	l
f01038fc	obj/kern/kernel.asm	/^f01038fc:	e8 c7 20 00 00       	call   f01059c8 <memset>$/;"	l
f0103901	obj/kern/kernel.asm	/^f0103901:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103907	obj/kern/kernel.asm	/^f0103907:	39 de                	cmp    %ebx,%esi$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	77 b8                	ja     f01038c3 <env_create+0x77>$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103915	obj/kern/kernel.asm	/^f0103915:	77 15                	ja     f010392c <env_create+0xe0>$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	50                   	push   %eax$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f010391d	obj/kern/kernel.asm	/^f010391d:	68 7b 01 00 00       	push   $0x17b$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	e8 14 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f010392c	obj/kern/kernel.asm	/^f010392c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010393a	obj/kern/kernel.asm	/^f010393a:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	89 f8                	mov    %edi,%eax$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	e8 bb fb ff ff       	call   f0103509 <region_alloc>$/;"	l
f010394e	obj/kern/kernel.asm	/^f010394e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	5b                   	pop    %ebx$/;"	l
f010395b	obj/kern/kernel.asm	/^f010395b:	5e                   	pop    %esi$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	5f                   	pop    %edi$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	5d                   	pop    %ebp$/;"	l
f010395e	obj/kern/kernel.asm	/^f010395e:	c3                   	ret    $/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f <env_free>:$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	55                   	push   %ebp$/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	89 e5                	mov    %esp,%ebp$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	57                   	push   %edi$/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	56                   	push   %esi$/;"	l
f0103964	obj/kern/kernel.asm	/^f0103964:	53                   	push   %ebx$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010396b	obj/kern/kernel.asm	/^f010396b:	e8 7a 26 00 00       	call   f0105fea <cpunum>$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	39 b8 28 60 23 f0    	cmp    %edi,-0xfdc9fd8(%eax)$/;"	l
f0103979	obj/kern/kernel.asm	/^f0103979:	75 29                	jne    f01039a4 <env_free+0x45>$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0103980	obj/kern/kernel.asm	/^f0103980:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	77 15                	ja     f010399c <env_free+0x3d>$/;"	l
f0103987	obj/kern/kernel.asm	/^f0103987:	50                   	push   %eax$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	68 a4 01 00 00       	push   $0x1a4$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	e8 a4 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f010399c	obj/kern/kernel.asm	/^f010399c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01039a4	obj/kern/kernel.asm	/^f01039a4:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	e8 3e 26 00 00       	call   f0105fea <cpunum>$/;"	l
f01039ac	obj/kern/kernel.asm	/^f01039ac:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	83 b8 28 60 23 f0 00 	cmpl   $0x0,-0xfdc9fd8(%eax)$/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	74 11                	je     f01039ce <env_free+0x6f>$/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	e8 28 26 00 00       	call   f0105fea <cpunum>$/;"	l
f01039c2	obj/kern/kernel.asm	/^f01039c2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01039c5	obj/kern/kernel.asm	/^f01039c5:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01039d1	obj/kern/kernel.asm	/^f01039d1:	53                   	push   %ebx$/;"	l
f01039d2	obj/kern/kernel.asm	/^f01039d2:	52                   	push   %edx$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	68 be 7c 10 f0       	push   $0xf0107cbe$/;"	l
f01039d8	obj/kern/kernel.asm	/^f01039d8:	e8 4d 04 00 00       	call   f0103e2a <cprintf>$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	89 d0                	mov    %edx,%eax$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01039f5	obj/kern/kernel.asm	/^f01039f5:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	0f 84 a8 00 00 00    	je     f0103aac <env_free+0x14d>$/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	89 f0                	mov    %esi,%eax$/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	39 05 8c 5e 23 f0    	cmp    %eax,0xf0235e8c$/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	77 15                	ja     f0103a2f <env_free+0xd0>$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	56                   	push   %esi$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	68 b3 01 00 00       	push   $0x1b3$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	e8 11 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103a32	obj/kern/kernel.asm	/^f0103a32:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103a3d	obj/kern/kernel.asm	/^f0103a3d:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	01 $/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	74 17                	je     f0103a5e <env_free+0xff>$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	89 d8                	mov    %ebx,%eax$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103a4f	obj/kern/kernel.asm	/^f0103a4f:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	50                   	push   %eax$/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	e8 ac de ff ff       	call   f0101907 <page_remove>$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a5e	obj/kern/kernel.asm	/^f0103a5e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103a67	obj/kern/kernel.asm	/^f0103a67:	75 d4                	jne    f0103a3d <env_free+0xde>$/;"	l
f0103a69	obj/kern/kernel.asm	/^f0103a69:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103a79	obj/kern/kernel.asm	/^f0103a79:	3b 05 8c 5e 23 f0    	cmp    0xf0235e8c,%eax$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	72 14                	jb     f0103a95 <env_free+0x136>$/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	68 10 71 10 f0       	push   $0xf0107110$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	6a 53                	push   $0x53$/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0103a90	obj/kern/kernel.asm	/^f0103a90:	e8 ab c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	a1 94 5e 23 f0       	mov    0xf0235e94,%eax$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103aa0	obj/kern/kernel.asm	/^f0103aa0:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	50                   	push   %eax$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	e8 ad db ff ff       	call   f0101656 <page_decref>$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103aac	obj/kern/kernel.asm	/^f0103aac:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	0f 85 29 ff ff ff    	jne    f01039e7 <env_free+0x88>$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	77 15                	ja     f0103add <env_free+0x17e>$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	50                   	push   %eax$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	68 c1 01 00 00       	push   $0x1c1$/;"	l
f0103ad3	obj/kern/kernel.asm	/^f0103ad3:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f0103ad8	obj/kern/kernel.asm	/^f0103ad8:	e8 63 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103add	obj/kern/kernel.asm	/^f0103add:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103ae9	obj/kern/kernel.asm	/^f0103ae9:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	3b 05 8c 5e 23 f0    	cmp    0xf0235e8c,%eax$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	72 14                	jb     f0103b08 <env_free+0x1a9>$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	68 10 71 10 f0       	push   $0xf0107110$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	6a 53                	push   $0x53$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	68 63 6a 10 f0       	push   $0xf0106a63$/;"	l
f0103b03	obj/kern/kernel.asm	/^f0103b03:	e8 38 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	8b 15 94 5e 23 f0    	mov    0xf0235e94,%edx$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	50                   	push   %eax$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	e8 3c db ff ff       	call   f0101656 <page_decref>$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	a1 4c 52 23 f0       	mov    0xf023524c,%eax$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	89 3d 4c 52 23 f0    	mov    %edi,0xf023524c$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b32	obj/kern/kernel.asm	/^f0103b32:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103b35	obj/kern/kernel.asm	/^f0103b35:	5b                   	pop    %ebx$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	5e                   	pop    %esi$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	5f                   	pop    %edi$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	5d                   	pop    %ebp$/;"	l
f0103b39	obj/kern/kernel.asm	/^f0103b39:	c3                   	ret    $/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a <env_destroy>:$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	55                   	push   %ebp$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	53                   	push   %ebx$/;"	l
f0103b3e	obj/kern/kernel.asm	/^f0103b3e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103b44	obj/kern/kernel.asm	/^f0103b44:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	75 19                	jne    f0103b63 <env_destroy+0x29>$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	e8 9b 24 00 00       	call   f0105fea <cpunum>$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b52	obj/kern/kernel.asm	/^f0103b52:	3b 98 28 60 23 f0    	cmp    -0xfdc9fd8(%eax),%ebx$/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58:	74 09                	je     f0103b63 <env_destroy+0x29>$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	eb 33                	jmp    f0103b96 <env_destroy+0x5c>$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	53                   	push   %ebx$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	e8 f3 fd ff ff       	call   f010395f <env_free>$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	e8 79 24 00 00       	call   f0105fea <cpunum>$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	3b 98 28 60 23 f0    	cmp    -0xfdc9fd8(%eax),%ebx$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	75 17                	jne    f0103b96 <env_destroy+0x5c>$/;"	l
f0103b7f	obj/kern/kernel.asm	/^f0103b7f:	e8 66 24 00 00       	call   f0105fea <cpunum>$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	c7 80 28 60 23 f0 00 	movl   $0x0,-0xfdc9fd8(%eax)$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	00 00 00 $/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	e8 28 0d 00 00       	call   f01048be <sched_yield>$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	c9                   	leave  $/;"	l
f0103b9a	obj/kern/kernel.asm	/^f0103b9a:	c3                   	ret    $/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b <env_pop_tf>:$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	55                   	push   %ebp$/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b9e	obj/kern/kernel.asm	/^f0103b9e:	53                   	push   %ebx$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	e8 43 24 00 00       	call   f0105fea <cpunum>$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	8b 98 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%ebx$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	e8 35 24 00 00       	call   f0105fea <cpunum>$/;"	l
f0103bb5	obj/kern/kernel.asm	/^f0103bb5:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	68 20 14 12 f0       	push   $0xf0121420$/;"	l
f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	e8 30 27 00 00       	call   f01062f5 <spin_unlock>$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	f3 90                	pause  $/;"	l
f0103bc7	obj/kern/kernel.asm	/^f0103bc7:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	61                   	popa   $/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	07                   	pop    %es$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	1f                   	pop    %ds$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	cf                   	iret   $/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	68 d4 7c 10 f0       	push   $0xf0107cd4$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	68 f9 01 00 00       	push   $0x1f9$/;"	l
f0103bde	obj/kern/kernel.asm	/^f0103bde:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	e8 58 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8 <env_run>:$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	55                   	push   %ebp$/;"	l
f0103be9	obj/kern/kernel.asm	/^f0103be9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103bee	obj/kern/kernel.asm	/^f0103bee:	e8 f7 23 00 00       	call   f0105fea <cpunum>$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	83 b8 28 60 23 f0 00 	cmpl   $0x0,-0xfdc9fd8(%eax)$/;"	l
f0103bfd	obj/kern/kernel.asm	/^f0103bfd:	74 29                	je     f0103c28 <env_run+0x40>$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	e8 e6 23 00 00       	call   f0105fea <cpunum>$/;"	l
f0103c04	obj/kern/kernel.asm	/^f0103c04:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	75 15                	jne    f0103c28 <env_run+0x40>$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	e8 d2 23 00 00       	call   f0105fea <cpunum>$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0103c21	obj/kern/kernel.asm	/^f0103c21:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103c28	obj/kern/kernel.asm	/^f0103c28:	e8 bd 23 00 00       	call   f0105fea <cpunum>$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103c33	obj/kern/kernel.asm	/^f0103c33:	89 90 28 60 23 f0    	mov    %edx,-0xfdc9fd8(%eax)$/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	e8 ac 23 00 00       	call   f0105fea <cpunum>$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	e8 97 23 00 00       	call   f0105fea <cpunum>$/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0103c5c	obj/kern/kernel.asm	/^f0103c5c:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	e8 85 23 00 00       	call   f0105fea <cpunum>$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103c71	obj/kern/kernel.asm	/^f0103c71:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	77 15                	ja     f0103c8d <env_run+0xa5>$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	50                   	push   %eax$/;"	l
f0103c79	obj/kern/kernel.asm	/^f0103c79:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	68 1c 02 00 00       	push   $0x21c$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	68 8d 7c 10 f0       	push   $0xf0107c8d$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	e8 b3 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c8d	obj/kern/kernel.asm	/^f0103c8d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103c95	obj/kern/kernel.asm	/^f0103c95:	e8 50 23 00 00       	call   f0105fea <cpunum>$/;"	l
f0103c9a	obj/kern/kernel.asm	/^f0103c9a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103c9d	obj/kern/kernel.asm	/^f0103c9d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ca0	obj/kern/kernel.asm	/^f0103ca0:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f0103ca6	obj/kern/kernel.asm	/^f0103ca6:	e8 f0 fe ff ff       	call   f0103b9b <env_pop_tf>$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab <mc146818_read>:$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	55                   	push   %ebp$/;"	l
f0103cac	obj/kern/kernel.asm	/^f0103cac:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103cb3	obj/kern/kernel.asm	/^f0103cb3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	ee                   	out    %al,(%dx)$/;"	l
f0103cb7	obj/kern/kernel.asm	/^f0103cb7:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	ec                   	in     (%dx),%al$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103cc0	obj/kern/kernel.asm	/^f0103cc0:	5d                   	pop    %ebp$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	c3                   	ret    $/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2 <mc146818_write>:$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	55                   	push   %ebp$/;"	l
f0103cc3	obj/kern/kernel.asm	/^f0103cc3:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103cca	obj/kern/kernel.asm	/^f0103cca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ccd	obj/kern/kernel.asm	/^f0103ccd:	ee                   	out    %al,(%dx)$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	ee                   	out    %al,(%dx)$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	5d                   	pop    %ebp$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	c3                   	ret    $/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9 <irq_setmask_8259A>:$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	55                   	push   %ebp$/;"	l
f0103cda	obj/kern/kernel.asm	/^f0103cda:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	56                   	push   %esi$/;"	l
f0103cdd	obj/kern/kernel.asm	/^f0103cdd:	53                   	push   %ebx$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	66 a3 a8 13 12 f0    	mov    %ax,0xf01213a8$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	80 3d 50 52 23 f0 00 	cmpb   $0x0,0xf0235250$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	74 5a                	je     f0103d4a <irq_setmask_8259A+0x71>$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	89 c6                	mov    %eax,%esi$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	ee                   	out    %al,(%dx)$/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	ee                   	out    %al,(%dx)$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	68 04 7d 10 f0       	push   $0xf0107d04$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	e8 1b 01 00 00       	call   f0103e2a <cprintf>$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103d17	obj/kern/kernel.asm	/^f0103d17:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	f7 d6                	not    %esi$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	73 11                	jae    f0103d32 <irq_setmask_8259A+0x59>$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d24	obj/kern/kernel.asm	/^f0103d24:	53                   	push   %ebx$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	68 2b 82 10 f0       	push   $0xf010822b$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	e8 fb 00 00 00       	call   f0103e2a <cprintf>$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	75 e2                	jne    f0103d1c <irq_setmask_8259A+0x43>$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	68 3f 7c 10 f0       	push   $0xf0107c3f$/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	e8 e3 00 00 00       	call   f0103e2a <cprintf>$/;"	l
f0103d47	obj/kern/kernel.asm	/^f0103d47:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d4a	obj/kern/kernel.asm	/^f0103d4a:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103d4d	obj/kern/kernel.asm	/^f0103d4d:	5b                   	pop    %ebx$/;"	l
f0103d4e	obj/kern/kernel.asm	/^f0103d4e:	5e                   	pop    %esi$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	5d                   	pop    %ebp$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	c3                   	ret    $/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51 <pic_init>:$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	c6 05 50 52 23 f0 01 	movb   $0x1,0xf0235250$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	ee                   	out    %al,(%dx)$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	ee                   	out    %al,(%dx)$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103d6e	obj/kern/kernel.asm	/^f0103d6e:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	ee                   	out    %al,(%dx)$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	ee                   	out    %al,(%dx)$/;"	l
f0103d7f	obj/kern/kernel.asm	/^f0103d7f:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	ee                   	out    %al,(%dx)$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a:	ee                   	out    %al,(%dx)$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	ee                   	out    %al,(%dx)$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	ee                   	out    %al,(%dx)$/;"	l
f0103da1	obj/kern/kernel.asm	/^f0103da1:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	ee                   	out    %al,(%dx)$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	ee                   	out    %al,(%dx)$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	ee                   	out    %al,(%dx)$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103dbd	obj/kern/kernel.asm	/^f0103dbd:	ee                   	out    %al,(%dx)$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	ee                   	out    %al,(%dx)$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	ee                   	out    %al,(%dx)$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	0f b7 05 a8 13 12 f0 	movzwl 0xf01213a8,%eax$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	74 13                	je     f0103def <pic_init+0x9e>$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	55                   	push   %ebp$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ddf	obj/kern/kernel.asm	/^f0103ddf:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5:	50                   	push   %eax$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	e8 ee fe ff ff       	call   f0103cd9 <irq_setmask_8259A>$/;"	l
f0103deb	obj/kern/kernel.asm	/^f0103deb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	c9                   	leave  $/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	f3 c3                	repz ret $/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1 <putch>:$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	55                   	push   %ebp$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	89 e5                	mov    %esp,%ebp$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	e8 4b c9 ff ff       	call   f010074a <cputchar>$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e02	obj/kern/kernel.asm	/^f0103e02:	c9                   	leave  $/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	c3                   	ret    $/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04 <vcprintf>:$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	55                   	push   %ebp$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e07	obj/kern/kernel.asm	/^f0103e07:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103e17	obj/kern/kernel.asm	/^f0103e17:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	50                   	push   %eax$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	68 f1 3d 10 f0       	push   $0xf0103df1$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	e8 46 14 00 00       	call   f010526b <vprintfmt>$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	c9                   	leave  $/;"	l
f0103e29	obj/kern/kernel.asm	/^f0103e29:	c3                   	ret    $/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a <cprintf>:$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	55                   	push   %ebp$/;"	l
f0103e2b	obj/kern/kernel.asm	/^f0103e2b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	50                   	push   %eax$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	e8 c8 ff ff ff       	call   f0103e04 <vcprintf>$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	c9                   	leave  $/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	c3                   	ret    $/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e <trap_init_percpu>:$/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	55                   	push   %ebp$/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e41	obj/kern/kernel.asm	/^f0103e41:	57                   	push   %edi$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	56                   	push   %esi$/;"	l
f0103e43	obj/kern/kernel.asm	/^f0103e43:	53                   	push   %ebx$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	e8 9e 21 00 00       	call   f0105fea <cpunum>$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	bf 00 00 00 f0       	mov    $0xf0000000,%edi$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	29 c7                	sub    %eax,%edi$/;"	l
f0103e56	obj/kern/kernel.asm	/^f0103e56:	e8 8f 21 00 00       	call   f0105fea <cpunum>$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e5e	obj/kern/kernel.asm	/^f0103e5e:	89 b8 30 60 23 f0    	mov    %edi,-0xfdc9fd0(%eax)$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	e8 81 21 00 00       	call   f0105fea <cpunum>$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e6c	obj/kern/kernel.asm	/^f0103e6c:	66 c7 80 34 60 23 f0 	movw   $0x10,-0xfdc9fcc(%eax)$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	10 00 $/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	e8 70 21 00 00       	call   f0105fea <cpunum>$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	66 c7 80 92 60 23 f0 	movw   $0x68,-0xfdc9f6e(%eax)$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	68 00 $/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	e8 5f 21 00 00       	call   f0105fea <cpunum>$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	8d 58 05             	lea    0x5(%eax),%ebx$/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e:	e8 57 21 00 00       	call   f0105fea <cpunum>$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	89 c6                	mov    %eax,%esi$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	e8 50 21 00 00       	call   f0105fea <cpunum>$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	e8 48 21 00 00       	call   f0105fea <cpunum>$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	66 c7 04 dd 40 13 12 	movw   $0x67,-0xfedecc0(,%ebx,8)$/;"	l
f0103ea9	obj/kern/kernel.asm	/^f0103ea9:	f0 67 00 $/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	6b f6 74             	imul   $0x74,%esi,%esi$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	81 c6 2c 60 23 f0    	add    $0xf023602c,%esi$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	66 89 34 dd 42 13 12 	mov    %si,-0xfedecbe(,%ebx,8)$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	f0 $/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	6b 55 e4 74          	imul   $0x74,-0x1c(%ebp),%edx$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	81 c2 2c 60 23 f0    	add    $0xf023602c,%edx$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	88 14 dd 44 13 12 f0 	mov    %dl,-0xfedecbc(,%ebx,8)$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	c6 04 dd 45 13 12 f0 	movb   $0x99,-0xfedecbb(,%ebx,8)$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	99 $/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	c6 04 dd 46 13 12 f0 	movb   $0x40,-0xfedecba(,%ebx,8)$/;"	l
f0103ee0	obj/kern/kernel.asm	/^f0103ee0:	40 $/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	05 2c 60 23 f0       	add    $0xf023602c,%eax$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103eec	obj/kern/kernel.asm	/^f0103eec:	88 04 dd 47 13 12 f0 	mov    %al,-0xfedecb9(,%ebx,8)$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	e8 f2 20 00 00       	call   f0105fea <cpunum>$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	80 24 c5 6d 13 12 f0 	andb   $0xef,-0xfedec93(,%eax,8)$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	ef $/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	e8 e5 20 00 00       	call   f0105fea <cpunum>$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	8d 04 c5 28 00 00 00 	lea    0x28(,%eax,8),%eax$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	0f 00 d8             	ltr    %ax$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	b8 ac 13 12 f0       	mov    $0xf01213ac,%eax$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	0f 30                	wrmsr  $/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	b9 75 01 00 00       	mov    $0x175,%ecx$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	89 f8                	mov    %edi,%eax$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	0f 30                	wrmsr  $/;"	l
f0103f31	obj/kern/kernel.asm	/^f0103f31:	b8 c8 47 10 f0       	mov    $0xf01047c8,%eax$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	b9 76 01 00 00       	mov    $0x176,%ecx$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	0f 30                	wrmsr  $/;"	l
f0103f3d	obj/kern/kernel.asm	/^f0103f3d:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40:	5b                   	pop    %ebx$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	5e                   	pop    %esi$/;"	l
f0103f42	obj/kern/kernel.asm	/^f0103f42:	5f                   	pop    %edi$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	5d                   	pop    %ebp$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	c3                   	ret    $/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45 <trap_init>:$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	55                   	push   %ebp$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	57                   	push   %edi$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	56                   	push   %esi$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	53                   	push   %ebx$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	e9 bb 00 00 00       	jmp    f0104013 <trap_init+0xce>$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	75 35                	jne    f0103f92 <trap_init+0x4d>$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	8b 35 be 13 12 f0    	mov    0xf01213be,%esi$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	89 f7                	mov    %esi,%edi$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	66 c7 45 e6 08 00    	movw   $0x8,-0x1a(%ebp)$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	c6 45 e5 00          	movb   $0x0,-0x1b(%ebp)$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	c6 45 e4 00          	movb   $0x0,-0x1c(%ebp)$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	c6 45 e3 0f          	movb   $0xf,-0x1d(%ebp)$/;"	l
f0103f7c	obj/kern/kernel.asm	/^f0103f7c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	ba 03 00 00 00       	mov    $0x3,%edx$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	c6 45 e2 01          	movb   $0x1,-0x1e(%ebp)$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	c1 ee 10             	shr    $0x10,%esi$/;"	l
f0103f8d	obj/kern/kernel.asm	/^f0103f8d:	e9 0d 01 00 00       	jmp    f010409f <trap_init+0x15a>$/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	84 db                	test   %bl,%bl$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	74 14                	je     f0103faa <trap_init+0x65>$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	66 89 3d 78 52 23 f0 	mov    %di,0xf0235278$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	0f b7 7d e6          	movzwl -0x1a(%ebp),%edi$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	66 89 3d 7a 52 23 f0 	mov    %di,0xf023527a$/;"	l
f0103fa8	obj/kern/kernel.asm	/^f0103fa8:	eb 04                	jmp    f0103fae <trap_init+0x69>$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	84 db                	test   %bl,%bl$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	74 12                	je     f0103fc0 <trap_init+0x7b>$/;"	l
f0103fae	obj/kern/kernel.asm	/^f0103fae:	0f b6 5d e4          	movzbl -0x1c(%ebp),%ebx$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	c1 e3 05             	shl    $0x5,%ebx$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	0a 5d e5             	or     -0x1b(%ebp),%bl$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	88 1d 7c 52 23 f0    	mov    %bl,0xf023527c$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	eb 04                	jmp    f0103fc4 <trap_init+0x7f>$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	84 db                	test   %bl,%bl$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	74 1d                	je     f0103fe1 <trap_init+0x9c>$/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	0f b6 1d 7d 52 23 f0 	movzbl 0xf023527d,%ebx$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	83 e3 e0             	and    $0xffffffe0,%ebx$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	83 e1 01             	and    $0x1,%ecx$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	0a 5d e3             	or     -0x1d(%ebp),%bl$/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	09 d9                	or     %ebx,%ecx$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	88 0d 7d 52 23 f0    	mov    %cl,0xf023527d$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	eb 04                	jmp    f0103fe5 <trap_init+0xa0>$/;"	l
f0103fe1	obj/kern/kernel.asm	/^f0103fe1:	84 db                	test   %bl,%bl$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	74 23                	je     f0104008 <trap_init+0xc3>$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	83 e2 03             	and    $0x3,%edx$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	0f b6 1d 7d 52 23 f0 	movzbl 0xf023527d,%ebx$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	83 e3 1f             	and    $0x1f,%ebx$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	0f b6 4d e2          	movzbl -0x1e(%ebp),%ecx$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	c1 e1 07             	shl    $0x7,%ecx$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	09 da                	or     %ebx,%edx$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	09 ca                	or     %ecx,%edx$/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000:	88 15 7d 52 23 f0    	mov    %dl,0xf023527d$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	eb 04                	jmp    f010400c <trap_init+0xc7>$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	84 db                	test   %bl,%bl$/;"	l
f010400a	obj/kern/kernel.asm	/^f010400a:	74 07                	je     f0104013 <trap_init+0xce>$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	66 89 35 7e 52 23 f0 	mov    %si,0xf023527e$/;"	l
f0104013	obj/kern/kernel.asm	/^f0104013:	8b 14 85 b2 13 12 f0 	mov    -0xfedec4e(,%eax,4),%edx$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	66 89 14 c5 60 52 23 	mov    %dx,-0xfdcada0(,%eax,8)$/;"	l
f0104021	obj/kern/kernel.asm	/^f0104021:	f0 $/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	66 c7 04 c5 62 52 23 	movw   $0x8,-0xfdcad9e(,%eax,8)$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	f0 08 00 $/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	c6 04 c5 64 52 23 f0 	movb   $0x0,-0xfdcad9c(,%eax,8)$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	00 $/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	c6 04 c5 65 52 23 f0 	movb   $0x8f,-0xfdcad9b(,%eax,8)$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	8f $/;"	l
f010403c	obj/kern/kernel.asm	/^f010403c:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	66 89 14 c5 66 52 23 	mov    %dx,-0xfdcad9a(,%eax,8)$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	f0 $/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	0f b7 3d 78 52 23 f0 	movzwl 0xf0235278,%edi$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	0f b7 35 7a 52 23 f0 	movzwl 0xf023527a,%esi$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	66 89 75 e6          	mov    %si,-0x1a(%ebp)$/;"	l
f0104059	obj/kern/kernel.asm	/^f0104059:	0f b6 15 7c 52 23 f0 	movzbl 0xf023527c,%edx$/;"	l
f0104060	obj/kern/kernel.asm	/^f0104060:	89 d1                	mov    %edx,%ecx$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	83 e1 1f             	and    $0x1f,%ecx$/;"	l
f0104065	obj/kern/kernel.asm	/^f0104065:	88 4d e5             	mov    %cl,-0x1b(%ebp)$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	c0 ea 05             	shr    $0x5,%dl$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	88 55 e4             	mov    %dl,-0x1c(%ebp)$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	0f b6 1d 7d 52 23 f0 	movzbl 0xf023527d,%ebx$/;"	l
f0104075	obj/kern/kernel.asm	/^f0104075:	89 d9                	mov    %ebx,%ecx$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	83 e1 0f             	and    $0xf,%ecx$/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	88 4d e3             	mov    %cl,-0x1d(%ebp)$/;"	l
f010407d	obj/kern/kernel.asm	/^f010407d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	c0 e9 04             	shr    $0x4,%cl$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	83 e1 01             	and    $0x1,%ecx$/;"	l
f0104085	obj/kern/kernel.asm	/^f0104085:	89 da                	mov    %ebx,%edx$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	c0 ea 05             	shr    $0x5,%dl$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	83 e2 03             	and    $0x3,%edx$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	c0 eb 07             	shr    $0x7,%bl$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	88 5d e2             	mov    %bl,-0x1e(%ebp)$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	0f b7 35 7e 52 23 f0 	movzwl 0xf023527e,%esi$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010409f	obj/kern/kernel.asm	/^f010409f:	83 c0 01             	add    $0x1,%eax$/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	0f 8e ad fe ff ff    	jle    f0103f58 <trap_init+0x13>$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	84 db                	test   %bl,%bl$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	74 13                	je     f01040c2 <trap_init+0x17d>$/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	66 89 3d 78 52 23 f0 	mov    %di,0xf0235278$/;"	l
f01040b6	obj/kern/kernel.asm	/^f01040b6:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
f01040ba	obj/kern/kernel.asm	/^f01040ba:	66 a3 7a 52 23 f0    	mov    %ax,0xf023527a$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	eb 04                	jmp    f01040c6 <trap_init+0x181>$/;"	l
f01040c2	obj/kern/kernel.asm	/^f01040c2:	84 db                	test   %bl,%bl$/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	74 11                	je     f01040d7 <trap_init+0x192>$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f01040ca	obj/kern/kernel.asm	/^f01040ca:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	0a 45 e5             	or     -0x1b(%ebp),%al$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	a2 7c 52 23 f0       	mov    %al,0xf023527c$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	eb 04                	jmp    f01040db <trap_init+0x196>$/;"	l
f01040d7	obj/kern/kernel.asm	/^f01040d7:	84 db                	test   %bl,%bl$/;"	l
f01040d9	obj/kern/kernel.asm	/^f01040d9:	74 1c                	je     f01040f7 <trap_init+0x1b2>$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	0f b6 05 7d 52 23 f0 	movzbl 0xf023527d,%eax$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01040e5	obj/kern/kernel.asm	/^f01040e5:	83 e1 01             	and    $0x1,%ecx$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	0a 45 e3             	or     -0x1d(%ebp),%al$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	09 c8                	or     %ecx,%eax$/;"	l
f01040f0	obj/kern/kernel.asm	/^f01040f0:	a2 7d 52 23 f0       	mov    %al,0xf023527d$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	eb 04                	jmp    f01040fb <trap_init+0x1b6>$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	84 db                	test   %bl,%bl$/;"	l
f01040f9	obj/kern/kernel.asm	/^f01040f9:	74 24                	je     f010411f <trap_init+0x1da>$/;"	l
f01040fb	obj/kern/kernel.asm	/^f01040fb:	89 d0                	mov    %edx,%eax$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104100	obj/kern/kernel.asm	/^f0104100:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	0f b6 15 7d 52 23 f0 	movzbl 0xf023527d,%edx$/;"	l
f010410a	obj/kern/kernel.asm	/^f010410a:	83 e2 1f             	and    $0x1f,%edx$/;"	l
f010410d	obj/kern/kernel.asm	/^f010410d:	0f b6 5d e2          	movzbl -0x1e(%ebp),%ebx$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	09 d0                	or     %edx,%eax$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	09 d8                	or     %ebx,%eax$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	a2 7d 52 23 f0       	mov    %al,0xf023527d$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	eb 04                	jmp    f0104123 <trap_init+0x1de>$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	84 db                	test   %bl,%bl$/;"	l
f0104121	obj/kern/kernel.asm	/^f0104121:	74 07                	je     f010412a <trap_init+0x1e5>$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	66 89 35 7e 52 23 f0 	mov    %si,0xf023527e$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	a1 02 14 12 f0       	mov    0xf0121402,%eax$/;"	l
f010412f	obj/kern/kernel.asm	/^f010412f:	66 a3 e0 53 23 f0    	mov    %ax,0xf02353e0$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	66 c7 05 e2 53 23 f0 	movw   $0x8,0xf02353e2$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	08 00 $/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	c6 05 e4 53 23 f0 00 	movb   $0x0,0xf02353e4$/;"	l
f0104145	obj/kern/kernel.asm	/^f0104145:	c6 05 e5 53 23 f0 ef 	movb   $0xef,0xf02353e5$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	66 a3 e6 53 23 f0    	mov    %ax,0xf02353e6$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	e8 e4 fc ff ff       	call   f0103e3e <trap_init_percpu>$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	5b                   	pop    %ebx$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	5e                   	pop    %esi$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	5f                   	pop    %edi$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	5d                   	pop    %ebp$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	c3                   	ret    $/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162 <print_regs>:$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	55                   	push   %ebp$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	89 e5                	mov    %esp,%ebp$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	53                   	push   %ebx$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104169	obj/kern/kernel.asm	/^f0104169:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010416c	obj/kern/kernel.asm	/^f010416c:	ff 33                	pushl  (%ebx)$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	68 18 7d 10 f0       	push   $0xf0107d18$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	e8 b2 fc ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	83 c4 08             	add    $0x8,%esp$/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	68 27 7d 10 f0       	push   $0xf0107d27$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	e8 a2 fc ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	83 c4 08             	add    $0x8,%esp$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	68 36 7d 10 f0       	push   $0xf0107d36$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	e8 92 fc ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	83 c4 08             	add    $0x8,%esp$/;"	l
f010419b	obj/kern/kernel.asm	/^f010419b:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	68 45 7d 10 f0       	push   $0xf0107d45$/;"	l
f01041a3	obj/kern/kernel.asm	/^f01041a3:	e8 82 fc ff ff       	call   f0103e2a <cprintf>$/;"	l
f01041a8	obj/kern/kernel.asm	/^f01041a8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01041ab	obj/kern/kernel.asm	/^f01041ab:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	68 54 7d 10 f0       	push   $0xf0107d54$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	e8 72 fc ff ff       	call   f0103e2a <cprintf>$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01041bb	obj/kern/kernel.asm	/^f01041bb:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f01041be	obj/kern/kernel.asm	/^f01041be:	68 63 7d 10 f0       	push   $0xf0107d63$/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	e8 62 fc ff ff       	call   f0103e2a <cprintf>$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	68 72 7d 10 f0       	push   $0xf0107d72$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	e8 52 fc ff ff       	call   f0103e2a <cprintf>$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	68 81 7d 10 f0       	push   $0xf0107d81$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	e8 42 fc ff ff       	call   f0103e2a <cprintf>$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	c9                   	leave  $/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	c3                   	ret    $/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0 <print_trapframe>:$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	55                   	push   %ebp$/;"	l
f01041f1	obj/kern/kernel.asm	/^f01041f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	56                   	push   %esi$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	53                   	push   %ebx$/;"	l
f01041f5	obj/kern/kernel.asm	/^f01041f5:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01041f8	obj/kern/kernel.asm	/^f01041f8:	e8 ed 1d 00 00       	call   f0105fea <cpunum>$/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	50                   	push   %eax$/;"	l
f0104201	obj/kern/kernel.asm	/^f0104201:	53                   	push   %ebx$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	68 e5 7d 10 f0       	push   $0xf0107de5$/;"	l
f0104207	obj/kern/kernel.asm	/^f0104207:	e8 1e fc ff ff       	call   f0103e2a <cprintf>$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	e8 4e ff ff ff       	call   f0104162 <print_regs>$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	50                   	push   %eax$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c:	68 03 7e 10 f0       	push   $0xf0107e03$/;"	l
f0104221	obj/kern/kernel.asm	/^f0104221:	e8 04 fc ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f010422d	obj/kern/kernel.asm	/^f010422d:	50                   	push   %eax$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	68 16 7e 10 f0       	push   $0xf0107e16$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	e8 f2 fb ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	77 09                	ja     f010424c <print_trapframe+0x5c>$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	8b 14 85 c0 80 10 f0 	mov    -0xfef7f40(,%eax,4),%edx$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	eb 1f                	jmp    f010426b <print_trapframe+0x7b>$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	74 15                	je     f0104266 <print_trapframe+0x76>$/;"	l
f0104251	obj/kern/kernel.asm	/^f0104251:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0104257	obj/kern/kernel.asm	/^f0104257:	b9 af 7d 10 f0       	mov    $0xf0107daf,%ecx$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	ba 9c 7d 10 f0       	mov    $0xf0107d9c,%edx$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	eb 05                	jmp    f010426b <print_trapframe+0x7b>$/;"	l
f0104266	obj/kern/kernel.asm	/^f0104266:	ba 90 7d 10 f0       	mov    $0xf0107d90,%edx$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	52                   	push   %edx$/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	50                   	push   %eax$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	68 29 7e 10 f0       	push   $0xf0107e29$/;"	l
f0104275	obj/kern/kernel.asm	/^f0104275:	e8 b0 fb ff ff       	call   f0103e2a <cprintf>$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	3b 1d 60 5a 23 f0    	cmp    0xf0235a60,%ebx$/;"	l
f0104283	obj/kern/kernel.asm	/^f0104283:	75 1a                	jne    f010429f <print_trapframe+0xaf>$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	75 14                	jne    f010429f <print_trapframe+0xaf>$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	50                   	push   %eax$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	68 3b 7e 10 f0       	push   $0xf0107e3b$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	e8 8e fb ff ff       	call   f0103e2a <cprintf>$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	68 4a 7e 10 f0       	push   $0xf0107e4a$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	e8 7b fb ff ff       	call   f0103e2a <cprintf>$/;"	l
f01042af	obj/kern/kernel.asm	/^f01042af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	75 49                	jne    f0104301 <print_trapframe+0x111>$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01042bb	obj/kern/kernel.asm	/^f01042bb:	89 c2                	mov    %eax,%edx$/;"	l
f01042bd	obj/kern/kernel.asm	/^f01042bd:	83 e2 01             	and    $0x1,%edx$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	ba c9 7d 10 f0       	mov    $0xf0107dc9,%edx$/;"	l
f01042c5	obj/kern/kernel.asm	/^f01042c5:	b9 be 7d 10 f0       	mov    $0xf0107dbe,%ecx$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f01042cd	obj/kern/kernel.asm	/^f01042cd:	89 c2                	mov    %eax,%edx$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	83 e2 02             	and    $0x2,%edx$/;"	l
f01042d2	obj/kern/kernel.asm	/^f01042d2:	ba db 7d 10 f0       	mov    $0xf0107ddb,%edx$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	be d5 7d 10 f0       	mov    $0xf0107dd5,%esi$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	83 e0 04             	and    $0x4,%eax$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	be 33 7f 10 f0       	mov    $0xf0107f33,%esi$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	b8 e0 7d 10 f0       	mov    $0xf0107de0,%eax$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	51                   	push   %ecx$/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0:	52                   	push   %edx$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	50                   	push   %eax$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	68 58 7e 10 f0       	push   $0xf0107e58$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	e8 2e fb ff ff       	call   f0103e2a <cprintf>$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	eb 10                	jmp    f0104311 <print_trapframe+0x121>$/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	68 3f 7c 10 f0       	push   $0xf0107c3f$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	e8 1c fb ff ff       	call   f0103e2a <cprintf>$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f0104317	obj/kern/kernel.asm	/^f0104317:	68 67 7e 10 f0       	push   $0xf0107e67$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	e8 09 fb ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	50                   	push   %eax$/;"	l
f0104329	obj/kern/kernel.asm	/^f0104329:	68 76 7e 10 f0       	push   $0xf0107e76$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	e8 f7 fa ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104333	obj/kern/kernel.asm	/^f0104333:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104336	obj/kern/kernel.asm	/^f0104336:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0104339	obj/kern/kernel.asm	/^f0104339:	68 89 7e 10 f0       	push   $0xf0107e89$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	e8 e7 fa ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	74 25                	je     f0104371 <print_trapframe+0x181>$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010434f	obj/kern/kernel.asm	/^f010434f:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0104352	obj/kern/kernel.asm	/^f0104352:	68 98 7e 10 f0       	push   $0xf0107e98$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	e8 ce fa ff ff       	call   f0103e2a <cprintf>$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	50                   	push   %eax$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	68 a7 7e 10 f0       	push   $0xf0107ea7$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	e8 bc fa ff ff       	call   f0103e2a <cprintf>$/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0104374	obj/kern/kernel.asm	/^f0104374:	5b                   	pop    %ebx$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	5e                   	pop    %esi$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	5d                   	pop    %ebp$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	c3                   	ret    $/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378 <page_fault_handler>:$/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	55                   	push   %ebp$/;"	l
f0104379	obj/kern/kernel.asm	/^f0104379:	89 e5                	mov    %esp,%ebp$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	57                   	push   %edi$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	56                   	push   %esi$/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	53                   	push   %ebx$/;"	l
f010437e	obj/kern/kernel.asm	/^f010437e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104381	obj/kern/kernel.asm	/^f0104381:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0104387	obj/kern/kernel.asm	/^f0104387:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	75 15                	jne    f01043a2 <page_fault_handler+0x2a>$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	56                   	push   %esi$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	68 ba 7e 10 f0       	push   $0xf0107eba$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	68 3a 01 00 00       	push   $0x13a$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	68 d8 7e 10 f0       	push   $0xf0107ed8$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	e8 9e bc ff ff       	call   f0100040 <_panic>$/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	e8 43 1c 00 00       	call   f0105fea <cpunum>$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	0f 84 db 00 00 00    	je     f0104495 <page_fault_handler+0x11d>$/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba:	e8 2b 1c 00 00       	call   f0105fea <cpunum>$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	81 78 3c ff ef bf ee 	cmpl   $0xeebfefff,0x3c(%eax)$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	76 34                	jbe    f0104405 <page_fault_handler+0x8d>$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	e8 14 1c 00 00       	call   f0105fea <cpunum>$/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	81 78 3c ff ff bf ee 	cmpl   $0xeebfffff,0x3c(%eax)$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	77 1d                	ja     f0104405 <page_fault_handler+0x8d>$/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	e8 fd 1b 00 00       	call   f0105fea <cpunum>$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f01043f9	obj/kern/kernel.asm	/^f01043f9:	83 e8 38             	sub    $0x38,%eax$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	89 c7                	mov    %eax,%edi$/;"	l
f01043fe	obj/kern/kernel.asm	/^f01043fe:	75 21                	jne    f0104421 <page_fault_handler+0xa9>$/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400:	e9 90 00 00 00       	jmp    f0104495 <page_fault_handler+0x11d>$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	e8 e0 1b 00 00       	call   f0105fea <cpunum>$/;"	l
f010440a	obj/kern/kernel.asm	/^f010440a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010440d	obj/kern/kernel.asm	/^f010440d:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	81 78 3c 00 e0 bf ee 	cmpl   $0xeebfe000,0x3c(%eax)$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	77 79                	ja     f0104495 <page_fault_handler+0x11d>$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	bf cc ff bf ee       	mov    $0xeebfffcc,%edi$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	e8 c4 1b 00 00       	call   f0105fea <cpunum>$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	6a 06                	push   $0x6$/;"	l
f0104428	obj/kern/kernel.asm	/^f0104428:	6a 34                	push   $0x34$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a:	57                   	push   %edi$/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010442e	obj/kern/kernel.asm	/^f010442e:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	e8 de ef ff ff       	call   f0103417 <user_mem_check>$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	83 c4 10             	add    $0x10,%esp$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	85 c0                	test   %eax,%eax$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	75 55                	jne    f0104495 <page_fault_handler+0x11d>$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	89 fa                	mov    %edi,%edx$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	89 37                	mov    %esi,(%edi)$/;"	l
f0104444	obj/kern/kernel.asm	/^f0104444:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f010444a	obj/kern/kernel.asm	/^f010444a:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	89 de                	mov    %ebx,%esi$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f010445c	obj/kern/kernel.asm	/^f010445c:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	89 53 3c             	mov    %edx,0x3c(%ebx)$/;"	l
f010446b	obj/kern/kernel.asm	/^f010446b:	e8 7a 1b 00 00       	call   f0105fea <cpunum>$/;"	l
f0104470	obj/kern/kernel.asm	/^f0104470:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	e8 66 1b 00 00       	call   f0105fea <cpunum>$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104487	obj/kern/kernel.asm	/^f0104487:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	e8 53 f7 ff ff       	call   f0103be8 <env_run>$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	e8 4d 1b 00 00       	call   f0105fea <cpunum>$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	57                   	push   %edi$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	56                   	push   %esi$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	68 80 80 10 f0       	push   $0xf0108080$/;"	l
f01044b0	obj/kern/kernel.asm	/^f01044b0:	e8 75 f9 ff ff       	call   f0103e2a <cprintf>$/;"	l
f01044b5	obj/kern/kernel.asm	/^f01044b5:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	e8 33 fd ff ff       	call   f01041f0 <print_trapframe>$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	e8 28 1b 00 00       	call   f0105fea <cpunum>$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	83 c4 04             	add    $0x4,%esp$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	e8 67 f6 ff ff       	call   f0103b3a <env_destroy>$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	5b                   	pop    %ebx$/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da:	5e                   	pop    %esi$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	5f                   	pop    %edi$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	5d                   	pop    %ebp$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	c3                   	ret    $/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de <trap>:$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	55                   	push   %ebp$/;"	l
f01044df	obj/kern/kernel.asm	/^f01044df:	89 e5                	mov    %esp,%ebp$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	57                   	push   %edi$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	56                   	push   %esi$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	fc                   	cld    $/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	83 3d 80 5e 23 f0 00 	cmpl   $0x0,0xf0235e80$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	74 01                	je     f01044f1 <trap+0x13>$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	f4                   	hlt    $/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	e8 f4 1a 00 00       	call   f0105fea <cpunum>$/;"	l
f01044f6	obj/kern/kernel.asm	/^f01044f6:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	81 c2 20 60 23 f0    	add    $0xf0236020,%edx$/;"	l
f01044ff	obj/kern/kernel.asm	/^f01044ff:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f010450b	obj/kern/kernel.asm	/^f010450b:	75 10                	jne    f010451d <trap+0x3f>$/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	68 20 14 12 f0       	push   $0xf0121420$/;"	l
f0104515	obj/kern/kernel.asm	/^f0104515:	e8 3e 1d 00 00       	call   f0106258 <spin_lock>$/;"	l
f010451a	obj/kern/kernel.asm	/^f010451a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010451d	obj/kern/kernel.asm	/^f010451d:	9c                   	pushf  $/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	58                   	pop    %eax$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	74 19                	je     f010453d <trap+0x5f>$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	68 e4 7e 10 f0       	push   $0xf0107ee4$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	68 04 01 00 00       	push   $0x104$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	68 d8 7e 10 f0       	push   $0xf0107ed8$/;"	l
f0104538	obj/kern/kernel.asm	/^f0104538:	e8 03 bb ff ff       	call   f0100040 <_panic>$/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	0f 85 a0 00 00 00    	jne    f01045ee <trap+0x110>$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	e8 97 1a 00 00       	call   f0105fea <cpunum>$/;"	l
f0104553	obj/kern/kernel.asm	/^f0104553:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	83 b8 28 60 23 f0 00 	cmpl   $0x0,-0xfdc9fd8(%eax)$/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	75 19                	jne    f0104578 <trap+0x9a>$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	68 fd 7e 10 f0       	push   $0xf0107efd$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	68 85 79 10 f0       	push   $0xf0107985$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	68 0b 01 00 00       	push   $0x10b$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	68 d8 7e 10 f0       	push   $0xf0107ed8$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	e8 c8 ba ff ff       	call   f0100040 <_panic>$/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010457b	obj/kern/kernel.asm	/^f010457b:	68 20 14 12 f0       	push   $0xf0121420$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	e8 d3 1c 00 00       	call   f0106258 <spin_lock>$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	e8 60 1a 00 00       	call   f0105fea <cpunum>$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	75 2d                	jne    f01045c9 <trap+0xeb>$/;"	l
f010459c	obj/kern/kernel.asm	/^f010459c:	e8 49 1a 00 00       	call   f0105fea <cpunum>$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f01045ad	obj/kern/kernel.asm	/^f01045ad:	e8 ad f3 ff ff       	call   f010395f <env_free>$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	e8 33 1a 00 00       	call   f0105fea <cpunum>$/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	c7 80 28 60 23 f0 00 	movl   $0x0,-0xfdc9fd8(%eax)$/;"	l
f01045c1	obj/kern/kernel.asm	/^f01045c1:	00 00 00 $/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	e8 f5 02 00 00       	call   f01048be <sched_yield>$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	e8 1c 1a 00 00       	call   f0105fea <cpunum>$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045d1	obj/kern/kernel.asm	/^f01045d1:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	89 c7                	mov    %eax,%edi$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01045e0	obj/kern/kernel.asm	/^f01045e0:	e8 05 1a 00 00       	call   f0105fea <cpunum>$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045e8	obj/kern/kernel.asm	/^f01045e8:	8b b0 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%esi$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	89 35 60 5a 23 f0    	mov    %esi,0xf0235a60$/;"	l
f01045f4	obj/kern/kernel.asm	/^f01045f4:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	75 11                	jne    f010460d <trap+0x12f>$/;"	l
f01045fc	obj/kern/kernel.asm	/^f01045fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045ff	obj/kern/kernel.asm	/^f01045ff:	56                   	push   %esi$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	e8 73 fd ff ff       	call   f0104378 <page_fault_handler>$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	e9 b4 00 00 00       	jmp    f01046c1 <trap+0x1e3>$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	75 11                	jne    f0104623 <trap+0x145>$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	56                   	push   %esi$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	e8 44 c9 ff ff       	call   f0100f5f <monitor>$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010461e	obj/kern/kernel.asm	/^f010461e:	e9 9e 00 00 00       	jmp    f01046c1 <trap+0x1e3>$/;"	l
f0104623	obj/kern/kernel.asm	/^f0104623:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	75 11                	jne    f0104639 <trap+0x15b>$/;"	l
f0104628	obj/kern/kernel.asm	/^f0104628:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	56                   	push   %esi$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	e8 2e c9 ff ff       	call   f0100f5f <monitor>$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	e9 88 00 00 00       	jmp    f01046c1 <trap+0x1e3>$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	75 21                	jne    f010465f <trap+0x181>$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104641	obj/kern/kernel.asm	/^f0104641:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	ff 36                	pushl  (%esi)$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f010464c	obj/kern/kernel.asm	/^f010464c:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f010464f	obj/kern/kernel.asm	/^f010464f:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	e8 15 03 00 00       	call   f010496c <syscall>$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	eb 62                	jmp    f01046c1 <trap+0x1e3>$/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	75 1a                	jne    f010467e <trap+0x1a0>$/;"	l
f0104664	obj/kern/kernel.asm	/^f0104664:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	68 04 7f 10 f0       	push   $0xf0107f04$/;"	l
f010466c	obj/kern/kernel.asm	/^f010466c:	e8 b9 f7 ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	e8 77 fb ff ff       	call   f01041f0 <print_trapframe>$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	83 c4 10             	add    $0x10,%esp$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	eb 43                	jmp    f01046c1 <trap+0x1e3>$/;"	l
f010467e	obj/kern/kernel.asm	/^f010467e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	56                   	push   %esi$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	e8 69 fb ff ff       	call   f01041f0 <print_trapframe>$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	83 c4 10             	add    $0x10,%esp$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	75 17                	jne    f01046a8 <trap+0x1ca>$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	68 21 7f 10 f0       	push   $0xf0107f21$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	68 ea 00 00 00       	push   $0xea$/;"	l
f010469e	obj/kern/kernel.asm	/^f010469e:	68 d8 7e 10 f0       	push   $0xf0107ed8$/;"	l
f01046a3	obj/kern/kernel.asm	/^f01046a3:	e8 98 b9 ff ff       	call   f0100040 <_panic>$/;"	l
f01046a8	obj/kern/kernel.asm	/^f01046a8:	e8 3d 19 00 00       	call   f0105fea <cpunum>$/;"	l
f01046ad	obj/kern/kernel.asm	/^f01046ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f01046b9	obj/kern/kernel.asm	/^f01046b9:	e8 7c f4 ff ff       	call   f0103b3a <env_destroy>$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	e8 24 19 00 00       	call   f0105fea <cpunum>$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	83 b8 28 60 23 f0 00 	cmpl   $0x0,-0xfdc9fd8(%eax)$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	74 2a                	je     f01046fc <trap+0x21e>$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	e8 13 19 00 00       	call   f0105fea <cpunum>$/;"	l
f01046d7	obj/kern/kernel.asm	/^f01046d7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046da	obj/kern/kernel.asm	/^f01046da:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	75 16                	jne    f01046fc <trap+0x21e>$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	e8 ff 18 00 00       	call   f0105fea <cpunum>$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046f1	obj/kern/kernel.asm	/^f01046f1:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	e8 ec f4 ff ff       	call   f0103be8 <env_run>$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	e8 bd 01 00 00       	call   f01048be <sched_yield>$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	90                   	nop$/;"	l
f0104702	obj/kern/kernel.asm	/^f0104702 <divide_handler>:$/;"	l
f0104702	obj/kern/kernel.asm	/^f0104702:	6a 00                	push   $0x0$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	6a 00                	push   $0x0$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	e9 fb cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	90                   	nop$/;"	l
f010470c	obj/kern/kernel.asm	/^f010470c <debug_handler>:$/;"	l
f010470c	obj/kern/kernel.asm	/^f010470c:	6a 00                	push   $0x0$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	6a 01                	push   $0x1$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	e9 f1 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f0104715	obj/kern/kernel.asm	/^f0104715:	90                   	nop$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716 <nmi_handler>:$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	6a 00                	push   $0x0$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718:	6a 02                	push   $0x2$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	e9 e7 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f010471f	obj/kern/kernel.asm	/^f010471f:	90                   	nop$/;"	l
f0104720	obj/kern/kernel.asm	/^f0104720 <brkpt_handler>:$/;"	l
f0104720	obj/kern/kernel.asm	/^f0104720:	6a 00                	push   $0x0$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	6a 03                	push   $0x3$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	e9 dd cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	90                   	nop$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a <oflow_handler>:$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	6a 00                	push   $0x0$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	6a 04                	push   $0x4$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	e9 d3 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f0104733	obj/kern/kernel.asm	/^f0104733:	90                   	nop$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734 <bound_handler>:$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	6a 00                	push   $0x0$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	6a 05                	push   $0x5$/;"	l
f0104738	obj/kern/kernel.asm	/^f0104738:	e9 c9 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f010473d	obj/kern/kernel.asm	/^f010473d:	90                   	nop$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e <illop_handler>:$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	6a 00                	push   $0x0$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	6a 06                	push   $0x6$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	e9 bf cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	90                   	nop$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748 <device_handler>:$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	6a 00                	push   $0x0$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	6a 07                	push   $0x7$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	e9 b5 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	90                   	nop$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752 <dblflt_handler>:$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	6a 08                	push   $0x8$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	e9 ad cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	90                   	nop$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a <coproc_handler>:$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	6a 00                	push   $0x0$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	6a 09                	push   $0x9$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	e9 a3 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	90                   	nop$/;"	l
f0104764	obj/kern/kernel.asm	/^f0104764 <tss_handler>:$/;"	l
f0104764	obj/kern/kernel.asm	/^f0104764:	6a 0a                	push   $0xa$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	e9 9b cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	90                   	nop$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c <segnp_handler>:$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	6a 0b                	push   $0xb$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	e9 93 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	90                   	nop$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774 <stack_handler>:$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	6a 0c                	push   $0xc$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	e9 8b cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f010477b	obj/kern/kernel.asm	/^f010477b:	90                   	nop$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c <gpflt_handler>:$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	6a 0d                	push   $0xd$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	e9 83 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	90                   	nop$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784 <pgflt_handler>:$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	6a 0e                	push   $0xe$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786:	e9 7b cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	90                   	nop$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c <res_handler>:$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	6a 00                	push   $0x0$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	6a 0f                	push   $0xf$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790:	e9 71 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	90                   	nop$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796 <fperr_handler>:$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	6a 00                	push   $0x0$/;"	l
f0104798	obj/kern/kernel.asm	/^f0104798:	6a 10                	push   $0x10$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	e9 67 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	90                   	nop$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0 <align_handler>:$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	6a 00                	push   $0x0$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	6a 11                	push   $0x11$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	e9 5d cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	90                   	nop$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa <mchk_handler>:$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	6a 00                	push   $0x0$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	6a 12                	push   $0x12$/;"	l
f01047ae	obj/kern/kernel.asm	/^f01047ae:	e9 53 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	90                   	nop$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4 <simderr_handler>:$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	6a 00                	push   $0x0$/;"	l
f01047b6	obj/kern/kernel.asm	/^f01047b6:	6a 13                	push   $0x13$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	e9 49 cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	90                   	nop$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be <syscall_handler>:$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	6a 00                	push   $0x0$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	6a 30                	push   $0x30$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	e9 3f cc 01 00       	jmp    f0121406 <_alltraps>$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	90                   	nop$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8 <sysenter_handler>:$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	56                   	push   %esi$/;"	l
f01047c9	obj/kern/kernel.asm	/^f01047c9:	55                   	push   %ebp$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	57                   	push   %edi$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	53                   	push   %ebx$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	51                   	push   %ecx$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	52                   	push   %edx$/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	50                   	push   %eax$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	8e c0                	mov    %eax,%es$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	8e d8                	mov    %eax,%ds$/;"	l
f01047d7	obj/kern/kernel.asm	/^f01047d7:	e8 90 01 00 00       	call   f010496c <syscall>$/;"	l
f01047dc	obj/kern/kernel.asm	/^f01047dc:	66 bb 20 00          	mov    $0x20,%bx$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	8e c3                	mov    %ebx,%es$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	8e db                	mov    %ebx,%ds$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	83 c4 14             	add    $0x14,%esp$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	59                   	pop    %ecx$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	5a                   	pop    %edx$/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	0f 35                	sysexit $/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb <sched_halt>:$/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb:	55                   	push   %ebp$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	a1 48 52 23 f0       	mov    0xf0235248,%eax$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	8b 02                	mov    (%edx),%eax$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104803	obj/kern/kernel.asm	/^f0104803:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	76 10                	jbe    f0104818 <sched_halt+0x2d>$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f0104814	obj/kern/kernel.asm	/^f0104814:	75 e8                	jne    f01047fe <sched_halt+0x13>$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	eb 08                	jmp    f0104820 <sched_halt+0x35>$/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f010481e	obj/kern/kernel.asm	/^f010481e:	75 1f                	jne    f010483f <sched_halt+0x54>$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104823	obj/kern/kernel.asm	/^f0104823:	68 10 81 10 f0       	push   $0xf0108110$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	e8 fd f5 ff ff       	call   f0103e2a <cprintf>$/;"	l
f010482d	obj/kern/kernel.asm	/^f010482d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104830	obj/kern/kernel.asm	/^f0104830:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	6a 00                	push   $0x0$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	e8 25 c7 ff ff       	call   f0100f5f <monitor>$/;"	l
f010483a	obj/kern/kernel.asm	/^f010483a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	eb f1                	jmp    f0104830 <sched_halt+0x45>$/;"	l
f010483f	obj/kern/kernel.asm	/^f010483f:	e8 a6 17 00 00       	call   f0105fea <cpunum>$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	c7 80 28 60 23 f0 00 	movl   $0x0,-0xfdc9fd8(%eax)$/;"	l
f010484e	obj/kern/kernel.asm	/^f010484e:	00 00 00 $/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	a1 90 5e 23 f0       	mov    0xf0235e90,%eax$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	77 12                	ja     f010486f <sched_halt+0x84>$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	50                   	push   %eax$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	68 c8 66 10 f0       	push   $0xf01066c8$/;"	l
f0104863	obj/kern/kernel.asm	/^f0104863:	6a 49                	push   $0x49$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	68 39 81 10 f0       	push   $0xf0108139$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	e8 d1 b7 ff ff       	call   f0100040 <_panic>$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104874	obj/kern/kernel.asm	/^f0104874:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	e8 6e 17 00 00       	call   f0105fea <cpunum>$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	81 c2 20 60 23 f0    	add    $0xf0236020,%edx$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	68 20 14 12 f0       	push   $0xf0121420$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	e8 5a 1a 00 00       	call   f01062f5 <spin_unlock>$/;"	l
f010489b	obj/kern/kernel.asm	/^f010489b:	f3 90                	pause  $/;"	l
f010489d	obj/kern/kernel.asm	/^f010489d:	e8 48 17 00 00       	call   f0105fea <cpunum>$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	8b 80 30 60 23 f0    	mov    -0xfdc9fd0(%eax),%eax$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01048b0	obj/kern/kernel.asm	/^f01048b0:	89 c4                	mov    %eax,%esp$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	6a 00                	push   $0x0$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	6a 00                	push   $0x0$/;"	l
f01048b6	obj/kern/kernel.asm	/^f01048b6:	f4                   	hlt    $/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	eb fd                	jmp    f01048b6 <sched_halt+0xcb>$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	c9                   	leave  $/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	c3                   	ret    $/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be <sched_yield>:$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	55                   	push   %ebp$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	57                   	push   %edi$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	56                   	push   %esi$/;"	l
f01048c3	obj/kern/kernel.asm	/^f01048c3:	53                   	push   %ebx$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	e8 1e 17 00 00       	call   f0105fea <cpunum>$/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	83 b8 28 60 23 f0 00 	cmpl   $0x0,-0xfdc9fd8(%eax)$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	74 17                	je     f01048f4 <sched_yield+0x36>$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	e8 08 17 00 00       	call   f0105fea <cpunum>$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048e5	obj/kern/kernel.asm	/^f01048e5:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	8b 48 48             	mov    0x48(%eax),%ecx$/;"	l
f01048ee	obj/kern/kernel.asm	/^f01048ee:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	8b 1d 48 52 23 f0    	mov    0xf0235248,%ebx$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	6b f2 7c             	imul   $0x7c,%edx,%esi$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	eb 17                	jmp    f010491c <sched_yield+0x5e>$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	89 c7                	mov    %eax,%edi$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	83 78 d8 02          	cmpl   $0x2,-0x28(%eax)$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	75 09                	jne    f0104919 <sched_yield+0x5b>$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104913	obj/kern/kernel.asm	/^f0104913:	57                   	push   %edi$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	e8 cf f2 ff ff       	call   f0103be8 <env_run>$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	83 c2 01             	add    $0x1,%edx$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	7e e1                	jle    f0104905 <sched_yield+0x47>$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	89 d8                	mov    %ebx,%eax$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010492b	obj/kern/kernel.asm	/^f010492b:	eb 17                	jmp    f0104944 <sched_yield+0x86>$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	89 c7                	mov    %eax,%edi$/;"	l
f010492f	obj/kern/kernel.asm	/^f010492f:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	83 78 d8 02          	cmpl   $0x2,-0x28(%eax)$/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	75 09                	jne    f0104941 <sched_yield+0x83>$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010493b	obj/kern/kernel.asm	/^f010493b:	57                   	push   %edi$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	e8 a7 f2 ff ff       	call   f0103be8 <env_run>$/;"	l
f0104941	obj/kern/kernel.asm	/^f0104941:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944:	39 d1                	cmp    %edx,%ecx$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	7f e5                	jg     f010492d <sched_yield+0x6f>$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	85 c9                	test   %ecx,%ecx$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	78 13                	js     f010495f <sched_yield+0xa1>$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c:	8d 44 33 84          	lea    -0x7c(%ebx,%esi,1),%eax$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954:	75 09                	jne    f010495f <sched_yield+0xa1>$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104959	obj/kern/kernel.asm	/^f0104959:	50                   	push   %eax$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	e8 89 f2 ff ff       	call   f0103be8 <env_run>$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	e8 87 fe ff ff       	call   f01047eb <sched_halt>$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	5b                   	pop    %ebx$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	5e                   	pop    %esi$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	5f                   	pop    %edi$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	5d                   	pop    %ebp$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	c3                   	ret    $/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c <syscall>:$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	55                   	push   %ebp$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	89 e5                	mov    %esp,%ebp$/;"	l
f010496f	obj/kern/kernel.asm	/^f010496f:	57                   	push   %edi$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	56                   	push   %esi$/;"	l
f0104971	obj/kern/kernel.asm	/^f0104971:	53                   	push   %ebx$/;"	l
f0104972	obj/kern/kernel.asm	/^f0104972:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	83 f8 0c             	cmp    $0xc,%eax$/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	0f 87 ed 03 00 00    	ja     f0104d6e <syscall+0x402>$/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	ff 24 85 d0 81 10 f0 	jmp    *-0xfef7e30(,%eax,4)$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	e8 5d 16 00 00       	call   f0105fea <cpunum>$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	6a 04                	push   $0x4$/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	e8 1c eb ff ff       	call   f01034bf <user_mem_assert>$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01049ac	obj/kern/kernel.asm	/^f01049ac:	68 46 81 10 f0       	push   $0xf0108146$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	e8 74 f4 ff ff       	call   f0103e2a <cprintf>$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	e9 b2 03 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	e8 15 bc ff ff       	call   f01005db <cons_getc>$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	e9 a8 03 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	e8 1a 16 00 00       	call   f0105fea <cpunum>$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	e9 92 03 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	6a 01                	push   $0x1$/;"	l
f01049e6	obj/kern/kernel.asm	/^f01049e6:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	50                   	push   %eax$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	e8 9b eb ff ff       	call   f010358d <envid2env>$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	85 c0                	test   %eax,%eax$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	0f 88 76 03 00 00    	js     f0104d73 <syscall+0x407>$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	e8 e8 15 00 00       	call   f0105fea <cpunum>$/;"	l
f0104a02	obj/kern/kernel.asm	/^f0104a02:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104a05	obj/kern/kernel.asm	/^f0104a05:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	39 90 28 60 23 f0    	cmp    %edx,-0xfdc9fd8(%eax)$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	75 23                	jne    f0104a33 <syscall+0xc7>$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	e8 d5 15 00 00       	call   f0105fea <cpunum>$/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104a24	obj/kern/kernel.asm	/^f0104a24:	68 4b 81 10 f0       	push   $0xf010814b$/;"	l
f0104a29	obj/kern/kernel.asm	/^f0104a29:	e8 fc f3 ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	eb 25                	jmp    f0104a58 <syscall+0xec>$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	e8 af 15 00 00       	call   f0105fea <cpunum>$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	53                   	push   %ebx$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a42	obj/kern/kernel.asm	/^f0104a42:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	68 66 81 10 f0       	push   $0xf0108166$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	e8 d5 f3 ff ff       	call   f0103e2a <cprintf>$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a5b	obj/kern/kernel.asm	/^f0104a5b:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	e8 d7 f0 ff ff       	call   f0103b3a <env_destroy>$/;"	l
f0104a63	obj/kern/kernel.asm	/^f0104a63:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	e9 03 03 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	6a 01                	push   $0x1$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	50                   	push   %eax$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	e8 0c eb ff ff       	call   f010358d <envid2env>$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	0f 84 e6 02 00 00    	je     f0104d73 <syscall+0x407>$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	6a 01                	push   $0x1$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	e8 f7 ca ff ff       	call   f010158e <page_alloc>$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	89 c3                	mov    %eax,%ebx$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	85 c0                	test   %eax,%eax$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	74 4e                	je     f0104aee <syscall+0x182>$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	77 4f                	ja     f0104af8 <syscall+0x18c>$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	75 50                	jne    f0104b02 <syscall+0x196>$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	75 4d                	jne    f0104b0c <syscall+0x1a0>$/;"	l
f0104abf	obj/kern/kernel.asm	/^f0104abf:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104ac2	obj/kern/kernel.asm	/^f0104ac2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	53                   	push   %ebx$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	e8 7c ce ff ff       	call   f010194d <page_insert>$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	85 c0                	test   %eax,%eax$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	79 3e                	jns    f0104b16 <syscall+0x1aa>$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	53                   	push   %ebx$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	e8 1d cb ff ff       	call   f01015fe <page_free>$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104ae9	obj/kern/kernel.asm	/^f0104ae9:	e9 85 02 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0104af3	obj/kern/kernel.asm	/^f0104af3:	e9 7b 02 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	e9 71 02 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104b07	obj/kern/kernel.asm	/^f0104b07:	e9 67 02 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104b11	obj/kern/kernel.asm	/^f0104b11:	e9 5d 02 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104b16	obj/kern/kernel.asm	/^f0104b16:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	e9 53 02 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104b23	obj/kern/kernel.asm	/^f0104b23:	6a 01                	push   $0x1$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	50                   	push   %eax$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	e8 5c ea ff ff       	call   f010358d <envid2env>$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	0f 84 36 02 00 00    	je     f0104d73 <syscall+0x407>$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	6a 01                	push   $0x1$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	50                   	push   %eax$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104b49	obj/kern/kernel.asm	/^f0104b49:	e8 3f ea ff ff       	call   f010358d <envid2env>$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	0f 84 19 02 00 00    	je     f0104d73 <syscall+0x407>$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	77 76                	ja     f0104bd9 <syscall+0x26d>$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	75 77                	jne    f0104be3 <syscall+0x277>$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f0104b73	obj/kern/kernel.asm	/^f0104b73:	77 6e                	ja     f0104be3 <syscall+0x277>$/;"	l
f0104b75	obj/kern/kernel.asm	/^f0104b75:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	75 6f                	jne    f0104bed <syscall+0x281>$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	25 fc f1 ff ff       	and    $0xfffff1fc,%eax$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	75 6c                	jne    f0104bf7 <syscall+0x28b>$/;"	l
f0104b8b	obj/kern/kernel.asm	/^f0104b8b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	50                   	push   %eax$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	e8 cc cc ff ff       	call   f010186c <page_lookup>$/;"	l
f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	85 c0                	test   %eax,%eax$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	74 5a                	je     f0104c01 <syscall+0x295>$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	75 06                	jne    f0104bb5 <syscall+0x249>$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f0104bb3	obj/kern/kernel.asm	/^f0104bb3:	75 56                	jne    f0104c0b <syscall+0x29f>$/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104bbb	obj/kern/kernel.asm	/^f0104bbb:	50                   	push   %eax$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	e8 86 cd ff ff       	call   f010194d <page_insert>$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	85 c0                	test   %eax,%eax$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	0f 4f c2             	cmovg  %edx,%eax$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	e9 9a 01 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	e9 90 01 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	e9 86 01 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	e9 7c 01 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	e9 72 01 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	e9 68 01 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	e9 5e 01 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	6a 01                	push   $0x1$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d:	50                   	push   %eax$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	e8 67 e9 ff ff       	call   f010358d <envid2env>$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	0f 84 41 01 00 00    	je     f0104d73 <syscall+0x407>$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	77 27                	ja     f0104c62 <syscall+0x2f6>$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	75 28                	jne    f0104c6c <syscall+0x300>$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	e8 b2 cc ff ff       	call   f0101907 <page_remove>$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	e9 11 01 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	e9 07 01 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	e9 fd 00 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	e8 6f 13 00 00       	call   f0105fea <cpunum>$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	8b 80 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%eax$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	50                   	push   %eax$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	e8 21 ea ff ff       	call   f01036b4 <env_alloc>$/;"	l
f0104c93	obj/kern/kernel.asm	/^f0104c93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	85 c0                	test   %eax,%eax$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	0f 88 d5 00 00 00    	js     f0104d73 <syscall+0x407>$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104ca1	obj/kern/kernel.asm	/^f0104ca1:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	e8 3d 13 00 00       	call   f0105fea <cpunum>$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	8b b0 28 60 23 f0    	mov    -0xfdc9fd8(%eax),%esi$/;"	l
f0104cb6	obj/kern/kernel.asm	/^f0104cb6:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	89 df                	mov    %ebx,%edi$/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104cbf	obj/kern/kernel.asm	/^f0104cbf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	e9 a2 00 00 00       	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	6a 01                	push   $0x1$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104cd9	obj/kern/kernel.asm	/^f0104cd9:	50                   	push   %eax$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104cdd	obj/kern/kernel.asm	/^f0104cdd:	e8 ab e8 ff ff       	call   f010358d <envid2env>$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ce5	obj/kern/kernel.asm	/^f0104ce5:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	0f 84 85 00 00 00    	je     f0104d73 <syscall+0x407>$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104cf1	obj/kern/kernel.asm	/^f0104cf1:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	a9 fd ff ff ff       	test   $0xfffffffd,%eax$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	75 10                	jne    f0104d0b <syscall+0x39f>$/;"	l
f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	89 78 54             	mov    %edi,0x54(%eax)$/;"	l
f0104d04	obj/kern/kernel.asm	/^f0104d04:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	eb 68                	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	eb 61                	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104d15	obj/kern/kernel.asm	/^f0104d15:	6a 01                	push   $0x1$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	50                   	push   %eax$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	e8 6a e8 ff ff       	call   f010358d <envid2env>$/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104d29	obj/kern/kernel.asm	/^f0104d29:	74 48                	je     f0104d73 <syscall+0x407>$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	89 48 64             	mov    %ecx,0x64(%eax)$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	eb 38                	jmp    f0104d73 <syscall+0x407>$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	e8 7e fb ff ff       	call   f01048be <sched_yield>$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	68 ac 81 10 f0       	push   $0xf01081ac$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	68 38 01 00 00       	push   $0x138$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	68 7e 81 10 f0       	push   $0xf010817e$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	e8 e9 b2 ff ff       	call   f0100040 <_panic>$/;"	l
f0104d57	obj/kern/kernel.asm	/^f0104d57:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	68 8d 81 10 f0       	push   $0xf010818d$/;"	l
f0104d5f	obj/kern/kernel.asm	/^f0104d5f:	68 4a 01 00 00       	push   $0x14a$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	68 7e 81 10 f0       	push   $0xf010817e$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	e8 d2 b2 ff ff       	call   f0100040 <_panic>$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	5b                   	pop    %ebx$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	5e                   	pop    %esi$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	5f                   	pop    %edi$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	5d                   	pop    %ebp$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	c3                   	ret    $/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b <stab_binsearch>:$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	55                   	push   %ebp$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	57                   	push   %edi$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	56                   	push   %esi$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	53                   	push   %ebx$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104d87	obj/kern/kernel.asm	/^f0104d87:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	eb 7f                	jmp    f0104e1f <stab_binsearch+0xa4>$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	01 d8                	add    %ebx,%eax$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	89 c6                	mov    %eax,%esi$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	01 c6                	add    %eax,%esi$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	d1 fe                	sar    %esi$/;"	d
f0104dae	obj/kern/kernel.asm	/^f0104dae:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	89 f0                	mov    %esi,%eax$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	eb 03                	jmp    f0104dbe <stab_binsearch+0x43>$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	39 c3                	cmp    %eax,%ebx$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	7f 0d                	jg     f0104dcf <stab_binsearch+0x54>$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104dc9	obj/kern/kernel.asm	/^f0104dc9:	39 f9                	cmp    %edi,%ecx$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	75 ee                	jne    f0104dbb <stab_binsearch+0x40>$/;"	l
f0104dcd	obj/kern/kernel.asm	/^f0104dcd:	eb 05                	jmp    f0104dd4 <stab_binsearch+0x59>$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	eb 4b                	jmp    f0104e1f <stab_binsearch+0xa4>$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	76 11                	jbe    f0104df4 <stab_binsearch+0x79>$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	eb 2b                	jmp    f0104e1f <stab_binsearch+0xa4>$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	73 14                	jae    f0104e0d <stab_binsearch+0x92>$/;"	l
f0104df9	obj/kern/kernel.asm	/^f0104df9:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104dff	obj/kern/kernel.asm	/^f0104dff:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	89 06                	mov    %eax,(%esi)$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	eb 12                	jmp    f0104e1f <stab_binsearch+0xa4>$/;"	l
f0104e0d	obj/kern/kernel.asm	/^f0104e0d:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	89 06                	mov    %eax,(%esi)$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	89 c3                	mov    %eax,%ebx$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	0f 8e 78 ff ff ff    	jle    f0104da0 <stab_binsearch+0x25>$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	75 0f                	jne    f0104e3d <stab_binsearch+0xc2>$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	8b 00                	mov    (%eax),%eax$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	89 06                	mov    %eax,(%esi)$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	eb 2c                	jmp    f0104e69 <stab_binsearch+0xee>$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	8b 00                	mov    (%eax),%eax$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0104e4d	obj/kern/kernel.asm	/^f0104e4d:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	eb 03                	jmp    f0104e55 <stab_binsearch+0xda>$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104e55	obj/kern/kernel.asm	/^f0104e55:	39 c8                	cmp    %ecx,%eax$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	7e 0b                	jle    f0104e64 <stab_binsearch+0xe9>$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0104e5d	obj/kern/kernel.asm	/^f0104e5d:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	39 df                	cmp    %ebx,%edi$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	75 ee                	jne    f0104e52 <stab_binsearch+0xd7>$/;"	l
f0104e64	obj/kern/kernel.asm	/^f0104e64:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	89 06                	mov    %eax,(%esi)$/;"	l
f0104e69	obj/kern/kernel.asm	/^f0104e69:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104e6c	obj/kern/kernel.asm	/^f0104e6c:	5b                   	pop    %ebx$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	5e                   	pop    %esi$/;"	l
f0104e6e	obj/kern/kernel.asm	/^f0104e6e:	5f                   	pop    %edi$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	5d                   	pop    %ebp$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	c3                   	ret    $/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71 <debuginfo_eip>:$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	55                   	push   %ebp$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	57                   	push   %edi$/;"	l
f0104e75	obj/kern/kernel.asm	/^f0104e75:	56                   	push   %esi$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	53                   	push   %ebx$/;"	l
f0104e77	obj/kern/kernel.asm	/^f0104e77:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104e7d	obj/kern/kernel.asm	/^f0104e7d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	c7 03 04 82 10 f0    	movl   $0xf0108204,(%ebx)$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	c7 43 08 04 82 10 f0 	movl   $0xf0108204,0x8(%ebx)$/;"	l
f0104e94	obj/kern/kernel.asm	/^f0104e94:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0104e9b	obj/kern/kernel.asm	/^f0104e9b:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	0f 87 a4 00 00 00    	ja     f0104f55 <debuginfo_eip+0xe4>$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	e8 34 11 00 00       	call   f0105fea <cpunum>$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	6a 04                	push   $0x4$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	6a 10                	push   $0x10$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	68 00 00 20 00       	push   $0x200000$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	e8 4a e5 ff ff       	call   f0103417 <user_mem_check>$/;"	l
f0104ecd	obj/kern/kernel.asm	/^f0104ecd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0:	85 c0                	test   %eax,%eax$/;"	l
f0104ed2	obj/kern/kernel.asm	/^f0104ed2:	0f 88 39 02 00 00    	js     f0105111 <debuginfo_eip+0x2a0>$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f0104ee3	obj/kern/kernel.asm	/^f0104ee3:	8b 0d 08 00 20 00    	mov    0x200008,%ecx$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	89 f9                	mov    %edi,%ecx$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	29 c1                	sub    %eax,%ecx$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	e8 e6 10 00 00       	call   f0105fea <cpunum>$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	6a 04                	push   $0x4$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	e8 fd e4 ff ff       	call   f0103417 <user_mem_check>$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	85 c0                	test   %eax,%eax$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	0f 88 f3 01 00 00    	js     f0105118 <debuginfo_eip+0x2a7>$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0104f2b	obj/kern/kernel.asm	/^f0104f2b:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	e8 b7 10 00 00       	call   f0105fea <cpunum>$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	6a 04                	push   $0x4$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	ff b0 28 60 23 f0    	pushl  -0xfdc9fd8(%eax)$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	e8 ce e4 ff ff       	call   f0103417 <user_mem_check>$/;"	l
f0104f49	obj/kern/kernel.asm	/^f0104f49:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c:	85 c0                	test   %eax,%eax$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	79 1f                	jns    f0104f6f <debuginfo_eip+0xfe>$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	e9 ca 01 00 00       	jmp    f010511f <debuginfo_eip+0x2ae>$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	c7 45 c0 58 69 11 f0 	movl   $0xf0116958,-0x40(%ebp)$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	c7 45 b8 4d 31 11 f0 	movl   $0xf011314d,-0x48(%ebp)$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	bf 4c 31 11 f0       	mov    $0xf011314c,%edi$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	c7 45 bc f4 86 10 f0 	movl   $0xf01086f4,-0x44(%ebp)$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	0f 83 ab 01 00 00    	jae    f0105126 <debuginfo_eip+0x2b5>$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	0f 85 a8 01 00 00    	jne    f010512d <debuginfo_eip+0x2bc>$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	89 fa                	mov    %edi,%edx$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0104f91	obj/kern/kernel.asm	/^f0104f91:	29 fa                	sub    %edi,%edx$/;"	l
f0104f93	obj/kern/kernel.asm	/^f0104f93:	89 d0                	mov    %edx,%eax$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104f98	obj/kern/kernel.asm	/^f0104f98:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104fa1	obj/kern/kernel.asm	/^f0104fa1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	56                   	push   %esi$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	6a 64                	push   $0x64$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	89 d1                	mov    %edx,%ecx$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	89 f8                	mov    %edi,%eax$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	e8 c2 fd ff ff       	call   f0104d7b <stab_binsearch>$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	85 c0                	test   %eax,%eax$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	0f 84 6d 01 00 00    	je     f0105134 <debuginfo_eip+0x2c3>$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104fca	obj/kern/kernel.asm	/^f0104fca:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	56                   	push   %esi$/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	6a 24                	push   $0x24$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	89 d1                	mov    %edx,%ecx$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	89 f8                	mov    %edi,%eax$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	e8 96 fd ff ff       	call   f0104d7b <stab_binsearch>$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ff1	obj/kern/kernel.asm	/^f0104ff1:	39 d0                	cmp    %edx,%eax$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	7f 2b                	jg     f0105020 <debuginfo_eip+0x1af>$/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	8d 0c 97             	lea    (%edi,%edx,4),%ecx$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	8b 11                	mov    (%ecx),%edx$/;"	l
f0104ffd	obj/kern/kernel.asm	/^f0104ffd:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	2b 7d b8             	sub    -0x48(%ebp),%edi$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	39 fa                	cmp    %edi,%edx$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	73 06                	jae    f010500d <debuginfo_eip+0x19c>$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	03 55 b8             	add    -0x48(%ebp),%edx$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	89 53 08             	mov    %edx,0x8(%ebx)$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	8b 51 08             	mov    0x8(%ecx),%edx$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	89 53 10             	mov    %edx,0x10(%ebx)$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	29 d6                	sub    %edx,%esi$/;"	l
f0105015	obj/kern/kernel.asm	/^f0105015:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f010501b	obj/kern/kernel.asm	/^f010501b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	eb 0f                	jmp    f010502f <debuginfo_eip+0x1be>$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105023	obj/kern/kernel.asm	/^f0105023:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	6a 3a                	push   $0x3a$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0105037	obj/kern/kernel.asm	/^f0105037:	e8 70 09 00 00       	call   f01059ac <strfind>$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105045	obj/kern/kernel.asm	/^f0105045:	56                   	push   %esi$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	6a 44                	push   $0x44$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	89 f8                	mov    %edi,%eax$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	e8 23 fd ff ff       	call   f0104d7b <stab_binsearch>$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010505e	obj/kern/kernel.asm	/^f010505e:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	0f b7 4a 06          	movzwl 0x6(%edx),%ecx$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	89 4b 04             	mov    %ecx,0x4(%ebx)$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	eb 0a                	jmp    f0105081 <debuginfo_eip+0x210>$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0105081	obj/kern/kernel.asm	/^f0105081:	39 c7                	cmp    %eax,%edi$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	7e 05                	jle    f010508a <debuginfo_eip+0x219>$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	eb 47                	jmp    f01050d1 <debuginfo_eip+0x260>$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	75 0e                	jne    f01050a1 <debuginfo_eip+0x230>$/;"	l
f0105093	obj/kern/kernel.asm	/^f0105093:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	74 1c                	je     f01050b8 <debuginfo_eip+0x247>$/;"	l
f010509c	obj/kern/kernel.asm	/^f010509c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	eb 17                	jmp    f01050b8 <debuginfo_eip+0x247>$/;"	l
f01050a1	obj/kern/kernel.asm	/^f01050a1:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	75 d1                	jne    f0105077 <debuginfo_eip+0x206>$/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	74 cb                	je     f0105077 <debuginfo_eip+0x206>$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f01050b3	obj/kern/kernel.asm	/^f01050b3:	74 03                	je     f01050b8 <debuginfo_eip+0x247>$/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01050b8	obj/kern/kernel.asm	/^f01050b8:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	8b 75 bc             	mov    -0x44(%ebp),%esi$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	8b 7d b8             	mov    -0x48(%ebp),%edi$/;"	l
f01050c7	obj/kern/kernel.asm	/^f01050c7:	29 f8                	sub    %edi,%eax$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	39 c2                	cmp    %eax,%edx$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	73 04                	jae    f01050d1 <debuginfo_eip+0x260>$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	01 fa                	add    %edi,%edx$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	89 13                	mov    %edx,(%ebx)$/;"	l
f01050d1	obj/kern/kernel.asm	/^f01050d1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	39 f2                	cmp    %esi,%edx$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de:	7d 60                	jge    f0105140 <debuginfo_eip+0x2cf>$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	83 c2 01             	add    $0x1,%edx$/;"	l
f01050e3	obj/kern/kernel.asm	/^f01050e3:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	89 d0                	mov    %edx,%eax$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f01050eb	obj/kern/kernel.asm	/^f01050eb:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f01050ee	obj/kern/kernel.asm	/^f01050ee:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	eb 04                	jmp    f01050f7 <debuginfo_eip+0x286>$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f01050f7	obj/kern/kernel.asm	/^f01050f7:	39 c6                	cmp    %eax,%esi$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	7e 40                	jle    f010513b <debuginfo_eip+0x2ca>$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01050ff	obj/kern/kernel.asm	/^f01050ff:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0105105	obj/kern/kernel.asm	/^f0105105:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	74 e9                	je     f01050f3 <debuginfo_eip+0x282>$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010510f	obj/kern/kernel.asm	/^f010510f:	eb 2f                	jmp    f0105140 <debuginfo_eip+0x2cf>$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	eb 28                	jmp    f0105140 <debuginfo_eip+0x2cf>$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	eb 21                	jmp    f0105140 <debuginfo_eip+0x2cf>$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	eb 1a                	jmp    f0105140 <debuginfo_eip+0x2cf>$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	eb 13                	jmp    f0105140 <debuginfo_eip+0x2cf>$/;"	l
f010512d	obj/kern/kernel.asm	/^f010512d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	eb 0c                	jmp    f0105140 <debuginfo_eip+0x2cf>$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	eb 05                	jmp    f0105140 <debuginfo_eip+0x2cf>$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	5b                   	pop    %ebx$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144:	5e                   	pop    %esi$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	5f                   	pop    %edi$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146:	5d                   	pop    %ebp$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	c3                   	ret    $/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148 <printnum>:$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	55                   	push   %ebp$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	89 e5                	mov    %esp,%ebp$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	57                   	push   %edi$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	56                   	push   %esi$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	53                   	push   %ebx$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	89 c7                	mov    %eax,%edi$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	89 d6                	mov    %edx,%esi$/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105161	obj/kern/kernel.asm	/^f0105161:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105164	obj/kern/kernel.asm	/^f0105164:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	39 d3                	cmp    %edx,%ebx$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	72 05                	jb     f0105178 <printnum+0x30>$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176:	77 45                	ja     f01051bd <printnum+0x75>$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010517b	obj/kern/kernel.asm	/^f010517b:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105181	obj/kern/kernel.asm	/^f0105181:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	53                   	push   %ebx$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	e8 54 12 00 00       	call   f01063f0 <__udivdi3>$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	83 c4 18             	add    $0x18,%esp$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	52                   	push   %edx$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	50                   	push   %eax$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	89 f2                	mov    %esi,%edx$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	89 f8                	mov    %edi,%eax$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	e8 9e ff ff ff       	call   f0105148 <printnum>$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	83 c4 20             	add    $0x20,%esp$/;"	l
f01051ad	obj/kern/kernel.asm	/^f01051ad:	eb 18                	jmp    f01051c7 <printnum+0x7f>$/;"	l
f01051af	obj/kern/kernel.asm	/^f01051af:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	56                   	push   %esi$/;"	l
f01051b3	obj/kern/kernel.asm	/^f01051b3:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	ff d7                	call   *%edi$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	eb 03                	jmp    f01051c0 <printnum+0x78>$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	85 db                	test   %ebx,%ebx$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	7f e8                	jg     f01051af <printnum+0x67>$/;"	l
f01051c7	obj/kern/kernel.asm	/^f01051c7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	56                   	push   %esi$/;"	l
f01051cb	obj/kern/kernel.asm	/^f01051cb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01051d7	obj/kern/kernel.asm	/^f01051d7:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	e8 41 13 00 00       	call   f0106520 <__umoddi3>$/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	83 c4 14             	add    $0x14,%esp$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	0f be 80 0e 82 10 f0 	movsbl -0xfef7df2(%eax),%eax$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	50                   	push   %eax$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	ff d7                	call   *%edi$/;"	l
f01051ec	obj/kern/kernel.asm	/^f01051ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051ef	obj/kern/kernel.asm	/^f01051ef:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	5b                   	pop    %ebx$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	5e                   	pop    %esi$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	5f                   	pop    %edi$/;"	l
f01051f5	obj/kern/kernel.asm	/^f01051f5:	5d                   	pop    %ebp$/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	c3                   	ret    $/;"	l
f01051f7	obj/kern/kernel.asm	/^f01051f7 <getuint>:$/;"	l
f01051f7	obj/kern/kernel.asm	/^f01051f7:	55                   	push   %ebp$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	7e 0e                	jle    f010520d <getuint+0x16>$/;"	l
f01051ff	obj/kern/kernel.asm	/^f01051ff:	8b 10                	mov    (%eax),%edx$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	8b 02                	mov    (%edx),%eax$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	eb 22                	jmp    f010522f <getuint+0x38>$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	85 d2                	test   %edx,%edx$/;"	l
f010520f	obj/kern/kernel.asm	/^f010520f:	74 10                	je     f0105221 <getuint+0x2a>$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	8b 10                	mov    (%eax),%edx$/;"	l
f0105213	obj/kern/kernel.asm	/^f0105213:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105218	obj/kern/kernel.asm	/^f0105218:	8b 02                	mov    (%edx),%eax$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	eb 0e                	jmp    f010522f <getuint+0x38>$/;"	l
f0105221	obj/kern/kernel.asm	/^f0105221:	8b 10                	mov    (%eax),%edx$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105228	obj/kern/kernel.asm	/^f0105228:	8b 02                	mov    (%edx),%eax$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	5d                   	pop    %ebp$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	c3                   	ret    $/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231 <sprintputch>:$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	55                   	push   %ebp$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	89 e5                	mov    %esp,%ebp$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105237	obj/kern/kernel.asm	/^f0105237:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	8b 10                	mov    (%eax),%edx$/;"	l
f010523d	obj/kern/kernel.asm	/^f010523d:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	73 0a                	jae    f010524c <sprintputch+0x1b>$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105247	obj/kern/kernel.asm	/^f0105247:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	88 02                	mov    %al,(%edx)$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	5d                   	pop    %ebp$/;"	l
f010524d	obj/kern/kernel.asm	/^f010524d:	c3                   	ret    $/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e <printfmt>:$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	55                   	push   %ebp$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	50                   	push   %eax$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010525e	obj/kern/kernel.asm	/^f010525e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	e8 05 00 00 00       	call   f010526b <vprintfmt>$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	c9                   	leave  $/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	c3                   	ret    $/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b <vprintfmt>:$/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	55                   	push   %ebp$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	89 e5                	mov    %esp,%ebp$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	57                   	push   %edi$/;"	l
f010526f	obj/kern/kernel.asm	/^f010526f:	56                   	push   %esi$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	53                   	push   %ebx$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105277	obj/kern/kernel.asm	/^f0105277:	89 df                	mov    %ebx,%edi$/;"	l
f0105279	obj/kern/kernel.asm	/^f0105279:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	e9 16 01 00 00       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	85 c0                	test   %eax,%eax$/;"	l
f0105283	obj/kern/kernel.asm	/^f0105283:	0f 84 78 04 00 00    	je     f0105701 <vprintfmt+0x496>$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	83 f8 1b             	cmp    $0x1b,%eax$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	0f 85 f8 00 00 00    	jne    f010538a <vprintfmt+0x11f>$/;"	l
f0105292	obj/kern/kernel.asm	/^f0105292:	8d 73 02             	lea    0x2(%ebx),%esi$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	0f b6 5b 01          	movzbl 0x1(%ebx),%ebx$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	83 fb 5b             	cmp    $0x5b,%ebx$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	0f 84 d8 00 00 00    	je     f010537a <vprintfmt+0x10f>$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	57                   	push   %edi$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6:	6a 1b                	push   $0x1b$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01052ab	obj/kern/kernel.asm	/^f01052ab:	83 c4 08             	add    $0x8,%esp$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	57                   	push   %edi$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	53                   	push   %ebx$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052b6	obj/kern/kernel.asm	/^f01052b6:	89 f3                	mov    %esi,%ebx$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	e9 da 00 00 00       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f01052bd	obj/kern/kernel.asm	/^f01052bd:	3c 33                	cmp    $0x33,%al$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	74 39                	je     f01052fa <vprintfmt+0x8f>$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	3c 33                	cmp    $0x33,%al$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	77 09                	ja     f01052ce <vprintfmt+0x63>$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	3c 30                	cmp    $0x30,%al$/;"	l
f01052c7	obj/kern/kernel.asm	/^f01052c7:	74 16                	je     f01052df <vprintfmt+0x74>$/;"	l
f01052c9	obj/kern/kernel.asm	/^f01052c9:	e9 c9 00 00 00       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	3c 34                	cmp    $0x34,%al$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	74 67                	je     f0105339 <vprintfmt+0xce>$/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2:	3c 3b                	cmp    $0x3b,%al$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	0f 84 9e 00 00 00    	je     f0105378 <vprintfmt+0x10d>$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	e9 b8 00 00 00       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	c7 05 00 13 12 f0 00 	movl   $0x700,0xf0121300$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	07 00 00 $/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	c7 05 00 50 23 f0 00 	movl   $0x0,0xf0235000$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	00 00 00 $/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	89 de                	mov    %ebx,%esi$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	e9 80 00 00 00       	jmp    f010537a <vprintfmt+0x10f>$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f01052fe	obj/kern/kernel.asm	/^f01052fe:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	b9 37 00 00 00       	mov    $0x37,%ecx$/;"	l
f010530f	obj/kern/kernel.asm	/^f010530f:	0f 47 c1             	cmova  %ecx,%eax$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	83 e8 30             	sub    $0x30,%eax$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	89 c2                	mov    %eax,%edx$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	83 e2 04             	and    $0x4,%edx$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010531d	obj/kern/kernel.asm	/^f010531d:	89 c1                	mov    %eax,%ecx$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	83 e1 01             	and    $0x1,%ecx$/;"	l
f0105322	obj/kern/kernel.asm	/^f0105322:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	09 ca                	or     %ecx,%edx$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	83 e0 02             	and    $0x2,%eax$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	09 d0                	or     %edx,%eax$/;"	l
f010532c	obj/kern/kernel.asm	/^f010532c:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010532f	obj/kern/kernel.asm	/^f010532f:	a3 00 13 12 f0       	mov    %eax,0xf0121300$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	8d 76 02             	lea    0x2(%esi),%esi$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	eb 41                	jmp    f010537a <vprintfmt+0x10f>$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	b9 30 00 00 00       	mov    $0x30,%ecx$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	0f 47 c1             	cmova  %ecx,%eax$/;"	l
f0105351	obj/kern/kernel.asm	/^f0105351:	83 e8 30             	sub    $0x30,%eax$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	89 c2                	mov    %eax,%edx$/;"	l
f0105356	obj/kern/kernel.asm	/^f0105356:	83 e2 04             	and    $0x4,%edx$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	89 c1                	mov    %eax,%ecx$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e:	83 e1 01             	and    $0x1,%ecx$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f0105364	obj/kern/kernel.asm	/^f0105364:	09 ca                	or     %ecx,%edx$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	83 e0 02             	and    $0x2,%eax$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	09 d0                	or     %edx,%eax$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	a3 00 50 23 f0       	mov    %eax,0xf0235000$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	8d 76 02             	lea    0x2(%esi),%esi$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	eb 02                	jmp    f010537a <vprintfmt+0x10f>$/;"	l
f0105378	obj/kern/kernel.asm	/^f0105378:	89 de                	mov    %ebx,%esi$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	3c 6d                	cmp    $0x6d,%al$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	0f 85 35 ff ff ff    	jne    f01052bd <vprintfmt+0x52>$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	eb 0d                	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010538d	obj/kern/kernel.asm	/^f010538d:	57                   	push   %edi$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	50                   	push   %eax$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105392	obj/kern/kernel.asm	/^f0105392:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	89 f3                	mov    %esi,%ebx$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	0f 85 db fe ff ff    	jne    f0105281 <vprintfmt+0x16>$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f01053b8	obj/kern/kernel.asm	/^f01053b8:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	eb 06                	jmp    f01053cc <vprintfmt+0x161>$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	89 de                	mov    %ebx,%esi$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	83 e8 23             	sub    $0x23,%eax$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	3c 55                	cmp    $0x55,%al$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	0f 87 03 03 00 00    	ja     f01056e3 <vprintfmt+0x478>$/;"	l
f01053e0	obj/kern/kernel.asm	/^f01053e0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01053e3	obj/kern/kernel.asm	/^f01053e3:	ff 24 85 e0 82 10 f0 	jmp    *-0xfef7d20(,%eax,4)$/;"	l
f01053ea	obj/kern/kernel.asm	/^f01053ea:	89 de                	mov    %ebx,%esi$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	eb da                	jmp    f01053cc <vprintfmt+0x161>$/;"	l
f01053f2	obj/kern/kernel.asm	/^f01053f2:	89 de                	mov    %ebx,%esi$/;"	l
f01053f4	obj/kern/kernel.asm	/^f01053f4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	0f be 0e             	movsbl (%esi),%ecx$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	77 36                	ja     f0105441 <vprintfmt+0x1d6>$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	83 c6 01             	add    $0x1,%esi$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	eb e9                	jmp    f01053f9 <vprintfmt+0x18e>$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	8b 00                	mov    (%eax),%eax$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	89 de                	mov    %ebx,%esi$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	eb 22                	jmp    f0105444 <vprintfmt+0x1d9>$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	85 c0                	test   %eax,%eax$/;"	l
f0105427	obj/kern/kernel.asm	/^f0105427:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010542c	obj/kern/kernel.asm	/^f010542c:	0f 49 c8             	cmovns %eax,%ecx$/;"	l
f010542f	obj/kern/kernel.asm	/^f010542f:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	89 de                	mov    %ebx,%esi$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	eb 96                	jmp    f01053cc <vprintfmt+0x161>$/;"	l
f0105436	obj/kern/kernel.asm	/^f0105436:	89 de                	mov    %ebx,%esi$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f010543f	obj/kern/kernel.asm	/^f010543f:	eb 8b                	jmp    f01053cc <vprintfmt+0x161>$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	79 82                	jns    f01053cc <vprintfmt+0x161>$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105457	obj/kern/kernel.asm	/^f0105457:	e9 70 ff ff ff       	jmp    f01053cc <vprintfmt+0x161>$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	89 de                	mov    %ebx,%esi$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	e9 66 ff ff ff       	jmp    f01053cc <vprintfmt+0x161>$/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	57                   	push   %edi$/;"	l
f0105473	obj/kern/kernel.asm	/^f0105473:	ff 30                	pushl  (%eax)$/;"	l
f0105475	obj/kern/kernel.asm	/^f0105475:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	83 c4 10             	add    $0x10,%esp$/;"	l
f010547b	obj/kern/kernel.asm	/^f010547b:	e9 17 ff ff ff       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	8b 00                	mov    (%eax),%eax$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	99                   	cltd   $/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	31 d0                	xor    %edx,%eax$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e:	29 d0                	sub    %edx,%eax$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	7f 0b                	jg     f01054a0 <vprintfmt+0x235>$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	8b 14 85 40 84 10 f0 	mov    -0xfef7bc0(,%eax,4),%edx$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	85 d2                	test   %edx,%edx$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	75 17                	jne    f01054b7 <vprintfmt+0x24c>$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	50                   	push   %eax$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	68 26 82 10 f0       	push   $0xf0108226$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	57                   	push   %edi$/;"	l
f01054a7	obj/kern/kernel.asm	/^f01054a7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa:	e8 9f fd ff ff       	call   f010524e <printfmt>$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	e9 e0 fe ff ff       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	52                   	push   %edx$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	68 97 79 10 f0       	push   $0xf0107997$/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	57                   	push   %edi$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	e8 88 fd ff ff       	call   f010524e <printfmt>$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	e9 c9 fe ff ff       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01054d4	obj/kern/kernel.asm	/^f01054d4:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01054d7	obj/kern/kernel.asm	/^f01054d7:	8b 30                	mov    (%eax),%esi$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	85 f6                	test   %esi,%esi$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	b8 1f 82 10 f0       	mov    $0xf010821f,%eax$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f01054e3	obj/kern/kernel.asm	/^f01054e3:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	0f 8e 92 00 00 00    	jle    f010557f <vprintfmt+0x314>$/;"	l
f01054ed	obj/kern/kernel.asm	/^f01054ed:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	0f 84 96 00 00 00    	je     f010558d <vprintfmt+0x322>$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	56                   	push   %esi$/;"	l
f01054fe	obj/kern/kernel.asm	/^f01054fe:	e8 5f 03 00 00       	call   f0105862 <strnlen>$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	29 c1                	sub    %eax,%ecx$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	89 cb                	mov    %ecx,%ebx$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	89 c6                	mov    %eax,%esi$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	eb 0e                	jmp    f010552c <vprintfmt+0x2c1>$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	57                   	push   %edi$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	56                   	push   %esi$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	83 c4 10             	add    $0x10,%esp$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	85 db                	test   %ebx,%ebx$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	7f ee                	jg     f010551e <vprintfmt+0x2b3>$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	85 c9                	test   %ecx,%ecx$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	29 c1                	sub    %eax,%ecx$/;"	l
f0105542	obj/kern/kernel.asm	/^f0105542:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105545	obj/kern/kernel.asm	/^f0105545:	89 cf                	mov    %ecx,%edi$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	eb 4d                	jmp    f0105599 <vprintfmt+0x32e>$/;"	l
f010554c	obj/kern/kernel.asm	/^f010554c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105550	obj/kern/kernel.asm	/^f0105550:	74 1b                	je     f010556d <vprintfmt+0x302>$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	0f be c0             	movsbl %al,%eax$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	76 10                	jbe    f010556d <vprintfmt+0x302>$/;"	l
f010555d	obj/kern/kernel.asm	/^f010555d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	6a 3f                	push   $0x3f$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105568	obj/kern/kernel.asm	/^f0105568:	83 c4 10             	add    $0x10,%esp$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	eb 0d                	jmp    f010557a <vprintfmt+0x30f>$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105570	obj/kern/kernel.asm	/^f0105570:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573:	52                   	push   %edx$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	83 c4 10             	add    $0x10,%esp$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	eb 1a                	jmp    f0105599 <vprintfmt+0x32e>$/;"	l
f010557f	obj/kern/kernel.asm	/^f010557f:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105588	obj/kern/kernel.asm	/^f0105588:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010558b	obj/kern/kernel.asm	/^f010558b:	eb 0c                	jmp    f0105599 <vprintfmt+0x32e>$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	83 c6 01             	add    $0x1,%esi$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	0f b6 46 ff          	movzbl -0x1(%esi),%eax$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	0f be d0             	movsbl %al,%edx$/;"	l
f01055a3	obj/kern/kernel.asm	/^f01055a3:	85 d2                	test   %edx,%edx$/;"	l
f01055a5	obj/kern/kernel.asm	/^f01055a5:	74 25                	je     f01055cc <vprintfmt+0x361>$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	85 db                	test   %ebx,%ebx$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	78 a1                	js     f010554c <vprintfmt+0x2e1>$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	79 9c                	jns    f010554c <vprintfmt+0x2e1>$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	89 f8                	mov    %edi,%eax$/;"	l
f01055b2	obj/kern/kernel.asm	/^f01055b2:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	89 c3                	mov    %eax,%ebx$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba:	eb 18                	jmp    f01055d4 <vprintfmt+0x369>$/;"	l
f01055bc	obj/kern/kernel.asm	/^f01055bc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	57                   	push   %edi$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	6a 20                	push   $0x20$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	ff d6                	call   *%esi$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01055c7	obj/kern/kernel.asm	/^f01055c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055ca	obj/kern/kernel.asm	/^f01055ca:	eb 08                	jmp    f01055d4 <vprintfmt+0x369>$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	89 fb                	mov    %edi,%ebx$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	85 db                	test   %ebx,%ebx$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6:	7f e4                	jg     f01055bc <vprintfmt+0x351>$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	e9 b4 fd ff ff       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	7e 16                	jle    f01055fe <vprintfmt+0x393>$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4:	8b 00                	mov    (%eax),%eax$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01055fc	obj/kern/kernel.asm	/^f01055fc:	eb 32                	jmp    f0105630 <vprintfmt+0x3c5>$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	85 d2                	test   %edx,%edx$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	74 18                	je     f010561a <vprintfmt+0x3af>$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105608	obj/kern/kernel.asm	/^f0105608:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	8b 30                	mov    (%eax),%esi$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105610	obj/kern/kernel.asm	/^f0105610:	89 f0                	mov    %esi,%eax$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105615	obj/kern/kernel.asm	/^f0105615:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	eb 16                	jmp    f0105630 <vprintfmt+0x3c5>$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105623	obj/kern/kernel.asm	/^f0105623:	8b 30                	mov    (%eax),%esi$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0105628	obj/kern/kernel.asm	/^f0105628:	89 f0                	mov    %esi,%eax$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f010562d	obj/kern/kernel.asm	/^f010562d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105633	obj/kern/kernel.asm	/^f0105633:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f010563b	obj/kern/kernel.asm	/^f010563b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010563f	obj/kern/kernel.asm	/^f010563f:	79 72                	jns    f01056b3 <vprintfmt+0x448>$/;"	l
f0105641	obj/kern/kernel.asm	/^f0105641:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	57                   	push   %edi$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	6a 2d                	push   $0x2d$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	f7 d8                	neg    %eax$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	f7 da                	neg    %edx$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	83 c4 10             	add    $0x10,%esp$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a:	eb 57                	jmp    f01056b3 <vprintfmt+0x448>$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	e8 93 fb ff ff       	call   f01051f7 <getuint>$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	be 0a 00 00 00       	mov    $0xa,%esi$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	eb 48                	jmp    f01056b3 <vprintfmt+0x448>$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	e8 84 fb ff ff       	call   f01051f7 <getuint>$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	be 08 00 00 00       	mov    $0x8,%esi$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	eb 39                	jmp    f01056b3 <vprintfmt+0x448>$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010567d	obj/kern/kernel.asm	/^f010567d:	57                   	push   %edi$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	6a 30                	push   $0x30$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686:	57                   	push   %edi$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	6a 78                	push   $0x78$/;"	l
f0105689	obj/kern/kernel.asm	/^f0105689:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105695	obj/kern/kernel.asm	/^f0105695:	8b 00                	mov    (%eax),%eax$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	eb 0d                	jmp    f01056b3 <vprintfmt+0x448>$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01056a9	obj/kern/kernel.asm	/^f01056a9:	e8 49 fb ff ff       	call   f01051f7 <getuint>$/;"	l
f01056ae	obj/kern/kernel.asm	/^f01056ae:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	0f be 4d d8          	movsbl -0x28(%ebp),%ecx$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	51                   	push   %ecx$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	56                   	push   %esi$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	52                   	push   %edx$/;"	l
f01056c0	obj/kern/kernel.asm	/^f01056c0:	50                   	push   %eax$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	89 fa                	mov    %edi,%edx$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	e8 7d fa ff ff       	call   f0105148 <printnum>$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	83 c4 20             	add    $0x20,%esp$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	e9 c4 fc ff ff       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	57                   	push   %edi$/;"	l
f01056d7	obj/kern/kernel.asm	/^f01056d7:	51                   	push   %ecx$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	e9 b4 fc ff ff       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01056e6	obj/kern/kernel.asm	/^f01056e6:	57                   	push   %edi$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	6a 25                	push   $0x25$/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	89 f3                	mov    %esi,%ebx$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	eb 03                	jmp    f01056f6 <vprintfmt+0x48b>$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01056f6	obj/kern/kernel.asm	/^f01056f6:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	75 f7                	jne    f01056f3 <vprintfmt+0x488>$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	e9 96 fc ff ff       	jmp    f0105397 <vprintfmt+0x12c>$/;"	l
f0105701	obj/kern/kernel.asm	/^f0105701:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105704	obj/kern/kernel.asm	/^f0105704:	5b                   	pop    %ebx$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	5e                   	pop    %esi$/;"	l
f0105706	obj/kern/kernel.asm	/^f0105706:	5f                   	pop    %edi$/;"	l
f0105707	obj/kern/kernel.asm	/^f0105707:	5d                   	pop    %ebp$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	c3                   	ret    $/;"	l
f0105709	obj/kern/kernel.asm	/^f0105709 <vsnprintf>:$/;"	l
f0105709	obj/kern/kernel.asm	/^f0105709:	55                   	push   %ebp$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	89 e5                	mov    %esp,%ebp$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	85 c0                	test   %eax,%eax$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	74 26                	je     f0105750 <vsnprintf+0x47>$/;"	l
f010572a	obj/kern/kernel.asm	/^f010572a:	85 d2                	test   %edx,%edx$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	7e 22                	jle    f0105750 <vsnprintf+0x47>$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105737	obj/kern/kernel.asm	/^f0105737:	50                   	push   %eax$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	68 31 52 10 f0       	push   $0xf0105231$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	e8 29 fb ff ff       	call   f010526b <vprintfmt>$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105748	obj/kern/kernel.asm	/^f0105748:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	eb 05                	jmp    f0105755 <vsnprintf+0x4c>$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	c9                   	leave  $/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	c3                   	ret    $/;"	l
f0105757	obj/kern/kernel.asm	/^f0105757 <snprintf>:$/;"	l
f0105757	obj/kern/kernel.asm	/^f0105757:	55                   	push   %ebp$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	89 e5                	mov    %esp,%ebp$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	50                   	push   %eax$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010576a	obj/kern/kernel.asm	/^f010576a:	e8 9a ff ff ff       	call   f0105709 <vsnprintf>$/;"	l
f010576f	obj/kern/kernel.asm	/^f010576f:	c9                   	leave  $/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	c3                   	ret    $/;"	l
f0105771	obj/kern/kernel.asm	/^f0105771 <readline>:$/;"	l
f0105771	obj/kern/kernel.asm	/^f0105771:	55                   	push   %ebp$/;"	l
f0105772	obj/kern/kernel.asm	/^f0105772:	89 e5                	mov    %esp,%ebp$/;"	l
f0105774	obj/kern/kernel.asm	/^f0105774:	57                   	push   %edi$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	56                   	push   %esi$/;"	l
f0105776	obj/kern/kernel.asm	/^f0105776:	53                   	push   %ebx$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	85 c0                	test   %eax,%eax$/;"	l
f010577f	obj/kern/kernel.asm	/^f010577f:	74 11                	je     f0105792 <readline+0x21>$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105784	obj/kern/kernel.asm	/^f0105784:	50                   	push   %eax$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	68 97 79 10 f0       	push   $0xf0107997$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	e8 9b e6 ff ff       	call   f0103e2a <cprintf>$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	6a 00                	push   $0x0$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	e8 cf af ff ff       	call   f010076b <iscons>$/;"	l
f010579c	obj/kern/kernel.asm	/^f010579c:	89 c7                	mov    %eax,%edi$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	e8 af af ff ff       	call   f010075a <getchar>$/;"	l
f01057ab	obj/kern/kernel.asm	/^f01057ab:	89 c3                	mov    %eax,%ebx$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	85 c0                	test   %eax,%eax$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	79 18                	jns    f01057c9 <readline+0x58>$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	50                   	push   %eax$/;"	l
f01057b5	obj/kern/kernel.asm	/^f01057b5:	68 64 84 10 f0       	push   $0xf0108464$/;"	l
f01057ba	obj/kern/kernel.asm	/^f01057ba:	e8 6b e6 ff ff       	call   f0103e2a <cprintf>$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	eb 79                	jmp    f0105842 <readline+0xd1>$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01057cc	obj/kern/kernel.asm	/^f01057cc:	0f 94 c2             	sete   %dl$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	0f 94 c0             	sete   %al$/;"	l
f01057d5	obj/kern/kernel.asm	/^f01057d5:	08 c2                	or     %al,%dl$/;"	l
f01057d7	obj/kern/kernel.asm	/^f01057d7:	74 1a                	je     f01057f3 <readline+0x82>$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	85 f6                	test   %esi,%esi$/;"	l
f01057db	obj/kern/kernel.asm	/^f01057db:	7e 16                	jle    f01057f3 <readline+0x82>$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	85 ff                	test   %edi,%edi$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	74 0d                	je     f01057ee <readline+0x7d>$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01057e4	obj/kern/kernel.asm	/^f01057e4:	6a 08                	push   $0x8$/;"	l
f01057e6	obj/kern/kernel.asm	/^f01057e6:	e8 5f af ff ff       	call   f010074a <cputchar>$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	eb b3                	jmp    f01057a6 <readline+0x35>$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	7e 23                	jle    f010581b <readline+0xaa>$/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	7f 1b                	jg     f010581b <readline+0xaa>$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	85 ff                	test   %edi,%edi$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	74 0c                	je     f0105810 <readline+0x9f>$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	53                   	push   %ebx$/;"	l
f0105808	obj/kern/kernel.asm	/^f0105808:	e8 3d af ff ff       	call   f010074a <cputchar>$/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	88 9e 80 5a 23 f0    	mov    %bl,-0xfdca580(%esi)$/;"	l
f0105816	obj/kern/kernel.asm	/^f0105816:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	eb 8b                	jmp    f01057a6 <readline+0x35>$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	74 05                	je     f0105825 <readline+0xb4>$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	75 81                	jne    f01057a6 <readline+0x35>$/;"	l
f0105825	obj/kern/kernel.asm	/^f0105825:	85 ff                	test   %edi,%edi$/;"	l
f0105827	obj/kern/kernel.asm	/^f0105827:	74 0d                	je     f0105836 <readline+0xc5>$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	6a 0a                	push   $0xa$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	e8 17 af ff ff       	call   f010074a <cputchar>$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105836	obj/kern/kernel.asm	/^f0105836:	c6 86 80 5a 23 f0 00 	movb   $0x0,-0xfdca580(%esi)$/;"	l
f010583d	obj/kern/kernel.asm	/^f010583d:	b8 80 5a 23 f0       	mov    $0xf0235a80,%eax$/;"	l
f0105842	obj/kern/kernel.asm	/^f0105842:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	5b                   	pop    %ebx$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	5e                   	pop    %esi$/;"	l
f0105847	obj/kern/kernel.asm	/^f0105847:	5f                   	pop    %edi$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	5d                   	pop    %ebp$/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	c3                   	ret    $/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a <strlen>:$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	55                   	push   %ebp$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	89 e5                	mov    %esp,%ebp$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	eb 03                	jmp    f010585a <strlen+0x10>$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	83 c0 01             	add    $0x1,%eax$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f010585e	obj/kern/kernel.asm	/^f010585e:	75 f7                	jne    f0105857 <strlen+0xd>$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	5d                   	pop    %ebp$/;"	l
f0105861	obj/kern/kernel.asm	/^f0105861:	c3                   	ret    $/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862 <strnlen>:$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	55                   	push   %ebp$/;"	l
f0105863	obj/kern/kernel.asm	/^f0105863:	89 e5                	mov    %esp,%ebp$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010586b	obj/kern/kernel.asm	/^f010586b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	eb 03                	jmp    f0105875 <strnlen+0x13>$/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105875	obj/kern/kernel.asm	/^f0105875:	39 c2                	cmp    %eax,%edx$/;"	l
f0105877	obj/kern/kernel.asm	/^f0105877:	74 08                	je     f0105881 <strnlen+0x1f>$/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	75 f3                	jne    f0105872 <strnlen+0x10>$/;"	l
f010587f	obj/kern/kernel.asm	/^f010587f:	89 d0                	mov    %edx,%eax$/;"	l
f0105881	obj/kern/kernel.asm	/^f0105881:	5d                   	pop    %ebp$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	c3                   	ret    $/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883 <strcpy>:$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	55                   	push   %ebp$/;"	l
f0105884	obj/kern/kernel.asm	/^f0105884:	89 e5                	mov    %esp,%ebp$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	53                   	push   %ebx$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010588d	obj/kern/kernel.asm	/^f010588d:	89 c2                	mov    %eax,%edx$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105895	obj/kern/kernel.asm	/^f0105895:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	84 db                	test   %bl,%bl$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	75 ef                	jne    f010588f <strcpy+0xc>$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	5b                   	pop    %ebx$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	5d                   	pop    %ebp$/;"	l
f01058a2	obj/kern/kernel.asm	/^f01058a2:	c3                   	ret    $/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3 <strcat>:$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	55                   	push   %ebp$/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4:	89 e5                	mov    %esp,%ebp$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	53                   	push   %ebx$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	53                   	push   %ebx$/;"	l
f01058ab	obj/kern/kernel.asm	/^f01058ab:	e8 9a ff ff ff       	call   f010584a <strlen>$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	83 c4 04             	add    $0x4,%esp$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01058b6	obj/kern/kernel.asm	/^f01058b6:	01 d8                	add    %ebx,%eax$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	50                   	push   %eax$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	e8 c5 ff ff ff       	call   f0105883 <strcpy>$/;"	l
f01058be	obj/kern/kernel.asm	/^f01058be:	89 d8                	mov    %ebx,%eax$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01058c3	obj/kern/kernel.asm	/^f01058c3:	c9                   	leave  $/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	c3                   	ret    $/;"	l
f01058c5	obj/kern/kernel.asm	/^f01058c5 <strncpy>:$/;"	l
f01058c5	obj/kern/kernel.asm	/^f01058c5:	55                   	push   %ebp$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01058c8	obj/kern/kernel.asm	/^f01058c8:	56                   	push   %esi$/;"	l
f01058c9	obj/kern/kernel.asm	/^f01058c9:	53                   	push   %ebx$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	89 f3                	mov    %esi,%ebx$/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	89 f2                	mov    %esi,%edx$/;"	l
f01058d7	obj/kern/kernel.asm	/^f01058d7:	eb 0f                	jmp    f01058e8 <strncpy+0x23>$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	83 c2 01             	add    $0x1,%edx$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	39 da                	cmp    %ebx,%edx$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	75 ed                	jne    f01058d9 <strncpy+0x14>$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	89 f0                	mov    %esi,%eax$/;"	l
f01058ee	obj/kern/kernel.asm	/^f01058ee:	5b                   	pop    %ebx$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	5e                   	pop    %esi$/;"	l
f01058f0	obj/kern/kernel.asm	/^f01058f0:	5d                   	pop    %ebp$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	c3                   	ret    $/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2 <strlcpy>:$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	55                   	push   %ebp$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01058f5	obj/kern/kernel.asm	/^f01058f5:	56                   	push   %esi$/;"	l
f01058f6	obj/kern/kernel.asm	/^f01058f6:	53                   	push   %ebx$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01058fd	obj/kern/kernel.asm	/^f01058fd:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	89 f0                	mov    %esi,%eax$/;"	l
f0105902	obj/kern/kernel.asm	/^f0105902:	85 d2                	test   %edx,%edx$/;"	l
f0105904	obj/kern/kernel.asm	/^f0105904:	74 21                	je     f0105927 <strlcpy+0x35>$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f010590a	obj/kern/kernel.asm	/^f010590a:	89 f2                	mov    %esi,%edx$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	eb 09                	jmp    f0105917 <strlcpy+0x25>$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105914	obj/kern/kernel.asm	/^f0105914:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105917	obj/kern/kernel.asm	/^f0105917:	39 c2                	cmp    %eax,%edx$/;"	l
f0105919	obj/kern/kernel.asm	/^f0105919:	74 09                	je     f0105924 <strlcpy+0x32>$/;"	l
f010591b	obj/kern/kernel.asm	/^f010591b:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f010591e	obj/kern/kernel.asm	/^f010591e:	84 db                	test   %bl,%bl$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	75 ec                	jne    f010590e <strlcpy+0x1c>$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	89 d0                	mov    %edx,%eax$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	29 f0                	sub    %esi,%eax$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	5b                   	pop    %ebx$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	5e                   	pop    %esi$/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	5d                   	pop    %ebp$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	c3                   	ret    $/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d <strcmp>:$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	55                   	push   %ebp$/;"	l
f010592e	obj/kern/kernel.asm	/^f010592e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105930	obj/kern/kernel.asm	/^f0105930:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105933	obj/kern/kernel.asm	/^f0105933:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	eb 06                	jmp    f010593e <strcmp+0x11>$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	84 c0                	test   %al,%al$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	74 04                	je     f0105949 <strcmp+0x1c>$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	3a 02                	cmp    (%edx),%al$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	74 ef                	je     f0105938 <strcmp+0xb>$/;"	l
f0105949	obj/kern/kernel.asm	/^f0105949:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	29 d0                	sub    %edx,%eax$/;"	l
f0105951	obj/kern/kernel.asm	/^f0105951:	5d                   	pop    %ebp$/;"	l
f0105952	obj/kern/kernel.asm	/^f0105952:	c3                   	ret    $/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953 <strncmp>:$/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953:	55                   	push   %ebp$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	89 e5                	mov    %esp,%ebp$/;"	l
f0105956	obj/kern/kernel.asm	/^f0105956:	53                   	push   %ebx$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010595d	obj/kern/kernel.asm	/^f010595d:	89 c3                	mov    %eax,%ebx$/;"	l
f010595f	obj/kern/kernel.asm	/^f010595f:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	eb 06                	jmp    f010596a <strncmp+0x17>$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	83 c2 01             	add    $0x1,%edx$/;"	l
f010596a	obj/kern/kernel.asm	/^f010596a:	39 d8                	cmp    %ebx,%eax$/;"	l
f010596c	obj/kern/kernel.asm	/^f010596c:	74 15                	je     f0105983 <strncmp+0x30>$/;"	l
f010596e	obj/kern/kernel.asm	/^f010596e:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	84 c9                	test   %cl,%cl$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	74 04                	je     f0105979 <strncmp+0x26>$/;"	l
f0105975	obj/kern/kernel.asm	/^f0105975:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	74 eb                	je     f0105964 <strncmp+0x11>$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010597f	obj/kern/kernel.asm	/^f010597f:	29 d0                	sub    %edx,%eax$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	eb 05                	jmp    f0105988 <strncmp+0x35>$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	5b                   	pop    %ebx$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	5d                   	pop    %ebp$/;"	l
f010598a	obj/kern/kernel.asm	/^f010598a:	c3                   	ret    $/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b <strchr>:$/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b:	55                   	push   %ebp$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	89 e5                	mov    %esp,%ebp$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	eb 07                	jmp    f010599e <strchr+0x13>$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	38 ca                	cmp    %cl,%dl$/;"	l
f0105999	obj/kern/kernel.asm	/^f0105999:	74 0f                	je     f01059aa <strchr+0x1f>$/;"	l
f010599b	obj/kern/kernel.asm	/^f010599b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01059a1	obj/kern/kernel.asm	/^f01059a1:	84 d2                	test   %dl,%dl$/;"	l
f01059a3	obj/kern/kernel.asm	/^f01059a3:	75 f2                	jne    f0105997 <strchr+0xc>$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059aa	obj/kern/kernel.asm	/^f01059aa:	5d                   	pop    %ebp$/;"	l
f01059ab	obj/kern/kernel.asm	/^f01059ab:	c3                   	ret    $/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac <strfind>:$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	55                   	push   %ebp$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01059b6	obj/kern/kernel.asm	/^f01059b6:	eb 03                	jmp    f01059bb <strfind+0xf>$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	38 ca                	cmp    %cl,%dl$/;"	l
f01059c0	obj/kern/kernel.asm	/^f01059c0:	74 04                	je     f01059c6 <strfind+0x1a>$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	84 d2                	test   %dl,%dl$/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4:	75 f2                	jne    f01059b8 <strfind+0xc>$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	5d                   	pop    %ebp$/;"	l
f01059c7	obj/kern/kernel.asm	/^f01059c7:	c3                   	ret    $/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8 <memset>:$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	55                   	push   %ebp$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01059cb	obj/kern/kernel.asm	/^f01059cb:	57                   	push   %edi$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	56                   	push   %esi$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	53                   	push   %ebx$/;"	l
f01059ce	obj/kern/kernel.asm	/^f01059ce:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	85 c9                	test   %ecx,%ecx$/;"	l
f01059d6	obj/kern/kernel.asm	/^f01059d6:	74 36                	je     f0105a0e <memset+0x46>$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01059de	obj/kern/kernel.asm	/^f01059de:	75 28                	jne    f0105a08 <memset+0x40>$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	75 23                	jne    f0105a08 <memset+0x40>$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	89 d3                	mov    %edx,%ebx$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	89 d6                	mov    %edx,%esi$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	89 d0                	mov    %edx,%eax$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	09 f0                	or     %esi,%eax$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	09 c2                	or     %eax,%edx$/;"	l
f01059fc	obj/kern/kernel.asm	/^f01059fc:	89 d8                	mov    %ebx,%eax$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	09 d0                	or     %edx,%eax$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	fc                   	cld    $/;"	l
f0105a04	obj/kern/kernel.asm	/^f0105a04:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	eb 06                	jmp    f0105a0e <memset+0x46>$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	fc                   	cld    $/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	89 f8                	mov    %edi,%eax$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	5b                   	pop    %ebx$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	5e                   	pop    %esi$/;"	l
f0105a12	obj/kern/kernel.asm	/^f0105a12:	5f                   	pop    %edi$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	5d                   	pop    %ebp$/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14:	c3                   	ret    $/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15 <memmove>:$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	55                   	push   %ebp$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a18	obj/kern/kernel.asm	/^f0105a18:	57                   	push   %edi$/;"	l
f0105a19	obj/kern/kernel.asm	/^f0105a19:	56                   	push   %esi$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	39 c6                	cmp    %eax,%esi$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	73 35                	jae    f0105a5c <memmove+0x47>$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	39 d0                	cmp    %edx,%eax$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	73 2e                	jae    f0105a5c <memmove+0x47>$/;"	l
f0105a2e	obj/kern/kernel.asm	/^f0105a2e:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	89 d6                	mov    %edx,%esi$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	09 fe                	or     %edi,%esi$/;"	l
f0105a35	obj/kern/kernel.asm	/^f0105a35:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	75 13                	jne    f0105a50 <memmove+0x3b>$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	75 0e                	jne    f0105a50 <memmove+0x3b>$/;"	l
f0105a42	obj/kern/kernel.asm	/^f0105a42:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105a4b	obj/kern/kernel.asm	/^f0105a4b:	fd                   	std    $/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	eb 09                	jmp    f0105a59 <memmove+0x44>$/;"	l
f0105a50	obj/kern/kernel.asm	/^f0105a50:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105a56	obj/kern/kernel.asm	/^f0105a56:	fd                   	std    $/;"	l
f0105a57	obj/kern/kernel.asm	/^f0105a57:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	fc                   	cld    $/;"	l
f0105a5a	obj/kern/kernel.asm	/^f0105a5a:	eb 1d                	jmp    f0105a79 <memmove+0x64>$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	89 f2                	mov    %esi,%edx$/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	09 c2                	or     %eax,%edx$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	75 0f                	jne    f0105a74 <memmove+0x5f>$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105a68	obj/kern/kernel.asm	/^f0105a68:	75 0a                	jne    f0105a74 <memmove+0x5f>$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105a6d	obj/kern/kernel.asm	/^f0105a6d:	89 c7                	mov    %eax,%edi$/;"	l
f0105a6f	obj/kern/kernel.asm	/^f0105a6f:	fc                   	cld    $/;"	l
f0105a70	obj/kern/kernel.asm	/^f0105a70:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	eb 05                	jmp    f0105a79 <memmove+0x64>$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	89 c7                	mov    %eax,%edi$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	fc                   	cld    $/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	5e                   	pop    %esi$/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	5f                   	pop    %edi$/;"	l
f0105a7b	obj/kern/kernel.asm	/^f0105a7b:	5d                   	pop    %ebp$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	c3                   	ret    $/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d <memcpy>:$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	55                   	push   %ebp$/;"	l
f0105a7e	obj/kern/kernel.asm	/^f0105a7e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105a83	obj/kern/kernel.asm	/^f0105a83:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105a86	obj/kern/kernel.asm	/^f0105a86:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105a89	obj/kern/kernel.asm	/^f0105a89:	e8 87 ff ff ff       	call   f0105a15 <memmove>$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	c9                   	leave  $/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	c3                   	ret    $/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90 <memcmp>:$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	55                   	push   %ebp$/;"	l
f0105a91	obj/kern/kernel.asm	/^f0105a91:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a93	obj/kern/kernel.asm	/^f0105a93:	56                   	push   %esi$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	53                   	push   %ebx$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a98	obj/kern/kernel.asm	/^f0105a98:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	89 c6                	mov    %eax,%esi$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0105aa0	obj/kern/kernel.asm	/^f0105aa0:	eb 1a                	jmp    f0105abc <memcmp+0x2c>$/;"	l
f0105aa2	obj/kern/kernel.asm	/^f0105aa2:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105aa5	obj/kern/kernel.asm	/^f0105aa5:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105aa8	obj/kern/kernel.asm	/^f0105aa8:	38 d9                	cmp    %bl,%cl$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	74 0a                	je     f0105ab6 <memcmp+0x26>$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0105ab2	obj/kern/kernel.asm	/^f0105ab2:	29 d8                	sub    %ebx,%eax$/;"	l
f0105ab4	obj/kern/kernel.asm	/^f0105ab4:	eb 0f                	jmp    f0105ac5 <memcmp+0x35>$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ab9	obj/kern/kernel.asm	/^f0105ab9:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	39 f0                	cmp    %esi,%eax$/;"	l
f0105abe	obj/kern/kernel.asm	/^f0105abe:	75 e2                	jne    f0105aa2 <memcmp+0x12>$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ac5	obj/kern/kernel.asm	/^f0105ac5:	5b                   	pop    %ebx$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	5e                   	pop    %esi$/;"	l
f0105ac7	obj/kern/kernel.asm	/^f0105ac7:	5d                   	pop    %ebp$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	c3                   	ret    $/;"	l
f0105ac9	obj/kern/kernel.asm	/^f0105ac9 <memfind>:$/;"	l
f0105ac9	obj/kern/kernel.asm	/^f0105ac9:	55                   	push   %ebp$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	89 e5                	mov    %esp,%ebp$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	53                   	push   %ebx$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	89 c1                	mov    %eax,%ecx$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f0105ad9	obj/kern/kernel.asm	/^f0105ad9:	eb 0a                	jmp    f0105ae5 <memfind+0x1c>$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	39 da                	cmp    %ebx,%edx$/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0:	74 07                	je     f0105ae9 <memfind+0x20>$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105ae7	obj/kern/kernel.asm	/^f0105ae7:	72 f2                	jb     f0105adb <memfind+0x12>$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	5b                   	pop    %ebx$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	5d                   	pop    %ebp$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	c3                   	ret    $/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec <strtol>:$/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec:	55                   	push   %ebp$/;"	l
f0105aed	obj/kern/kernel.asm	/^f0105aed:	89 e5                	mov    %esp,%ebp$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	57                   	push   %edi$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	56                   	push   %esi$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	53                   	push   %ebx$/;"	l
f0105af2	obj/kern/kernel.asm	/^f0105af2:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105af8	obj/kern/kernel.asm	/^f0105af8:	eb 03                	jmp    f0105afd <strtol+0x11>$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	3c 20                	cmp    $0x20,%al$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	74 f6                	je     f0105afa <strtol+0xe>$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	3c 09                	cmp    $0x9,%al$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	74 f2                	je     f0105afa <strtol+0xe>$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105b0a	obj/kern/kernel.asm	/^f0105b0a:	75 0a                	jne    f0105b16 <strtol+0x2a>$/;"	l
f0105b0c	obj/kern/kernel.asm	/^f0105b0c:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105b14	obj/kern/kernel.asm	/^f0105b14:	eb 11                	jmp    f0105b27 <strtol+0x3b>$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	75 08                	jne    f0105b27 <strtol+0x3b>$/;"	l
f0105b1f	obj/kern/kernel.asm	/^f0105b1f:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105b22	obj/kern/kernel.asm	/^f0105b22:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	75 15                	jne    f0105b44 <strtol+0x58>$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	75 10                	jne    f0105b44 <strtol+0x58>$/;"	l
f0105b34	obj/kern/kernel.asm	/^f0105b34:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	75 7c                	jne    f0105bb6 <strtol+0xca>$/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0105b3d	obj/kern/kernel.asm	/^f0105b3d:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0105b42	obj/kern/kernel.asm	/^f0105b42:	eb 16                	jmp    f0105b5a <strtol+0x6e>$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	85 db                	test   %ebx,%ebx$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	75 12                	jne    f0105b5a <strtol+0x6e>$/;"	l
f0105b48	obj/kern/kernel.asm	/^f0105b48:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	75 08                	jne    f0105b5a <strtol+0x6e>$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105b55	obj/kern/kernel.asm	/^f0105b55:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0105b65	obj/kern/kernel.asm	/^f0105b65:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	89 f3                	mov    %esi,%ebx$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	77 08                	ja     f0105b77 <strtol+0x8b>$/;"	l
f0105b6f	obj/kern/kernel.asm	/^f0105b6f:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	eb 22                	jmp    f0105b99 <strtol+0xad>$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	89 f3                	mov    %esi,%ebx$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105b7f	obj/kern/kernel.asm	/^f0105b7f:	77 08                	ja     f0105b89 <strtol+0x9d>$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	eb 10                	jmp    f0105b99 <strtol+0xad>$/;"	l
f0105b89	obj/kern/kernel.asm	/^f0105b89:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	89 f3                	mov    %esi,%ebx$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	77 16                	ja     f0105ba9 <strtol+0xbd>$/;"	l
f0105b93	obj/kern/kernel.asm	/^f0105b93:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	7d 0b                	jge    f0105ba9 <strtol+0xbd>$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	01 d0                	add    %edx,%eax$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	eb b9                	jmp    f0105b62 <strtol+0x76>$/;"	l
f0105ba9	obj/kern/kernel.asm	/^f0105ba9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	74 0d                	je     f0105bbc <strtol+0xd0>$/;"	l
f0105baf	obj/kern/kernel.asm	/^f0105baf:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	eb 06                	jmp    f0105bbc <strtol+0xd0>$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	85 db                	test   %ebx,%ebx$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	74 98                	je     f0105b52 <strtol+0x66>$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	eb 9e                	jmp    f0105b5a <strtol+0x6e>$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	89 c2                	mov    %eax,%edx$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	f7 da                	neg    %edx$/;"	l
f0105bc0	obj/kern/kernel.asm	/^f0105bc0:	85 ff                	test   %edi,%edi$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	5b                   	pop    %ebx$/;"	l
f0105bc6	obj/kern/kernel.asm	/^f0105bc6:	5e                   	pop    %esi$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	5f                   	pop    %edi$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	5d                   	pop    %ebp$/;"	l
f0105bc9	obj/kern/kernel.asm	/^f0105bc9:	c3                   	ret    $/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	66 90                	xchg   %ax,%ax$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc <mpentry_start>:$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	fa                   	cli    $/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	31 c0                	xor    %eax,%eax$/;"	l
f0105bcf	obj/kern/kernel.asm	/^f0105bcf:	8e d8                	mov    %eax,%ds$/;"	l
f0105bd1	obj/kern/kernel.asm	/^f0105bd1:	8e c0                	mov    %eax,%es$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	8e d0                	mov    %eax,%ss$/;"	l
f0105bd5	obj/kern/kernel.asm	/^f0105bd5:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	74 70                	je     f0105c4a <mpsearch1+0x3>$/;"	l
f0105bda	obj/kern/kernel.asm	/^f0105bda:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0105be1	obj/kern/kernel.asm	/^f0105be1:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	08 00                	or     %al,(%eax)$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec <start32>:$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	8e d8                	mov    %eax,%ds$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	8e c0                	mov    %eax,%es$/;"	l
f0105bf4	obj/kern/kernel.asm	/^f0105bf4:	8e d0                	mov    %eax,%ss$/;"	l
f0105bf6	obj/kern/kernel.asm	/^f0105bf6:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	8e e0                	mov    %eax,%fs$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	8e e8                	mov    %eax,%gs$/;"	l
f0105bfe	obj/kern/kernel.asm	/^f0105bfe:	b8 00 f0 11 00       	mov    $0x11f000,%eax$/;"	l
f0105c03	obj/kern/kernel.asm	/^f0105c03:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105c09	obj/kern/kernel.asm	/^f0105c09:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105c11	obj/kern/kernel.asm	/^f0105c11:	8b 25 84 5e 23 f0    	mov    0xf0235e84,%esp$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105c1c	obj/kern/kernel.asm	/^f0105c1c:	b8 9c 01 10 f0       	mov    $0xf010019c,%eax$/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	ff d0                	call   *%eax$/;"	l
f0105c23	obj/kern/kernel.asm	/^f0105c23 <spin>:$/;"	l
f0105c23	obj/kern/kernel.asm	/^f0105c23:	eb fe                	jmp    f0105c23 <spin>$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28 <gdt>:$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	ff                   	(bad)  $/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	ff 00                	incl   (%eax)$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	00 00                	add    %al,(%eax)$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0105c3c	obj/kern/kernel.asm	/^f0105c3c:	00                   	.byte 0x0$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	92                   	xchg   %eax,%edx$/;"	l
f0105c3e	obj/kern/kernel.asm	/^f0105c3e:	cf                   	iret   $/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40 <gdtdesc>:$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	17                   	pop    %ss$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46 <mpentry_end>:$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46:	90                   	nop$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47 <mpsearch1>:$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	55                   	push   %ebp$/;"	l
f0105c48	obj/kern/kernel.asm	/^f0105c48:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	57                   	push   %edi$/;"	l
f0105c4b	obj/kern/kernel.asm	/^f0105c4b:	56                   	push   %esi$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	53                   	push   %ebx$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	8b 0d 8c 5e 23 f0    	mov    0xf0235e8c,%ecx$/;"	l
f0105c56	obj/kern/kernel.asm	/^f0105c56:	89 c3                	mov    %eax,%ebx$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105c5b	obj/kern/kernel.asm	/^f0105c5b:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	72 12                	jb     f0105c71 <mpsearch1+0x2a>$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	50                   	push   %eax$/;"	l
f0105c60	obj/kern/kernel.asm	/^f0105c60:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	6a 57                	push   $0x57$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	68 01 86 10 f0       	push   $0xf0108601$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	e8 cf a3 ff ff       	call   f0100040 <_panic>$/;"	l
f0105c71	obj/kern/kernel.asm	/^f0105c71:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0105c77	obj/kern/kernel.asm	/^f0105c77:	01 d0                	add    %edx,%eax$/;"	l
f0105c79	obj/kern/kernel.asm	/^f0105c79:	89 c2                	mov    %eax,%edx$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105c7e	obj/kern/kernel.asm	/^f0105c7e:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	72 12                	jb     f0105c94 <mpsearch1+0x4d>$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	50                   	push   %eax$/;"	l
f0105c83	obj/kern/kernel.asm	/^f0105c83:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	6a 57                	push   $0x57$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	68 01 86 10 f0       	push   $0xf0108601$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	e8 ac a3 ff ff       	call   f0100040 <_panic>$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f0105c9a	obj/kern/kernel.asm	/^f0105c9a:	eb 2f                	jmp    f0105ccb <mpsearch1+0x84>$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	6a 04                	push   $0x4$/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	68 11 86 10 f0       	push   $0xf0108611$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	53                   	push   %ebx$/;"	l
f0105ca7	obj/kern/kernel.asm	/^f0105ca7:	e8 e4 fd ff ff       	call   f0105a90 <memcmp>$/;"	l
f0105cac	obj/kern/kernel.asm	/^f0105cac:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	85 c0                	test   %eax,%eax$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	75 15                	jne    f0105cc8 <mpsearch1+0x81>$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	89 da                	mov    %ebx,%edx$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f0105cb8	obj/kern/kernel.asm	/^f0105cb8:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	01 c8                	add    %ecx,%eax$/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	39 d7                	cmp    %edx,%edi$/;"	l
f0105cc2	obj/kern/kernel.asm	/^f0105cc2:	75 f4                	jne    f0105cb8 <mpsearch1+0x71>$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	84 c0                	test   %al,%al$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	74 0e                	je     f0105cd6 <mpsearch1+0x8f>$/;"	l
f0105cc8	obj/kern/kernel.asm	/^f0105cc8:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0105ccb	obj/kern/kernel.asm	/^f0105ccb:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105ccd	obj/kern/kernel.asm	/^f0105ccd:	72 cd                	jb     f0105c9c <mpsearch1+0x55>$/;"	l
f0105ccf	obj/kern/kernel.asm	/^f0105ccf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	eb 02                	jmp    f0105cd8 <mpsearch1+0x91>$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	89 d8                	mov    %ebx,%eax$/;"	l
f0105cd8	obj/kern/kernel.asm	/^f0105cd8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105cdb	obj/kern/kernel.asm	/^f0105cdb:	5b                   	pop    %ebx$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	5e                   	pop    %esi$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	5f                   	pop    %edi$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	5d                   	pop    %ebp$/;"	l
f0105cdf	obj/kern/kernel.asm	/^f0105cdf:	c3                   	ret    $/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0 <mp_init>:$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	55                   	push   %ebp$/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ce3	obj/kern/kernel.asm	/^f0105ce3:	57                   	push   %edi$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	56                   	push   %esi$/;"	l
f0105ce5	obj/kern/kernel.asm	/^f0105ce5:	53                   	push   %ebx$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	c7 05 c0 63 23 f0 20 	movl   $0xf0236020,0xf02363c0$/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	60 23 f0 $/;"	l
f0105cf3	obj/kern/kernel.asm	/^f0105cf3:	83 3d 8c 5e 23 f0 00 	cmpl   $0x0,0xf0235e8c$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	75 16                	jne    f0105d12 <mp_init+0x32>$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	68 00 04 00 00       	push   $0x400$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	6a 6f                	push   $0x6f$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	68 01 86 10 f0       	push   $0xf0108601$/;"	l
f0105d0d	obj/kern/kernel.asm	/^f0105d0d:	e8 2e a3 ff ff       	call   f0100040 <_panic>$/;"	l
f0105d12	obj/kern/kernel.asm	/^f0105d12:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0105d19	obj/kern/kernel.asm	/^f0105d19:	85 c0                	test   %eax,%eax$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	74 16                	je     f0105d33 <mp_init+0x53>$/;"	l
f0105d1d	obj/kern/kernel.asm	/^f0105d1d:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0105d20	obj/kern/kernel.asm	/^f0105d20:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	e8 1d ff ff ff       	call   f0105c47 <mpsearch1>$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105d2d	obj/kern/kernel.asm	/^f0105d2d:	85 c0                	test   %eax,%eax$/;"	l
f0105d2f	obj/kern/kernel.asm	/^f0105d2f:	75 3c                	jne    f0105d6d <mp_init+0x8d>$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	eb 20                	jmp    f0105d53 <mp_init+0x73>$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0105d3a	obj/kern/kernel.asm	/^f0105d3a:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	e8 fb fe ff ff       	call   f0105c47 <mpsearch1>$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	85 c0                	test   %eax,%eax$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	75 1a                	jne    f0105d6d <mp_init+0x8d>$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	e8 e5 fe ff ff       	call   f0105c47 <mpsearch1>$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	85 c0                	test   %eax,%eax$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	0f 84 5d 02 00 00    	je     f0105fca <mp_init+0x2ea>$/;"	l
f0105d6d	obj/kern/kernel.asm	/^f0105d6d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	85 f6                	test   %esi,%esi$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	74 06                	je     f0105d7d <mp_init+0x9d>$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	74 15                	je     f0105d92 <mp_init+0xb2>$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	68 74 84 10 f0       	push   $0xf0108474$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	e8 a0 e0 ff ff       	call   f0103e2a <cprintf>$/;"	l
f0105d8a	obj/kern/kernel.asm	/^f0105d8a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	e9 38 02 00 00       	jmp    f0105fca <mp_init+0x2ea>$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	89 f0                	mov    %esi,%eax$/;"	l
f0105d94	obj/kern/kernel.asm	/^f0105d94:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	3b 05 8c 5e 23 f0    	cmp    0xf0235e8c,%eax$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	72 15                	jb     f0105db4 <mp_init+0xd4>$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	56                   	push   %esi$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	68 90 00 00 00       	push   $0x90$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	68 01 86 10 f0       	push   $0xf0108601$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	e8 8c a2 ff ff       	call   f0100040 <_panic>$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0105dba	obj/kern/kernel.asm	/^f0105dba:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	6a 04                	push   $0x4$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	68 16 86 10 f0       	push   $0xf0108616$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	53                   	push   %ebx$/;"	l
f0105dc5	obj/kern/kernel.asm	/^f0105dc5:	e8 c6 fc ff ff       	call   f0105a90 <memcmp>$/;"	l
f0105dca	obj/kern/kernel.asm	/^f0105dca:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	85 c0                	test   %eax,%eax$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	74 15                	je     f0105de6 <mp_init+0x106>$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	68 a4 84 10 f0       	push   $0xf01084a4$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	e8 4c e0 ff ff       	call   f0103e2a <cprintf>$/;"	l
f0105dde	obj/kern/kernel.asm	/^f0105dde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	e9 e4 01 00 00       	jmp    f0105fca <mp_init+0x2ea>$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0105dea	obj/kern/kernel.asm	/^f0105dea:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	eb 0d                	jmp    f0105e0a <mp_init+0x12a>$/;"	l
f0105dfd	obj/kern/kernel.asm	/^f0105dfd:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	f0 $/;"	l
f0105e05	obj/kern/kernel.asm	/^f0105e05:	01 ca                	add    %ecx,%edx$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	39 c7                	cmp    %eax,%edi$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	75 ef                	jne    f0105dfd <mp_init+0x11d>$/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e:	84 d2                	test   %dl,%dl$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	74 15                	je     f0105e27 <mp_init+0x147>$/;"	l
f0105e12	obj/kern/kernel.asm	/^f0105e12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e15	obj/kern/kernel.asm	/^f0105e15:	68 d8 84 10 f0       	push   $0xf01084d8$/;"	l
f0105e1a	obj/kern/kernel.asm	/^f0105e1a:	e8 0b e0 ff ff       	call   f0103e2a <cprintf>$/;"	l
f0105e1f	obj/kern/kernel.asm	/^f0105e1f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e22	obj/kern/kernel.asm	/^f0105e22:	e9 a3 01 00 00       	jmp    f0105fca <mp_init+0x2ea>$/;"	l
f0105e27	obj/kern/kernel.asm	/^f0105e27:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	3c 01                	cmp    $0x1,%al$/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	74 1d                	je     f0105e4c <mp_init+0x16c>$/;"	l
f0105e2f	obj/kern/kernel.asm	/^f0105e2f:	3c 04                	cmp    $0x4,%al$/;"	l
f0105e31	obj/kern/kernel.asm	/^f0105e31:	74 19                	je     f0105e4c <mp_init+0x16c>$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	50                   	push   %eax$/;"	l
f0105e3a	obj/kern/kernel.asm	/^f0105e3a:	68 fc 84 10 f0       	push   $0xf01084fc$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	e8 e6 df ff ff       	call   f0103e2a <cprintf>$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e47	obj/kern/kernel.asm	/^f0105e47:	e9 7e 01 00 00       	jmp    f0105fca <mp_init+0x2ea>$/;"	l
f0105e4c	obj/kern/kernel.asm	/^f0105e4c:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	01 ce                	add    %ecx,%esi$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	eb 0d                	jmp    f0105e6f <mp_init+0x18f>$/;"	l
f0105e62	obj/kern/kernel.asm	/^f0105e62:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	f0 $/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	01 ca                	add    %ecx,%edx$/;"	l
f0105e6c	obj/kern/kernel.asm	/^f0105e6c:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	39 c7                	cmp    %eax,%edi$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	75 ef                	jne    f0105e62 <mp_init+0x182>$/;"	l
f0105e73	obj/kern/kernel.asm	/^f0105e73:	89 d0                	mov    %edx,%eax$/;"	l
f0105e75	obj/kern/kernel.asm	/^f0105e75:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f0105e78	obj/kern/kernel.asm	/^f0105e78:	74 15                	je     f0105e8f <mp_init+0x1af>$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	68 1c 85 10 f0       	push   $0xf010851c$/;"	l
f0105e82	obj/kern/kernel.asm	/^f0105e82:	e8 a3 df ff ff       	call   f0103e2a <cprintf>$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	e9 3b 01 00 00       	jmp    f0105fca <mp_init+0x2ea>$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	85 db                	test   %ebx,%ebx$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	0f 84 33 01 00 00    	je     f0105fca <mp_init+0x2ea>$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	c7 05 00 60 23 f0 01 	movl   $0x1,0xf0236000$/;"	l
f0105e9e	obj/kern/kernel.asm	/^f0105e9e:	00 00 00 $/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0105ea4	obj/kern/kernel.asm	/^f0105ea4:	a3 00 70 27 f0       	mov    %eax,0xf0277000$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	e9 85 00 00 00       	jmp    f0105f3b <mp_init+0x25b>$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	84 c0                	test   %al,%al$/;"	l
f0105ebb	obj/kern/kernel.asm	/^f0105ebb:	74 06                	je     f0105ec3 <mp_init+0x1e3>$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	3c 04                	cmp    $0x4,%al$/;"	l
f0105ebf	obj/kern/kernel.asm	/^f0105ebf:	77 55                	ja     f0105f16 <mp_init+0x236>$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	eb 4e                	jmp    f0105f11 <mp_init+0x231>$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	74 11                	je     f0105eda <mp_init+0x1fa>$/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9:	6b 05 c4 63 23 f0 74 	imul   $0x74,0xf02363c4,%eax$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	05 20 60 23 f0       	add    $0xf0236020,%eax$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	a3 c0 63 23 f0       	mov    %eax,0xf02363c0$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	a1 c4 63 23 f0       	mov    0xf02363c4,%eax$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0105ee2	obj/kern/kernel.asm	/^f0105ee2:	7f 13                	jg     f0105ef7 <mp_init+0x217>$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105ee7	obj/kern/kernel.asm	/^f0105ee7:	88 82 20 60 23 f0    	mov    %al,-0xfdc9fe0(%edx)$/;"	l
f0105eed	obj/kern/kernel.asm	/^f0105eed:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	a3 c4 63 23 f0       	mov    %eax,0xf02363c4$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	eb 15                	jmp    f0105f0c <mp_init+0x22c>$/;"	l
f0105ef7	obj/kern/kernel.asm	/^f0105ef7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	50                   	push   %eax$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	68 4c 85 10 f0       	push   $0xf010854c$/;"	l
f0105f04	obj/kern/kernel.asm	/^f0105f04:	e8 21 df ff ff       	call   f0103e2a <cprintf>$/;"	l
f0105f09	obj/kern/kernel.asm	/^f0105f09:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	83 c7 14             	add    $0x14,%edi$/;"	l
f0105f0f	obj/kern/kernel.asm	/^f0105f0f:	eb 27                	jmp    f0105f38 <mp_init+0x258>$/;"	l
f0105f11	obj/kern/kernel.asm	/^f0105f11:	83 c7 08             	add    $0x8,%edi$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	eb 22                	jmp    f0105f38 <mp_init+0x258>$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105f1c	obj/kern/kernel.asm	/^f0105f1c:	50                   	push   %eax$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	68 74 85 10 f0       	push   $0xf0108574$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	e8 03 df ff ff       	call   f0103e2a <cprintf>$/;"	l
f0105f27	obj/kern/kernel.asm	/^f0105f27:	c7 05 00 60 23 f0 00 	movl   $0x0,0xf0236000$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	00 00 00 $/;"	l
f0105f31	obj/kern/kernel.asm	/^f0105f31:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105f3b	obj/kern/kernel.asm	/^f0105f3b:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	39 c6                	cmp    %eax,%esi$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	0f 82 6f ff ff ff    	jb     f0105eb6 <mp_init+0x1d6>$/;"	l
f0105f47	obj/kern/kernel.asm	/^f0105f47:	a1 c0 63 23 f0       	mov    0xf02363c0,%eax$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	83 3d 00 60 23 f0 00 	cmpl   $0x0,0xf0236000$/;"	l
f0105f5a	obj/kern/kernel.asm	/^f0105f5a:	75 26                	jne    f0105f82 <mp_init+0x2a2>$/;"	l
f0105f5c	obj/kern/kernel.asm	/^f0105f5c:	c7 05 c4 63 23 f0 01 	movl   $0x1,0xf02363c4$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	00 00 00 $/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	c7 05 00 70 27 f0 00 	movl   $0x0,0xf0277000$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	00 00 00 $/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105f73	obj/kern/kernel.asm	/^f0105f73:	68 94 85 10 f0       	push   $0xf0108594$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	e8 ad de ff ff       	call   f0103e2a <cprintf>$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	eb 48                	jmp    f0105fca <mp_init+0x2ea>$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	ff 35 c4 63 23 f0    	pushl  0xf02363c4$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	50                   	push   %eax$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	68 1b 86 10 f0       	push   $0xf010861b$/;"	l
f0105f94	obj/kern/kernel.asm	/^f0105f94:	e8 91 de ff ff       	call   f0103e2a <cprintf>$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f9c	obj/kern/kernel.asm	/^f0105f9c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	74 25                	je     f0105fca <mp_init+0x2ea>$/;"	l
f0105fa5	obj/kern/kernel.asm	/^f0105fa5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	68 c0 85 10 f0       	push   $0xf01085c0$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	e8 78 de ff ff       	call   f0103e2a <cprintf>$/;"	l
f0105fb2	obj/kern/kernel.asm	/^f0105fb2:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0105fb7	obj/kern/kernel.asm	/^f0105fb7:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	ee                   	out    %al,(%dx)$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	ec                   	in     (%dx),%al$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	83 c8 01             	or     $0x1,%eax$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	ee                   	out    %al,(%dx)$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	5b                   	pop    %ebx$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	5e                   	pop    %esi$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	5f                   	pop    %edi$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	5d                   	pop    %ebp$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	c3                   	ret    $/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2 <lapicw>:$/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2:	55                   	push   %ebp$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fd5	obj/kern/kernel.asm	/^f0105fd5:	8b 0d 04 70 27 f0    	mov    0xf0277004,%ecx$/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	89 10                	mov    %edx,(%eax)$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	a1 04 70 27 f0       	mov    0xf0277004,%eax$/;"	l
f0105fe5	obj/kern/kernel.asm	/^f0105fe5:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	5d                   	pop    %ebp$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	c3                   	ret    $/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea <cpunum>:$/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea:	55                   	push   %ebp$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	a1 04 70 27 f0       	mov    0xf0277004,%eax$/;"	l
f0105ff2	obj/kern/kernel.asm	/^f0105ff2:	85 c0                	test   %eax,%eax$/;"	l
f0105ff4	obj/kern/kernel.asm	/^f0105ff4:	74 08                	je     f0105ffe <cpunum+0x14>$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105ff9	obj/kern/kernel.asm	/^f0105ff9:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	eb 05                	jmp    f0106003 <cpunum+0x19>$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	5d                   	pop    %ebp$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	c3                   	ret    $/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005 <lapic_init>:$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	a1 00 70 27 f0       	mov    0xf0277000,%eax$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	85 c0                	test   %eax,%eax$/;"	l
f010600c	obj/kern/kernel.asm	/^f010600c:	0f 84 21 01 00 00    	je     f0106133 <lapic_init+0x12e>$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	55                   	push   %ebp$/;"	l
f0106013	obj/kern/kernel.asm	/^f0106013:	89 e5                	mov    %esp,%ebp$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106018	obj/kern/kernel.asm	/^f0106018:	68 00 10 00 00       	push   $0x1000$/;"	l
f010601d	obj/kern/kernel.asm	/^f010601d:	50                   	push   %eax$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	e8 8b b9 ff ff       	call   f01019ae <mmio_map_region>$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	a3 04 70 27 f0       	mov    %eax,0xf0277004$/;"	l
f0106028	obj/kern/kernel.asm	/^f0106028:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	e8 9b ff ff ff       	call   f0105fd2 <lapicw>$/;"	l
f0106037	obj/kern/kernel.asm	/^f0106037:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f010603c	obj/kern/kernel.asm	/^f010603c:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106041	obj/kern/kernel.asm	/^f0106041:	e8 8c ff ff ff       	call   f0105fd2 <lapicw>$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050:	e8 7d ff ff ff       	call   f0105fd2 <lapicw>$/;"	l
f0106055	obj/kern/kernel.asm	/^f0106055:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f010605a	obj/kern/kernel.asm	/^f010605a:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	e8 6e ff ff ff       	call   f0105fd2 <lapicw>$/;"	l
f0106064	obj/kern/kernel.asm	/^f0106064:	e8 81 ff ff ff       	call   f0105fea <cpunum>$/;"	l
f0106069	obj/kern/kernel.asm	/^f0106069:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	05 20 60 23 f0       	add    $0xf0236020,%eax$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	39 05 c0 63 23 f0    	cmp    %eax,0xf02363c0$/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	74 0f                	je     f010608b <lapic_init+0x86>$/;"	l
f010607c	obj/kern/kernel.asm	/^f010607c:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106086	obj/kern/kernel.asm	/^f0106086:	e8 47 ff ff ff       	call   f0105fd2 <lapicw>$/;"	l
f010608b	obj/kern/kernel.asm	/^f010608b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106095	obj/kern/kernel.asm	/^f0106095:	e8 38 ff ff ff       	call   f0105fd2 <lapicw>$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	a1 04 70 27 f0       	mov    0xf0277004,%eax$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	3c 03                	cmp    $0x3,%al$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	76 0f                	jbe    f01060b8 <lapic_init+0xb3>$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	e8 1a ff ff ff       	call   f0105fd2 <lapicw>$/;"	l
f01060b8	obj/kern/kernel.asm	/^f01060b8:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f01060bd	obj/kern/kernel.asm	/^f01060bd:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2:	e8 0b ff ff ff       	call   f0105fd2 <lapicw>$/;"	l
f01060c7	obj/kern/kernel.asm	/^f01060c7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01060cc	obj/kern/kernel.asm	/^f01060cc:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01060d1	obj/kern/kernel.asm	/^f01060d1:	e8 fc fe ff ff       	call   f0105fd2 <lapicw>$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	e8 ed fe ff ff       	call   f0105fd2 <lapicw>$/;"	l
f01060e5	obj/kern/kernel.asm	/^f01060e5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	e8 de fe ff ff       	call   f0105fd2 <lapicw>$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01060f9	obj/kern/kernel.asm	/^f01060f9:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01060fe	obj/kern/kernel.asm	/^f01060fe:	e8 cf fe ff ff       	call   f0105fd2 <lapicw>$/;"	l
f0106103	obj/kern/kernel.asm	/^f0106103:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010610d	obj/kern/kernel.asm	/^f010610d:	e8 c0 fe ff ff       	call   f0105fd2 <lapicw>$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	8b 15 04 70 27 f0    	mov    0xf0277004,%edx$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106121	obj/kern/kernel.asm	/^f0106121:	75 f5                	jne    f0106118 <lapic_init+0x113>$/;"	l
f0106123	obj/kern/kernel.asm	/^f0106123:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106128	obj/kern/kernel.asm	/^f0106128:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	e8 a0 fe ff ff       	call   f0105fd2 <lapicw>$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	c9                   	leave  $/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	f3 c3                	repz ret $/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135 <lapic_eoi>:$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	83 3d 04 70 27 f0 00 	cmpl   $0x0,0xf0277004$/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	74 13                	je     f0106151 <lapic_eoi+0x1c>$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	55                   	push   %ebp$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	e8 82 fe ff ff       	call   f0105fd2 <lapicw>$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	5d                   	pop    %ebp$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	f3 c3                	repz ret $/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153 <lapic_startap>:$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	55                   	push   %ebp$/;"	l
f0106154	obj/kern/kernel.asm	/^f0106154:	89 e5                	mov    %esp,%ebp$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	56                   	push   %esi$/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	53                   	push   %ebx$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010615e	obj/kern/kernel.asm	/^f010615e:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	ee                   	out    %al,(%dx)$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106173	obj/kern/kernel.asm	/^f0106173:	ee                   	out    %al,(%dx)$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	83 3d 8c 5e 23 f0 00 	cmpl   $0x0,0xf0235e8c$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	75 19                	jne    f0106196 <lapic_startap+0x43>$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	68 67 04 00 00       	push   $0x467$/;"	l
f0106182	obj/kern/kernel.asm	/^f0106182:	68 a4 66 10 f0       	push   $0xf01066a4$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	68 98 00 00 00       	push   $0x98$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	68 38 86 10 f0       	push   $0xf0108638$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	e8 aa 9e ff ff       	call   f0100040 <_panic>$/;"	l
f0106196	obj/kern/kernel.asm	/^f0106196:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	00 00 $/;"	l
f010619f	obj/kern/kernel.asm	/^f010619f:	89 d8                	mov    %ebx,%eax$/;"	l
f01061a1	obj/kern/kernel.asm	/^f01061a1:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f01061aa	obj/kern/kernel.asm	/^f01061aa:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	89 f2                	mov    %esi,%edx$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	e8 19 fe ff ff       	call   f0105fd2 <lapicw>$/;"	l
f01061b9	obj/kern/kernel.asm	/^f01061b9:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f01061be	obj/kern/kernel.asm	/^f01061be:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	e8 0a fe ff ff       	call   f0105fd2 <lapicw>$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f01061cd	obj/kern/kernel.asm	/^f01061cd:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01061d2	obj/kern/kernel.asm	/^f01061d2:	e8 fb fd ff ff       	call   f0105fd2 <lapicw>$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	80 cf 06             	or     $0x6,%bh$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	89 f2                	mov    %esi,%edx$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	e8 e9 fd ff ff       	call   f0105fd2 <lapicw>$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	89 da                	mov    %ebx,%edx$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01061f0	obj/kern/kernel.asm	/^f01061f0:	e8 dd fd ff ff       	call   f0105fd2 <lapicw>$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	89 f2                	mov    %esi,%edx$/;"	l
f01061f7	obj/kern/kernel.asm	/^f01061f7:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc:	e8 d1 fd ff ff       	call   f0105fd2 <lapicw>$/;"	l
f0106201	obj/kern/kernel.asm	/^f0106201:	89 da                	mov    %ebx,%edx$/;"	l
f0106203	obj/kern/kernel.asm	/^f0106203:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106208	obj/kern/kernel.asm	/^f0106208:	e8 c5 fd ff ff       	call   f0105fd2 <lapicw>$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0106210	obj/kern/kernel.asm	/^f0106210:	5b                   	pop    %ebx$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	5e                   	pop    %esi$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	5d                   	pop    %ebp$/;"	l
f0106213	obj/kern/kernel.asm	/^f0106213:	c3                   	ret    $/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214 <lapic_ipi>:$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	55                   	push   %ebp$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	89 e5                	mov    %esp,%ebp$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010621a	obj/kern/kernel.asm	/^f010621a:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	e8 a8 fd ff ff       	call   f0105fd2 <lapicw>$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	8b 15 04 70 27 f0    	mov    0xf0277004,%edx$/;"	l
f0106230	obj/kern/kernel.asm	/^f0106230:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	75 f5                	jne    f0106230 <lapic_ipi+0x1c>$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	5d                   	pop    %ebp$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	c3                   	ret    $/;"	l
f010623d	obj/kern/kernel.asm	/^f010623d <__spin_initlock>:$/;"	l
f010623d	obj/kern/kernel.asm	/^f010623d:	55                   	push   %ebp$/;"	l
f010623e	obj/kern/kernel.asm	/^f010623e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106240	obj/kern/kernel.asm	/^f0106240:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010624c	obj/kern/kernel.asm	/^f010624c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106256	obj/kern/kernel.asm	/^f0106256:	5d                   	pop    %ebp$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	c3                   	ret    $/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258 <spin_lock>:$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	55                   	push   %ebp$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	89 e5                	mov    %esp,%ebp$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	56                   	push   %esi$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	53                   	push   %ebx$/;"	l
f010625d	obj/kern/kernel.asm	/^f010625d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	74 14                	je     f0106279 <spin_lock+0x21>$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106268	obj/kern/kernel.asm	/^f0106268:	e8 7d fd ff ff       	call   f0105fea <cpunum>$/;"	l
f010626d	obj/kern/kernel.asm	/^f010626d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	05 20 60 23 f0       	add    $0xf0236020,%eax$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	39 c6                	cmp    %eax,%esi$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	74 07                	je     f0106280 <spin_lock+0x28>$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010627e	obj/kern/kernel.asm	/^f010627e:	eb 20                	jmp    f01062a0 <spin_lock+0x48>$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	e8 62 fd ff ff       	call   f0105fea <cpunum>$/;"	l
f0106288	obj/kern/kernel.asm	/^f0106288:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	53                   	push   %ebx$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	50                   	push   %eax$/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	68 48 86 10 f0       	push   $0xf0108648$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	6a 41                	push   $0x41$/;"	l
f0106294	obj/kern/kernel.asm	/^f0106294:	68 ac 86 10 f0       	push   $0xf01086ac$/;"	l
f0106299	obj/kern/kernel.asm	/^f0106299:	e8 a2 9d ff ff       	call   f0100040 <_panic>$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	f3 90                	pause  $/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	89 d0                	mov    %edx,%eax$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	85 c0                	test   %eax,%eax$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	75 f5                	jne    f010629e <spin_lock+0x46>$/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9:	e8 3c fd ff ff       	call   f0105fea <cpunum>$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	05 20 60 23 f0       	add    $0xf0236020,%eax$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f01062b9	obj/kern/kernel.asm	/^f01062b9:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01062bc	obj/kern/kernel.asm	/^f01062bc:	89 ea                	mov    %ebp,%edx$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062c3	obj/kern/kernel.asm	/^f01062c3:	eb 0b                	jmp    f01062d0 <spin_lock+0x78>$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f01062c8	obj/kern/kernel.asm	/^f01062c8:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f01062cb	obj/kern/kernel.asm	/^f01062cb:	8b 12                	mov    (%edx),%edx$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	83 c0 01             	add    $0x1,%eax$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f01062d6	obj/kern/kernel.asm	/^f01062d6:	76 11                	jbe    f01062e9 <spin_lock+0x91>$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	7e e8                	jle    f01062c5 <spin_lock+0x6d>$/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	eb 0a                	jmp    f01062e9 <spin_lock+0x91>$/;"	l
f01062df	obj/kern/kernel.asm	/^f01062df:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f01062e6	obj/kern/kernel.asm	/^f01062e6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01062ec	obj/kern/kernel.asm	/^f01062ec:	7e f1                	jle    f01062df <spin_lock+0x87>$/;"	l
f01062ee	obj/kern/kernel.asm	/^f01062ee:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	5b                   	pop    %ebx$/;"	l
f01062f2	obj/kern/kernel.asm	/^f01062f2:	5e                   	pop    %esi$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	5d                   	pop    %ebp$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	c3                   	ret    $/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5 <spin_unlock>:$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	55                   	push   %ebp$/;"	l
f01062f6	obj/kern/kernel.asm	/^f01062f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01062f8	obj/kern/kernel.asm	/^f01062f8:	57                   	push   %edi$/;"	l
f01062f9	obj/kern/kernel.asm	/^f01062f9:	56                   	push   %esi$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	53                   	push   %ebx$/;"	l
f01062fb	obj/kern/kernel.asm	/^f01062fb:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0106304	obj/kern/kernel.asm	/^f0106304:	74 18                	je     f010631e <spin_unlock+0x29>$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0106309	obj/kern/kernel.asm	/^f0106309:	e8 dc fc ff ff       	call   f0105fea <cpunum>$/;"	l
f010630e	obj/kern/kernel.asm	/^f010630e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106311	obj/kern/kernel.asm	/^f0106311:	05 20 60 23 f0       	add    $0xf0236020,%eax$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106318	obj/kern/kernel.asm	/^f0106318:	0f 84 a5 00 00 00    	je     f01063c3 <spin_unlock+0xce>$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	6a 28                	push   $0x28$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	50                   	push   %eax$/;"	l
f0106327	obj/kern/kernel.asm	/^f0106327:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f010632a	obj/kern/kernel.asm	/^f010632a:	53                   	push   %ebx$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	e8 e5 f6 ff ff       	call   f0105a15 <memmove>$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0106333	obj/kern/kernel.asm	/^f0106333:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0106336	obj/kern/kernel.asm	/^f0106336:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0106339	obj/kern/kernel.asm	/^f0106339:	e8 ac fc ff ff       	call   f0105fea <cpunum>$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	57                   	push   %edi$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	56                   	push   %esi$/;"	l
f0106340	obj/kern/kernel.asm	/^f0106340:	50                   	push   %eax$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	68 74 86 10 f0       	push   $0xf0108674$/;"	l
f0106346	obj/kern/kernel.asm	/^f0106346:	e8 df da ff ff       	call   f0103e2a <cprintf>$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	83 c4 20             	add    $0x20,%esp$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	eb 54                	jmp    f01063a7 <spin_unlock+0xb2>$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106356	obj/kern/kernel.asm	/^f0106356:	57                   	push   %edi$/;"	l
f0106357	obj/kern/kernel.asm	/^f0106357:	50                   	push   %eax$/;"	l
f0106358	obj/kern/kernel.asm	/^f0106358:	e8 14 eb ff ff       	call   f0104e71 <debuginfo_eip>$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106360	obj/kern/kernel.asm	/^f0106360:	85 c0                	test   %eax,%eax$/;"	l
f0106362	obj/kern/kernel.asm	/^f0106362:	78 27                	js     f010638b <spin_unlock+0x96>$/;"	l
f0106364	obj/kern/kernel.asm	/^f0106364:	8b 06                	mov    (%esi),%eax$/;"	l
f0106366	obj/kern/kernel.asm	/^f0106366:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106369	obj/kern/kernel.asm	/^f0106369:	89 c2                	mov    %eax,%edx$/;"	l
f010636b	obj/kern/kernel.asm	/^f010636b:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	52                   	push   %edx$/;"	l
f010636f	obj/kern/kernel.asm	/^f010636f:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	50                   	push   %eax$/;"	l
f010637c	obj/kern/kernel.asm	/^f010637c:	68 bc 86 10 f0       	push   $0xf01086bc$/;"	l
f0106381	obj/kern/kernel.asm	/^f0106381:	e8 a4 da ff ff       	call   f0103e2a <cprintf>$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106389	obj/kern/kernel.asm	/^f0106389:	eb 12                	jmp    f010639d <spin_unlock+0xa8>$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010638e	obj/kern/kernel.asm	/^f010638e:	ff 36                	pushl  (%esi)$/;"	l
f0106390	obj/kern/kernel.asm	/^f0106390:	68 d3 86 10 f0       	push   $0xf01086d3$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	e8 90 da ff ff       	call   f0103e2a <cprintf>$/;"	l
f010639a	obj/kern/kernel.asm	/^f010639a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	39 c3                	cmp    %eax,%ebx$/;"	l
f01063a5	obj/kern/kernel.asm	/^f01063a5:	74 08                	je     f01063af <spin_unlock+0xba>$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	89 de                	mov    %ebx,%esi$/;"	l
f01063a9	obj/kern/kernel.asm	/^f01063a9:	8b 03                	mov    (%ebx),%eax$/;"	l
f01063ab	obj/kern/kernel.asm	/^f01063ab:	85 c0                	test   %eax,%eax$/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	75 a4                	jne    f0106353 <spin_unlock+0x5e>$/;"	l
f01063af	obj/kern/kernel.asm	/^f01063af:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01063b2	obj/kern/kernel.asm	/^f01063b2:	68 db 86 10 f0       	push   $0xf01086db$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	6a 67                	push   $0x67$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	68 ac 86 10 f0       	push   $0xf01086ac$/;"	l
f01063be	obj/kern/kernel.asm	/^f01063be:	e8 7d 9c ff ff       	call   f0100040 <_panic>$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f01063ca	obj/kern/kernel.asm	/^f01063ca:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f01063d1	obj/kern/kernel.asm	/^f01063d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01063dc	obj/kern/kernel.asm	/^f01063dc:	5b                   	pop    %ebx$/;"	l
f01063dd	obj/kern/kernel.asm	/^f01063dd:	5e                   	pop    %esi$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	5f                   	pop    %edi$/;"	l
f01063df	obj/kern/kernel.asm	/^f01063df:	5d                   	pop    %ebp$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	c3                   	ret    $/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	66 90                	xchg   %ax,%ax$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	66 90                	xchg   %ax,%ax$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	66 90                	xchg   %ax,%ax$/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7:	66 90                	xchg   %ax,%ax$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	66 90                	xchg   %ax,%ax$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	66 90                	xchg   %ax,%ax$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	66 90                	xchg   %ax,%ax$/;"	l
f01063ef	obj/kern/kernel.asm	/^f01063ef:	90                   	nop$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0 <__udivdi3>:$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	55                   	push   %ebp$/;"	l
f01063f1	obj/kern/kernel.asm	/^f01063f1:	57                   	push   %edi$/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2:	56                   	push   %esi$/;"	l
f01063f3	obj/kern/kernel.asm	/^f01063f3:	53                   	push   %ebx$/;"	l
f01063f4	obj/kern/kernel.asm	/^f01063f4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01063f7	obj/kern/kernel.asm	/^f01063f7:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0106403	obj/kern/kernel.asm	/^f0106403:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	85 f6                	test   %esi,%esi$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010640d	obj/kern/kernel.asm	/^f010640d:	89 ca                	mov    %ecx,%edx$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	89 f8                	mov    %edi,%eax$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	75 3d                	jne    f0106450 <__udivdi3+0x60>$/;"	l
f0106413	obj/kern/kernel.asm	/^f0106413:	39 cf                	cmp    %ecx,%edi$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	0f 87 c5 00 00 00    	ja     f01064e0 <__udivdi3+0xf0>$/;"	l
f010641b	obj/kern/kernel.asm	/^f010641b:	85 ff                	test   %edi,%edi$/;"	l
f010641d	obj/kern/kernel.asm	/^f010641d:	89 fd                	mov    %edi,%ebp$/;"	l
f010641f	obj/kern/kernel.asm	/^f010641f:	75 0b                	jne    f010642c <__udivdi3+0x3c>$/;"	l
f0106421	obj/kern/kernel.asm	/^f0106421:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106426	obj/kern/kernel.asm	/^f0106426:	31 d2                	xor    %edx,%edx$/;"	l
f0106428	obj/kern/kernel.asm	/^f0106428:	f7 f7                	div    %edi$/;"	l
f010642a	obj/kern/kernel.asm	/^f010642a:	89 c5                	mov    %eax,%ebp$/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	89 c8                	mov    %ecx,%eax$/;"	l
f010642e	obj/kern/kernel.asm	/^f010642e:	31 d2                	xor    %edx,%edx$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	f7 f5                	div    %ebp$/;"	l
f0106432	obj/kern/kernel.asm	/^f0106432:	89 c1                	mov    %eax,%ecx$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	89 d8                	mov    %ebx,%eax$/;"	l
f0106436	obj/kern/kernel.asm	/^f0106436:	89 cf                	mov    %ecx,%edi$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	f7 f5                	div    %ebp$/;"	l
f010643a	obj/kern/kernel.asm	/^f010643a:	89 c3                	mov    %eax,%ebx$/;"	l
f010643c	obj/kern/kernel.asm	/^f010643c:	89 d8                	mov    %ebx,%eax$/;"	l
f010643e	obj/kern/kernel.asm	/^f010643e:	89 fa                	mov    %edi,%edx$/;"	l
f0106440	obj/kern/kernel.asm	/^f0106440:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106443	obj/kern/kernel.asm	/^f0106443:	5b                   	pop    %ebx$/;"	l
f0106444	obj/kern/kernel.asm	/^f0106444:	5e                   	pop    %esi$/;"	l
f0106445	obj/kern/kernel.asm	/^f0106445:	5f                   	pop    %edi$/;"	l
f0106446	obj/kern/kernel.asm	/^f0106446:	5d                   	pop    %ebp$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	c3                   	ret    $/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	90                   	nop$/;"	l
f0106449	obj/kern/kernel.asm	/^f0106449:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106450	obj/kern/kernel.asm	/^f0106450:	39 ce                	cmp    %ecx,%esi$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	77 74                	ja     f01064c8 <__udivdi3+0xd8>$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0106457	obj/kern/kernel.asm	/^f0106457:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f010645a	obj/kern/kernel.asm	/^f010645a:	0f 84 98 00 00 00    	je     f01064f8 <__udivdi3+0x108>$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	89 f9                	mov    %edi,%ecx$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	89 c5                	mov    %eax,%ebp$/;"	l
f0106469	obj/kern/kernel.asm	/^f0106469:	29 fb                	sub    %edi,%ebx$/;"	l
f010646b	obj/kern/kernel.asm	/^f010646b:	d3 e6                	shl    %cl,%esi$/;"	d
f010646d	obj/kern/kernel.asm	/^f010646d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106471	obj/kern/kernel.asm	/^f0106471:	89 f9                	mov    %edi,%ecx$/;"	l
f0106473	obj/kern/kernel.asm	/^f0106473:	d3 e0                	shl    %cl,%eax$/;"	d
f0106475	obj/kern/kernel.asm	/^f0106475:	09 ee                	or     %ebp,%esi$/;"	l
f0106477	obj/kern/kernel.asm	/^f0106477:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106479	obj/kern/kernel.asm	/^f0106479:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010647d	obj/kern/kernel.asm	/^f010647d:	89 d5                	mov    %edx,%ebp$/;"	l
f010647f	obj/kern/kernel.asm	/^f010647f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106483	obj/kern/kernel.asm	/^f0106483:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106485	obj/kern/kernel.asm	/^f0106485:	89 f9                	mov    %edi,%ecx$/;"	l
f0106487	obj/kern/kernel.asm	/^f0106487:	d3 e2                	shl    %cl,%edx$/;"	d
f0106489	obj/kern/kernel.asm	/^f0106489:	89 d9                	mov    %ebx,%ecx$/;"	l
f010648b	obj/kern/kernel.asm	/^f010648b:	d3 e8                	shr    %cl,%eax$/;"	d
f010648d	obj/kern/kernel.asm	/^f010648d:	09 c2                	or     %eax,%edx$/;"	l
f010648f	obj/kern/kernel.asm	/^f010648f:	89 d0                	mov    %edx,%eax$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	89 ea                	mov    %ebp,%edx$/;"	l
f0106493	obj/kern/kernel.asm	/^f0106493:	f7 f6                	div    %esi$/;"	l
f0106495	obj/kern/kernel.asm	/^f0106495:	89 d5                	mov    %edx,%ebp$/;"	l
f0106497	obj/kern/kernel.asm	/^f0106497:	89 c3                	mov    %eax,%ebx$/;"	l
f0106499	obj/kern/kernel.asm	/^f0106499:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010649f	obj/kern/kernel.asm	/^f010649f:	72 10                	jb     f01064b1 <__udivdi3+0xc1>$/;"	l
f01064a1	obj/kern/kernel.asm	/^f01064a1:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f01064a5	obj/kern/kernel.asm	/^f01064a5:	89 f9                	mov    %edi,%ecx$/;"	l
f01064a7	obj/kern/kernel.asm	/^f01064a7:	d3 e6                	shl    %cl,%esi$/;"	d
f01064a9	obj/kern/kernel.asm	/^f01064a9:	39 c6                	cmp    %eax,%esi$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	73 07                	jae    f01064b4 <__udivdi3+0xc4>$/;"	l
f01064ad	obj/kern/kernel.asm	/^f01064ad:	39 d5                	cmp    %edx,%ebp$/;"	l
f01064af	obj/kern/kernel.asm	/^f01064af:	75 03                	jne    f01064b4 <__udivdi3+0xc4>$/;"	l
f01064b1	obj/kern/kernel.asm	/^f01064b1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01064b4	obj/kern/kernel.asm	/^f01064b4:	31 ff                	xor    %edi,%edi$/;"	l
f01064b6	obj/kern/kernel.asm	/^f01064b6:	89 d8                	mov    %ebx,%eax$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	89 fa                	mov    %edi,%edx$/;"	l
f01064ba	obj/kern/kernel.asm	/^f01064ba:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	5b                   	pop    %ebx$/;"	l
f01064be	obj/kern/kernel.asm	/^f01064be:	5e                   	pop    %esi$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	5f                   	pop    %edi$/;"	l
f01064c0	obj/kern/kernel.asm	/^f01064c0:	5d                   	pop    %ebp$/;"	l
f01064c1	obj/kern/kernel.asm	/^f01064c1:	c3                   	ret    $/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01064c8	obj/kern/kernel.asm	/^f01064c8:	31 ff                	xor    %edi,%edi$/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca:	31 db                	xor    %ebx,%ebx$/;"	l
f01064cc	obj/kern/kernel.asm	/^f01064cc:	89 d8                	mov    %ebx,%eax$/;"	l
f01064ce	obj/kern/kernel.asm	/^f01064ce:	89 fa                	mov    %edi,%edx$/;"	l
f01064d0	obj/kern/kernel.asm	/^f01064d0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01064d3	obj/kern/kernel.asm	/^f01064d3:	5b                   	pop    %ebx$/;"	l
f01064d4	obj/kern/kernel.asm	/^f01064d4:	5e                   	pop    %esi$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	5f                   	pop    %edi$/;"	l
f01064d6	obj/kern/kernel.asm	/^f01064d6:	5d                   	pop    %ebp$/;"	l
f01064d7	obj/kern/kernel.asm	/^f01064d7:	c3                   	ret    $/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	90                   	nop$/;"	l
f01064d9	obj/kern/kernel.asm	/^f01064d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	89 d8                	mov    %ebx,%eax$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	f7 f7                	div    %edi$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	31 ff                	xor    %edi,%edi$/;"	l
f01064e6	obj/kern/kernel.asm	/^f01064e6:	89 c3                	mov    %eax,%ebx$/;"	l
f01064e8	obj/kern/kernel.asm	/^f01064e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	89 fa                	mov    %edi,%edx$/;"	l
f01064ec	obj/kern/kernel.asm	/^f01064ec:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	5b                   	pop    %ebx$/;"	l
f01064f0	obj/kern/kernel.asm	/^f01064f0:	5e                   	pop    %esi$/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	5f                   	pop    %edi$/;"	l
f01064f2	obj/kern/kernel.asm	/^f01064f2:	5d                   	pop    %ebp$/;"	l
f01064f3	obj/kern/kernel.asm	/^f01064f3:	c3                   	ret    $/;"	l
f01064f4	obj/kern/kernel.asm	/^f01064f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	39 ce                	cmp    %ecx,%esi$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	72 0c                	jb     f0106508 <__udivdi3+0x118>$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	31 db                	xor    %ebx,%ebx$/;"	l
f01064fe	obj/kern/kernel.asm	/^f01064fe:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	0f 87 34 ff ff ff    	ja     f010643c <__udivdi3+0x4c>$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f010650d	obj/kern/kernel.asm	/^f010650d:	e9 2a ff ff ff       	jmp    f010643c <__udivdi3+0x4c>$/;"	l
f0106512	obj/kern/kernel.asm	/^f0106512:	66 90                	xchg   %ax,%ax$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	66 90                	xchg   %ax,%ax$/;"	l
f0106516	obj/kern/kernel.asm	/^f0106516:	66 90                	xchg   %ax,%ax$/;"	l
f0106518	obj/kern/kernel.asm	/^f0106518:	66 90                	xchg   %ax,%ax$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	66 90                	xchg   %ax,%ax$/;"	l
f010651c	obj/kern/kernel.asm	/^f010651c:	66 90                	xchg   %ax,%ax$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	66 90                	xchg   %ax,%ax$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520 <__umoddi3>:$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520:	55                   	push   %ebp$/;"	l
f0106521	obj/kern/kernel.asm	/^f0106521:	57                   	push   %edi$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	56                   	push   %esi$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	53                   	push   %ebx$/;"	l
f0106524	obj/kern/kernel.asm	/^f0106524:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106527	obj/kern/kernel.asm	/^f0106527:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f010652f	obj/kern/kernel.asm	/^f010652f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106537	obj/kern/kernel.asm	/^f0106537:	85 d2                	test   %edx,%edx$/;"	l
f0106539	obj/kern/kernel.asm	/^f0106539:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	89 f3                	mov    %esi,%ebx$/;"	l
f0106543	obj/kern/kernel.asm	/^f0106543:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	75 1c                	jne    f0106568 <__umoddi3+0x48>$/;"	l
f010654c	obj/kern/kernel.asm	/^f010654c:	39 f7                	cmp    %esi,%edi$/;"	l
f010654e	obj/kern/kernel.asm	/^f010654e:	76 50                	jbe    f01065a0 <__umoddi3+0x80>$/;"	l
f0106550	obj/kern/kernel.asm	/^f0106550:	89 c8                	mov    %ecx,%eax$/;"	l
f0106552	obj/kern/kernel.asm	/^f0106552:	89 f2                	mov    %esi,%edx$/;"	l
f0106554	obj/kern/kernel.asm	/^f0106554:	f7 f7                	div    %edi$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556:	89 d0                	mov    %edx,%eax$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	31 d2                	xor    %edx,%edx$/;"	l
f010655a	obj/kern/kernel.asm	/^f010655a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	5b                   	pop    %ebx$/;"	l
f010655e	obj/kern/kernel.asm	/^f010655e:	5e                   	pop    %esi$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	5f                   	pop    %edi$/;"	l
f0106560	obj/kern/kernel.asm	/^f0106560:	5d                   	pop    %ebp$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	c3                   	ret    $/;"	l
f0106562	obj/kern/kernel.asm	/^f0106562:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106568	obj/kern/kernel.asm	/^f0106568:	39 f2                	cmp    %esi,%edx$/;"	l
f010656a	obj/kern/kernel.asm	/^f010656a:	89 d0                	mov    %edx,%eax$/;"	l
f010656c	obj/kern/kernel.asm	/^f010656c:	77 52                	ja     f01065c0 <__umoddi3+0xa0>$/;"	l
f010656e	obj/kern/kernel.asm	/^f010656e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0106571	obj/kern/kernel.asm	/^f0106571:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0106574	obj/kern/kernel.asm	/^f0106574:	75 5a                	jne    f01065d0 <__umoddi3+0xb0>$/;"	l
f0106576	obj/kern/kernel.asm	/^f0106576:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f010657a	obj/kern/kernel.asm	/^f010657a:	0f 82 e0 00 00 00    	jb     f0106660 <__umoddi3+0x140>$/;"	l
f0106580	obj/kern/kernel.asm	/^f0106580:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0106583	obj/kern/kernel.asm	/^f0106583:	0f 86 d7 00 00 00    	jbe    f0106660 <__umoddi3+0x140>$/;"	l
f0106589	obj/kern/kernel.asm	/^f0106589:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010658d	obj/kern/kernel.asm	/^f010658d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106591	obj/kern/kernel.asm	/^f0106591:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106594	obj/kern/kernel.asm	/^f0106594:	5b                   	pop    %ebx$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	5e                   	pop    %esi$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	5f                   	pop    %edi$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	5d                   	pop    %ebp$/;"	l
f0106598	obj/kern/kernel.asm	/^f0106598:	c3                   	ret    $/;"	l
f0106599	obj/kern/kernel.asm	/^f0106599:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01065a0	obj/kern/kernel.asm	/^f01065a0:	85 ff                	test   %edi,%edi$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	89 fd                	mov    %edi,%ebp$/;"	l
f01065a4	obj/kern/kernel.asm	/^f01065a4:	75 0b                	jne    f01065b1 <__umoddi3+0x91>$/;"	l
f01065a6	obj/kern/kernel.asm	/^f01065a6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01065ab	obj/kern/kernel.asm	/^f01065ab:	31 d2                	xor    %edx,%edx$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	f7 f7                	div    %edi$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	89 c5                	mov    %eax,%ebp$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	89 f0                	mov    %esi,%eax$/;"	l
f01065b3	obj/kern/kernel.asm	/^f01065b3:	31 d2                	xor    %edx,%edx$/;"	l
f01065b5	obj/kern/kernel.asm	/^f01065b5:	f7 f5                	div    %ebp$/;"	l
f01065b7	obj/kern/kernel.asm	/^f01065b7:	89 c8                	mov    %ecx,%eax$/;"	l
f01065b9	obj/kern/kernel.asm	/^f01065b9:	f7 f5                	div    %ebp$/;"	l
f01065bb	obj/kern/kernel.asm	/^f01065bb:	89 d0                	mov    %edx,%eax$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	eb 99                	jmp    f0106558 <__umoddi3+0x38>$/;"	l
f01065bf	obj/kern/kernel.asm	/^f01065bf:	90                   	nop$/;"	l
f01065c0	obj/kern/kernel.asm	/^f01065c0:	89 c8                	mov    %ecx,%eax$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	89 f2                	mov    %esi,%edx$/;"	l
f01065c4	obj/kern/kernel.asm	/^f01065c4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01065c7	obj/kern/kernel.asm	/^f01065c7:	5b                   	pop    %ebx$/;"	l
f01065c8	obj/kern/kernel.asm	/^f01065c8:	5e                   	pop    %esi$/;"	l
f01065c9	obj/kern/kernel.asm	/^f01065c9:	5f                   	pop    %edi$/;"	l
f01065ca	obj/kern/kernel.asm	/^f01065ca:	5d                   	pop    %ebp$/;"	l
f01065cb	obj/kern/kernel.asm	/^f01065cb:	c3                   	ret    $/;"	l
f01065cc	obj/kern/kernel.asm	/^f01065cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01065d0	obj/kern/kernel.asm	/^f01065d0:	8b 34 24             	mov    (%esp),%esi$/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f01065d8	obj/kern/kernel.asm	/^f01065d8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	29 ef                	sub    %ebp,%edi$/;"	l
f01065dc	obj/kern/kernel.asm	/^f01065dc:	d3 e0                	shl    %cl,%eax$/;"	d
f01065de	obj/kern/kernel.asm	/^f01065de:	89 f9                	mov    %edi,%ecx$/;"	l
f01065e0	obj/kern/kernel.asm	/^f01065e0:	89 f2                	mov    %esi,%edx$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	d3 ea                	shr    %cl,%edx$/;"	d
f01065e4	obj/kern/kernel.asm	/^f01065e4:	89 e9                	mov    %ebp,%ecx$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	09 c2                	or     %eax,%edx$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01065ed	obj/kern/kernel.asm	/^f01065ed:	89 f2                	mov    %esi,%edx$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	d3 e2                	shl    %cl,%edx$/;"	d
f01065f1	obj/kern/kernel.asm	/^f01065f1:	89 f9                	mov    %edi,%ecx$/;"	l
f01065f3	obj/kern/kernel.asm	/^f01065f3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01065f7	obj/kern/kernel.asm	/^f01065f7:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	d3 e8                	shr    %cl,%eax$/;"	d
f01065fd	obj/kern/kernel.asm	/^f01065fd:	89 e9                	mov    %ebp,%ecx$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	89 c6                	mov    %eax,%esi$/;"	l
f0106601	obj/kern/kernel.asm	/^f0106601:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106603	obj/kern/kernel.asm	/^f0106603:	89 f9                	mov    %edi,%ecx$/;"	l
f0106605	obj/kern/kernel.asm	/^f0106605:	89 d0                	mov    %edx,%eax$/;"	l
f0106607	obj/kern/kernel.asm	/^f0106607:	d3 e8                	shr    %cl,%eax$/;"	d
f0106609	obj/kern/kernel.asm	/^f0106609:	89 e9                	mov    %ebp,%ecx$/;"	l
f010660b	obj/kern/kernel.asm	/^f010660b:	09 d8                	or     %ebx,%eax$/;"	l
f010660d	obj/kern/kernel.asm	/^f010660d:	89 d3                	mov    %edx,%ebx$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	89 f2                	mov    %esi,%edx$/;"	l
f0106611	obj/kern/kernel.asm	/^f0106611:	f7 34 24             	divl   (%esp)$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	89 d6                	mov    %edx,%esi$/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106618	obj/kern/kernel.asm	/^f0106618:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f010661c	obj/kern/kernel.asm	/^f010661c:	39 d6                	cmp    %edx,%esi$/;"	l
f010661e	obj/kern/kernel.asm	/^f010661e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106622	obj/kern/kernel.asm	/^f0106622:	89 d1                	mov    %edx,%ecx$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	89 c3                	mov    %eax,%ebx$/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	72 08                	jb     f0106630 <__umoddi3+0x110>$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	75 11                	jne    f010663b <__umoddi3+0x11b>$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f010662e	obj/kern/kernel.asm	/^f010662e:	73 0b                	jae    f010663b <__umoddi3+0x11b>$/;"	l
f0106630	obj/kern/kernel.asm	/^f0106630:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0106637	obj/kern/kernel.asm	/^f0106637:	89 d1                	mov    %edx,%ecx$/;"	l
f0106639	obj/kern/kernel.asm	/^f0106639:	89 c3                	mov    %eax,%ebx$/;"	l
f010663b	obj/kern/kernel.asm	/^f010663b:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	29 da                	sub    %ebx,%edx$/;"	l
f0106641	obj/kern/kernel.asm	/^f0106641:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106643	obj/kern/kernel.asm	/^f0106643:	89 f9                	mov    %edi,%ecx$/;"	l
f0106645	obj/kern/kernel.asm	/^f0106645:	89 f0                	mov    %esi,%eax$/;"	l
f0106647	obj/kern/kernel.asm	/^f0106647:	d3 e0                	shl    %cl,%eax$/;"	d
f0106649	obj/kern/kernel.asm	/^f0106649:	89 e9                	mov    %ebp,%ecx$/;"	l
f010664b	obj/kern/kernel.asm	/^f010664b:	d3 ea                	shr    %cl,%edx$/;"	d
f010664d	obj/kern/kernel.asm	/^f010664d:	89 e9                	mov    %ebp,%ecx$/;"	l
f010664f	obj/kern/kernel.asm	/^f010664f:	d3 ee                	shr    %cl,%esi$/;"	d
f0106651	obj/kern/kernel.asm	/^f0106651:	09 d0                	or     %edx,%eax$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	89 f2                	mov    %esi,%edx$/;"	l
f0106655	obj/kern/kernel.asm	/^f0106655:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	5b                   	pop    %ebx$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	5e                   	pop    %esi$/;"	l
f010665a	obj/kern/kernel.asm	/^f010665a:	5f                   	pop    %edi$/;"	l
f010665b	obj/kern/kernel.asm	/^f010665b:	5d                   	pop    %ebp$/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	c3                   	ret    $/;"	l
f010665d	obj/kern/kernel.asm	/^f010665d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106660	obj/kern/kernel.asm	/^f0106660:	29 f9                	sub    %edi,%ecx$/;"	l
f0106662	obj/kern/kernel.asm	/^f0106662:	19 d6                	sbb    %edx,%esi$/;"	l
f0106664	obj/kern/kernel.asm	/^f0106664:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	e9 18 ff ff ff       	jmp    f0106589 <__umoddi3+0x69>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idttable	kern/trapentry.S	/^idttable:$/;"	l
idttable	obj/kern/kernel.asm	/^idttable:$/;"	l
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/kern/kernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/badsegment.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/breakpoint.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/buggyhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/buggyhello2.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/divzero.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/dumbfork.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/evilhello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/fairness.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultalloc.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultallocbad.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultbadhandler.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultdie.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultevilhandler.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultnostack.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultread.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultreadkernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultregs.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultwrite.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/faultwritekernel.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/forktree.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/hello.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/idle.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/pingpong.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/pingpongs.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/primes.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/sendpage.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/singlestep.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/singlestep.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/singlestep.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/softint.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/spin.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/stresssched.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/testbss.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int cons_bgclr = 0;$/;"	l
int	obj/user/yield.asm	/^int cons_textclr = 0x0700;$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/singlestep.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/singlestep.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_chperm	kern/monitor.c	/^mon_chperm(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_continue	kern/monitor.c	/^mon_continue(int argc, char **argv, struct Trapframe *tf) {$/;"	f
mon_dumpmem	kern/monitor.c	/^mon_dumpmem(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_showmappings	kern/monitor.c	/^mon_showmappings(int argc, char **argv, struct Trapframe *tf) 	\/\/ Lab2 Challenge$/;"	f
mon_step	kern/monitor.c	/^mon_step(int argc, char **argv, struct Trapframe *tf) {$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/singlestep.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/singlestep.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/singlestep.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/singlestep.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/singlestep.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/kern/kernel.asm	/^			offset = PGOFF(i);$/;"	d
offsetof	inc/types.h	73;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/singlestep.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/singlestep.asm	/^			padc = '-';$/;"	d
padc	obj/user/singlestep.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgnum	obj/kern/kernel.asm	/^			pgnum = i >> PGSHIFT;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *)((uint8_t *)elfhdr + elfhdr->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pn	obj/kern/kernel.asm	/^		pn = pn >> PGSHIFT;$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/singlestep.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/singlestep.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/singlestep.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/singlestep.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte_p	obj/kern/kernel.asm	/^			pte_p = pgdir_walk(pgdir, (void *) va, true);$/;"	d
pte_p	obj/kern/kernel.asm	/^		pte_p = pgdir_walk(kern_pgdir, (void *) va, 0);$/;"	d
pte_p	obj/kern/kernel.asm	/^		pte_p = pgdir_walk(pgdir, (void *) va, true);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/singlestep.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rdmsr	inc/x86.h	6;"	d
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/singlestep.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/singlestep.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/singlestep.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/singlestep.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
srcpp	obj/kern/kernel.asm	/^	srcpp = page_lookup(srcenv->env_pgdir, srcva, &srcpte);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/singlestep.asm	/^static long long$/;"	l
static	obj/user/singlestep.asm	/^static unsigned long long$/;"	l
static	obj/user/singlestep.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
sysenter	lib/syscall.c	/^sysenter(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4)$/;"	f	file:
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/singlestep.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/singlestep.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = MAX((size_t) va, ULIM);$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = curva;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^		user_mem_check_addr = curva;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(curenv->env_tf.tf_esp$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^			va = (unsigned char *)(page2kva(&pages[pgnum]) + offset);$/;"	d
va	obj/kern/kernel.asm	/^		va = (uintptr_t) page2kva(&pages[pn]);$/;"	d
va	obj/kern/kernel.asm	/^		va = (uintptr_t) pn << PGSHIFT;$/;"	d
va	obj/kern/kernel.asm	/^		va = PDX(va) << PDXSHIFT;$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void enable_PS_percpu()$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/singlestep.asm	/^void *$/;"	l
void	obj/user/singlestep.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/singlestep.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/singlestep.asm	/^				width = 0;$/;"	d
width	obj/user/singlestep.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/singlestep.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
wrmsr	inc/x86.h	11;"	d
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
